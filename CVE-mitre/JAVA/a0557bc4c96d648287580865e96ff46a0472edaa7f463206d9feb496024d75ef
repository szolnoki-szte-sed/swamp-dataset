--- main/src/com/google/refine/commands/lang/LoadLanguageCommand.java ---
@@ -149,7 +149,12 @@ static ObjectNode loadLanguage(RefineServlet servlet, String strModule, String s
         ButterflyModule module = servlet.getModule(strModule);
         String strLangFile = "translation-" + strLang + ".json";
         String strMessage = "[" + strModule + ":" + strLangFile + "]";
-        File langFile = new File(module.getPath(), "langs" + File.separator + strLangFile);
+        File langsDir = new File(module.getPath(), "langs");
+        File langFile = new File(langsDir, strLangFile);
+        if (!langFile.toPath().normalize().toAbsolutePath().startsWith(langsDir.toPath().normalize().toAbsolutePath())) {
+            logger.error("Security: Attempt to escape the langs directory to read another file");
+            return null;
+        }
         FileInputStream fisLang = null;
 
         try {

--- main/tests/server/src/com/google/refine/commands/lang/LoadLanguageCommandTests.java ---
@@ -100,6 +100,18 @@ public void testLoadNullLanguage() throws JsonParseException, JsonMappingExcepti
         assertEquals(response.get("lang").asText(), "en");
     }
 
+    @Test
+    public void testLoadLanguageWithDirectorySlip() throws JsonParseException, JsonMappingException, IOException, ServletException {
+        when(request.getParameter("module")).thenReturn("core");
+        when(request.getParameterValues("lang")).thenReturn(new String[] { "../../../secrets" });
+
+        command.doPost(request, response);
+
+        JsonNode response = ParsingUtilities.mapper.readValue(writer.toString(), JsonNode.class);
+        assertTrue(response.has("dictionary"));
+        assertEquals(response.get("lang").asText(), "en");
+    }
+
     @Test
     public void testLanguageFallback() throws JsonParseException, JsonMappingException, IOException {
         String fallbackJson = "{"

