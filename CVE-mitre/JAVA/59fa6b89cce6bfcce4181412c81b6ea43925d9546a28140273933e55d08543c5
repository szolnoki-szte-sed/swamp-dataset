--- dssp-client/src/main/java/be/e_contract/dssp/client/SignResponseVerifier.java ---
@@ -47,6 +47,7 @@
 import org.w3c.dom.Element;
 import org.w3c.dom.NodeList;
 import org.xml.sax.SAXException;
+import org.xml.sax.SAXParseException;
 
 import be.e_contract.dssp.client.exception.ClientRuntimeException;
 import be.e_contract.dssp.client.exception.SubjectNotAuthorizedException;
@@ -115,25 +116,32 @@ public static SignResponseVerificationResult checkSignResponse(String signRespon
 		} catch (Base64DecodingException e) {
 			throw new SecurityException("no Base64");
 		}
+
+		// DOM parsing
+		DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+		documentBuilderFactory.setNamespaceAware(true);
+		documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+		DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
+		InputStream signResponseInputStream = new ByteArrayInputStream(decodedSignResponseMessage);
+		Document signResponseDocument;
+		try {
+			signResponseDocument = documentBuilder.parse(signResponseInputStream);
+		} catch (SAXParseException e) {
+			throw new SecurityException("no valid SignResponse XML");
+		}
+
 		// JAXB parsing
 		JAXBContext jaxbContext = JAXBContext.newInstance(ObjectFactory.class,
 				be.e_contract.dssp.ws.jaxb.dss.async.ObjectFactory.class,
 				be.e_contract.dssp.ws.jaxb.wsa.ObjectFactory.class, be.e_contract.dssp.ws.jaxb.wsu.ObjectFactory.class);
 		Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();
 		SignResponse signResponse;
 		try {
-			signResponse = (SignResponse) unmarshaller.unmarshal(new ByteArrayInputStream(decodedSignResponseMessage));
+			signResponse = (SignResponse) unmarshaller.unmarshal(signResponseDocument);
 		} catch (UnmarshalException e) {
 			throw new SecurityException("no valid SignResponse XML");
 		}
 
-		// DOM parsing
-		DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
-		documentBuilderFactory.setNamespaceAware(true);
-		DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
-		InputStream signResponseInputStream = new ByteArrayInputStream(decodedSignResponseMessage);
-		Document signResponseDocument = documentBuilder.parse(signResponseInputStream);
-
 		// signature verification
 		NodeList signatureNodeList = signResponseDocument.getElementsByTagNameNS("http://www.w3.org/2000/09/xmldsig#",
 				"Signature");

--- dssp-client/src/main/java/be/e_contract/dssp/client/metadata/DigitalSignatureServiceMetadata.java ---
@@ -28,6 +28,10 @@
 import javax.xml.bind.JAXBElement;
 import javax.xml.bind.Unmarshaller;
 import javax.xml.namespace.QName;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+
+import org.w3c.dom.Document;
 
 import be.e_contract.dssp.ws.jaxb.dssp.DigitalSignatureServiceDescriptorType;
 import be.e_contract.dssp.ws.jaxb.metadata.EntityDescriptorType;
@@ -46,6 +50,8 @@
  */
 public class DigitalSignatureServiceMetadata implements Serializable {
 
+	private static final long serialVersionUID = 1L;
+
 	private final static QName _X509DataTypeX509Certificate_QNAME = new QName("http://www.w3.org/2000/09/xmldsig#",
 			"X509Certificate");
 
@@ -63,10 +69,16 @@ public class DigitalSignatureServiceMetadata implements Serializable {
 	 * @throws Exception
 	 */
 	public DigitalSignatureServiceMetadata(String metadataLocation) throws Exception {
+		DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+		documentBuilderFactory.setNamespaceAware(true);
+		documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+		DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
+		Document document = documentBuilder.parse(new URL(metadataLocation).openStream());
+
 		JAXBContext jaxbContext = JAXBContext.newInstance(ObjectFactory.class);
 		Unmarshaller unmarshaller = jaxbContext.createUnmarshaller();
 		JAXBElement<EntityDescriptorType> entityDescriptorElement = (JAXBElement<EntityDescriptorType>) unmarshaller
-				.unmarshal(new URL(metadataLocation));
+				.unmarshal(document);
 		EntityDescriptorType entityDescriptor = entityDescriptorElement.getValue();
 		List<RoleDescriptorType> roleDescriptors = entityDescriptor
 				.getRoleDescriptorOrIDPSSODescriptorOrSPSSODescriptor();

