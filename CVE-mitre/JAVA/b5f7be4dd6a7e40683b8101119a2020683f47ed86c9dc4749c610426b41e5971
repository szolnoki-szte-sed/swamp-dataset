--- Jenkinsfile ---
@@ -20,7 +20,7 @@ pipeline {
             }
         }
 
-        /*stage ('Deploy') {
+        stage ('Deploy') {
             when {
                 branch "master"
             }
@@ -48,7 +48,7 @@ pipeline {
                         serverId: "opencollab-artifactory"
                 )
             }
-        }*/
+        }
     }
 
     post {

--- ap/pom.xml ---
@@ -6,9 +6,9 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>geyser-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
 
     <artifactId>ap</artifactId>
-    <version>1.4.1-SNAPSHOT</version>
+    <version>1.4.2-SNAPSHOT</version>
 </project>
\ No newline at end of file

--- bootstrap/bungeecord/pom.xml ---
@@ -6,15 +6,15 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>bootstrap-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>bootstrap-bungeecord</artifactId>
 
     <dependencies>
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>connector</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>compile</scope>
         </dependency>
         <!-- Used for better working with internals without reflection -->

--- bootstrap/pom.xml ---
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>geyser-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>bootstrap-parent</artifactId>
     <packaging>pom</packaging>
@@ -34,7 +34,7 @@
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>ap</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>provided</scope>
         </dependency>
     </dependencies>

--- bootstrap/spigot/pom.xml ---
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>bootstrap-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>bootstrap-spigot</artifactId>
 
@@ -21,7 +21,7 @@
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>connector</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>compile</scope>
         </dependency>
         <dependency>

--- bootstrap/sponge/pom.xml ---
@@ -6,15 +6,15 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>bootstrap-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>bootstrap-sponge</artifactId>
 
     <dependencies>
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>connector</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>compile</scope>
         </dependency>
         <dependency>

--- bootstrap/standalone/pom.xml ---
@@ -6,15 +6,15 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>bootstrap-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>bootstrap-standalone</artifactId>
 
     <dependencies>
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>connector</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>compile</scope>
         </dependency>
         <dependency>

--- bootstrap/velocity/pom.xml ---
@@ -6,15 +6,15 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>bootstrap-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>bootstrap-velocity</artifactId>
 
     <dependencies>
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>connector</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>compile</scope>
         </dependency>
         <dependency>

--- common/pom.xml ---
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>geyser-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>common</artifactId>
 

--- connector/pom.xml ---
@@ -6,7 +6,7 @@
     <parent>
         <groupId>org.geysermc</groupId>
         <artifactId>geyser-parent</artifactId>
-        <version>1.4.1-SNAPSHOT</version>
+        <version>1.4.2-SNAPSHOT</version>
     </parent>
     <artifactId>connector</artifactId>
 
@@ -21,13 +21,13 @@
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>ap</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>org.geysermc</groupId>
             <artifactId>common</artifactId>
-            <version>1.4.1-SNAPSHOT</version>
+            <version>1.4.2-SNAPSHOT</version>
             <scope>compile</scope>
         </dependency>
         <!-- Jackson JSON and YAML serialization -->
@@ -115,7 +115,7 @@
         <dependency>
             <groupId>com.github.CloudburstMC.Protocol</groupId>
             <artifactId>bedrock-v448</artifactId>
-            <version>690a545d</version>
+            <version>6ce2f6e</version>
             <scope>compile</scope>
             <exclusions>
                 <exclusion>

--- connector/src/main/java/org/geysermc/connector/network/UpstreamPacketHandler.java ---
@@ -80,7 +80,7 @@ public boolean handle(LoginPacket loginPacket) {
         session.setBlockMappings(BlockRegistries.BLOCKS.forVersion(loginPacket.getProtocolVersion()));
         session.setItemMappings(Registries.ITEMS.forVersion(loginPacket.getProtocolVersion()));
 
-        LoginEncryptionUtils.encryptPlayerConnection(connector, session, loginPacket);
+        LoginEncryptionUtils.encryptPlayerConnection(session, loginPacket);
 
         PlayStatusPacket playStatus = new PlayStatusPacket();
         playStatus.setStatus(PlayStatusPacket.Status.LOGIN_SUCCESS);

--- connector/src/main/java/org/geysermc/connector/network/translators/PacketTranslator.java ---
@@ -29,6 +29,6 @@
 
 public abstract class PacketTranslator<T> {
 
-    public abstract void translate(T packet, GeyserSession session);
+    public abstract void translate(GeyserSession session, T packet);
 
 }

--- connector/src/main/java/org/geysermc/connector/network/translators/PacketTranslatorRegistry.java ---
@@ -112,7 +112,7 @@ private <P extends T> void translate0(GeyserSession session, PacketTranslator<P>
         }
 
         try {
-            translator.translate(packet, session);
+            translator.translate(session, packet);
         } catch (Throwable ex) {
             GeyserConnector.getInstance().getLogger().error(LanguageUtils.getLocaleStringLog("geyser.network.translator.packet.failed", packet.getClass().getSimpleName()), ex);
             ex.printStackTrace();

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockAdventureSettingsTranslator.java ---
@@ -38,7 +38,7 @@
 public class BedrockAdventureSettingsTranslator extends PacketTranslator<AdventureSettingsPacket> {
 
     @Override
-    public void translate(AdventureSettingsPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, AdventureSettingsPacket packet) {
         boolean isFlying = packet.getSettings().contains(AdventureSetting.FLYING);
         if (!isFlying && session.getGameMode() == GameMode.SPECTATOR) {
             // We should always be flying in spectator mode

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockAnimateTranslator.java ---
@@ -39,7 +39,7 @@
 public class BedrockAnimateTranslator extends PacketTranslator<AnimatePacket> {
 
     @Override
-    public void translate(AnimatePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, AnimatePacket packet) {
         // Stop the player sending animations before they have fully spawned into the server
         if (!session.isSpawned()) {
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockBlockEntityDataTranslator.java ---
@@ -39,7 +39,7 @@
 public class BedrockBlockEntityDataTranslator extends PacketTranslator<BlockEntityDataPacket> {
 
     @Override
-    public void translate(BlockEntityDataPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, BlockEntityDataPacket packet) {
         NbtMap tag = packet.getData();
         if (tag.getString("id").equals("Sign")) {
             // This is the reason why this all works - Bedrock sends packets every time you update the sign, Java only wants the final packet

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockBlockPickRequestTranslator.java ---
@@ -40,7 +40,7 @@
 public class BedrockBlockPickRequestTranslator extends PacketTranslator<BlockPickRequestPacket> {
 
     @Override
-    public void translate(BlockPickRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, BlockPickRequestPacket packet) {
         Vector3i vector = packet.getBlockPosition();
         int blockToPick = session.getConnector().getWorldManager().getBlockAt(session, vector.getX(), vector.getY(), vector.getZ());
         

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockBookEditTranslator.java ---
@@ -49,7 +49,7 @@ public class BedrockBookEditTranslator extends PacketTranslator<BookEditPacket>
     private static final int MAXIMUM_TITLE_LENGTH = 128 * 4;
 
     @Override
-    public void translate(BookEditPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, BookEditPacket packet) {
         if (packet.getText() != null && !packet.getText().isEmpty() && packet.getText().getBytes(StandardCharsets.UTF_8).length > MAXIMUM_PAGE_LENGTH) {
             session.getConnector().getLogger().warning("Page length greater than server allowed!");
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockCommandBlockUpdateTranslator.java ---
@@ -38,7 +38,7 @@
 public class BedrockCommandBlockUpdateTranslator extends PacketTranslator<CommandBlockUpdatePacket> {
 
     @Override
-    public void translate(CommandBlockUpdatePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, CommandBlockUpdatePacket packet) {
         String command = packet.getCommand();
         boolean outputTracked = packet.isOutputTracked();
         if (packet.isBlock()) {

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockCommandRequestTranslator.java ---
@@ -40,7 +40,7 @@
 public class BedrockCommandRequestTranslator extends PacketTranslator<CommandRequestPacket> {
 
     @Override
-    public void translate(CommandRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, CommandRequestPacket packet) {
         String command = packet.getCommand().replace("/", "");
         CommandManager commandManager = GeyserConnector.getInstance().getCommandManager();
         if (session.getConnector().getPlatformType() == PlatformType.STANDALONE && command.trim().startsWith("geyser ") && commandManager.getCommands().containsKey(command.split(" ")[1])) {

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockContainerCloseTranslator.java ---
@@ -38,7 +38,7 @@
 public class BedrockContainerCloseTranslator extends PacketTranslator<ContainerClosePacket> {
 
     @Override
-    public void translate(ContainerClosePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ContainerClosePacket packet) {
         byte windowId = packet.getId();
 
         //Client wants close confirmation

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockEmoteListTranslator.java ---
@@ -35,7 +35,7 @@
 public class BedrockEmoteListTranslator extends PacketTranslator<EmoteListPacket> {
 
     @Override
-    public void translate(EmoteListPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, EmoteListPacket packet) {
         if (session.getConnector().getConfig().getEmoteOffhandWorkaround() == EmoteOffhandWorkaroundOption.NO_EMOTES) {
             return;
         }

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockEntityPickRequestTranslator.java ---
@@ -42,7 +42,7 @@
 public class BedrockEntityPickRequestTranslator extends PacketTranslator<EntityPickRequestPacket> {
 
     @Override
-    public void translate(EntityPickRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, EntityPickRequestPacket packet) {
         if (session.getGameMode() != GameMode.CREATIVE) return; // Apparently Java behavior
         Entity entity = session.getEntityCache().getEntityByGeyserId(packet.getRuntimeEntityId());
         if (entity == null) return;

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockFilterTextTranslator.java ---
@@ -41,7 +41,7 @@
 public class BedrockFilterTextTranslator extends PacketTranslator<FilterTextPacket> {
 
     @Override
-    public void translate(FilterTextPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, FilterTextPacket packet) {
         if (session.getOpenInventory() instanceof CartographyContainer) {
             // We don't want to be able to rename in the cartography table
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockInventoryTransactionTranslator.java ---
@@ -70,7 +70,7 @@ public class BedrockInventoryTransactionTranslator extends PacketTranslator<Inve
     private static final float MAXIMUM_BLOCK_DESTROYING_DISTANCE = 36f;
 
     @Override
-    public void translate(InventoryTransactionPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, InventoryTransactionPacket packet) {
         // Send book updates before opening inventories
         session.getBookEditCache().checkForSend();
 

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockItemFrameDropItemTranslator.java ---
@@ -44,7 +44,7 @@
 public class BedrockItemFrameDropItemTranslator extends PacketTranslator<ItemFrameDropItemPacket> {
 
     @Override
-    public void translate(ItemFrameDropItemPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ItemFrameDropItemPacket packet) {
         Entity entity = ItemFrameEntity.getItemFrameEntity(session, packet.getBlockPosition());
         if (entity != null) {
             ClientPlayerInteractEntityPacket interactPacket = new ClientPlayerInteractEntityPacket((int) entity.getEntityId(),

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockItemStackRequestTranslator.java ---
@@ -39,7 +39,7 @@
 public class BedrockItemStackRequestTranslator extends PacketTranslator<ItemStackRequestPacket> {
 
     @Override
-    public void translate(ItemStackRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ItemStackRequestPacket packet) {
         Inventory inventory = session.getOpenInventory();
         if (inventory == null)
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockLecternUpdateTranslator.java ---
@@ -45,7 +45,7 @@
 public class BedrockLecternUpdateTranslator extends PacketTranslator<LecternUpdatePacket> {
 
     @Override
-    public void translate(LecternUpdatePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, LecternUpdatePacket packet) {
         if (packet.isDroppingBook()) {
             // Bedrock drops the book outside of the GUI. Java drops it in the GUI
             // So, we enter the GUI and then drop it! :)

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockMapInfoRequestTranslator.java ---
@@ -38,7 +38,7 @@
 public class BedrockMapInfoRequestTranslator extends PacketTranslator<MapInfoRequestPacket> {
 
     @Override
-    public void translate(MapInfoRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, MapInfoRequestPacket packet) {
         long mapId = packet.getUniqueMapId();
 
         ClientboundMapItemDataPacket mapPacket = session.getStoredMaps().remove(mapId);

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockMobEquipmentTranslator.java ---
@@ -42,7 +42,7 @@
 public class BedrockMobEquipmentTranslator extends PacketTranslator<MobEquipmentPacket> {
 
     @Override
-    public void translate(MobEquipmentPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, MobEquipmentPacket packet) {
         if (!session.isSpawned() || packet.getHotbarSlot() > 8 ||
                 packet.getContainerId() != ContainerId.INVENTORY || session.getPlayerInventory().getHeldItemSlot() == packet.getHotbarSlot()) {
             // For the last condition - Don't update the slot if the slot is the same - not Java Edition behavior and messes with plugins such as Grief Prevention

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockMoveEntityAbsoluteTranslator.java ---
@@ -40,7 +40,7 @@
 public class BedrockMoveEntityAbsoluteTranslator extends PacketTranslator<MoveEntityAbsolutePacket> {
 
     @Override
-    public void translate(MoveEntityAbsolutePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, MoveEntityAbsolutePacket packet) {
         session.setLastVehicleMoveTimestamp(System.currentTimeMillis());
 
         float y = packet.getPosition().getY();

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockNetworkStackLatencyTranslator.java ---
@@ -45,7 +45,7 @@
 public class BedrockNetworkStackLatencyTranslator extends PacketTranslator<NetworkStackLatencyPacket> {
 
     @Override
-    public void translate(NetworkStackLatencyPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, NetworkStackLatencyPacket packet) {
         long pingId;
         // so apparently, as of 1.16.200
         // PS4 divides the network stack latency timestamp FOR US!!!

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockPacketViolationWarningTranslator.java ---
@@ -34,7 +34,7 @@
 public class BedrockPacketViolationWarningTranslator extends PacketTranslator<PacketViolationWarningPacket> {
 
     @Override
-    public void translate(PacketViolationWarningPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, PacketViolationWarningPacket packet) {
         // Not translated since this is something that the developers need to know
         session.getConnector().getLogger().error("Packet violation warning sent from client! " + packet.toString());
     }

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockPlayerInputTranslator.java ---
@@ -46,7 +46,7 @@
 public class BedrockPlayerInputTranslator extends PacketTranslator<PlayerInputPacket> {
 
     @Override
-    public void translate(PlayerInputPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, PlayerInputPacket packet) {
         ClientSteerVehiclePacket clientSteerVehiclePacket = new ClientSteerVehiclePacket(
                 packet.getInputMotion().getX(), packet.getInputMotion().getY(), packet.isJumping(), packet.isSneaking()
         );

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockPositionTrackingDBClientRequestTranslator.java ---
@@ -42,7 +42,7 @@
 public class BedrockPositionTrackingDBClientRequestTranslator extends PacketTranslator<PositionTrackingDBClientRequestPacket> {
 
     @Override
-    public void translate(PositionTrackingDBClientRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, PositionTrackingDBClientRequestPacket packet) {
         PositionTrackingDBServerBroadcastPacket broadcastPacket = new PositionTrackingDBServerBroadcastPacket();
         broadcastPacket.setTrackingId(packet.getTrackingId());
 

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockRespawnTranslator.java ---
@@ -40,7 +40,7 @@
 public class BedrockRespawnTranslator extends PacketTranslator<RespawnPacket> {
 
     @Override
-    public void translate(RespawnPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, RespawnPacket packet) {
         if (packet.getState() == RespawnPacket.State.CLIENT_READY) {
             // Previously we only sent the respawn packet before the server finished loading
             // The message included was 'Otherwise when immediate respawn is on the client never loads'

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockServerSettingsRequestTranslator.java ---
@@ -38,7 +38,7 @@
 @Translator(packet = ServerSettingsRequestPacket.class)
 public class BedrockServerSettingsRequestTranslator extends PacketTranslator<ServerSettingsRequestPacket> {
     @Override
-    public void translate(ServerSettingsRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSettingsRequestPacket packet) {
         CustomForm window = SettingsUtils.buildForm(session);
         int windowId = session.getFormCache().addForm(window);
 

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockSetLocalPlayerAsInitializedTranslator.java ---
@@ -37,7 +37,7 @@
 @Translator(packet = SetLocalPlayerAsInitializedPacket.class)
 public class BedrockSetLocalPlayerAsInitializedTranslator extends PacketTranslator<SetLocalPlayerAsInitializedPacket> {
     @Override
-    public void translate(SetLocalPlayerAsInitializedPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, SetLocalPlayerAsInitializedPacket packet) {
         if (session.getPlayerEntity().getGeyserId() == packet.getRuntimeEntityId()) {
             if (!session.getUpstream().isInitialized()) {
                 session.getUpstream().setInitialized(true);

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockShowCreditsTranslator.java ---
@@ -37,7 +37,7 @@
 public class BedrockShowCreditsTranslator extends PacketTranslator<ShowCreditsPacket> {
 
     @Override
-    public void translate(ShowCreditsPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ShowCreditsPacket packet) {
         if (packet.getStatus() == ShowCreditsPacket.Status.END_CREDITS) {
             ClientRequestPacket javaRespawnPacket = new ClientRequestPacket(ClientRequest.RESPAWN);
             session.sendDownstreamPacket(javaRespawnPacket);

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/BedrockTextTranslator.java ---
@@ -37,7 +37,7 @@
 public class BedrockTextTranslator extends PacketTranslator<TextPacket> {
 
     @Override
-    public void translate(TextPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, TextPacket packet) {
         String message = packet.getMessage();
 
         if (MessageTranslator.isTooLong(message, session)) {

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/BedrockEntityEventTranslator.java ---
@@ -43,7 +43,7 @@
 public class BedrockEntityEventTranslator extends PacketTranslator<EntityEventPacket> {
 
     @Override
-    public void translate(EntityEventPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, EntityEventPacket packet) {
         switch (packet.getType()) {
             case EATING_ITEM:
                 // Resend the packet so we get the eating sounds

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockActionTranslator.java ---
@@ -54,7 +54,7 @@
 public class BedrockActionTranslator extends PacketTranslator<PlayerActionPacket> {
 
     @Override
-    public void translate(PlayerActionPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, PlayerActionPacket packet) {
         SessionPlayerEntity entity = session.getPlayerEntity();
 
         // Send book update before any player action

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockEmoteTranslator.java ---
@@ -40,7 +40,7 @@
 public class BedrockEmoteTranslator extends PacketTranslator<EmotePacket> {
 
     @Override
-    public void translate(EmotePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, EmotePacket packet) {
         if (session.getConnector().getConfig().getEmoteOffhandWorkaround() != EmoteOffhandWorkaroundOption.DISABLED) {
             // Activate the workaround - we should trigger the offhand now
             ClientPlayerActionPacket swapHandsPacket = new ClientPlayerActionPacket(PlayerAction.SWAP_HANDS, BlockUtils.POSITION_ZERO,

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockInteractTranslator.java ---
@@ -46,7 +46,7 @@
 public class BedrockInteractTranslator extends PacketTranslator<InteractPacket> {
 
     @Override
-    public void translate(InteractPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, InteractPacket packet) {
         Entity entity;
         if (packet.getRuntimeEntityId() == session.getPlayerEntity().getGeyserId()) {
             //Player is not in entity cache

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockMovePlayerTranslator.java ---
@@ -53,7 +53,7 @@ public class BedrockMovePlayerTranslator extends PacketTranslator<MovePlayerPack
     }
 
     @Override
-    public void translate(MovePlayerPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, MovePlayerPacket packet) {
         SessionPlayerEntity entity = session.getPlayerEntity();
         if (!session.isSpawned()) return;
 

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockRiderJumpTranslator.java ---
@@ -37,7 +37,7 @@
 @Translator(packet = RiderJumpPacket.class)
 public class BedrockRiderJumpTranslator extends PacketTranslator<RiderJumpPacket> {
     @Override
-    public void translate(RiderJumpPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, RiderJumpPacket packet) {
         Entity vehicle = session.getRidingVehicleEntity();
         if (vehicle instanceof AbstractHorseEntity) {
             ClientPlayerStatePacket playerStatePacket = new ClientPlayerStatePacket((int) vehicle.getEntityId(),  PlayerState.START_HORSE_JUMP, packet.getJumpStrength());

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/entity/player/BedrockSetPlayerGameTypeTranslator.java ---
@@ -38,7 +38,7 @@
 public class BedrockSetPlayerGameTypeTranslator extends PacketTranslator<SetPlayerGameTypePacket> {
 
     @Override
-    public void translate(SetPlayerGameTypePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, SetPlayerGameTypePacket packet) {
         // no
         SetPlayerGameTypePacket playerGameTypePacket = new SetPlayerGameTypePacket();
         playerGameTypePacket.setGamemode(session.getGameMode().ordinal());

--- connector/src/main/java/org/geysermc/connector/network/translators/bedrock/world/BedrockLevelSoundEventTranslator.java ---
@@ -36,7 +36,7 @@
 public class BedrockLevelSoundEventTranslator extends PacketTranslator<LevelSoundEventPacket> {
 
     @Override
-    public void translate(LevelSoundEventPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, LevelSoundEventPacket packet) {
         // lol what even :thinking:
         session.sendUpstreamPacket(packet);
 

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaAdvancementsTabTranslator.java ---
@@ -37,7 +37,7 @@
 @Translator(packet = ServerAdvancementTabPacket.class)
 public class JavaAdvancementsTabTranslator extends PacketTranslator<ServerAdvancementTabPacket> {
     @Override
-    public void translate(ServerAdvancementTabPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerAdvancementTabPacket packet) {
         AdvancementsCache advancementsCache = session.getAdvancementsCache();
         advancementsCache.setCurrentAdvancementCategoryId(packet.getTabId());
         advancementsCache.buildAndShowListForm();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaAdvancementsTranslator.java ---
@@ -42,7 +42,7 @@
 public class JavaAdvancementsTranslator extends PacketTranslator<ServerAdvancementsPacket> {
 
     @Override
-    public void translate(ServerAdvancementsPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerAdvancementsPacket packet) {
         AdvancementsCache advancementsCache = session.getAdvancementsCache();
         if (packet.isReset()) {
             advancementsCache.getStoredAdvancements().clear();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaBossBarTranslator.java ---
@@ -35,7 +35,7 @@
 @Translator(packet = ServerBossBarPacket.class)
 public class JavaBossBarTranslator extends PacketTranslator<ServerBossBarPacket> {
     @Override
-    public void translate(ServerBossBarPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerBossBarPacket packet) {
         BossBar bossBar = session.getEntityCache().getBossBar(packet.getUuid());
         switch (packet.getAction()) {
             case ADD:

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaChatTranslator.java ---
@@ -36,7 +36,7 @@
 public class JavaChatTranslator extends PacketTranslator<ServerChatPacket> {
 
     @Override
-    public void translate(ServerChatPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerChatPacket packet) {
         TextPacket textPacket = new TextPacket();
         textPacket.setPlatformChatId("");
         textPacket.setSourceName("");

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDeclareCommandsTranslator.java ---
@@ -96,7 +96,7 @@ public boolean equals(CommandParamData[][] a, CommandParamData[][] b) {
     }
 
     @Override
-    public void translate(ServerDeclareCommandsPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerDeclareCommandsPacket packet) {
         // Don't send command suggestions if they are disabled
         if (!session.getConnector().getConfig().isCommandSuggestions()) {
             session.getConnector().getLogger().debug("Not sending translated command suggestions as they are disabled.");

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDeclareRecipesTranslator.java ---
@@ -71,7 +71,7 @@ public class JavaDeclareRecipesTranslator extends PacketTranslator<ServerDeclare
     );
 
     @Override
-    public void translate(ServerDeclareRecipesPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerDeclareRecipesPacket packet) {
         Map<RecipeType, List<CraftingData>> recipeTypes = Registries.CRAFTING_DATA.forVersion(session.getUpstream().getProtocolVersion());
         // Get the last known network ID (first used for the pregenerated recipes) and increment from there.
         int netId = InventoryUtils.LAST_RECIPE_NET_ID + 1;

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDeclareTagsTranslator.java ---
@@ -34,7 +34,7 @@
 public class JavaDeclareTagsTranslator extends PacketTranslator<ServerDeclareTagsPacket> {
 
     @Override
-    public void translate(ServerDeclareTagsPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerDeclareTagsPacket packet) {
         session.getTagCache().loadPacket(packet);
     }
 }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDifficultyTranslator.java ---
@@ -36,7 +36,7 @@
 public class JavaDifficultyTranslator extends PacketTranslator<ServerDifficultyPacket> {
 
     @Override
-    public void translate(ServerDifficultyPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerDifficultyPacket packet) {
         SetDifficultyPacket setDifficultyPacket = new SetDifficultyPacket();
         setDifficultyPacket.setDifficulty(packet.getDifficulty().ordinal());
         session.sendUpstreamPacket(setDifficultyPacket);

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaDisconnectPacket.java ---
@@ -35,7 +35,7 @@
 public class JavaDisconnectPacket extends PacketTranslator<ServerDisconnectPacket> {
 
     @Override
-    public void translate(ServerDisconnectPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerDisconnectPacket packet) {
         session.disconnect(MessageTranslator.convertMessage(packet.getReason(), session.getLocale()));
     }
 }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaJoinGameTranslator.java ---
@@ -52,7 +52,7 @@ public class JavaJoinGameTranslator extends PacketTranslator<ServerJoinGamePacke
     private static final List<SkinPart> SKIN_PART_VALUES = Arrays.asList(SkinPart.values());
 
     @Override
-    public void translate(ServerJoinGamePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerJoinGamePacket packet) {
         PlayerEntity entity = session.getPlayerEntity();
         entity.setEntityId(packet.getEntityId());
 

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaKeepAliveTranslator.java ---
@@ -38,7 +38,7 @@
 public class JavaKeepAliveTranslator extends PacketTranslator<ServerKeepAlivePacket> {
 
     @Override
-    public void translate(ServerKeepAlivePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerKeepAlivePacket packet) {
         if (!session.getConnector().getConfig().isForwardPlayerPing()) {
             return;
         }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaLoginDisconnectTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaLoginDisconnectTranslator extends PacketTranslator<LoginDisconnectPacket> {
 
     @Override
-    public void translate(LoginDisconnectPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, LoginDisconnectPacket packet) {
         // The client doesn't manually get disconnected so we have to do it ourselves
         session.disconnect(MessageTranslator.convertMessage(packet.getReason(), session.getLocale()));
     }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaLoginPluginRequestTranslator.java ---
@@ -35,7 +35,7 @@
 @Translator(packet = LoginPluginRequestPacket.class)
 public class JavaLoginPluginRequestTranslator extends PacketTranslator<LoginPluginRequestPacket> {
     @Override
-    public void translate(LoginPluginRequestPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, LoginPluginRequestPacket packet) {
         // A vanilla client doesn't know any PluginMessage in the Login state, so we don't know any either.
         // Note: Fabric Networking API v1 will not let the client log in without sending this
         session.sendDownstreamPacket(

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaLoginSuccessTranslator.java ---
@@ -38,7 +38,7 @@
 public class JavaLoginSuccessTranslator extends PacketTranslator<LoginSuccessPacket> {
 
     @Override
-    public void translate(LoginSuccessPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, LoginSuccessPacket packet) {
         PlayerEntity playerEntity = session.getPlayerEntity();
         AuthType remoteAuthType = session.getRemoteAuthType();
 

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaPingPacket.java ---
@@ -36,7 +36,7 @@
 public class JavaPingPacket extends PacketTranslator<ServerPingPacket> {
 
     @Override
-    public void translate(ServerPingPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPingPacket packet) {
         session.sendDownstreamPacket(new ClientPongPacket(packet.getId()));
     }
 }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaPluginMessageTranslator.java ---
@@ -41,7 +41,7 @@
 @Translator(packet = ServerPluginMessagePacket.class)
 public class JavaPluginMessageTranslator extends PacketTranslator<ServerPluginMessagePacket> {
     @Override
-    public void translate(ServerPluginMessagePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPluginMessagePacket packet) {
         // The only plugin messages it has to listen for are Floodgate plugin messages
         if (session.getRemoteAuthType() != AuthType.FLOODGATE) {
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaRespawnTranslator.java ---
@@ -43,7 +43,7 @@
 public class JavaRespawnTranslator extends PacketTranslator<ServerRespawnPacket> {
 
     @Override
-    public void translate(ServerRespawnPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerRespawnPacket packet) {
         SessionPlayerEntity entity = session.getPlayerEntity();
 
         entity.setHealth(entity.getMaxHealth());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaStatisticsTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaStatisticsTranslator extends PacketTranslator<ServerStatisticsPacket> {
 
     @Override
-    public void translate(ServerStatisticsPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerStatisticsPacket packet) {
         session.updateStatistics(packet.getStatistics());
 
         if (session.isWaitingForStatistics()) {

--- connector/src/main/java/org/geysermc/connector/network/translators/java/JavaUnlockRecipesTranslator.java ---
@@ -40,7 +40,7 @@
 public class JavaUnlockRecipesTranslator extends PacketTranslator<ServerUnlockRecipesPacket> {
 
     @Override
-    public void translate(ServerUnlockRecipesPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerUnlockRecipesPacket packet) {
         if (packet.getAction() == UnlockRecipesAction.REMOVE) {
             session.getUnlockedRecipes().removeAll(Arrays.asList(packet.getRecipes()));
         } else {

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityAnimationTranslator.java ---
@@ -40,7 +40,7 @@
 public class JavaEntityAnimationTranslator extends PacketTranslator<ServerEntityAnimationPacket> {
 
     @Override
-    public void translate(ServerEntityAnimationPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityAnimationPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityAttachTranslator.java ---
@@ -42,7 +42,7 @@
 public class JavaEntityAttachTranslator extends PacketTranslator<ServerEntityAttachPacket> {
 
     @Override
-    public void translate(ServerEntityAttachPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityAttachPacket packet) {
 
         Entity holderId;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityCollectItemTranslator.java ---
@@ -44,7 +44,7 @@
 public class JavaEntityCollectItemTranslator extends PacketTranslator<ServerEntityCollectItemPacket> {
 
     @Override
-    public void translate(ServerEntityCollectItemPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityCollectItemPacket packet) {
         // Collected entity is the other entity
         Entity collectedEntity = session.getEntityCache().getEntityByJavaId(packet.getCollectedEntityId());
         if (collectedEntity == null) return;

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityEffectTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaEntityEffectTranslator extends PacketTranslator<ServerEntityEffectPacket> {
 
     @Override
-    public void translate(ServerEntityEffectPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityEffectPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityEquipmentTranslator.java ---
@@ -39,7 +39,7 @@
 public class JavaEntityEquipmentTranslator extends PacketTranslator<ServerEntityEquipmentPacket> {
 
     @Override
-    public void translate(ServerEntityEquipmentPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityEquipmentPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityHeadLookTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaEntityHeadLookTranslator extends PacketTranslator<ServerEntityHeadLookPacket> {
 
     @Override
-    public void translate(ServerEntityHeadLookPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityHeadLookPacket packet) {
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityMetadataTranslator.java ---
@@ -39,7 +39,7 @@
 public class JavaEntityMetadataTranslator extends PacketTranslator<ServerEntityMetadataPacket> {
 
     @Override
-    public void translate(ServerEntityMetadataPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityMetadataPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityPositionRotationTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaEntityPositionRotationTranslator extends PacketTranslator<ServerEntityPositionRotationPacket> {
 
     @Override
-    public void translate(ServerEntityPositionRotationPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityPositionRotationPacket packet) {
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityPositionTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaEntityPositionTranslator extends PacketTranslator<ServerEntityPositionPacket> {
 
     @Override
-    public void translate(ServerEntityPositionPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityPositionPacket packet) {
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityPropertiesTranslator.java ---
@@ -36,7 +36,7 @@
 public class JavaEntityPropertiesTranslator extends PacketTranslator<ServerEntityPropertiesPacket> {
 
     @Override
-    public void translate(ServerEntityPropertiesPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityPropertiesPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityRemoveEffectTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaEntityRemoveEffectTranslator extends PacketTranslator<ServerEntityRemoveEffectPacket> {
 
     @Override
-    public void translate(ServerEntityRemoveEffectPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityRemoveEffectPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityRotationTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaEntityRotationTranslator extends PacketTranslator<ServerEntityRotationPacket> {
 
     @Override
-    public void translate(ServerEntityRotationPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityRotationPacket packet) {
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntitySetPassengersTranslator.java ---
@@ -43,7 +43,7 @@
 public class JavaEntitySetPassengersTranslator extends PacketTranslator<ServerEntitySetPassengersPacket> {
 
     @Override
-    public void translate(ServerEntitySetPassengersPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntitySetPassengersPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityStatusTranslator.java ---
@@ -43,7 +43,7 @@
 public class JavaEntityStatusTranslator extends PacketTranslator<ServerEntityStatusPacket> {
 
     @Override
-    public void translate(ServerEntityStatusPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityStatusPacket packet) {
         Entity entity;
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityTeleportTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaEntityTeleportTranslator extends PacketTranslator<ServerEntityTeleportPacket> {
 
     @Override
-    public void translate(ServerEntityTeleportPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityTeleportPacket packet) {
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaEntityVelocityTranslator.java ---
@@ -40,7 +40,7 @@
 public class JavaEntityVelocityTranslator extends PacketTranslator<ServerEntityVelocityPacket> {
 
     @Override
-    public void translate(ServerEntityVelocityPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerEntityVelocityPacket packet) {
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (packet.getEntityId() == session.getPlayerEntity().getEntityId()) {
             entity = session.getPlayerEntity();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/JavaRemoveEntitiesTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaRemoveEntitiesTranslator extends PacketTranslator<ServerRemoveEntitiesPacket> {
 
     @Override
-    public void translate(ServerRemoveEntitiesPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerRemoveEntitiesPacket packet) {
         for (int entityId : packet.getEntityIds()) {
             Entity entity = session.getEntityCache().getEntityByJavaId(entityId);
             if (entity != null) {

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerAbilitiesTranslator.java ---
@@ -34,7 +34,7 @@
 public class JavaPlayerAbilitiesTranslator extends PacketTranslator<ServerPlayerAbilitiesPacket> {
 
     @Override
-    public void translate(ServerPlayerAbilitiesPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayerAbilitiesPacket packet) {
         session.setCanFly(packet.isCanFly());
         session.setFlying(packet.isFlying());
         session.sendAdventureSettings();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerActionAckTranslator.java ---
@@ -40,7 +40,7 @@
 public class JavaPlayerActionAckTranslator extends PacketTranslator<ServerPlayerActionAckPacket> {
 
     @Override
-    public void translate(ServerPlayerActionAckPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayerActionAckPacket packet) {
         ChunkUtils.updateBlock(session, packet.getNewState(), packet.getPosition());
         if (packet.getAction() == PlayerAction.START_DIGGING && !packet.isSuccessful()) {
             LevelEventPacket stopBreak = new LevelEventPacket();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerChangeHeldItemTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaPlayerChangeHeldItemTranslator extends PacketTranslator<ServerPlayerChangeHeldItemPacket> {
 
     @Override
-    public void translate(ServerPlayerChangeHeldItemPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayerChangeHeldItemPacket packet) {
         PlayerHotbarPacket hotbarPacket = new PlayerHotbarPacket();
         hotbarPacket.setContainerId(0);
         hotbarPacket.setSelectedHotbarSlot(packet.getSlot());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerHealthTranslator.java ---
@@ -41,7 +41,7 @@
 public class JavaPlayerHealthTranslator extends PacketTranslator<ServerPlayerHealthPacket> {
 
     @Override
-    public void translate(ServerPlayerHealthPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayerHealthPacket packet) {
         SessionPlayerEntity entity = session.getPlayerEntity();
 
         int health = (int) Math.ceil(packet.getHealth());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerListEntryTranslator.java ---
@@ -40,7 +40,7 @@
 @Translator(packet = ServerPlayerListEntryPacket.class)
 public class JavaPlayerListEntryTranslator extends PacketTranslator<ServerPlayerListEntryPacket> {
     @Override
-    public void translate(ServerPlayerListEntryPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayerListEntryPacket packet) {
         if (packet.getAction() != PlayerListEntryAction.ADD_PLAYER && packet.getAction() != PlayerListEntryAction.REMOVE_PLAYER)
             return;
 

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerPositionRotationTranslator.java ---
@@ -50,7 +50,7 @@
 public class JavaPlayerPositionRotationTranslator extends PacketTranslator<ServerPlayerPositionRotationPacket> {
 
     @Override
-    public void translate(ServerPlayerPositionRotationPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayerPositionRotationPacket packet) {
         if (!session.isLoggedIn())
             return;
 

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/player/JavaPlayerSetExperienceTranslator.java ---
@@ -40,7 +40,7 @@
 public class JavaPlayerSetExperienceTranslator extends PacketTranslator<ServerPlayerSetExperiencePacket> {
 
     @Override
-    public void translate(ServerPlayerSetExperiencePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayerSetExperiencePacket packet) {
         SessionPlayerEntity entity = session.getPlayerEntity();
 
         AttributeData experience = GeyserAttributeType.EXPERIENCE.getAttribute(packet.getExperience());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnEntityTranslator.java ---
@@ -46,7 +46,7 @@
 public class JavaSpawnEntityTranslator extends PacketTranslator<ServerSpawnEntityPacket> {
 
     @Override
-    public void translate(ServerSpawnEntityPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSpawnEntityPacket packet) {
 
         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());
         Vector3f motion = Vector3f.from(packet.getMotionX(), packet.getMotionY(), packet.getMotionZ());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnExpOrbTranslator.java ---
@@ -39,7 +39,7 @@
 public class JavaSpawnExpOrbTranslator extends PacketTranslator<ServerSpawnExpOrbPacket> {
 
     @Override
-    public void translate(ServerSpawnExpOrbPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSpawnExpOrbPacket packet) {
         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());
 
         Entity entity = new ExpOrbEntity(

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnLivingEntityTranslator.java ---
@@ -42,7 +42,7 @@
 public class JavaSpawnLivingEntityTranslator extends PacketTranslator<ServerSpawnLivingEntityPacket> {
 
     @Override
-    public void translate(ServerSpawnLivingEntityPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSpawnLivingEntityPacket packet) {
         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());
         Vector3f motion = Vector3f.from(packet.getMotionX(), packet.getMotionY(), packet.getMotionZ());
         Vector3f rotation = Vector3f.from(packet.getYaw(), packet.getPitch(), packet.getHeadYaw());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnPaintingTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaSpawnPaintingTranslator extends PacketTranslator<ServerSpawnPaintingPacket> {
 
     @Override
-    public void translate(ServerSpawnPaintingPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSpawnPaintingPacket packet) {
         Vector3f position = Vector3f.from(packet.getPosition().getX(), packet.getPosition().getY(), packet.getPosition().getZ());
 
         PaintingEntity entity = new PaintingEntity(packet.getEntityId(),

--- connector/src/main/java/org/geysermc/connector/network/translators/java/entity/spawn/JavaSpawnPlayerTranslator.java ---
@@ -39,7 +39,7 @@
 public class JavaSpawnPlayerTranslator extends PacketTranslator<ServerSpawnPlayerPacket> {
 
     @Override
-    public void translate(ServerSpawnPlayerPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSpawnPlayerPacket packet) {
         Vector3f position = Vector3f.from(packet.getX(), packet.getY(), packet.getZ());
         Vector3f rotation = Vector3f.from(packet.getYaw(), packet.getPitch(), packet.getYaw());
 

--- connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaDisplayScoreboardTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaDisplayScoreboardTranslator extends PacketTranslator<ServerDisplayScoreboardPacket> {
 
     @Override
-    public void translate(ServerDisplayScoreboardPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerDisplayScoreboardPacket packet) {
         session.getWorldCache().getScoreboard()
                 .displayObjective(packet.getName(), packet.getPosition());
     }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaScoreboardObjectiveTranslator.java ---
@@ -41,7 +41,7 @@
 public class JavaScoreboardObjectiveTranslator extends PacketTranslator<ServerScoreboardObjectivePacket> {
 
     @Override
-    public void translate(ServerScoreboardObjectivePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerScoreboardObjectivePacket packet) {
         WorldCache worldCache = session.getWorldCache();
         Scoreboard scoreboard = worldCache.getScoreboard();
         Objective objective = scoreboard.getObjective(packet.getName());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaTeamTranslator.java ---
@@ -47,7 +47,7 @@ public class JavaTeamTranslator extends PacketTranslator<ServerTeamPacket> {
     private static final GeyserLogger LOGGER = GeyserConnector.getInstance().getLogger();
 
     @Override
-    public void translate(ServerTeamPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerTeamPacket packet) {
         if (LOGGER.isDebug()) {
             LOGGER.debug("Team packet " + packet.getTeamName() + " " + packet.getAction() + " " + Arrays.toString(packet.getPlayers()));
         }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/scoreboard/JavaUpdateScoreTranslator.java ---
@@ -47,7 +47,7 @@ public JavaUpdateScoreTranslator() {
     }
 
     @Override
-    public void translate(ServerUpdateScorePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerUpdateScorePacket packet) {
         WorldCache worldCache = session.getWorldCache();
         Scoreboard scoreboard = worldCache.getScoreboard();
         int pps = worldCache.increaseAndGetScoreboardPacketsPerSecond();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaClearTitlesTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaClearTitlesTranslator extends PacketTranslator<ServerClearTitlesPacket> {
 
     @Override
-    public void translate(ServerClearTitlesPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerClearTitlesPacket packet) {
         SetTitlePacket titlePacket = new SetTitlePacket();
         // TODO handle packet.isResetTimes()
         titlePacket.setType(SetTitlePacket.Type.CLEAR);

--- connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetActionBarTextTranslator.java ---
@@ -36,7 +36,7 @@
 public class JavaSetActionBarTextTranslator extends PacketTranslator<ServerSetActionBarTextPacket> {
 
     @Override
-    public void translate(ServerSetActionBarTextPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSetActionBarTextPacket packet) {
         String text;
         if (packet.getText() == null) { //TODO 1.17 can this happen?
             text = " ";

--- connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetSubtitleTextTranslator.java ---
@@ -36,7 +36,7 @@
 public class JavaSetSubtitleTextTranslator extends PacketTranslator<ServerSetSubtitleTextPacket> {
 
     @Override
-    public void translate(ServerSetSubtitleTextPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSetSubtitleTextPacket packet) {
         String text;
         if (packet.getText() == null) { //TODO 1.17 can this happen?
             text = " ";

--- connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetTitleTextTranslator.java ---
@@ -36,7 +36,7 @@
 public class JavaSetTitleTextTranslator extends PacketTranslator<ServerSetTitleTextPacket> {
 
     @Override
-    public void translate(ServerSetTitleTextPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSetTitleTextPacket packet) {
         String text;
         if (packet.getText() == null) { //TODO 1.17 can this happen?
             text = " ";

--- connector/src/main/java/org/geysermc/connector/network/translators/java/title/JavaSetTitlesAnimationTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaSetTitlesAnimationTranslator extends PacketTranslator<ServerSetTitlesAnimationPacket> {
 
     @Override
-    public void translate(ServerSetTitlesAnimationPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSetTitlesAnimationPacket packet) {
         SetTitlePacket titlePacket = new SetTitlePacket();
         titlePacket.setType(SetTitlePacket.Type.TIMES);
         titlePacket.setText("");

--- connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaCloseWindowTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaCloseWindowTranslator extends PacketTranslator<ServerCloseWindowPacket> {
 
     @Override
-    public void translate(ServerCloseWindowPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerCloseWindowPacket packet) {
         // Sometimes the server can request a window close of ID 0... when the window isn't even open
         // Don't confirm in this instance
         InventoryUtils.closeInventory(session, packet.getWindowId(), (session.getOpenInventory() != null && session.getOpenInventory().getId() == packet.getWindowId()));

--- connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaOpenHorseWindowTranslator.java ---
@@ -98,7 +98,7 @@ public class JavaOpenHorseWindowTranslator extends PacketTranslator<ServerOpenHo
     }
 
     @Override
-    public void translate(ServerOpenHorseWindowPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerOpenHorseWindowPacket packet) {
         Entity entity = session.getEntityCache().getEntityByJavaId(packet.getEntityId());
         if (entity == null) {
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaOpenWindowTranslator.java ---
@@ -40,7 +40,7 @@
 public class JavaOpenWindowTranslator extends PacketTranslator<ServerOpenWindowPacket> {
 
     @Override
-    public void translate(ServerOpenWindowPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerOpenWindowPacket packet) {
         if (packet.getWindowId() == 0) {
             return;
         }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaSetSlotTranslator.java ---
@@ -58,7 +58,7 @@
 public class JavaSetSlotTranslator extends PacketTranslator<ServerSetSlotPacket> {
 
     @Override
-    public void translate(ServerSetSlotPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSetSlotPacket packet) {
         if (packet.getWindowId() == 255) { //cursor
             GeyserItemStack newItem = GeyserItemStack.from(packet.getItem());
             session.getPlayerInventory().setCursor(newItem, session);

--- connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaWindowItemsTranslator.java ---
@@ -38,7 +38,7 @@
 public class JavaWindowItemsTranslator extends PacketTranslator<ServerWindowItemsPacket> {
 
     @Override
-    public void translate(ServerWindowItemsPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerWindowItemsPacket packet) {
         Inventory inventory = InventoryUtils.getInventory(session, packet.getWindowId());
         if (inventory == null)
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/java/window/JavaWindowPropertyTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaWindowPropertyTranslator extends PacketTranslator<ServerWindowPropertyPacket> {
 
     @Override
-    public void translate(ServerWindowPropertyPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerWindowPropertyPacket packet) {
         Inventory inventory = InventoryUtils.getInventory(session, packet.getWindowId());
         if (inventory == null)
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaBlockBreakAnimTranslator.java ---
@@ -41,7 +41,7 @@
 public class JavaBlockBreakAnimTranslator extends PacketTranslator<ServerBlockBreakAnimPacket> {
 
     @Override
-    public void translate(ServerBlockBreakAnimPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerBlockBreakAnimPacket packet) {
         int state = session.getConnector().getWorldManager().getBlockAt(session, packet.getPosition().getX(), packet.getPosition().getY(), packet.getPosition().getZ());
         int breakTime = (int) (65535 / Math.ceil(BlockUtils.getBreakTime(session, BlockRegistries.JAVA_BLOCKS.get(state), ItemMapping.AIR, new CompoundTag(""), false) * 20));
         LevelEventPacket levelEventPacket = new LevelEventPacket();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaBlockChangeTranslator.java ---
@@ -42,7 +42,7 @@
 public class JavaBlockChangeTranslator extends PacketTranslator<ServerBlockChangePacket> {
 
     @Override
-    public void translate(ServerBlockChangePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerBlockChangePacket packet) {
         Position pos = packet.getRecord().getPosition();
         boolean updatePlacement = session.getConnector().getPlatformType() != PlatformType.SPIGOT && // Spigot simply listens for the block place event
                 session.getConnector().getWorldManager().getBlockAt(session, pos) != packet.getRecord().getBlock();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaBlockValueTranslator.java ---
@@ -45,7 +45,7 @@
 public class JavaBlockValueTranslator extends PacketTranslator<ServerBlockValuePacket> {
 
     @Override
-    public void translate(ServerBlockValuePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerBlockValuePacket packet) {
         BlockEventPacket blockEventPacket = new BlockEventPacket();
         blockEventPacket.setBlockPosition(Vector3i.from(packet.getPosition().getX(),
                 packet.getPosition().getY(), packet.getPosition().getZ()));

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaChunkDataTranslator.java ---
@@ -52,7 +52,7 @@ public class JavaChunkDataTranslator extends PacketTranslator<ServerChunkDataPac
     private static final boolean NEW_BIOME_WRITE = GeyserConnector.getInstance().getConfig().isExtendedWorldHeight();
 
     @Override
-    public void translate(ServerChunkDataPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerChunkDataPacket packet) {
         if (session.isSpawned()) {
             ChunkUtils.updateChunkPosition(session, session.getPlayerEntity().getPosition().toInt());
         }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaExplosionTranslator.java ---
@@ -43,7 +43,7 @@
 public class JavaExplosionTranslator extends PacketTranslator<ServerExplosionPacket> {
 
     @Override
-    public void translate(ServerExplosionPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerExplosionPacket packet) {
         for (ExplodedBlockRecord record : packet.getExploded()) {
             Vector3f pos = Vector3f.from(packet.getX() + record.getX(), packet.getY() + record.getY(), packet.getZ() + record.getZ());
             ChunkUtils.updateBlock(session, BlockStateValues.JAVA_AIR_ID, pos.toInt());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaMapDataTranslator.java ---
@@ -41,7 +41,7 @@
 @Translator(packet = ServerMapDataPacket.class)
 public class JavaMapDataTranslator extends PacketTranslator<ServerMapDataPacket> {
     @Override
-    public void translate(ServerMapDataPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerMapDataPacket packet) {
         ClientboundMapItemDataPacket mapItemDataPacket = new ClientboundMapItemDataPacket();
         boolean shouldStore = false;
 

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaMultiBlockChangeTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaMultiBlockChangeTranslator extends PacketTranslator<ServerMultiBlockChangePacket> {
 
     @Override
-    public void translate(ServerMultiBlockChangePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerMultiBlockChangePacket packet) {
         for (BlockChangeRecord record : packet.getRecords()) {
             ChunkUtils.updateBlock(session, record.getBlock(), record.getPosition());
         }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaNotifyClientTranslator.java ---
@@ -49,7 +49,7 @@
 public class JavaNotifyClientTranslator extends PacketTranslator<ServerNotifyClientPacket> {
 
     @Override
-    public void translate(ServerNotifyClientPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerNotifyClientPacket packet) {
         PlayerEntity entity = session.getPlayerEntity();
 
         switch (packet.getNotification()) {

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaPlayBuiltinSoundTranslator.java ---
@@ -44,7 +44,7 @@
 public class JavaPlayBuiltinSoundTranslator extends PacketTranslator<ServerPlayBuiltinSoundPacket> {
 
     @Override
-    public void translate(ServerPlayBuiltinSoundPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayBuiltinSoundPacket packet) {
         String packetSound = packet.getSound().getName();
 
         SoundMapping soundMapping = Registries.SOUNDS.get(packetSound);

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaPlayEffectTranslator.java ---
@@ -48,7 +48,7 @@
 public class JavaPlayEffectTranslator extends PacketTranslator<ServerPlayEffectPacket> {
 
     @Override
-    public void translate(ServerPlayEffectPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlayEffectPacket packet) {
         // Separate case since each RecordEffectData in Java is an individual track in Bedrock
         if (packet.getEffect() == SoundEffect.RECORD) {
             RecordEffectData recordEffectData = (RecordEffectData) packet.getData();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaPlaySoundTranslator.java ---
@@ -40,7 +40,7 @@
 public class JavaPlaySoundTranslator extends PacketTranslator<ServerPlaySoundPacket> {
 
     @Override
-    public void translate(ServerPlaySoundPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerPlaySoundPacket packet) {
         String packetSound;
         if (packet.getSound() instanceof BuiltinSound) {
             packetSound = ((BuiltinSound) packet.getSound()).getName();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaSpawnParticleTranslator.java ---
@@ -50,7 +50,7 @@
 public class JavaSpawnParticleTranslator extends PacketTranslator<ServerSpawnParticlePacket> {
 
     @Override
-    public void translate(ServerSpawnParticlePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSpawnParticlePacket packet) {
         Function<Vector3f, BedrockPacket> particleCreateFunction = createParticle(session, packet.getParticle());
         if (particleCreateFunction != null) {
             if (packet.getAmount() == 0) {

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaSpawnPositionTranslator.java ---
@@ -38,7 +38,7 @@
 public class JavaSpawnPositionTranslator extends PacketTranslator<ServerSpawnPositionPacket> {
 
     @Override
-    public void translate(ServerSpawnPositionPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerSpawnPositionPacket packet) {
         SetSpawnPositionPacket spawnPositionPacket = new SetSpawnPositionPacket();
         spawnPositionPacket.setBlockPosition(Vector3i.from(packet.getPosition().getX(), packet.getPosition().getY(), packet.getPosition().getZ()));
         spawnPositionPacket.setSpawnForced(true);

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaStopSoundTranslator.java ---
@@ -39,7 +39,7 @@
 public class JavaStopSoundTranslator extends PacketTranslator<ServerStopSoundPacket> {
 
     @Override
-    public void translate(ServerStopSoundPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerStopSoundPacket packet) {
         // Runs if all sounds are stopped
         if (packet.getSound() == null) {
             StopSoundPacket stopPacket = new StopSoundPacket();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaTradeListTranslator.java ---
@@ -51,7 +51,7 @@
 public class JavaTradeListTranslator extends PacketTranslator<ServerTradeListPacket> {
 
     @Override
-    public void translate(ServerTradeListPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerTradeListPacket packet) {
         Inventory openInventory = session.getOpenInventory();
         if (!(openInventory instanceof MerchantContainer && openInventory.getId() == packet.getWindowId())) {
             return;

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUnloadChunkTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaUnloadChunkTranslator extends PacketTranslator<ServerUnloadChunkPacket> {
 
     @Override
-    public void translate(ServerUnloadChunkPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerUnloadChunkPacket packet) {
         session.getChunkCache().removeChunk(packet.getX(), packet.getZ());
 
         //Checks if a skull is in an unloaded chunk then removes it

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateTileEntityTranslator.java ---
@@ -45,7 +45,7 @@
 public class JavaUpdateTileEntityTranslator extends PacketTranslator<ServerUpdateTileEntityPacket> {
 
     @Override
-    public void translate(ServerUpdateTileEntityPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerUpdateTileEntityPacket packet) {
         String id = BlockEntityUtils.getBedrockBlockEntityId(packet.getType().name());
         if (packet.getNbt().isEmpty()) { // Fixes errors in servers sending empty NBT
             BlockEntityUtils.updateBlockEntity(session, NbtMap.EMPTY, packet.getPosition());

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateTimeTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaUpdateTimeTranslator extends PacketTranslator<ServerUpdateTimePacket> {
 
     @Override
-    public void translate(ServerUpdateTimePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerUpdateTimePacket packet) {
         // Bedrock sends a GameRulesChangedPacket if there is no daylight cycle
         // Java just sends a negative long if there is no daylight cycle
         long time = packet.getTime();

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateViewDistanceTranslator.java ---
@@ -35,7 +35,7 @@
 public class JavaUpdateViewDistanceTranslator extends PacketTranslator<ServerUpdateViewDistancePacket> {
 
     @Override
-    public void translate(ServerUpdateViewDistancePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerUpdateViewDistancePacket packet) {
         session.setRenderDistance(packet.getViewDistance());
     }
 }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaUpdateViewPositionTranslator.java ---
@@ -37,7 +37,7 @@
 public class JavaUpdateViewPositionTranslator extends PacketTranslator<ServerUpdateViewPositionPacket> {
 
     @Override
-    public void translate(ServerUpdateViewPositionPacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerUpdateViewPositionPacket packet) {
         if (!session.isSpawned() && session.getLastChunkPosition() == null) {
             ChunkUtils.updateChunkPosition(session, Vector3i.from(packet.getChunkX() << 4, 64, packet.getChunkZ() << 4));
         }

--- connector/src/main/java/org/geysermc/connector/network/translators/java/world/JavaVehicleMoveTranslator.java ---
@@ -36,7 +36,7 @@
 public class JavaVehicleMoveTranslator extends PacketTranslator<ServerVehicleMovePacket> {
 
     @Override
-    public void translate(ServerVehicleMovePacket packet, GeyserSession session) {
+    public void translate(GeyserSession session, ServerVehicleMovePacket packet) {
         Entity entity = session.getRidingVehicleEntity();
         if (entity == null) return;
 

--- connector/src/main/java/org/geysermc/connector/utils/LoginEncryptionUtils.java ---
@@ -31,6 +31,8 @@
 import com.fasterxml.jackson.databind.node.JsonNodeType;
 import com.github.steveice10.mc.auth.service.MsaAuthenticationService;
 import com.nimbusds.jose.JWSObject;
+import com.nimbusds.jose.shaded.json.JSONObject;
+import com.nimbusds.jose.shaded.json.JSONValue;
 import com.nukkitx.network.util.Preconditions;
 import com.nukkitx.protocol.bedrock.packet.LoginPacket;
 import com.nukkitx.protocol.bedrock.packet.ServerToClientHandshakePacket;
@@ -49,6 +51,7 @@
 
 import javax.crypto.SecretKey;
 import java.io.IOException;
+import java.net.URI;
 import java.security.KeyPair;
 import java.security.KeyPairGenerator;
 import java.security.PublicKey;
@@ -62,28 +65,49 @@ public class LoginEncryptionUtils {
     private static boolean HAS_SENT_ENCRYPTION_MESSAGE = false;
 
     private static boolean validateChainData(JsonNode data) throws Exception {
+        if (data.size() != 3) {
+            return false;
+        }
+
         ECPublicKey lastKey = null;
         boolean validChain = false;
         for (JsonNode node : data) {
             JWSObject jwt = JWSObject.parse(node.asText());
 
-            if (!validChain) {
-                validChain = EncryptionUtils.verifyJwt(jwt, EncryptionUtils.getMojangPublicKey());
+            // x509 cert is expected in every claim
+            URI x5u = jwt.getHeader().getX509CertURL();
+            if (x5u == null) {
+                return false;
             }
 
-            if (lastKey != null) {
-                if (!EncryptionUtils.verifyJwt(jwt, lastKey)) return false;
+            ECPublicKey expectedKey = EncryptionUtils.generateKey(jwt.getHeader().getX509CertURL().toString());
+            // First key is self-signed
+            if (lastKey == null) {
+                lastKey = expectedKey;
+            } else if (!lastKey.equals(expectedKey)) {
+                return false;
             }
 
-            JsonNode payloadNode = JSON_MAPPER.readTree(jwt.getPayload().toString());
-            JsonNode ipkNode = payloadNode.get("identityPublicKey");
-            Preconditions.checkState(ipkNode != null && ipkNode.getNodeType() == JsonNodeType.STRING, "identityPublicKey node is missing in chain");
-            lastKey = EncryptionUtils.generateKey(ipkNode.asText());
+            if (!EncryptionUtils.verifyJwt(jwt, lastKey)) {
+                return false;
+            }
+
+            if (lastKey.equals(EncryptionUtils.getMojangPublicKey())) {
+                validChain = true;
+            }
+
+            Object payload = JSONValue.parse(jwt.getPayload().toString());
+            Preconditions.checkArgument(payload instanceof JSONObject, "Payload is not an object");
+
+            Object identityPublicKey = ((JSONObject) payload).get("identityPublicKey");
+            Preconditions.checkArgument(identityPublicKey instanceof String, "identityPublicKey node is missing in chain");
+            lastKey = EncryptionUtils.generateKey((String) identityPublicKey);
         }
+
         return validChain;
     }
 
-    public static void encryptPlayerConnection(GeyserConnector connector, GeyserSession session, LoginPacket loginPacket) {
+    public static void encryptPlayerConnection(GeyserSession session, LoginPacket loginPacket) {
         JsonNode certData;
         try {
             certData = JSON_MAPPER.readTree(loginPacket.getChainData().toByteArray());
@@ -96,11 +120,13 @@ public static void encryptPlayerConnection(GeyserConnector connector, GeyserSess
             throw new RuntimeException("Certificate data is not valid");
         }
 
-        encryptConnectionWithCert(connector, session, loginPacket.getSkinData().toString(), certChainData);
+        encryptConnectionWithCert(session, loginPacket.getSkinData().toString(), certChainData);
     }
 
-    private static void encryptConnectionWithCert(GeyserConnector connector, GeyserSession session, String clientData, JsonNode certChainData) {
+    private static void encryptConnectionWithCert(GeyserSession session, String clientData, JsonNode certChainData) {
         try {
+            GeyserConnector connector = session.getConnector();
+
             boolean validChain = validateChainData(certChainData);
 
             connector.getLogger().debug(String.format("Is player data valid? %s", validChain));

--- pom.xml ---
@@ -5,7 +5,7 @@
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.geysermc</groupId>
     <artifactId>geyser-parent</artifactId>
-    <version>1.4.1-SNAPSHOT</version>
+    <version>1.4.2-SNAPSHOT</version>
     <packaging>pom</packaging>
     <name>Geyser</name>
     <description>Allows for players from Minecraft Bedrock Edition to join Minecraft Java Edition servers.</description>

