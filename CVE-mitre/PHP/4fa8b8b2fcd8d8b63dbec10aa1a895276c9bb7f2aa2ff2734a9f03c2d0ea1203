--- Ajax.php ---
@@ -28,7 +28,7 @@
 #***************************************************************************************
 
 session_start();
-!empty($_SESSION['USERNAME']) or die('Access denied!');
+//!empty($_SESSION['PROFILE_ID']) or die('Access denied!');
 
 include "functions/ParamLibFnc.php";
 echo '<script type="text/javascript" src="assets/js/pages/components_popups.js"></script>';
@@ -99,14 +99,13 @@
 if ($url === FALSE) {
     header('Location: index.php');
 }
-error_reporting(E_ERROR);
 $isajax = "ajax";
 $start_time = time();
 include 'Warehouse.php';
 array_rwalk($_REQUEST, 'strip_tags');
 $title_set = '';
 
-if (UserStudentID() && User('PROFILE') != 'parent' && User('PROFILE') != 'student' && substr(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 0, 5) != 'Atten' && substr(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 0, 5) != 'users' && clean_param($_REQUEST['modname'], PARAM_NOTAGS) != 'students/AddUsers.php' && $_REQUEST['modname']!= 'tools/Backup.php' && (substr(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 0, 10) != 'attendance' || clean_param($_REQUEST['modname'], PARAM_NOTAGS) == 'attendance/StudentSummary.php' || clean_param($_REQUEST['modname'], PARAM_NOTAGS) == 'attendance/DailySummary.php' || clean_param($_REQUEST['modname'], PARAM_NOTAGS) == 'attendance/AddAbsences.php')) {
+if (UserStudentID() && User('PROFILE') != 'parent' && User('PROFILE') != 'student' && substr(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 0, 5) != 'Atten' && substr(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 0, 5) != 'users' && clean_param($_REQUEST['modname'], PARAM_NOTAGS) != 'students/AddUsers.php' && $_REQUEST['modname'] != 'tools/Backup.php' && (substr(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 0, 10) != 'attendance' || clean_param($_REQUEST['modname'], PARAM_NOTAGS) == 'attendance/StudentSummary.php' || clean_param($_REQUEST['modname'], PARAM_NOTAGS) == 'attendance/DailySummary.php' || clean_param($_REQUEST['modname'], PARAM_NOTAGS) == 'attendance/AddAbsences.php')) {
     $RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID='" . UserStudentID() . "'"));
     $count_student_RET = DBGet(DBQuery("SELECT COUNT(*) AS NUM FROM students"));
 
@@ -125,8 +124,8 @@
         'students/EnrollmentReport.php',
         // For Scheduling
         // 'scheduling/Schedule.php', 
-        'scheduling/ViewSchedule.php', 
-        'scheduling/Requests.php', 
+        'scheduling/ViewSchedule.php',
+        'scheduling/Requests.php',
         // 'scheduling/MassSchedule.php',
         // 'scheduling/MassRequests.php',
         'scheduling/PrintSchedules.php',
@@ -141,7 +140,7 @@
         'grades/AdminProgressReports.php',
         'grades/ProgressReports.php',
         // 'grades/HonorRoll.php',
-        'grades/EditReportCardGrades.php', 
+        'grades/EditReportCardGrades.php',
         // 'grades/GraduationProgress.php', 
         // For Attendance
         'attendance/AddAbsences.php',
@@ -156,37 +155,32 @@
 
     $allow_back_to_student_list = array(
         // For Students
-        'students/Student.php', 
+        'students/Student.php',
         // For Scheduling
         // 'scheduling/Schedule.php', 
-        'scheduling/ViewSchedule.php', 
-        'scheduling/Requests.php', 
+        'scheduling/ViewSchedule.php',
+        'scheduling/Requests.php',
         // For Grades
-        'grades/EditReportCardGrades.php', 
+        'grades/EditReportCardGrades.php',
         // For Eligibility
         'eligibility/Student.php'
     );
-    
+
     if ($count_student_RET[1]['NUM'] > 1) {
         $title_set = 'y';
 
-        if(in_array($_REQUEST['modname'], $allow_buffer_list))
-        {
-            if(in_array($_REQUEST['modname'],  $allow_back_to_student_list))
-            {
-                DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements clearfix"><span class="heading-text"><A HREF=Modules.php?modname=' . clean_param($_REQUEST['modname'], PARAM_NOTAGS) . '&search_modfunc=list&next_modname=Students/Student.php&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> '._backToStudentList.'</A></span><div class="btn-group heading-btn"><A HREF=SideForStudent.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . '&modname=' . $_REQUEST['modname'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div></div>');
-            }
-            else
-            {
-                DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements clearfix"><div class="btn-group heading-btn"><A HREF=SideForStudent.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . '&modname=' . $_REQUEST['modname'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div></div>');
+        if (in_array($_REQUEST['modname'], $allow_buffer_list)) {
+            if (in_array($_REQUEST['modname'],  $allow_back_to_student_list)) {
+                DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">' . _selectedStudent . ' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements clearfix"><span class="heading-text"><A HREF=Modules.php?modname=' . clean_param($_REQUEST['modname'], PARAM_NOTAGS) . '&search_modfunc=list&next_modname=Students/Student.php&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> ' . _backToStudentList . '</A></span><div class="btn-group heading-btn"><A HREF=SideForStudent.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . '&modname=' . $_REQUEST['modname'] . ' class="btn btn-danger btn-xs">' . _deselect . '</A></div></div></div></div>');
+            } else {
+                DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">' . _selectedStudent . ' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements clearfix"><div class="btn-group heading-btn"><A HREF=SideForStudent.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . '&modname=' . $_REQUEST['modname'] . ' class="btn btn-danger btn-xs">' . _deselect . '</A></div></div></div></div>');
             }
         }
     } else if ($count_student_RET[1]['NUM'] == 1) {
         $title_set = 'y';
 
-        if(in_array($_REQUEST['modname'], $allow_buffer_list))
-        {
-            DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements clearfix"><A HREF=SideForStudent.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . '&modname=' . $_REQUEST['modname'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div>');
+        if (in_array($_REQUEST['modname'], $allow_buffer_list)) {
+            DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">' . _selectedStudent . ' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements clearfix"><A HREF=SideForStudent.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . '&modname=' . $_REQUEST['modname'] . ' class="btn btn-danger btn-xs">' . _deselect . '</A></div></div></div>');
         }
     }
 }
@@ -199,7 +193,7 @@
         if ($_REQUEST['modname'] != 'users/User.php') {
             $RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME FROM staff WHERE STAFF_ID='" . UserStaffID() . "'"));
             echo '<div class="panel panel-default">';
-            DrawHeader(''._selectedStaff.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . $RET[1]['LAST_NAME'], '<span class="heading-text"><A HREF=Modules.php?modname=' . clean_param($_REQUEST['modname'], PARAM_NOTAGS) . '&search_modfunc=list&next_modname=users/User.php&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> '._backToUserList.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?staff_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . ' class="btn btn-danger btn-xs">'._deselect.'</A></div>');
+            DrawHeader('' . _selectedStaff . ' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . $RET[1]['LAST_NAME'], '<span class="heading-text"><A HREF=Modules.php?modname=' . clean_param($_REQUEST['modname'], PARAM_NOTAGS) . '&search_modfunc=list&next_modname=users/User.php&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> ' . _backToUserList . '</A></span><div class="btn-group heading-btn"><A HREF=Side.php?staff_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . ' class="btn btn-danger btn-xs">' . _deselect . '</A></div>');
             echo '</div>';
         }
     }
@@ -208,10 +202,10 @@
 if (!isset($_REQUEST['_openSIS_PDF'])) {
     Warehouse('header');
 
-   // if (strpos(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 'miscellaneous/') === false)
-   //     echo '<script language="JavaScript">if(window == top  && (!window.opener || window.opener.location.href.substring(0,(window.opener.location.href.indexOf("&")!=-1?window.opener.location.href.indexOf("&"):window.opener.location.href.replace("#","").length))!=window.location.href.substring(0,(window.location.href.indexOf("&")!=-1?window.location.href.indexOf("&"):window.location.href.replace("#","").length)))) window.location.href = "index.php";</script>';
-    echo "<BODY marginwidth=0 leftmargin=0 border=0 onload='doOnload();' background=assets/bg.gif>";
-    echo '<DIV id="Migoicons" style="visibility:hidden;position:absolute;z-index:1000;top:-100"></DIV>';
+    if (strpos(clean_param($_REQUEST['modname'], PARAM_NOTAGS), 'miscellaneous/') === false)
+        echo '<script language="JavaScript">if(window == top  && (!window.opener || window.opener.location.href.substring(0,(window.opener.location.href.indexOf("&")!=-1?window.opener.location.href.indexOf("&"):window.opener.location.href.replace("#","").length))!=window.location.href.substring(0,(window.location.href.indexOf("&")!=-1?window.location.href.indexOf("&"):window.location.href.replace("#","").length)))) window.location.href = "index.php";</script>';
+    // echo "<BODY marginwidth=0 leftmargin=0 border=0 onload='doOnload();' background=assets/bg.gif>";
+    // echo '<DIV id="Migoicons" style="visibility:hidden;position:absolute;z-index:1000;top:-100"></DIV>';
 }
 
 $ajax_to_sign_in    = "";
@@ -261,8 +255,7 @@
 
         if (preg_match('/\.\./', $modname) !== 1)
             include 'modules/' . $modname;
-    }
-    else {
+    } else {
         if (User('USERNAME')) {
 
 
@@ -273,7 +266,7 @@
             }
 
 
-            echo ""._youReNotAllowedToUseThisProgram."! "._thisAttemptedViolationHasBeenLoggedAndYourIpAddressWasCaptured.".";
+            echo "" . _youReNotAllowedToUseThisProgram . "! " . _thisAttemptedViolationHasBeenLoggedAndYourIpAddressWasCaptured . ".";
             DBQuery("INSERT INTO hacking_log (HOST_NAME,IP_ADDRESS,LOGIN_DATE,VERSION,PHP_SELF,DOCUMENT_ROOT,SCRIPT_NAME,MODNAME,USERNAME) values('$_SERVER[SERVER_NAME]','$ip','" . date('Y-m-d') . "','$openSISVersion','$_SERVER[PHP_SELF]','$_SERVER[DOCUMENT_ROOT]','$_SERVER[SCRIPT_NAME]','$_REQUEST[modname]','" . User('USERNAME') . "')");
             Warehouse('footer');
             if ($openSISNotifyAddress)
@@ -302,7 +295,8 @@
     echo '</HTML>';
 }
 
-function decode_unicode_url($str) {
+function decode_unicode_url($str)
+{
     $res = '';
 
     $i = 0;
@@ -317,11 +311,11 @@ function decode_unicode_url($str) {
                 $character = chr($value);
             else if ($value < 0x0800) // 2 bytes: 110xxxxx 10xxxxxx
                 $character = chr((($value & 0x07c0) >> 6) | 0xc0)
-                        . chr(($value & 0x3f) | 0x80);
+                    . chr(($value & 0x3f) | 0x80);
             else // 3 bytes: 1110xxxx 10xxxxxx 10xxxxxx
                 $character = chr((($value & 0xf000) >> 12) | 0xe0)
-                        . chr((($value & 0x0fc0) >> 6) | 0x80)
-                        . chr(($value & 0x3f) | 0x80);
+                    . chr((($value & 0x0fc0) >> 6) | 0x80)
+                    . chr(($value & 0x3f) | 0x80);
         } else
             $i++;
 
@@ -331,21 +325,23 @@ function decode_unicode_url($str) {
     return $res . substr($str, $i);
 }
 
-function code2utf($num) {
+function code2utf($num)
+{
     if ($num < 128)
         return chr($num);
     if ($num < 1024)
         return chr(($num >> 6) + 192) . chr(($num & 63) + 128);
     if ($num < 32768)
         return chr(($num >> 12) + 224) . chr((($num >> 6) & 63) + 128)
-                . chr(($num & 63) + 128);
+            . chr(($num & 63) + 128);
     if ($num < 2097152)
         return chr(($num >> 18) + 240) . chr((($num >> 12) & 63) + 128)
-                . chr((($num >> 6) & 63) + 128) . chr(($num & 63) + 128);
+            . chr((($num >> 6) & 63) + 128) . chr(($num & 63) + 128);
     return '';
 }
 
-function unescape($strIn, $iconv_to = 'UTF-8') {
+function unescape($strIn, $iconv_to = 'UTF-8')
+{
     $strOut = '';
     $iPos = 0;
     $len = strlen($strIn);
@@ -382,5 +378,3 @@ function unescape($strIn, $iconv_to = 'UTF-8') {
     }
     return $strOut;
 }
-
-?>

--- Bottom.php ---
@@ -25,7 +25,7 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-error_reporting(0);
+error_reporting(0); 
 include("functions/ParamLibFnc.php");
 require_once("Data.php");
 include "./Warehouse.php";

--- CalculateGpaProcess.php ---
@@ -27,6 +27,7 @@
 #***************************************************************************************
 error_reporting(0);
 
+
 include('RedirectRootInc.php');
 include 'Warehouse.php';
 include 'Data.php';

--- CalculateMissingAttendance.php ---
@@ -26,6 +26,7 @@
 #
 #***************************************************************************************
 error_reporting(0);
+
 include('RedirectRootInc.php');
 include 'Warehouse.php';
 include 'Data.php';

--- CalendarModal.php ---
@@ -4,6 +4,7 @@
 include('RedirectRootInc.php');
 include'ConfigInc.php';
 include 'Warehouse.php';
+
 /*
  * To change this license header, choose License Headers in Project Properties.
  * To change this template file, choose Tools | Templates
@@ -13,7 +14,9 @@
 //----------------------- modal for event start---------------------//
 // $connection = new mysqli($DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName);
 $_REQUEST['event_id'] = mysqli_real_escape_string($connection,optional_param('event_id', '', PARAM_DATA));
-if (($_REQUEST['event_id'] || !isset($_REQUEST['event_id'])) && !isset($_REQUEST[assignment_id])) {
+$_REQUEST['assignment_id'] = sqlSecurityFilter($_REQUEST['assignment_id']);
+
+if (($_REQUEST['event_id'] || !isset($_REQUEST['event_id'])) && !isset($_REQUEST['assignment_id'])) {
     if ($_REQUEST['event_id'] != 'new' && isset($_REQUEST['event_id'])) {
         $RET = DBGet(DBQuery("SELECT TITLE,DESCRIPTION,SCHOOL_DATE,CALENDAR_ID FROM calendar_events WHERE ID='$_REQUEST[event_id]'"));
         $title = $RET[1]['TITLE'];
@@ -27,7 +30,7 @@
     }
     echo "<FORM name=popform class=\"m-b-0\" id=popform action=Modules.php?modname=schoolsetup/Calendar.php&dd=$_REQUEST[school_date]&modfunc=detail&event_id=$_REQUEST[event_id]&calendar_id=$calendar_id&month=$_REQUEST[month]&year=$_REQUEST[year] METHOD=POST>";
 } else {
-    $RET = DBGet(DBQuery('SELECT TITLE,STAFF_ID,DATE_FORMAT(DUE_DATE,\'%d-%b-%y\') AS SCHOOL_DATE,ASSIGNED_DATE,DUE_DATE,DESCRIPTION FROM gradebook_assignments WHERE ASSIGNMENT_ID=\'' . $_REQUEST[assignment_id] . '\''));
+    $RET = DBGet(DBQuery('SELECT TITLE,STAFF_ID,DATE_FORMAT(DUE_DATE,\'%d-%b-%y\') AS SCHOOL_DATE,ASSIGNED_DATE,DUE_DATE,DESCRIPTION FROM gradebook_assignments WHERE ASSIGNMENT_ID=\'' . $_REQUEST['assignment_id'] . '\''));
     $title = $RET[1]['TITLE'];
     $RET[1]['STAFF_ID'] = GetTeacher($RET[1]['STAFF_ID']);
 }

--- CheckUrlWs.php ---
@@ -0,0 +1,37 @@
+<?php
+$url = $_REQUEST['url'];
+$data = array();
+$exists = '';
+$file_headers = '';
+$s = empty($_SERVER["HTTPS"]) ? '' : ($_SERVER["HTTPS"] == "on") ? "s" : "";
+$sp = strtolower($_SERVER["SERVER_PROTOCOL"]);
+$protocol = substr($sp, 0, strpos($sp, "/")) . $s;
+$out=$protocol . "://" . $url;
+$file_headers = @get_headers($out);
+
+if(count($file_headers)>1)
+{
+    if($file_headers[0]!='' && strpos($file_headers[0], '404')) {
+        $exists = 0;
+    }
+    else {
+        $exists = 1;
+    }
+}
+else 
+{
+    $exists = 0;
+}
+if($exists==1)
+{
+    $data['success']=1;
+    $data['msg']=_validUrl;
+    $data['host'] = $out;
+}
+else 
+{
+    $data['success']=0;
+    $data['msg']=_invalidUrl;
+    $data['host'] = $out;
+}
+echo json_encode($data);
\ No newline at end of file

--- ChooseCP.php ---
@@ -5,7 +5,7 @@
  * To change this template file, choose Tools | Templates
  * and open the template in the editor.
  */
-
+session_start();
 include('RedirectRootInc.php');
 include'ConfigInc.php';
 include 'Warehouse.php';

--- ConfigInc.php ---
@@ -25,64 +25,59 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-include('RedirectRootInc.php'); 
+include('RedirectRootInc.php');
 
-if(CONFIG_INC==0)
-{
+if (!defined('CONFIG_INC')) {
     define('CONFIG_INC', 1);
     // IgnoreFiles should contain any names of files or folders
     // which should be ignored by the function inclusion system.
-    $IgnoreFiles = Array('.DS_Store','CVS','.svn');
-
-    $openSISPath = dirname(__FILE__).'/';
-    
-    if (file_exists($openSISPath."Data.php"))
-    {
-        include($openSISPath."Data.php");
+    $IgnoreFiles = array('.DS_Store', 'CVS', '.svn');
+    $openSISPath = dirname(__FILE__) . '/';
+    if (file_exists($openSISPath . "Data.php")) {
+        include($openSISPath . "Data.php");
     }
     include("DatabaseInc.php");
     include("UpgradeInc.php");
     include('functions/DbGetFnc.php');
-  #  Set Build Date and Version Number here.
-  
-  	$b_date_sql = "select value from app where name='date'";
-	$b_date_res = DBQuery($b_date_sql);
-	$b_date_row = DBGet($b_date_res);
-	
-  	$version_sql = "select value from app where name='version'";
-	$version_res = DBQuery($version_sql);
-	$version_row = DBGet($version_res);
-$openSISVersion = $version_row[1]['VALUE'];
+    #  Set Build Date and Version Number here.
+
+    $b_date_sql = "select value from app where name='date'";
+    $b_date_res = DBQuery($b_date_sql);
+    $b_date_row = DBGet($b_date_res);
+
+    $version_sql = "select value from app where name='version'";
+    $version_res = DBQuery($version_sql);
+    $version_row = DBGet($version_res);
+    $openSISVersion = $version_row[1]['VALUE'];
     $builddate = $b_date_row[1]['VALUE'];
-	    $htmldocPath = "";
+    $htmldocPath = "";
     $OutputType = "HTML"; //options are HTML or PDF
     $htmldocPath = '';
-    $htmldocAssetsPath = '';		// way htmldoc accesses the assets/ directory, possibly different than user - empty string means no translation
-//    $StudentPicturesPath = 'assets/studentphotos/';
-//    $UserPicturesPath = 'assets/userphotos/';
+    $htmldocAssetsPath = '';        // way htmldoc accesses the assets/ directory, possibly different than user - empty string means no translation
+    //    $StudentPicturesPath = 'assets/studentphotos/';
+    //    $UserPicturesPath = 'assets/userphotos/';
     $openSISTitle = "openSIS Student Information System";
-    $openSISAdmins = '1';			// can be list such as '1,23,50' - note, these should be id's in the DefaultSyear, otherwise they can't login anyway
+    $openSISAdmins = '1';            // can be list such as '1,23,50' - note, these should be id's in the DefaultSyear, otherwise they can't login anyway
     $openSISNotifyAddress = '';
-    $msgFlag='';
+    $msgFlag = '';
 
     $openSISModules = array(
-        'schoolsetup'=>true,
-        'students'=>true,
-        'users'=>true,
-        'scheduling'=>true,
-        'grades'=>true,
-        'attendance'=>true,
-        'eligibility'=>true,
-        'Discipline'=>true,
-        'Billing' =>true,
-        'EasyCom' =>true,
-        'Library' =>true,
-        'messaging'=>true,
-        'tools'=>true,
+        'schoolsetup' => true,
+        'students' => true,
+        'users' => true,
+        'scheduling' => true,
+        'grades' => true,
+        'attendance' => true,
+        'eligibility' => true,
+        'Discipline' => true,
+        'Billing' => true,
+        'EasyCom' => true,
+        'Library' => true,
+        'messaging' => true,
+        'tools' => true,
     );
 
     // If session isn't started, start it.
-    if(!isset($SessionStart))
-    $SessionStart = 1;
+    if (!isset($SessionStart))
+        $SessionStart = 1;
 }
-?>
\ No newline at end of file

--- ConnectionClass.php ---
@@ -28,15 +28,12 @@
 // Establish MySQL DB connection.  
 class ConnectDBOpensis
 {
-    var $auto_init= true;
-    function init($DatabaseServer,$DatabaseUsername,$DatabasePassword,$DatabaseName)
+    var $auto_init = true;
+    function init($DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName)
     {
-        $user_agent=explode('/',$_SERVER['HTTP_USER_AGENT']);
-        if($user_agent[0]=='Mozilla')
-        {
-        return new mysqli($DatabaseServer,$DatabaseUsername,$DatabasePassword,$DatabaseName);
+        $user_agent = explode('/', $_SERVER['HTTP_USER_AGENT']);
+        if ($user_agent[0] == 'Mozilla') {
+            return new mysqli($DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName);
         }
     }
 }
-
-?>

--- CourseMoreInfo.php ---
@@ -26,64 +26,99 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-include('RedirectRootInc.php');
-include'ConfigInc.php';
+include 'RedirectRootInc.php';
+include 'ConfigInc.php';
 include 'Warehouse.php';
-// include('functions/SqlSecurityFnc.php');
 
 $id = sqlSecurityFilter($_REQUEST['id']);
 
- $sql = 'SELECT
-                                s.COURSE_ID,s.COURSE_PERIOD_ID,
-                                s.MARKING_PERIOD_ID,s.START_DATE,s.END_DATE,s.MODIFIED_DATE,s.MODIFIED_BY,
-                                UNIX_TIMESTAMP(s.START_DATE) AS START_EPOCH,UNIX_TIMESTAMP(s.END_DATE) AS END_EPOCH,sp.PERIOD_ID,
-                                cpv.PERIOD_ID,s.MARKING_PERIOD_ID as COURSE_MARKING_PERIOD_ID,cp.MARKING_PERIOD_ID as mpa_id,cp.MP,sp.SORT_ORDER,
-                                c.TITLE,cp.COURSE_PERIOD_ID AS PERIOD_PULLDOWN,
-                                s.STUDENT_ID,r.TITLE AS ROOM,(SELECT GROUP_CONCAT(cpv.DAYS) FROM course_period_var cpv WHERE cpv.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID) as DAYS,SCHEDULER_LOCK,CONCAT(st.LAST_NAME, \'' . ' ' . '\' ,st.FIRST_NAME) AS MODIFIED_NAME
-                                FROM courses c,course_periods cp,course_period_var cpv,rooms r,school_periods sp,schedule s
-                                LEFT JOIN staff st ON s.MODIFIED_BY = st.STAFF_ID
-                                WHERE
-                                s.COURSE_ID = c.COURSE_ID AND s.COURSE_ID = cp.COURSE_ID
-                                AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID
-                                 AND r.ROOM_ID=cpv.ROOM_ID
-                                AND s.COURSE_PERIOD_ID = cp.COURSE_PERIOD_ID
-                                AND s.SCHOOL_ID = sp.SCHOOL_ID AND s.SYEAR = c.SYEAR AND sp.PERIOD_ID = cpv.PERIOD_ID
-                                AND s.ID=' . $id . '  GROUP BY cp.COURSE_PERIOD_ID';
+$sql = 'SELECT
+            s.COURSE_ID,s.COURSE_PERIOD_ID,
+            s.MARKING_PERIOD_ID,s.START_DATE,s.END_DATE,s.MODIFIED_DATE,s.MODIFIED_BY,
+            UNIX_TIMESTAMP(s.START_DATE) AS START_EPOCH,UNIX_TIMESTAMP(s.END_DATE) AS END_EPOCH,sp.PERIOD_ID,
+            cpv.PERIOD_ID,s.MARKING_PERIOD_ID as COURSE_MARKING_PERIOD_ID,cp.MARKING_PERIOD_ID as mpa_id,cp.MP,sp.SORT_ORDER,
+            c.TITLE,cp.COURSE_PERIOD_ID AS PERIOD_PULLDOWN,
+            s.STUDENT_ID,r.TITLE AS ROOM,(SELECT GROUP_CONCAT(cpv.DAYS) FROM course_period_var cpv WHERE cpv.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID) as DAYS,SCHEDULER_LOCK,CONCAT(st.LAST_NAME, \'' . ' ' . '\' ,st.FIRST_NAME) AS MODIFIED_NAME
+            FROM courses c,course_periods cp,course_period_var cpv,rooms r,school_periods sp,schedule s
+            LEFT JOIN staff st ON s.MODIFIED_BY = st.STAFF_ID
+            WHERE
+            s.COURSE_ID = c.COURSE_ID AND s.COURSE_ID = cp.COURSE_ID
+            AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID
+             AND r.ROOM_ID=cpv.ROOM_ID
+            AND s.COURSE_PERIOD_ID = cp.COURSE_PERIOD_ID
+            AND s.SCHOOL_ID = sp.SCHOOL_ID AND s.SYEAR = c.SYEAR AND sp.PERIOD_ID = cpv.PERIOD_ID
+            AND s.ID=' . $id . '  GROUP BY cp.COURSE_PERIOD_ID';
 
-        $QI = DBQuery($sql);
-        $schedule_RET = DBGet($QI, array('TITLE' => '_makeTitle', 'PERIOD_PULLDOWN' => '_makePeriodSelect', 'COURSE_MARKING_PERIOD_ID' => '_makeMPA', 'DAYS' => '_makeDays', 'SCHEDULER_LOCK' => '_makeViewLock', 'START_DATE' => '_makeViewDate', 'END_DATE' => '_makeViewDate', 'MODIFIED_DATE' => '_makeViewDate'));
-        $columns = array('TITLE' =>_course,
-         'PERIOD_PULLDOWN' =>_periodTeacher,
-         'ROOM' =>_room,
-         'DAYS' =>_daysOfWeek,
-         'COURSE_MARKING_PERIOD_ID' =>_term,
-         'SCHEDULER_LOCK' =>  '<IMG SRC=assets/locked.gif border=0>',
-         'START_DATE' =>_enrolled,
-         'END_DATE' =>_endDateDropDate,
-         'MODIFIED_NAME' =>_modifiedBy,
-         'MODIFIED_DATE' =>_modifiedDate,
-        );
-        $options = array('search' =>false, 'count' =>false, 'save' =>false, 'sort' =>false);
-        ListOutput($schedule_RET, $columns,  _course, _courses, $link, '', $options);
+$QI = DBQuery($sql);
+$schedule_RET = DBGet($QI, array('TITLE' => '_makeTitle', 'PERIOD_PULLDOWN' => '_makePeriodSelect', 'COURSE_MARKING_PERIOD_ID' => '_makeMPA', 'DAYS' => '_makeDays', 'SCHEDULER_LOCK' => '_makeViewLock', 'START_DATE' => '_makeViewDate', 'END_DATE' => '_makeViewDate', 'MODIFIED_DATE' => '_makeViewDate'));
+$columns = array(
+    'TITLE' =>_course,
+    'PERIOD_PULLDOWN' =>_periodTeacher,
+    'ROOM' =>_room,
+    'DAYS' =>_daysOfWeek,
+    'COURSE_MARKING_PERIOD_ID' =>_term,
+    'SCHEDULER_LOCK' =>  '<IMG SRC=assets/locked.gif border=0>',
+    'START_DATE' =>_enrolled,
+    'END_DATE' =>_endDateDropDate,
+    'MODIFIED_NAME' =>_modifiedBy,
+    'MODIFIED_DATE' =>_modifiedDate,
+);
+$options = array('search' =>false, 'count' =>false, 'save' =>false, 'sort' =>false);
+ListOutput($schedule_RET, $columns,  _course, _courses, $link, '', $options);
         
-        function _makeViewDate($value, $column) {
-                if ($value)
-                    return ProperDate($value);
-                else
-                    return '<center>n/a</center>';
-            }
+function _makeViewDate($value, $column) {
+    if ($value)
+        return ProperDate($value);
+    else
+        return '<center>' . _NA . '</center>';
+}
             
-        //        echo '<br /><div align="center"><input type="button" class="btn btn-primary" value="Close" onclick="window.close();"></div>';
+//        echo '<br /><div align="center"><input type="button" class="btn btn-primary" value="Close" onclick="window.close();"></div>';
 
-        function _makeViewLock($value, $column) {
-            global $THIS_RET;
-        
-            if ($value == 'Y')
-                $img = 'locked';
-            else
-                $img = 'unlocked';
-        
-            return '<IMG SRC=assets/' . $img . '.gif >';
+function _makeViewLock($value, $column) {
+    global $THIS_RET;
+
+    if ($value == 'Y')
+        $img = 'locked';
+    else
+        $img = 'unlocked';
+
+    return '<IMG SRC=assets/' . $img . '.gif >';
+}
+
+function _makePeriodSelect($course_period_id, $column = '')
+{
+    global $_openSIS, $THIS_RET, $fy_id;
+
+    $sql = 'SELECT sp.TITLE AS PERIOD,cp.COURSE_PERIOD_ID,cp.PARENT_ID,cp.TITLE,cp.MARKING_PERIOD_ID,COALESCE(cp.TOTAL_SEATS-cp.FILLED_SEATS,0) AS AVAILABLE_SEATS FROM course_periods cp,course_period_var cpv,school_periods sp WHERE sp.PERIOD_ID=cpv.PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cp.COURSE_ID=\'' . $THIS_RET['COURSE_ID'] . '\' ORDER BY sp.SORT_ORDER';
+    $orders_RET = DBGet(DBQuery($sql));
+
+    foreach ($orders_RET as $value) {
+        if ($value['COURSE_PERIOD_ID'] != $value['PARENT_ID']) {
+            $parent = DBGet(DBQuery('SELECT SHORT_NAME FROM course_periods WHERE COURSE_PERIOD_ID=\'' . $value['PARENT_ID'] . '\''));
+            $parent = $parent[1]['SHORT_NAME'];
+        }
+
+        $periods[$value['COURSE_PERIOD_ID']] = $value['PERIOD'] . ' - ' . $value['TITLE'] . (($value['MARKING_PERIOD_ID'] != $fy_id && $value['COURSE_PERIOD_ID'] != $course_period_id) ? ' (' . GetMP($value['MARKING_PERIOD_ID']) . ')' : '') . ($value['COURSE_PERIOD_ID'] != $course_period_id ? ' (' . $value['AVAILABLE_SEATS'] . ' seats)' : '') . (($value['COURSE_PERIOD_ID'] != $course_period_id && $parent) ? ' -> ' . $parent : '');
+    }
+
+    return SelectInput_Disonclick($course_period_id, "schedule[$THIS_RET[COURSE_PERIOD_ID]][$THIS_RET[START_DATE]][COURSE_PERIOD_ID]", '', $periods, false);
+}
+
+function _makeMPA($value, $column)
+{
+    global $THIS_RET;
+
+    if ($value != '' && $THIS_RET['MARKING_PERIOD_ID'] == $THIS_RET['MPA_ID']) {
+        return GetMP($value);
+    } elseif ($value != '' && $THIS_RET['MARKING_PERIOD_ID'] != $THIS_RET['MPA_ID']) {
+        return '*' . GetMP($value);
+    } else {
+        $check_custom = DBGet(DBQuery('SELECT BEGIN_DATE,END_DATE FROM course_periods WHERE COURSE_PERIOD_ID=' . $THIS_RET['COURSE_PERIOD_ID'] . ' AND BEGIN_DATE IS NOT NULL AND END_DATE IS NOT NULL AND BEGIN_DATE!=\'0000-00-00\' AND END_DATE!=\'0000-00-00\' '));
+        if (count($check_custom) > 0) {
+            return '<div style="white-space: nowrap;">' . ProperDateAY($check_custom[1]['BEGIN_DATE']) . ' to ' . ProperDateAY($check_custom[1]['END_DATE']) . '</div>';
         }
-?>
+    }
+}
 
+?>
\ No newline at end of file

--- DatabaseInc.php ---
@@ -32,10 +32,10 @@
 function db_start()
 {
     global $DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName, $DatabasePort, $DatabaseType, $connection;
-
+    $connection = new ConnectDBOpensis();
     switch ($DatabaseType) {
         case 'mysqli':
-            $connection = new ConnectDBOpensis();
+
             if ($connection->auto_init == true) {
                 $connection = $connection->init($DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName);
                 mysqli_set_charset($connection, "utf8");
@@ -47,17 +47,18 @@ function db_start()
     if ($connection === false) {
         switch ($DatabaseType) {
             case 'mysqli':
-                $errormessage = mysqli_error($connection);
+                $errormessage = $connection->error;
                 break;
         }
-        db_show_error("", "" . _couldNotConnectToDatabase . ": $DatabaseServer", $errstring);
+        db_show_error("", "" . _couldNotConnectToDatabase . ": $DatabaseServer", $errormessage);
     }
     return $connection;
 }
 
 
 ##### Connection help #####
-$connection = mysqli_connect($DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName);
+if (!empty($DatabaseServer) && !empty($DatabaseUsername) && !empty($DatabaseName))
+    $connection = mysqli_connect($DatabaseServer, $DatabaseUsername, $DatabasePassword, $DatabaseName);
 
 # ---------- #
 #  Debugger  #
@@ -87,7 +88,8 @@ function DBQuery($sql)
     } else {
         $userId = '';
     }
-    $connection->query("set @userId= $userId;");
+    if (!empty($userId))
+        $connection->query("set @userId= $userId;");
     switch ($DatabaseType) {
         case 'mysqli':
 
@@ -99,6 +101,7 @@ function DBQuery($sql)
             $sql = par_rep("/([,\(=])[\r\n\t ]*''/", '\\1NULL', $sql);
             if (preg_match_all("/'(\d\d-[A-Za-z]{3}-\d{2,4})'/", $sql, $matches)) {
                 foreach ($matches[1] as $match) {
+                    $date_cheker_mod = explode('-', $match);
                     if (strlen($date_cheker_mod[2]) == 4 && $date_cheker_mod[2] < 1970) {
                         $month_names = array('JAN' => '01', 'FEB' => '02', 'MAR' => '03', 'APR' => '04', 'MAY' => '05', 'JUN' => '06', 'JUL' => '07', 'AUG' => '08', 'SEP' => '09', 'OCT' => '10', 'NOV' => '11', 'DEC' => '12');
                         $date_cheker_mod[1] = $month_names[$date_cheker_mod[1]];
@@ -133,7 +136,6 @@ function DBQuery($sql)
                 if ($user_agent[0] == 'Mozilla') {
                     $result = $connection->query($sql) or die(db_show_error($sql, _dbExecuteFailed, mysqli_error($connection)));
                 }
-
             }
             break;
     }
@@ -184,7 +186,6 @@ function DBQuery_assignment($sql)
                 if ($user_agent[0] == 'Mozilla') {
                     $result = $connection->query($sql) or die(db_show_error($sql, _dbExecuteFailed, mysqli_error($connection)));
                 }
-
             }
             break;
     }
@@ -233,7 +234,6 @@ function DBQueryMod($sql)
                 if ($user_agent[0] == 'Mozilla') {
                     $result = $connection->query($sql) or die(db_show_error($sql, _dbExecuteFailed, mysqli_error($connection)));
                 }
-
             }
             break;
     }
@@ -249,16 +249,15 @@ function db_fetch_row($result)
         case 'mysqli':
             $return = $result->fetch_assoc();
             if (is_array($return)) {
-                foreach ($return as $key => $value) {
+                foreach ($return as $key) {
                     if (is_int($key)) {
                         unset($return[$key]);
                     }
-
                 }
             }
             break;
     }
-    return @array_change_key_case($return, CASE_UPPER);
+    return (is_array($return)) ? array_change_key_case($return, CASE_UPPER) : $return;
 }
 
 // returns code to go into SQL statement for accessing the next value of a sequence function db_seq_nextval($seqname)
@@ -319,7 +318,8 @@ function db_properties($table)
         case 'mysqli':
             $result = DBQuery("SHOW COLUMNS FROM $table");
             while ($row = db_fetch_row($result)) {
-                $properties[strtoupper($row['FIELD'])]['TYPE'] = strtoupper($row['TYPE'], strpos($row['TYPE'], '('));
+                //$properties[strtoupper($row['FIELD'])]['TYPE'] = strtoupper($row['TYPE'], strpos($row['TYPE'], '('));
+                $properties[strtoupper($row['FIELD'])]['TYPE'] = strpos(strtoupper($row['TYPE']), '(');
                 if (!$pos = strpos($row['TYPE'], ',')) {
                     $pos = strpos($row['TYPE'], ')');
                 } else {
@@ -333,7 +333,6 @@ function db_properties($table)
                 } else {
                     $properties[strtoupper($row['FIELD'])]['NULL'] = "N";
                 }
-
             }
             break;
     }
@@ -391,16 +390,15 @@ function db_show_error($sql, $failnote, $additional = '')
     echo "<!-- " . _sqlStatement . ": \n\n $sql \n\n -->";
 
     if ($openSISNotifyAddress) {
-        $message = "" . _system . ": $openSISTitle \n";
+        $message = "System : " . $openSISTitle . " \n";
         $message .= "" . _date . ": " . date("m/d/Y h:i:s") . "\n";
-        $message .= "" . _page . ": " . $_SERVER['PHP_SELF'] . ' ' . ProgramTitle() . " \n\n";
+        $message .= " Page : " . $_SERVER['PHP_SELF'] . ' ' . ProgramTitle() . " \n\n";
         $message .= "" . _failureNotice . ":  $failnote \n";
         $message .= "" . _additionalInfo . ": $additional \n";
         $message .= "\n $sql \n";
         $message .= "" . _requestArray . ": \n" . ShowVar($_REQUEST, 'Y', 'N');
         $message .= "\n\n" . _sessionArray . ": \n" . ShowVar($_SESSION, 'Y', 'N');
         mail($openSISNotifyAddress, _openSisDatabaseError, $message);
-
     }
 
     die();

--- DownloadWindow.php ---
@@ -30,11 +30,14 @@
 include 'Data.php';
 // include('functions/SqlSecurityFnc.php');
 
-$down_id = sqlSecurityFilter($_REQUEST['down_id']);
+// $down_id = sqlSecurityFilter($_REQUEST['down_id']);
 
 if(isset($_REQUEST['down_id']) && $_REQUEST['down_id']!='')
 {
-    $downfile_info= DBGet(DBQuery('SELECT * FROM user_file_upload WHERE DOWNLOAD_ID=\''.$down_id.'\''));
+     if ((isset($_REQUEST['studentfile']) && $_REQUEST['studentfile'] == 'Y') || (isset($_REQUEST['userfile']) && $_REQUEST['userfile'] == 'Y'))
+        $downfile_info = DBGet(DBQuery('SELECT * FROM user_file_upload WHERE id=\'' . $_REQUEST['down_id'] . '\''));
+    else
+        $downfile_info = DBGet(DBQuery('SELECT * FROM user_file_upload WHERE download_id=\'' . $_REQUEST['down_id'] . '\''));
     header("Cache-Control: public");
     header("Pragma: ");
     header("Expires: 0"); 
@@ -66,9 +69,9 @@
     
     exit;
 }
-// else
-// {
-//     header('Content-Disposition: attachment; filename="'.urldecode($_REQUEST['name']).'" ');
-//     readfile('assets/'.urldecode($_REQUEST['filename']));
-// }
+else
+{
+    header('Content-Disposition: attachment; filename="'.urldecode($_REQUEST['name']).'" ');
+    readfile('assets/'.urldecode($_REQUEST['filename']));
+}
 ?>

--- EmailCheck.php ---
@@ -44,9 +44,9 @@
         $res_stu = DBGet(DBQuery('SELECT STUDENT_ID FROM students WHERE EMAIL=\'' . $email . '\''));
     }
     if (count($result) > 0 || count($res_stf) > 0 || count($res_stu) > 0) {
-        echo '0_' . urlencode($_REQUEST['opt']) {0};
+        echo '0_' . urlencode($_REQUEST['opt'])[0];
     } else {
-        echo '1_' . urlencode($_REQUEST['opt']) {0};
+        echo '1_' . urlencode($_REQUEST['opt'])[0];
     }
     exit;
 }

--- ExportDataTable.php ---
@@ -28,7 +28,8 @@
 #***************************************************************************************
 
 error_reporting(0);
-// include('RedirectRootInc.php');
+
+ //include('RedirectRootInc.php');
 // include'ConfigInc.php';
 include 'Warehouse.php';
 // include('../../Redirect_modules.php');

--- ForExport.php ---
@@ -27,17 +27,10 @@
 #***************************************************************************************
 
 session_start();
-!empty($_SESSION['USERNAME']) or die('Access denied!');
+//!empty($_SESSION['USERNAME']) or die('Access denied!');
 include "functions/ParamLibFnc.php";
 //include("functions/UrlFnc.php");
 include 'RedirectRootInc.php';
-
-//$url=validateQueryString(curPageURL());
-//if($url===FALSE)
-// {
-// header('Location: index.php');
-// }
-error_reporting(E_ERROR);
 $start_time = time();
 include 'Warehouse.php';
 array_rwalk($_REQUEST,'strip_tags');

--- ForWindow.php ---
@@ -27,7 +27,7 @@
 #
 #***************************************************************************************
 session_start();
-!empty($_SESSION['USERNAME']) or die('Access denied!');
+//!empty($_SESSION['USERNAME']) or die('Access denied!');
 include "functions/ParamLibFnc.php";
 
 $url = validateQueryString(curPageURL());
@@ -36,9 +36,6 @@
 }
 
 include 'RedirectRootInc.php';
-
-error_reporting(E_ERROR);
-
 $start_time = time();
 
 include 'Warehouse.php';
@@ -167,4 +164,3 @@
     echo '</BODY>';
     echo '</HTML>';
 }
-?>
\ No newline at end of file

--- ForgotPass.php ---
@@ -26,6 +26,7 @@
 #
 #***************************************************************************************
 error_reporting(0);
+
 session_start();
 include("functions/ParamLibFnc.php");
 include("Data.php");
@@ -278,7 +279,9 @@ function db_show_error($sql, $failnote, $additional = '') {
     die();
 }
 
-$log_msg = DBGet(DBQuery("SELECT MESSAGE FROM login_message WHERE DISPLAY='Y'"));
+// $log_msg = DBGet(DBQuery("SELECT MESSAGE FROM login_message WHERE DISPLAY='Y'"));
+
+$log_msg='';
 
 $dir = '';
 if(langDirection()=='rtl') { $dir="rtl"; }else{ $dir="ltr"; }

--- LoginInc.php ---
@@ -27,6 +27,7 @@
 #***************************************************************************************
 error_reporting(0);
 
+
 include('lang/supportedLanguages.php');
 
 if(isset($_REQUEST['language'])){

--- Menu.php ---
@@ -25,57 +25,46 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-if(!$_SESSION['STAFF_ID'] && !$_SESSION['STUDENT_ID'] && (strpos($_SERVER['PHP_SELF'],'index.php'))===false)
-	{
-		header('Location: index.php');
-		exit;
-	}
-if(!$_openSIS['Menu'])
-{
-	foreach($openSISModules as $module=>$include)
-		if($include)
+if (!$_SESSION['STAFF_ID'] && !$_SESSION['STUDENT_ID'] && (strpos($_SERVER['PHP_SELF'], 'index.php')) === false) {
+	header('Location: index.php');
+	exit();
+}
+if (!$_openSIS['Menu']) {
+	foreach ($openSISModules as $module => $include)
+		if ($include) {
 			include "modules/$module/Menu.php";
+		}
 
 	$profile = User('PROFILE');
 
-	if($profile!='student')
-		if(User('PROFILE_ID')!='')
-                {
-			
-                    $can_use_RET = DBGet(DBQuery("SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='".User('PROFILE_ID')."' AND CAN_USE='Y'"),array(),array('MODNAME'));
-		
-                }  else
-                        {
-                        $profile_id_mod=DBGet(DBQuery("SELECT PROFILE_ID FROM staff WHERE USER_ID='".User('STAFF_ID')));
-                        $profile_id_mod=$profile_id_mod[1]['PROFILE_ID'];
-                        if($profile_id_mod!='')
-                        $can_use_RET = DBGet(DBQuery("SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='".$profile_id_mod."' AND CAN_USE='Y'"),array(),array('MODNAME'));
-                        }
-else
-	{
-		$can_use_RET = DBGet(DBQuery("SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='3' AND CAN_USE='Y'"),array(),array('MODNAME'));
+	if ($profile != 'student')
+		if (User('PROFILE_ID') != '') {
+
+			$can_use_RET = DBGet(DBQuery("SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='" . User('PROFILE_ID') . "' AND CAN_USE='Y'"), array(), array('MODNAME'));
+		} else {
+			$profile_id_mod = DBGet(DBQuery("SELECT PROFILE_ID FROM staff WHERE USER_ID='" . User('STAFF_ID')));
+			$profile_id_mod = $profile_id_mod[1]['PROFILE_ID'];
+			if ($profile_id_mod != '')
+				$can_use_RET = DBGet(DBQuery("SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='" . $profile_id_mod . "' AND CAN_USE='Y'"), array(), array('MODNAME'));
+		}
+	else {
+		$can_use_RET = DBGet(DBQuery("SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID='3' AND CAN_USE='Y'"), array(), array('MODNAME'));
 		$profile = 'parent';
 	}
-       
-	foreach($menu as $modcat=>$profiles)
-	{
-	 	$menuprof = $menu;
+
+	foreach ($menu as $modcat => $profiles) {
+		$menuprof = $menu;
 		$programs = $profiles[$profile];
-		foreach($programs as $program=>$title)
-		{
-			if(!is_numeric($program))
-			{
-				if($can_use_RET[$program] && ($profile!='admin' || !$exceptions[$modcat][$program] || AllowEdit($program)))
+		foreach ($programs as $program => $title) {
+			if (!is_numeric($program)) {
+				if ($can_use_RET[$program] && ($profile != 'admin' || !$exceptions[$modcat][$program] || AllowEdit($program)))
 					$_openSIS['Menu'][$modcat][$program] = $title;
-			}
-			else
-                        {
+			} else {
 				$_openSIS['Menu'][$modcat][$program] = $title;
-                        }
+			}
 		}
 	}
 
-	if(User('PROFILE')=='student')
+	if (User('PROFILE') == 'student')
 		unset($_openSIS['Menu']['users']);
 }
-?>
\ No newline at end of file

--- Modules.php ---
@@ -27,12 +27,16 @@
 #
 #***************************************************************************************
 
-error_reporting(0);
 session_start();
-!empty($_SESSION['USERNAME']) or die('Access denied!');
-
 include 'RedirectRootInc.php';
 include "functions/ParamLibFnc.php";
+define('students', 'students');
+define('users', 'users');
+define('scheduling', 'scheduling');
+define('grades', 'grades');
+define('attendance', 'attendance');
+define('messaging', 'messaging');
+define('tools', 'tools');
 
 $url = validateQueryString(curPageURL());
 if ($url === FALSE) {
@@ -54,6 +58,7 @@
 }
 
 $handle = opendir("js");
+$filelst = '';
 while ($file = readdir($handle)) {
     $filelst = "$filelst,$file";
 }
@@ -68,20 +73,6 @@
     }
 }
 echo "<noscript><META http-equiv=REFRESH content='0;url=EnableJavascript.php' /></noscript>";
-// echo "<script type='text/javascript'>	
-//        function init(param,param2) {        
-//            calendar.set('date_'+param);
-//            if(param2==2)
-//            {
-//                document.getElementById('date_'+param).style.display ='block';
-//                document.getElementById('date_div_'+param).style.display ='none';
-//            }
-//            document.getElementById('date_'+param).click();
-//        }		
-// </script>";
-
-error_reporting(1);
-
 $module_commit_in   =   "";
 $module_commit_out  =   "";
 
@@ -91,7 +82,6 @@
 // echo _NAME;
 $old_school = UserSchool();
 $old_syear = UserSyear();
-
 if ((!$_SESSION['UserMP'] || (optional_param('school', '', PARAM_SPCL) && optional_param('school', '', PARAM_SPCL) != $old_school) || (optional_param('syear', 0, PARAM_SPCL) && optional_param('syear', 0, PARAM_SPCL) != $old_syear)) && User('PROFILE') != 'parent')
     $_SESSION['UserMP'] = GetCurrentMP('QTR', DBDate());
 
@@ -124,7 +114,7 @@
     echo '<script type="text/javascript" src="assets/js/core/libraries/jquery_ui/interactions.min.js"></script>';
     echo '<script type="text/javascript" src="assets/js/plugins/loaders/blockui.min.js"></script>';
     echo '<script type="text/javascript" src="assets/js/plugins/ui/prism.min.js"></script>';
-    echo '<script type="text/javascript" src="assets/js/plugins/media/cropper.min.js"></script>';    
+    echo '<script type="text/javascript" src="assets/js/plugins/media/cropper.min.js"></script>';
     echo '<script type="text/javascript" src="assets/js/plugins/editors/ckeditor/ckeditor.js"></script>';
     echo '<script type="text/javascript" src="assets/js/plugins/tables/datatables/datatables.min.js"></script>';
     echo '<script type="text/javascript" src="assets/js/plugins/forms/selects/select2.min.js"></script>';
@@ -142,7 +132,7 @@
     echo '<script type="text/javascript" src="assets/js/plugins/table2excel/table2excel.js"></script>';
     echo '<script type="text/javascript" src="assets/js/plugins/jspdf/jspdf.min.js"></script>';
     echo '<script type="text/javascript" src="assets/js/plugins/jspdf/autotable/jspdf.plugin.autotable.min.js"></script>';
-    
+
     /* JS Initializers */
     echo '<script type="text/javascript" src="assets/js/core/app.js?v=' . rand(0000, 99999) . '"></script>';
     echo '<script type="text/javascript" src="assets/js/pages/components_popups.js"></script>';
@@ -168,14 +158,15 @@
             }
         });
     </script>';
-    
+
 
     if (strpos($_REQUEST['modname'], 'miscellaneous/') === false)
         echo '<script language="JavaScript">if(window == top  && (!window.opener || window.opener.location.href.substring(0,(window.opener.location.href.indexOf("&")!=-1?window.opener.location.href.indexOf("&"):window.opener.location.href.replace("#","").length))!=window.location.href.substring(0,(window.location.href.indexOf("&")!=-1?window.location.href.indexOf("&"):window.location.href.replace("#","").length)))) window.location.href = "index.php";</script>';
 
     echo "<BODY>";
 }
-echo '<div id="loading-image"><i class="fa fa-cog fa-spin fa-lg fa-fw"></i> '._loading.'...</div>';
+
+echo '<div id="loading-image"><i class="fa fa-cog fa-spin fa-lg fa-fw"></i> ' . _loading . '...</div>';
 echo '<div class="navbar navbar-inverse bg-white">
             <div class="navbar-header">
                 <a class="sidebar-control sidebar-main-toggle hidden-xs" data-popup="tooltip" data-placement="bottom" data-container="body" data-original-title="Collapse Menu"><i class="icon-paragraph-justify3"></i></a>
@@ -197,7 +188,7 @@
 
 if (User('PROFILE') == 'teacher') {
     echo "<li><FORM name=head_frm id=head_frm action=Side.php?modfunc=update&btnn=$btn&nsc=$ns&act=school method=POST><div class=\"form-group\"><INPUT type=hidden name=modcat value='' id=modcat_input>";
-    $RET = DBGet(DBQuery('SELECT s.ID,s.TITLE FROM schools s,staff st INNER JOIN staff_school_relationship ssr USING(staff_id) WHERE s.id=ssr.school_id AND ssr.syear=\'' . UserSyear() . '\' AND st.staff_id=\'' . $_SESSION[STAFF_ID] . '\' AND (ssr.END_DATE>=curdate() OR ssr.END_DATE=\'0000-00-00\' OR ssr.END_DATE IS NULL)'));
+    $RET = DBGet(DBQuery('SELECT s.ID,s.TITLE FROM schools s,staff st INNER JOIN staff_school_relationship ssr USING(staff_id) WHERE s.id=ssr.school_id AND ssr.syear=\'' . UserSyear() . '\' AND st.staff_id=\'' . $_SESSION['STAFF_ID'] . '\' AND (ssr.END_DATE>=curdate() OR ssr.END_DATE=\'0000-00-00\' OR ssr.END_DATE IS NULL)'));
     echo "<SELECT class=\"select-search\" style=\"width: 200px;\" name=school onChange='this.form.submit();'>";
     foreach ($RET as $school) {
         echo "<OPTION value=$school[ID]" . ((UserSchool() == $school['ID']) ? ' SELECTED' : '') . ">" . $school['TITLE'] . "</OPTION>";
@@ -206,18 +197,18 @@
     echo "</div></FORM></li>";
 
     //===================================================================================================
-    
+
     echo "<li><FORM name=head_frm id=head_frm action=Side.php?modfunc=update&btnn=$btn&nsc=$ns&act=syear method=POST><div class=\"form-group\"><INPUT type=hidden name=modcat value='' id=modcat_input>";
     $school_years_RET = DBGet(DBQuery("SELECT YEAR(sy.START_DATE)AS START_DATE,YEAR(sy.END_DATE)AS END_DATE FROM school_years sy,staff st INNER JOIN staff_school_relationship ssr USING(staff_id) WHERE ssr.SYEAR=sy.SYEAR AND sy.school_id=ssr.school_id AND sy.school_id=" . UserSchool() . " AND st.staff_id=$_SESSION[STAFF_ID]"));
     echo "<SELECT class=\"select\" name=syear onChange='this.form.submit();' style='width:80;'>";
     foreach ($school_years_RET as $school_years) {
-        echo "<OPTION value=$school_years[START_DATE]" . ((UserSyear() == $school_years['START_DATE']) ? ' SELECTED' : '') . ">$school_years[START_DATE]" . ($school_years[END_DATE] != $school_years[START_DATE] ? "-" . $school_years['END_DATE'] : '') . '</OPTION>';
+        echo "<OPTION value=$school_years[START_DATE]" . ((UserSyear() == $school_years['START_DATE']) ? ' SELECTED' : '') . ">$school_years[START_DATE]" . ($school_years['END_DATE'] != $school_years['START_DATE'] ? "-" . $school_years['END_DATE'] : '') . '</OPTION>';
     }
     echo '</SELECT>';
     echo "</div></FORM></li>";
 
     //===================================================================================================
-    
+
     echo "<li><FORM name=head_frm id=head_frm action=Side.php?modfunc=update&btnn=$btn&nsc=$ns&act=mp method=POST><div class=\"form-group\"><INPUT type=hidden name=modcat value='' id=modcat_input>";
     $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
     if (!isset($_SESSION['UserMP'])) {
@@ -304,8 +295,7 @@
             } else
                 $stu_ID = UserStudentID();
             $school_years_RET = DBGet(DBQuery("SELECT DISTINCT sy.START_DATE,sy.END_DATE FROM school_years sy,student_enrollment se WHERE se.SYEAR=sy.SYEAR AND se.STUDENT_ID=" . $stu_ID . " AND sy.SCHOOL_ID=" . UserSchool() . " "));
-        }
-        else {
+        } else {
             $school_years_RET = DBGet(DBQuery("SELECT sy.START_DATE,sy.END_DATE FROM school_years sy ,staff s INNER JOIN staff_school_relationship ssr ON s.staff_id=ssr.staff_id WHERE sy.school_id=ssr.school_id AND sy.syear=ssr.syear AND sy.SCHOOL_ID=" . UserSchool() . " AND s.staff_id='$_SESSION[STAFF_ID]'"));
         }
         foreach ($school_years_RET as $school_years) {
@@ -325,8 +315,7 @@
             } else
                 $stu_ID = UserStudentID();
             $school_years_RET = DBGet(DBQuery("SELECT DISTINCT sy.START_DATE,sy.END_DATE FROM school_years sy,student_enrollment se WHERE se.SYEAR=sy.SYEAR AND se.STUDENT_ID=" . $stu_ID . " AND sy.SCHOOL_ID=" . UserSchool() . " "));
-        }
-        else {
+        } else {
             if (UserSchool())
                 $school_years_RET = DBGet(DBQuery("SELECT sy.START_DATE,sy.END_DATE FROM school_years sy ,staff s INNER JOIN staff_school_relationship ssr ON s.staff_id=ssr.staff_id WHERE sy.school_id=ssr.school_id AND sy.syear=ssr.syear AND sy.SCHOOL_ID=" . UserSchool() . " AND s.staff_id='$_SESSION[STAFF_ID]'"));
             else
@@ -400,7 +389,7 @@
     // Marking Period
 
     echo '</FORM></div></li>';
-}################## Porfile Not Teacher End ##########################################
+} ################## Porfile Not Teacher End ##########################################
 
 if (UserStudentID() && User('PROFILE') != 'parent' && User('PROFILE') != 'student') {
     $RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID='" . UserStudentID() . "'"));
@@ -453,23 +442,21 @@
         echo '<OPTION value="">n/a</OPTION>';
     }
     echo "</SELECT>";
-//===================================================================================================		
+    //===================================================================================================		
     echo "</FORM></div></li>";
     echo "<li><div class=\"form-group\"><FORM name=head_frm id=head_frm action=Side.php?modfunc=update&btnn=$btn&nsc=$ns&act=course method=POST><INPUT type=hidden name=modcat value='' id=modcat_input>";
     $course = DBQuery("SELECT DISTINCT cd.COURSE_TITLE, cd.COURSE_ID,cd.SUBJECT_ID,cd.SCHOOL_ID FROM course_details cd WHERE (cd.TEACHER_ID='" . User('STAFF_ID') . "' OR cd.SECONDARY_TEACHER_ID='" . User('STAFF_ID') . "') AND cd.SYEAR='" . UserSyear() . "' AND cd.SCHOOL_ID='" . UserSchool() . "' AND cd.SUBJECT_ID='" . UserSubject() . "' AND (cd.MARKING_PERIOD_ID IN (" . GetAllMP($allMP, UserMP()) . ") OR (cd.MARKING_PERIOD_ID IS NULL ))"); //AND cd.BEGIN_DATE<='".date('Y-m-d')."' AND cd.END_DATE>='".date('Y-m-d')."'))");					
-    $RET_temp= DBGet($course);
-    $ret_increment=1;
-    $RET=array();
-    foreach($RET_temp as $ret_courses)
-    {
-        $get_cps=DBGet(DBQuery("SELECT cpv.ID,cp.COURSE_PERIOD_ID,cp.MARKING_PERIOD_ID,cp.COURSE_ID,cp.TITLE,cp.SCHOOL_ID,cpv.PERIOD_ID FROM course_periods cp,course_period_var cpv WHERE cp.SYEAR='" . UserSyear() . "' AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cp.SCHOOL_ID='" . UserSchool() . "' AND cp.COURSE_ID='" . $ret_courses['COURSE_ID'] . "' AND (TEACHER_ID='" . User('STAFF_ID') . "' OR SECONDARY_TEACHER_ID='" . User('STAFF_ID') . "') AND (MARKING_PERIOD_ID IN (" . GetAllMP($allMP, UserMP()) . ") OR (MARKING_PERIOD_ID IS NULL)) group by (cp.COURSE_PERIOD_ID)"));
-        if(count($get_cps)>0)
-        {
-            $RET[$ret_increment]=$ret_courses;
+    $RET_temp = DBGet($course);
+    $ret_increment = 1;
+    $RET = array();
+    foreach ($RET_temp as $ret_courses) {
+        $get_cps = DBGet(DBQuery("SELECT cpv.ID,cp.COURSE_PERIOD_ID,cp.MARKING_PERIOD_ID,cp.COURSE_ID,cp.TITLE,cp.SCHOOL_ID,cpv.PERIOD_ID FROM course_periods cp,course_period_var cpv WHERE cp.SYEAR='" . UserSyear() . "' AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cp.SCHOOL_ID='" . UserSchool() . "' AND cp.COURSE_ID='" . $ret_courses['COURSE_ID'] . "' AND (TEACHER_ID='" . User('STAFF_ID') . "' OR SECONDARY_TEACHER_ID='" . User('STAFF_ID') . "') AND (MARKING_PERIOD_ID IN (" . GetAllMP($allMP, UserMP()) . ") OR (MARKING_PERIOD_ID IS NULL)) group by (cp.COURSE_PERIOD_ID)"));
+        if (count($get_cps) > 0) {
+            $RET[$ret_increment] = $ret_courses;
             $ret_increment++;
         }
     }
-   
+
     if (!UserCourse()) {
         $_SESSION['UserCourse'] = $RET[1]['COURSE_ID'];
     }
@@ -482,7 +469,7 @@
         echo '<OPTION value="">n/a</OPTION>';
     }
     echo "</SELECT>";
-//===================================================================================================							     					     
+    //===================================================================================================							     					     
     echo "</FORM></div></li>";
 
     echo "<li><div class=\"form-group\"><FORM name=head_frm id=head_frm action=Side.php?modfunc=update&btnn=$btn&nsc=$ns&act=period method=POST><INPUT type=hidden name=modcat value='' id=modcat_input>";
@@ -537,62 +524,20 @@
 }
 $user_picture = '';
 if (User('PROFILE') != 'parent') {
-    
-    if(User('PROFILE')=='student')
-    {
-    $img_info = DBGet(DBQuery('SELECT * FROM user_file_upload WHERE USER_ID=' . UserStudentID(). ' AND PROFILE_ID=3 AND SCHOOL_ID=' . UserSchool() . ' AND SYEAR=' . UserSyear() . ' AND FILE_INFO=\'stuimg\''));
-    $img_info=$img_info[1]['CONTENT'];
-    }
-    else
-    {
-    $img_info= DBGet(DBQuery('SELECT * FROM staff WHERE STAFF_ID=' .UserID()));
-    $img_info=$img_info[1]['IMG_CONTENT'];
+
+    if (User('PROFILE') == 'student') {
+        $img_info = DBGet(DBQuery('SELECT * FROM user_file_upload WHERE USER_ID=' . UserStudentID() . ' AND PROFILE_ID=3 AND SCHOOL_ID=' . UserSchool() . ' AND SYEAR=' . UserSyear() . ' AND FILE_INFO=\'stuimg\''));
+        $img_info = $img_info[1]['CONTENT'];
+    } else {
+        $img_info = DBGet(DBQuery('SELECT * FROM staff WHERE STAFF_ID=' . UserID()));
+        $img_info = $img_info[1]['IMG_CONTENT'];
     }
-    if($img_info!='')
-      $user_picture = '<a href="javascript:void(0)"><IMG src="data:image/jpeg;base64,'. base64_encode($img_info) . '" class="img-circle img-responsive"></a>';
+    if ($img_info != '')
+        $user_picture = '<a href="javascript:void(0)"><IMG src="data:image/jpeg;base64,' . base64_encode($img_info) . '" class="img-circle img-responsive"></a>';
     else
         $user_picture = '<a href="javascript:void(0)"><IMG SRC="assets/no_avtar.png" class="img-circle img-responsive"></a>';
-   // if (($StudentPicturesPath . UserStudentID() . '.JPG' || ($UserPicturesPath . UserID() . '.JPG'))) {
-   //     if (UserStudentID())
-   //         $picture_path = $StudentPicturesPath . UserStudentID() . '.JPG';
-   //     if (UserID())
-   //         $picture_path = $UserPicturesPath . UserID() . '.JPG';
-   //     if (file_exists($picture_path)) {
-   //         $user_picture = '<a href="javascript:void(0)"><img src="' . $picture_path . '"  alt="" class="img-circle img-responsive"></a>';
-   //     } else {
-   //         $user_picture = '<a href="javascript:void(0)"><IMG SRC="assets/no_avtar.png" class="img-circle img-responsive"></a>';
-   //     }
-   // } else {
-   //     $user_picture = '<a href="javascript:void(0)"><IMG SRC="assets/no_avtar.png" class="img-circle img-responsive"></a>';
-   // }
 }
 
-//$user_picture .= '<input type="file" name=""  />';
-// echo User('PROFILE');
-// if(User('PROFILE') == "Super Administrator")
-// {
-//     $userProfile = _superAdministrator;
-
-// }elseif(User('PROFILE') == "Administrator")
-// {
-//     $userProfile = _administrator;
-    
-// }elseif(User('PROFILE') == "Teacher")
-// {
-//     $userProfile = _teacher;
-    
-// }elseif(User('PROFILE') == "Student")
-// {
-//     $userProfile = _student;
-
-// }elseif(User('PROFILE') == "Parent"){
-//     $userProfile = _parent;
-
-// }elseif(User('PROFILE') == "Admin Asst")
-// {
-//     $userProfile = _adminAsst;
-
-// }
 
 echo '</div>
         </div>
@@ -621,18 +566,18 @@
                                         </div>
 
                                         <div class="sidebar-user-material-menu">
-                                            <a href="#user-nav" data-toggle="collapse"><span>'._myAccount.'</span> <i class="caret"></i></a>
+                                            <a href="#user-nav" data-toggle="collapse"><span>' . _myAccount . '</span> <i class="caret"></i></a>
                                         </div>
                                     </div>
 
                                     <div class="navigation-wrapper collapse" id="user-nav">
                                         <ul class="navigation">
                                 
-                                            <li><a href="javascript:void(0)" onclick="check_content(\'Ajax.php?modname=messaging/Inbox.php\');"><i class="icon-comment-discussion"></i> <span>'._messages.'</span></a></li>';
-if(User('PROFILE')!='student')                                            
-echo'<li><a href="javascript:void(0)" onclick="check_content(\'Ajax.php?modname=users/Preferences.php\');"><i class="icon-equalizer"></i> <span>'._preferences.'</span></a></li>';
+                                            <li><a href="javascript:void(0)" onclick="check_content(\'Ajax.php?modname=messaging/Inbox.php\');"><i class="icon-comment-discussion"></i> <span>' . _messages . '</span></a></li>';
+if (User('PROFILE') != 'student')
+    echo '<li><a href="javascript:void(0)" onclick="check_content(\'Ajax.php?modname=users/Preferences.php\');"><i class="icon-equalizer"></i> <span>' . _preferences . '</span></a></li>';
 
-                                            echo'<li><a href="index.php?modfunc=logout"><i class="icon-switch2"></i> <span>'._logout.'</span></a></li>
+echo '<li><a href="index.php?modfunc=logout"><i class="icon-switch2"></i> <span>' . _logout . '</span></a></li>
                                         </ul>
                                     </div>
                                 </div>
@@ -649,8 +594,6 @@
 $current_mod_url = $_REQUEST['modname'];
 
 $current_menu = $menu[$current_mod][$current_user_profile][$current_mod_url];
-
-
 $menu_icons = array(
     "schoolsetup" => "icon-library2",
     "students" => "icon-man-woman",
@@ -667,7 +610,7 @@
 );
 
 //echo "<li><a href='javascript:void(0)' onmouseup='check_content(\"Ajax.php?modname=miscellaneous/Portal.php\");' onmousedown='document.getElementById(\"header\").innerHTML = \"Home\";document.getElementById(\"cframe\").src = \"Bottom.php?modcat=home\"'><i class=\"icon-home4\"></i><span>" . "Home" . "</span></a></li>";
-echo "<li><a href='#' onmouseup='check_content(\"Ajax.php?modname=miscellaneous/Portal.php\");' onmousedown='document.getElementById(\"header\").innerHTML = \"Home\";document.getElementById(\"cframe\").src = \"Bottom.php?modcat=home\"'><i class=\"icon-home4\"></i><span>" ._home . "</span></a></li>";
+echo "<li><a href='#' onmouseup='check_content(\"Ajax.php?modname=miscellaneous/Portal.php\");' onmousedown='document.getElementById(\"header\").innerHTML = \"Home\";document.getElementById(\"cframe\").src = \"Bottom.php?modcat=home\"'><i class=\"icon-home4\"></i><span>" . _home . "</span></a></li>";
 foreach ($_openSIS['Menu'] as $modcat => $programs) {
     if (count($_openSIS['Menu'][$modcat])) {
         $keys = array_keys($_openSIS['Menu'][$modcat]);
@@ -683,24 +626,24 @@
 
 
         if (User('PROFILE') != 'admin' && $modcat == "schoolsetup") {
-            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>"._schoolInfo."</span></a>";
+            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . _schoolInfo . "</span></a>";
         } elseif (User('PROFILE') != 'admin' && $modcat == "users") {
-            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>"._myInfo."</span></a>";
+            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . _myInfo . "</span></a>";
         } elseif (User('PROFILE') == 'student' && $modcat == "students") {
 
-            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>"._myInfo."</span></a>";
+            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . _myInfo . "</span></a>";
         } elseif (User('PROFILE') == 'student' && $modcat == "scheduling") {
-            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>"._schedule."</span></a>";
+            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . _schedule . "</span></a>";
         } elseif ($modcat == "messaging") {
-            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>"._messaging."</span></a>";
+            echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . _messaging . "</span></a>";
         } else {
 
             if ($modcat == 'eligibility') {
-                echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>"._extracurricular."</span></a>";
+                echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . _extracurricular . "</span></a>";
             } elseif ($modcat == 'schoolsetup')
-                echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>"._schoolSetup."</span></a>";
+                echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . _schoolSetup . "</span></a>";
             else {
-                echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . ucfirst(str_replace('_', ' ', constant('_'.$modcat))) . "</span></a>";
+                echo "<li " . (($current_mod == $modcat) ? 'class="active"' : '') . "><a HREF=javascript:void(0)><i class=\"{$menu_icons[$modcat]}\"></i><span>" . ucfirst(str_replace('_', ' ', constant('_' . $modcat))) . "</span></a>";
             }
         }
 
@@ -739,9 +682,9 @@
                                 if ($modcat == 'tools' && $title != 'Backup Database')
                                     echo "<li  " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=hm HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='document.getElementById(\"header\").innerHTML = \"" . ucwords(constant($modcat)) . " <i class=\"icon-arrow-right5\"></i> " . "$title\"' onmouseup=\"document.getElementById('cframe').src='Bottom.php?modname=" . str_replace('&', '?', $file) . "';\">$title</A>";
                                 if ($modcat != 'tools')
-                                    echo "<li  " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=hm HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='document.getElementById(\"header\").innerHTML = \"" . ($modcat == 'schoolsetup' ? schoolSetup : ucwords(constant($modcat))) . " <i class=\"icon-arrow-right5\"></i> " . "$title\"' onmouseup=\"document.getElementById('cframe').src='Bottom.php?modname=" . str_replace('&', '?', $file) . "';\">$title</A>";
+                                    echo "<li  " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=hm HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='document.getElementById(\"header\").innerHTML = \"" . ($modcat == 'schoolsetup' ? _schoolSetup : ucwords(constant($modcat))) . " <i class=\"icon-arrow-right5\"></i> " . "$title\"' onmouseup=\"document.getElementById('cframe').src='Bottom.php?modname=" . str_replace('&', '?', $file) . "';\">$title</A>";
                             } else
-                                echo "<li  " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=hm HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='$(\"#header\").html(\"" . ($modcat == 'schoolsetup' ? schoolSetup : ucwords(constant($modcat))) . " <i class=icon-arrow-right5></i> " . $title."\");' onmouseup=\"$('#cframe').attr('src','Bottom.php?modname=" . str_replace('&', '?', $file) . "');\">$title</A>";
+                                echo "<li  " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=hm HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='$(\"#header\").html(\"" . ($modcat == 'schoolsetup' ? _schoolSetup : ucwords(str_replace('_', ' ', constant("_" . $modcat)))) . " <i class=icon-arrow-right5></i> " . $title . "\");' onmouseup=\"$('#cframe').attr('src','Bottom.php?modname=" . str_replace('&', '?', $file) . "');\">$title</A>";
                         }
                     }
                 elseif ($keys[$key_index + 1] && !is_numeric($keys[$key_index + 1])) {
@@ -777,24 +720,19 @@
                             //                                            
                             if ($modcat != 'tools') {
 
-                                echo "<li " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=dd HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='document.getElementById(\"header\").innerHTML = \"" . ($modcat == 'schoolsetup' ? schoolSetup : ucwords(constant($modcat))) . " <i class=\"icon-arrow-right5\"></i> " . "$title\"' onmouseup=\"document.getElementById('cframe').src='Bottom.php?modname=" . $file . "';\">$title</A>";
+                                echo "<li " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=dd HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='document.getElementById(\"header\").innerHTML = \"" . ($modcat == 'schoolsetup' ? _schoolSetup : ucwords(constant($modcat))) . " <i class=\"icon-arrow-right5\"></i> " . "$title\"' onmouseup=\"document.getElementById('cframe').src='Bottom.php?modname=" . $file . "';\">$title</A>";
                             }
                         } else
-                            echo "<li " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=dd HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='document.getElementById(\"header\").innerHTML = \"" . ($modcat == 'schoolsetup' ? schoolSetup : ucwords(constant($modcat))) . " <i class=\"icon-arrow-right5\"></i> " . "$title\"' onmouseup=\"document.getElementById('cframe').src='Bottom.php?modname=" . $file . "';\">$title</A>";
+                            echo "<li " . (($current_menu == $title) ? 'class="current-submenu"' : '') . "><A id=dd HREF=javascript:void(0) onClick='check_content(\"Ajax.php?modname=" . $file . " \");'  onmousedown='document.getElementById(\"header\").innerHTML = \"" . ($modcat == 'schoolsetup' ? _schoolSetup : ucwords(constant($modcat))) . " <i class=\"icon-arrow-right5\"></i> " . "$title\"' onmouseup=\"document.getElementById('cframe').src='Bottom.php?modname=" . $file . "';\">$title</A>";
                     }
-                }
-                elseif ($keys[$key_index + 1] && !is_numeric($keys[$key_index + 1])) {
+                } elseif ($keys[$key_index + 1] && !is_numeric($keys[$key_index + 1])) {
                     $mm = $mm + 1;
                     echo '</ul></li><li><a href="javascript:void(0)">' . $title . '</a><ul>';
                     $child2 = 1;
                     if ($child == 1) {
                         $child = 0;
                     }
                 }
-
-                /* echo '<script type="text/javascript">
-                  createmenu("mm_' . $modcat . '_' . $menumm . '", "menu_child_' . $modcat . '_' . $menumm . '", "hover", "y", "pointer");
-                  </script>'; */
             }
             echo '</li>';
         }
@@ -844,46 +782,46 @@
     $admin_COMMON_WHERE = " WHERE s.STUDENT_ID=ssm.STUDENT_ID  AND a.STUDENT_ID=s.STUDENT_ID AND a.TYPE='Home Address' AND ssm.SYEAR=" . UserSyear() . " AND ssm.SCHOOL_ID=" . UserSchool() . " ";
 
     if (optional_param('mp_comment', '', PARAM_NOTAGS) || $_SESSION['smc']) {
-        $admin_COMMON_FROM .=" ,student_mp_comments smc";
-        $admin_COMMON_WHERE .=" AND smc.STUDENT_ID=s.STUDENT_ID ";
+        $admin_COMMON_FROM .= " ,student_mp_comments smc";
+        $admin_COMMON_WHERE .= " AND smc.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['smc'] = '1';
     }
 
     if (optional_param('goal_description', '', PARAM_NOTAGS) || optional_param('goal_title', '', PARAM_NOTAGS) || $_SESSION['g']) {
-        $admin_COMMON_FROM .=" ,student_goal g ";
-        $admin_COMMON_WHERE .=" AND g.STUDENT_ID=s.STUDENT_ID ";
+        $admin_COMMON_FROM .= " ,student_goal g ";
+        $admin_COMMON_WHERE .= " AND g.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['g'] = '1';
     }
 
     if (optional_param('progress_name', '', PARAM_NOTAGS) || optional_param('progress_description', '', PARAM_NOTAGS) || $_SESSION['p']) {
-        $admin_COMMON_FROM .=" ,student_goal_progress p ";
-        $admin_COMMON_WHERE .=" AND p.STUDENT_ID=s.STUDENT_ID ";
+        $admin_COMMON_FROM .= " ,student_goal_progress p ";
+        $admin_COMMON_WHERE .= " AND p.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['p'] = '1';
     }
 
     if (optional_param('doctors_note_comments', '', PARAM_NOTAGS) || optional_param('med_day', '', PARAM_NOTAGS) || optional_param('med_month', '', PARAM_NOTAGS) || optional_param('med_year', '', PARAM_NOTAGS) || $_SESSION['smn']) {
-        $admin_COMMON_FROM .=" ,student_medical_notes smn ";
-        $admin_COMMON_WHERE .=" AND smn.STUDENT_ID=s.STUDENT_ID ";
+        $admin_COMMON_FROM .= " ,student_medical_notes smn ";
+        $admin_COMMON_WHERE .= " AND smn.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['smn'] = '1';
     }
 
     if (optional_param('type', '', PARAM_NOTAGS) || optional_param('imm_comments', '', PARAM_NOTAGS) || optional_param('imm_day', '', PARAM_NOTAGS) || optional_param('imm_month', '', PARAM_NOTAGS) || optional_param('imm_year', '', PARAM_NOTAGS) || $_SESSION['sm']) {
 
-        $admin_COMMON_FROM .=" ,student_immunization sm ";
-        $admin_COMMON_WHERE .=" AND sm.STUDENT_ID=s.STUDENT_ID ";
+        $admin_COMMON_FROM .= " ,student_immunization sm ";
+        $admin_COMMON_WHERE .= " AND sm.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['sm'] = '1';
     }
 
 
     if (optional_param('ma_day', '', PARAM_NOTAGS) || optional_param('ma_month', '', PARAM_NOTAGS) || optional_param('ma_year', '', PARAM_NOTAGS) || optional_param('med_alrt_title', '', PARAM_NOTAGS) || $_SESSION['sma']) {
-        $admin_COMMON_FROM .=" ,student_medical_alerts sma  ";
-        $admin_COMMON_WHERE .=" AND sma.STUDENT_ID=s.STUDENT_ID ";
+        $admin_COMMON_FROM .= " ,student_medical_alerts sma  ";
+        $admin_COMMON_WHERE .= " AND sma.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['sma'] = '1';
     }
 
     if (optional_param('nv_day', '', PARAM_NOTAGS) || optional_param('nv_month', '', PARAM_NOTAGS) || optional_param('nv_year', '', PARAM_NOTAGS) || optional_param('reason', '', PARAM_NOTAGS) || optional_param('result', '', PARAM_NOTAGS) || optional_param('med_vist_comments', '', PARAM_NOTAGS) || $_SESSION['smv']) {
-        $admin_COMMON_FROM .=" ,student_medical_visits smv   ";
-        $admin_COMMON_WHERE .=" AND smv.STUDENT_ID=s.STUDENT_ID ";
+        $admin_COMMON_FROM .= " ,student_medical_visits smv   ";
+        $admin_COMMON_WHERE .= " AND smv.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['smv'] = '1';
     }
     $admin_COMMON = $admin_COMMON_FROM . $admin_COMMON_WHERE;
@@ -898,45 +836,45 @@
 
 
     if (optional_param('mp_comment', '', PARAM_SPCL) || $_SESSION['smc']) {
-        $teacher_COMMON_FROM .=" ,student_mp_comments smc";
-        $teacher_COMMON_WHERE .=" AND smc.STUDENT_ID=s.STUDENT_ID ";
+        $teacher_COMMON_FROM .= " ,student_mp_comments smc";
+        $teacher_COMMON_WHERE .= " AND smc.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['smc'] = '1';
     }
 
     if (optional_param('goal_description', '', PARAM_SPCL) || optional_param('goal_title', '', PARAM_SPCL) || $_SESSION['g']) {
-        $teacher_COMMON_FROM .=" ,student_goal g ";
-        $teacher_COMMON_WHERE .=" AND g.STUDENT_ID=s.STUDENT_ID ";
+        $teacher_COMMON_FROM .= " ,student_goal g ";
+        $teacher_COMMON_WHERE .= " AND g.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['g'] = '1';
     }
 
     if (optional_param('progress_name', '', PARAM_NOTAGS) || optional_param('progress_description', '', PARAM_NOTAGS) || $_SESSION['p']) {
-        $teacher_COMMON_FROM .=" ,student_goal_progress p ";
-        $teacher_COMMON_WHERE .=" AND p.STUDENT_ID=s.STUDENT_ID ";
+        $teacher_COMMON_FROM .= " ,student_goal_progress p ";
+        $teacher_COMMON_WHERE .= " AND p.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['p'] = '1';
     }
 
     if (optional_param('doctors_note_comments', '', PARAM_NOTAGS) || optional_param('med_day', '', PARAM_NOTAGS) || optional_param('med_month', '', PARAM_NOTAGS) || optional_param('med_year', '', PARAM_NOTAGS) || $_SESSION['smn']) {
-        $teacher_COMMON_FROM .=" ,student_medical_notes smn ";
-        $teacher_COMMON_WHERE .=" AND smn.STUDENT_ID=s.STUDENT_ID ";
+        $teacher_COMMON_FROM .= " ,student_medical_notes smn ";
+        $teacher_COMMON_WHERE .= " AND smn.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['smn'] = '1';
     }
 
     if (optional_param('type', '', PARAM_NOTAGS) || optional_param('imm_comments', '', PARAM_NOTAGS) || optional_param('imm_day', '', PARAM_NOTAGS) || optional_param('imm_month', '', PARAM_NOTAGS) || optional_param('imm_year', '', PARAM_NOTAGS) || $_SESSION['sm']) {
 
-        $teacher_COMMON_FROM .=" ,student_immunization sm ";
-        $teacher_COMMON_WHERE .=" AND sm.STUDENT_ID=s.STUDENT_ID ";
+        $teacher_COMMON_FROM .= " ,student_immunization sm ";
+        $teacher_COMMON_WHERE .= " AND sm.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['sm'] = '1';
     }
 
     if (optional_param('ma_day', '', PARAM_NOTAGS) || optional_param('ma_month', '', PARAM_NOTAGS) || optional_param('ma_year', '', PARAM_NOTAGS) || optional_param('med_alrt_title', '', PARAM_NOTAGS) || $_SESSION['sma']) {
-        $teacher_COMMON_FROM .=" ,student_medical_alerts sma  ";
-        $teacher_COMMON_WHERE .=" AND sma.STUDENT_ID=s.STUDENT_ID ";
+        $teacher_COMMON_FROM .= " ,student_medical_alerts sma  ";
+        $teacher_COMMON_WHERE .= " AND sma.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['sma'] = '1';
     }
 
     if (optional_param('nv_day', '', PARAM_NOTAGS) || optional_param('nv_month', '', PARAM_NOTAGS) || optional_param('nv_year', '', PARAM_NOTAGS) || optional_param('reason', '', PARAM_NOTAGS) || optional_param('result', '', PARAM_NOTAGS) || optional_param('med_vist_comments', '', PARAM_NOTAGS) || $_SESSION['smv']) {
-        $teacher_COMMON_FROM .=" ,student_medical_visits smv   ";
-        $teacher_COMMON_WHERE .=" AND smv.STUDENT_ID=s.STUDENT_ID ";
+        $teacher_COMMON_FROM .= " ,student_medical_visits smv   ";
+        $teacher_COMMON_WHERE .= " AND smv.STUDENT_ID=s.STUDENT_ID ";
         $_SESSION['smv'] = '1';
     }
     $teacher_COMMON = $teacher_COMMON_FROM . $teacher_COMMON_WHERE;
@@ -1000,29 +938,26 @@
             }
         }
     }
-    
+
 
     ##### REMOVE FILES FROM ROOT - START #####
 
     $check_backups = DBGet(DBQuery("SELECT * FROM `program_config` WHERE `program` = 'DB_BACKUP'"));
 
-    if(!empty($check_backups))
-    {
-        foreach($check_backups as $each_backups)
-        {
-            $filename = $each_backups['TITLE'].'.sql';
+    if (!empty($check_backups)) {
+        foreach ($check_backups as $each_backups) {
+            $filename = $each_backups['TITLE'] . '.sql';
 
-            if(file_exists($filename))
-            {
+            if (file_exists($filename)) {
                 unlink($filename);
 
-                DBQuery("DELETE FROM `program_config` WHERE `program` = 'DB_BACKUP' AND `value` = '".$each_backups['VALUE']."'");
+                DBQuery("DELETE FROM `program_config` WHERE `program` = 'DB_BACKUP' AND `value` = '" . $each_backups['VALUE'] . "'");
             }
         }
     }
 
     ##### REMOVE FILES FROM ROOT - END #####
-    
+
 
     if (optional_param('modname', '', PARAM_NOTAGS) == 'users/TeacherPrograms.php?include=attendance/TakeAttendance.php')
         $allowed = true;
@@ -1053,10 +988,9 @@
 
         if (preg_match('/\.\./', $modname) !== 1)
             include 'modules/' . $modname;
-    }
-    else {
+    } else {
         if (User('USERNAME')) {
-            echo ""._youReNotAllowedToUseThisProgram."! "._thisAttemptedViolationHasBeenLoggedAndYourIpAddressWasCaptured.".";
+            echo "" . _youReNotAllowedToUseThisProgram . "! " . _thisAttemptedViolationHasBeenLoggedAndYourIpAddressWasCaptured . ".";
             Warehouse('footer');
 
             if ($_SERVER['HTTP_X_FORWARDED_FOR']) {
@@ -1136,12 +1070,12 @@
                 <div class="row">
                     <div class="col-md-9">
                         <div class="navbar-text">
-                            '._footerText.'
+                            ' . _footerText . '
                         </div>
                     </div>
                     <div class="col-md-3">
                         <div class="version-info">
-                            Version <b>' . $get_app_details[1][VALUE] . '</b>
+                            Version <b>' . $get_app_details[1]['VALUE'] . '</b>
                         </div>
                     </div>
                 </div>
@@ -1151,4 +1085,3 @@
 
 echo "</body>";
 echo "</html>";
-?>

--- NamesList.php ---
@@ -27,10 +27,10 @@
 #
 #***************************************************************************************
 error_reporting(0);
+
 include("Data.php");
 include("Warehouse.php");
-
-$keyword = sqlSecurityFilter($_REQUEST['str']);
+$keyword = $_REQUEST['str'];
 $block_id = $_REQUEST['block_id'];
 if (User('PROFILE') == 'student')
     $user_id = UserStudentID();

--- ParentLookup.php ---
@@ -1,6 +1,6 @@
 <?php
 include('RedirectRootInc.php');
-include'ConfigInc.php';
+include 'ConfigInc.php';
 include 'Warehouse.php';
 /* 
  * To change this license header, choose License Headers in Project Properties.
@@ -20,76 +20,70 @@
 //echo $_REQUEST['USERINFO_FIRST_NAME'];
 //echo '<br>';
 //echo  $_REQUEST['USERINFO_LAST_NAME'];
-if ($_REQUEST['USERINFO_FIRST_NAME'] || $_REQUEST['USERINFO_LAST_NAME'] || $_REQUEST['USERINFO_EMAIL'] || $_REQUEST['USERINFO_MOBILE'] || $_REQUEST['USERINFO_SADD'] || $_REQUEST['USERINFO_CITY'] || $_REQUEST['USERINFO_STATE'] || $_REQUEST['USERINFO_ZIP'])
-{
+if ($_REQUEST['USERINFO_FIRST_NAME'] || $_REQUEST['USERINFO_LAST_NAME'] || $_REQUEST['USERINFO_EMAIL'] || $_REQUEST['USERINFO_MOBILE'] || $_REQUEST['USERINFO_SADD'] || $_REQUEST['USERINFO_CITY'] || $_REQUEST['USERINFO_STATE'] || $_REQUEST['USERINFO_ZIP']) {
     $stf_ids = '';
-    
+
     $sql = 'SELECT distinct stf.STAFF_ID AS BUTTON , stf.STAFF_ID,CONCAT(stf.FIRST_NAME," ",stf.LAST_NAME) AS FULLNAME, CONCAT(s.FIRST_NAME," ",s.LAST_NAME) AS STUFULLNAME,stf.PROFILE,stf.EMAIL FROM people stf';
     $sql_where = 'WHERE stf.PROFILE_ID=4 AND s.STUDENT_ID!=' . UserStudentID() . ' ';
-    
-    if ($_REQUEST['USERINFO_FIRST_NAME'] || $_REQUEST['USERINFO_LAST_NAME'] || $_REQUEST['USERINFO_EMAIL'] || $_REQUEST['USERINFO_MOBILE'])
-    {
-        if ($_REQUEST['USERINFO_FIRST_NAME']!='')
-            $sql_where.= 'AND LOWER(stf.FIRST_NAME) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_FIRST_NAME']))) . '%\' ';
-        if ($_REQUEST['USERINFO_LAST_NAME']!='')
-            $sql_where.= 'AND LOWER(stf.LAST_NAME) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_LAST_NAME']))) . '%\' ';
-        if ($_REQUEST['USERINFO_EMAIL']!='')
-            $sql_where.= 'AND LOWER(stf.EMAIL) = \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_EMAIL']))) . '\' ';
-        if ($_REQUEST['USERINFO_MOBILE']!='')
-            $sql_where.= 'AND stf.CELL_PHONE = \'' . str_replace("'", "''", trim($_REQUEST['USERINFO_MOBILE'])) . '\' ';
+
+    if ($_REQUEST['USERINFO_FIRST_NAME'] || $_REQUEST['USERINFO_LAST_NAME'] || $_REQUEST['USERINFO_EMAIL'] || $_REQUEST['USERINFO_MOBILE']) {
+        if ($_REQUEST['USERINFO_FIRST_NAME'] != '')
+            $sql_where .= 'AND LOWER(stf.FIRST_NAME) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_FIRST_NAME']))) . '%\' ';
+        if ($_REQUEST['USERINFO_LAST_NAME'] != '')
+            $sql_where .= 'AND LOWER(stf.LAST_NAME) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_LAST_NAME']))) . '%\' ';
+        if ($_REQUEST['USERINFO_EMAIL'] != '')
+            $sql_where .= 'AND LOWER(stf.EMAIL) = \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_EMAIL']))) . '\' ';
+        if ($_REQUEST['USERINFO_MOBILE'] != '')
+            $sql_where .= 'AND stf.CELL_PHONE = \'' . str_replace("'", "''", trim($_REQUEST['USERINFO_MOBILE'])) . '\' ';
     }
 
 
-    if ($_REQUEST['USERINFO_SADD'] || $_REQUEST['USERINFO_CITY'] || $_REQUEST['USERINFO_STATE'] || $_REQUEST['USERINFO_ZIP'])
-    {
-        $sql.=' LEFT OUTER JOIN student_address sa on sa.PEOPLE_ID=stf.STAFF_ID';
-        $sql_where.='  AND sa.TYPE IN (\'Primary\',\'Secondary\',\'Other\') ';
-        if ($_REQUEST['USERINFO_SADD']!='')
-            $sql_where.= ' AND LOWER(STREET_ADDRESS_1) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_SADD']))) . '%\' ';
-        if ($_REQUEST['USERINFO_CITY']!='')
-            $sql_where.= ' AND LOWER(CITY) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_CITY']))) . '%\' ';
-        if ($_REQUEST['USERINFO_STATE']!='')
-            $sql_where.= ' AND LOWER(STATE) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_STATE']))) . '%\' ';
-        if ($_REQUEST['USERINFO_ZIP']!='')
-            $sql_where.= ' AND ZIPCODE = \'' . str_replace("'", "''", trim($_REQUEST['USERINFO_ZIP'])) . '\' ';
+    if ($_REQUEST['USERINFO_SADD'] || $_REQUEST['USERINFO_CITY'] || $_REQUEST['USERINFO_STATE'] || $_REQUEST['USERINFO_ZIP']) {
+        $sql .= ' LEFT OUTER JOIN student_address sa on sa.PEOPLE_ID=stf.STAFF_ID';
+        $sql_where .= '  AND sa.TYPE IN (\'Primary\',\'Secondary\',\'Other\') ';
+        if ($_REQUEST['USERINFO_SADD'] != '')
+            $sql_where .= ' AND LOWER(STREET_ADDRESS_1) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_SADD']))) . '%\' ';
+        if ($_REQUEST['USERINFO_CITY'] != '')
+            $sql_where .= ' AND LOWER(CITY) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_CITY']))) . '%\' ';
+        if ($_REQUEST['USERINFO_STATE'] != '')
+            $sql_where .= ' AND LOWER(STATE) LIKE \'' . str_replace("'", "''", strtolower(trim($_REQUEST['USERINFO_STATE']))) . '%\' ';
+        if ($_REQUEST['USERINFO_ZIP'] != '')
+            $sql_where .= ' AND ZIPCODE = \'' . str_replace("'", "''", trim($_REQUEST['USERINFO_ZIP'])) . '\' ';
     }
 
-    $sql.=' Left outer join students_join_people sju on stf.STAFF_ID=sju.PERSON_ID Left outer join students s on s.STUDENT_ID = sju.STUDENT_ID  ';
-    $sql_where.= '  AND LOWER(stf.FIRST_NAME)<>\'\' AND LOWER(stf.LAST_NAME)<>\'\' AND sju.PERSON_ID NOT IN (SELECT PERSON_ID FROM students_join_people WHERE STUDENT_ID=' . UserStudentID() . ') GROUP BY sju.PERSON_ID';
+    $sql .= ' Left outer join students_join_people sju on stf.STAFF_ID=sju.PERSON_ID Left outer join students s on s.STUDENT_ID = sju.STUDENT_ID  ';
+    $sql_where .= '  AND LOWER(stf.FIRST_NAME)<>\'\' AND LOWER(stf.LAST_NAME)<>\'\' AND sju.PERSON_ID NOT IN (SELECT PERSON_ID FROM students_join_people WHERE STUDENT_ID=' . UserStudentID() . ') GROUP BY sju.PERSON_ID';
 
     $searched_staffs = DBGet(DBQuery($sql . $sql_where), array('BUTTON' => 'makeChooseCheckbox'));
-    
-    foreach ($searched_staffs as $key => $value)
-    {
+
+    foreach ($searched_staffs as $key => $value) {
         $stf_usrname = DBGet(DBQuery('SELECT USERNAME FROM login_authentication WHERE USER_ID=' . $value['STAFF_ID'] . ' AND PROFILE_ID=4'));
         $searched_staffs[$key]['USERNAME'] = $stf_usrname[1]['USERNAME'];
     }
-}
-else
-{
+} else {
     $sql = 'SELECT stf.STAFF_ID AS BUTTON , stf.STAFF_ID,CONCAT(stf.FIRST_NAME," ",stf.LAST_NAME) AS FULLNAME, CONCAT(s.FIRST_NAME," ",s.LAST_NAME) AS STUFULLNAME,stf.PROFILE,stf.EMAIL FROM people stf left outer join students_join_people sju on stf.STAFF_ID=sju.PERSON_ID left outer join students s on s.STUDENT_ID = sju.STUDENT_ID  WHERE  s.STUDENT_ID!=' . UserStudentID() . '  AND stf.FIRST_NAME<>\'\' AND stf.LAST_NAME<>\'\' AND sju.PERSON_ID NOT IN (SELECT PERSON_ID FROM students_join_people WHERE STUDENT_ID=' . UserStudentID() . ') Group by stf.STAFF_ID';
 
     $searched_staffs = DBGet(DBQuery($sql), array('BUTTON' => 'makeChooseCheckbox'));
 
-    foreach ($searched_staffs as $key => $value)
-    {
+    foreach ($searched_staffs as $key => $value) {
         $stf_usrname = DBGet(DBQuery('SELECT USERNAME FROM login_authentication WHERE USER_ID=' . $value['STAFF_ID'] . ' AND PROFILE_ID=4'));
-        
+
         $searched_staffs[$key]['USERNAME'] = $stf_usrname[1]['USERNAME'];
     }
 }
-                
+
 $singular = _user;
 $plural = _users;
 $options['save'] = false;
 $options['print'] = false;
 $options['search'] = false;
 
-$columns = array('BUTTON' =>_selectAnyOne,
- 'FULLNAME' =>_name,
- 'USERNAME' =>_username,
- 'EMAIL' =>_email,
- 'STUFULLNAME' =>_associatedStudentSName,
+$columns = array(
+    'BUTTON' => _selectAnyOne,
+    'FULLNAME' => _name,
+    'USERNAME' => _username,
+    'EMAIL' => _email,
+    'STUFULLNAME' => _associatedStudentSName,
 );
 
 // echo "<pre>";
@@ -98,10 +92,10 @@
 
 
 if ($_REQUEST['add_id'] == 'new')
-    echo '<FORM name=sel_staff id=sel_staff action="ForWindow.php?modname=' . $_REQUEST[modname] . '&modfunc=lookup&type=' . $_REQUEST['type'] . '&func=search&nfunc=status&ajax=' . $_REQUEST['ajax'] . '&add_id=new&address_id=' . $_REQUEST['address_id'] . '" METHOD=POST>';
+    echo '<FORM name=sel_staff id=sel_staff action="ForWindow.php?modname=' . $_REQUEST['modname'] . '&modfunc=lookup&type=' . $_REQUEST['type'] . '&func=search&nfunc=status&ajax=' . $_REQUEST['ajax'] . '&add_id=new&address_id=' . $_REQUEST['address_id'] . '" METHOD=POST>';
 else
-    echo '<FORM name=sel_staff id=sel_staff action="ForWindow.php?modname=' . $_REQUEST[modname] . '&modfunc=lookup&type=' . $_REQUEST['type'] . '&func=search&nfunc=status&ajax=' . $_REQUEST['ajax'] . '&add_id=' . $_REQUEST['add_id'] . '&address_id=' . $_REQUEST['address_id'] . '" METHOD=POST>';
-                
+    echo '<FORM name=sel_staff id=sel_staff action="ForWindow.php?modname=' . $_REQUEST['modname'] . '&modfunc=lookup&type=' . $_REQUEST['type'] . '&func=search&nfunc=status&ajax=' . $_REQUEST['ajax'] . '&add_id=' . $_REQUEST['add_id'] . '&address_id=' . $_REQUEST['address_id'] . '" METHOD=POST>';
+
 echo '<span id="sel_err" class="text-danger"></span>';
 
 ListOutput($searched_staffs, $columns, $singular, $plural, false, $group = false, $options, 'ForWindow');
@@ -111,15 +105,14 @@
 // print_r($searched_staffs);
 // echo die();
 
-if(!empty($searched_staffs))
-echo '<div id="select-people-div"><br><input type="button" class="btn btn-primary" value="Select" name="button" onclick="SelectedParent(\''.$_REQUEST['address_id'].'\',\''.$_REQUEST['p_type'].'\',\''.$_REQUEST['other_p_erson_id'].'\')"></div>';
+if (!empty($searched_staffs))
+    echo '<div id="select-people-div"><br><input type="button" class="btn btn-primary" value="Select" name="button" onclick="SelectedParent(\'' . $_REQUEST['address_id'] . '\',\'' . $_REQUEST['p_type'] . '\',\'' . $_REQUEST['other_p_erson_id'] . '\')"></div>';
 
 function makeChooseCheckbox($value, $title)
 {
     global $THIS_RET;
 
-    if ($THIS_RET['BUTTON'])
-    {
+    if ($THIS_RET['BUTTON']) {
         return "<INPUT type=radio name=staff value=" . $THIS_RET['BUTTON'] . ">";
     }
-}
\ No newline at end of file
+}

--- PrepareDataTable.php ---
@@ -28,6 +28,7 @@
 #***************************************************************************************
 
 error_reporting(0);
+
 include 'Warehouse.php';
 include('lang/language.php');
 session_start();
@@ -103,8 +104,8 @@
     echo "<script>\n";
     echo 'var res_length = document.getElementById(\'res_len\');
         if(res_length) { res_length.value=\'\'; res_length.value=\''.$res_len_set.'\'; }
-        var div_selected_cbx = document.getElementById(\'hidden_checkboxes\');
-        if(div_selected_cbx) { div_selected_cbx.innerHTML = \'\'; }
+        /* var div_selected_cbx = document.getElementById(\'hidden_checkboxes\');
+        if(div_selected_cbx) { div_selected_cbx.innerHTML = \'\'; } */
     ';
     echo "</script>\n";
 
@@ -121,29 +122,25 @@
 function _makeChooseCheckbox($value, $title) {
     global $THIS_RET;
     
-    if($_SESSION['PEGI_MODS']['modname'] == 'grades/ReportCards.php' || $_SESSION['PEGI_MODS']['modname'] == 'scheduling/PrintSchedules.php' || $_SESSION['PEGI_MODS']['modname'] == 'grades/FinalGrades.php' || $_SESSION['PEGI_MODS']['modname'] == 'users/TeacherPrograms.php?include=grades/ProgressReports.php' || $_SESSION['PEGI_MODS']['modname'] == 'grades/ProgressReports.php')
-    {
+    switch ($_SESSION['PEGI_MODS']['modname']) {
+        case 'scheduling/PrintSchedules.php':
+        case 'grades/FinalGrades.php':
+        case 'users/TeacherPrograms.php?include=grades/ProgressReports.php':
+        case 'grades/ProgressReports.php':
         return '<INPUT type=checkbox name=st_arr[] value=' . $value . '>';
-    }
-    else if($_SESSION['PEGI_MODS']['modname'] == 'attendance/AddAbsences.php' || $_SESSION['PEGI_MODS']['modname'] == 'eligibility/AddActivity.php' || $_SESSION['PEGI_MODS']['modname'] == 'scheduling/MassDrops.php')
-    {
-        return "<INPUT type=checkbox name=student[" . $THIS_RET['STUDENT_ID'] . "] value=Y>";
-    }
-    else if($_SESSION['PEGI_MODS']['modname'] == 'scheduling/MassSchedule.php' || $_SESSION['PEGI_MODS']['modname'] == 'grades/Transcripts.php')
-    {
-        return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"student[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID]);' />";
-    }
-    else if($_SESSION['PEGI_MODS']['modname'] == 'scheduling/MassRequests.php')
-    {
-        return "<INPUT type=checkbox name=unused[" . $THIS_RET['STUDENT_ID'] . "] value=Y id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"student[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID]);'>";
-    }
-    else if($_SESSION['PEGI_MODS']['modname'] == 'students/AssignOtherInfo.php')
-    {
-        return "<INPUT type=checkbox name=student[" . $THIS_RET['STUDENT_ID'] . "] value=Y id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);'>";
-    }
-    else
-    {
-        return "<input  class='student_label_cbx' name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
+    
+        case 'scheduling/MassDrops.php':
+            case 'scheduling/MassRequests.php':
+            case 'attendance/AddAbsences.php':
+            case 'eligibility/AddActivity.php':
+            case 'students/AssignOtherInfo.php':
+                return "<input name=unused[$THIS_RET[STUDENT_ID]] value=$THIS_RET[STUDENT_ID]  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"student[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID], \"Y\");' />";
+    
+            case 'scheduling/MassSchedule.php':
+                return "<input name=unused[$THIS_RET[STUDENT_ID]] value=$THIS_RET[STUDENT_ID]  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"student[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID]);' />";
+            
+            default:
+        return "<input  class='student_label_cbx' name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET['STUDENT_ID'] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
     }
 }
 
@@ -158,4 +155,12 @@ function _makeStateValue($value) {
         return 'Full-Day';
 }
 
+// function _make_sections($value) {
+//     if ($value != '') {
+//         $get = DBGet(DBQuery('SELECT NAME FROM school_gradelevel_sections WHERE ID=' . $value));
+//         return $get[1]['NAME'];
+//     } else
+//         return '';
+// }
+
 ?>
\ No newline at end of file

--- RecalCulateProcess.php ---
@@ -26,82 +26,75 @@
 #
 #***************************************************************************************
 error_reporting(0);
+
 include('RedirectRootInc.php');
 include 'Warehouse.php';
 include 'Data.php';
-    DBQuery('Create Table TEMP_SRCG AS SELECT * FROM student_report_card_grades  WHERE SYEAR=\''.UserSyear().'\'  AND COURSE_PERIOD_ID IS NOT NULL AND STUDENT_ID IN (\''.$_REQUEST['students'].'\') AND MARKING_PERIOD_ID=\''.$_REQUEST['mp'].'\'');
-    DBQuery('DELETE FROM student_report_card_grades WHERE SYEAR=\''.UserSyear().'\'  AND COURSE_PERIOD_ID IS NOT NULL AND STUDENT_ID IN (\''.$_REQUEST['students'].'\') AND MARKING_PERIOD_ID=\''.$_REQUEST['mp'].'\'');
-    DBQuery('INSERT INTO `student_report_card_grades`(`syear`, `school_id`, `student_id`, `course_period_id`, `report_card_grade_id`, `report_card_comment_id`, `comment`, `grade_percent`, `marking_period_id`, `grade_letter`, `weighted_gp`, `unweighted_gp`, `gp_scale`,`gpa_cal`, `credit_attempted`, `credit_earned`, `credit_category`,`course_code`, `course_title`, `id`) SELECT `syear`, `school_id`, `student_id`, `course_period_id`, `report_card_grade_id`, `report_card_comment_id`, `comment`, `grade_percent`, `marking_period_id`, `grade_letter`, `weighted_gp`, `unweighted_gp`, `gp_scale`,`gpa_cal`, `credit_attempted`, `credit_earned`, `credit_category`, `course_code`,`course_title`, `id` FROM TEMP_SRCG ');
-    DBQuery('DROP TABLE TEMP_SRCG');
-	$students_RET = DBGet(DBQuery('SELECT STUDENT_ID,MARKING_PERIOD_ID FROM student_report_card_grades WHERE SYEAR=\''.UserSyear().'\' AND SCHOOL_ID=\''.UserSchool().'\' AND COURSE_PERIOD_ID IS NULL GROUP BY MARKING_PERIOD_ID'));
-        foreach($students_RET as $stu_key=>$stu_val)
-        {
-    $res=  DBGet(DBQuery( 'SELECT
+DBQuery('Create Table TEMP_SRCG AS SELECT * FROM student_report_card_grades  WHERE SYEAR=\'' . UserSyear() . '\'  AND COURSE_PERIOD_ID IS NOT NULL AND STUDENT_ID IN (\'' . $_REQUEST['students'] . '\') AND MARKING_PERIOD_ID=\'' . $_REQUEST['mp'] . '\'');
+DBQuery('DELETE FROM student_report_card_grades WHERE SYEAR=\'' . UserSyear() . '\'  AND COURSE_PERIOD_ID IS NOT NULL AND STUDENT_ID IN (\'' . $_REQUEST['students'] . '\') AND MARKING_PERIOD_ID=\'' . $_REQUEST['mp'] . '\'');
+DBQuery('INSERT INTO `student_report_card_grades`(`syear`, `school_id`, `student_id`, `course_period_id`, `report_card_grade_id`, `report_card_comment_id`, `comment`, `grade_percent`, `marking_period_id`, `grade_letter`, `weighted_gp`, `unweighted_gp`, `gp_scale`,`gpa_cal`, `credit_attempted`, `credit_earned`, `credit_category`,`course_code`, `course_title`, `id`) SELECT `syear`, `school_id`, `student_id`, `course_period_id`, `report_card_grade_id`, `report_card_comment_id`, `comment`, `grade_percent`, `marking_period_id`, `grade_letter`, `weighted_gp`, `unweighted_gp`, `gp_scale`,`gpa_cal`, `credit_attempted`, `credit_earned`, `credit_category`, `course_code`,`course_title`, `id` FROM TEMP_SRCG ');
+DBQuery('DROP TABLE TEMP_SRCG');
+$students_RET = DBGet(DBQuery('SELECT STUDENT_ID,MARKING_PERIOD_ID FROM student_report_card_grades WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND COURSE_PERIOD_ID IS NULL GROUP BY MARKING_PERIOD_ID'));
+foreach ($students_RET as $stu_key => $stu_val) {
+  $res =  DBGet(DBQuery('SELECT
     SUM(srcg.weighted_gp/s.reporting_gp_scale) AS sum_weighted_factors,  COUNT(*) AS count_weighted_factors,                        
     SUM(srcg.unweighted_gp/srcg.gp_scale) AS sum_unweighted_factors, 
     COUNT(*) AS count_unweighted_factors,
-   IF(ISNULL( sum(srcg.unweighted_gp) ),  (select SUM(sg.weighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\')/ (select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\'),
-                      IF(ISNULL( sum(srcg.weighted_gp) ), (select SUM(sg.unweighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\')/(select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\'),
-                         ( (select SUM(sg.unweighted_gp*sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\')+ (select SUM(sg.weighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\'))/(select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\')
+   IF(ISNULL( sum(srcg.unweighted_gp) ),  (select SUM(sg.weighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\')/ (select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\'),
+                      IF(ISNULL( sum(srcg.weighted_gp) ), (select SUM(sg.unweighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\')/(select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\'),
+                         ( (select SUM(sg.unweighted_gp*sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\')+ (select SUM(sg.weighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\'))/(select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\')
                         )
       ) AS gpa,
     
-   (select SUM(sg.weighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\')/(select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' 
+   (select SUM(sg.weighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\')/(select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' 
                                                    AND sg.gpa_cal=\'Y\' AND sg.weighted_gp  IS NOT NULL  AND sg.unweighted_gp IS NULL GROUP BY sg.student_id, sg.marking_period_id) AS weighted_gpa,
-    (select SUM(sg.unweighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND sg.gpa_cal=\'Y\')/ (select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND sg.student_id=\''.$stu_val['STUDENT_ID'].'\'
+    (select SUM(sg.unweighted_gp*sg.credit_earned) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND sg.gpa_cal=\'Y\')/ (select sum(sg.credit_attempted) from student_report_card_grades sg where sg.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND sg.student_id=\'' . $stu_val['STUDENT_ID'] . '\'
                                                      AND sg.gpa_cal=\'Y\' AND sg.unweighted_gp  IS NOT NULL  AND sg.weighted_gp IS NULL GROUP BY sg.student_id, sg.marking_period_id) unweighted_gpa,
     eg.short_name AS grade_level_short FROM student_report_card_grades srcg
   INNER JOIN schools s ON s.id=srcg.school_id
 
   LEFT JOIN enroll_grade eg on eg.student_id=srcg.student_id AND eg.syear=srcg.syear AND eg.school_id=srcg.school_id
-  WHERE  srcg.student_id=\''.$stu_val['STUDENT_ID'].'\' AND srcg.gp_scale<>0 AND srcg.gpa_cal=\'Y\' AND srcg.course_period_id IS NULL AND srcg.marking_period_id NOT LIKE \'E%\'
+  WHERE  srcg.student_id=\'' . $stu_val['STUDENT_ID'] . '\' AND srcg.gp_scale<>0 AND srcg.gpa_cal=\'Y\' AND srcg.course_period_id IS NULL AND srcg.marking_period_id NOT LIKE \'E%\'
   GROUP BY srcg.marking_period_id,eg.short_name'));
 
-    $stu_stat=DBGet(DBQuery('SELECT COUNT(*) AS COUNT FROM student_gpa_calculated WHERE marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND student_id=\''.$stu_val['STUDENT_ID'].'\''));
+  $stu_stat = DBGet(DBQuery('SELECT COUNT(*) AS COUNT FROM student_gpa_calculated WHERE marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND student_id=\'' . $stu_val['STUDENT_ID'] . '\''));
 
-    if($stu_stat[1]['COUNT']==0)
-      DBQuery('INSERT INTO student_gpa_calculated(student_id,marking_period_id)
-      VALUES(\''.$stu_val['STUDENT_ID'].'\',\''.$stu_val['MARKING_PERIOD_ID'].'\')');
-      DBQuery('UPDATE student_gpa_calculated g
+  if ($stu_stat[1]['COUNT'] == 0)
+    DBQuery('INSERT INTO student_gpa_calculated(student_id,marking_period_id)
+      VALUES(\'' . $stu_val['STUDENT_ID'] . '\',\'' . $stu_val['MARKING_PERIOD_ID'] . '\')');
+  DBQuery('UPDATE student_gpa_calculated g
     INNER JOIN (
 	SELECT s.student_id,
 		SUM(s.weighted_gp/sc.reporting_gp_scale)/COUNT(*) AS cum_weighted_factor,
 		SUM(s.unweighted_gp/s.gp_scale)/COUNT(*) AS cum_unweighted_factor
 	FROM student_report_card_grades s
 	INNER JOIN schools sc ON sc.id=s.school_id
 	
-	WHERE s.marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND s.course_period_id IS NULL AND s.gpa_cal=\'Y\' AND 
-	s.student_id=\''.$stu_val['STUDENT_ID'].'\') gg ON gg.student_id=g.student_id
+	WHERE s.marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND s.course_period_id IS NULL AND s.gpa_cal=\'Y\' AND 
+	s.student_id=\'' . $stu_val['STUDENT_ID'] . '\') gg ON gg.student_id=g.student_id
     SET g.cum_unweighted_factor=gg.cum_unweighted_factor
-    WHERE g.student_id=\''.$stu_val['STUDENT_ID'].'\'');
-  
-  $stu_gpa_cal=DBGet(DBQuery('SELECT COUNT(*) AS COUNT FROM student_gpa_calculated WHERE marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND student_id=\''.$stu_val['STUDENT_ID'].'\''));
-        if($stu_gpa_cal[1]['COUNT']!=0)
-    {
-        DBQuery('UPDATE student_gpa_calculated SET gpa=\''.$res[1]['GPA'].'\', weighted_gpa=\''.$res[1]['WEIGHTED_GPA'].'\',unweighted_gpa=\''.$res[1]['UNWEIGHTED_GPA'].'\' WHERE marking_period_id=\''.$stu_val['MARKING_PERIOD_ID'].'\' AND student_id=\''.$stu_val['STUDENT_ID'].'\'');
-    }
-    else
-      DBQuery('INSERT INTO student_gpa_calculated(student_id,marking_period_id,mp,gpa,weighted_gpa,unweighted_gpa,grade_level_short)
-      VALUES(\''.$stu_val['STUDENT_ID'].'\',\''.$stu_val['MARKING_PERIOD_ID'].'\',\''.$stu_val['MARKING_PERIOD_ID'].'\',\''.$res[1]['GPA'].'\',\''.$res[1]['WEIGHTED_GPA'].'\',
-        \''.$res[1]['unweighted_gpa'].'\',\''.$res[1]['GRADE_LEVEL_SHORT'].'\')');
-    
+    WHERE g.student_id=\'' . $stu_val['STUDENT_ID'] . '\'');
+
+  $stu_gpa_cal = DBGet(DBQuery('SELECT COUNT(*) AS COUNT FROM student_gpa_calculated WHERE marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND student_id=\'' . $stu_val['STUDENT_ID'] . '\''));
+  if ($stu_gpa_cal[1]['COUNT'] != 0) {
+    DBQuery('UPDATE student_gpa_calculated SET gpa=\'' . $res[1]['GPA'] . '\', weighted_gpa=\'' . $res[1]['WEIGHTED_GPA'] . '\',unweighted_gpa=\'' . $res[1]['UNWEIGHTED_GPA'] . '\' WHERE marking_period_id=\'' . $stu_val['MARKING_PERIOD_ID'] . '\' AND student_id=\'' . $stu_val['STUDENT_ID'] . '\'');
+  } else
+    DBQuery('INSERT INTO student_gpa_calculated(student_id,marking_period_id,mp,gpa,weighted_gpa,unweighted_gpa,grade_level_short)
+      VALUES(\'' . $stu_val['STUDENT_ID'] . '\',\'' . $stu_val['MARKING_PERIOD_ID'] . '\',\'' . $stu_val['MARKING_PERIOD_ID'] . '\',\'' . $res[1]['GPA'] . '\',\'' . $res[1]['WEIGHTED_GPA'] . '\',
+        \'' . $res[1]['unweighted_gpa'] . '\',\'' . $res[1]['GRADE_LEVEL_SHORT'] . '\')');
 }
-  $sql="CREATE TEMPORARY table temp_cum_gpa AS
+$sql = "CREATE TEMPORARY table temp_cum_gpa AS
     SELECT  * FROM student_report_card_grades srcg WHERE credit_attempted=
     (SELECT MAX(credit_attempted) FROM student_report_card_grades srcg1 WHERE srcg.course_period_id=srcg1.course_period_id and srcg.student_id=srcg1.student_id AND srcg1.course_period_id IS NOT NULL) 
         GROUP BY course_period_id,student_id,marking_period_id
      UNION SELECT * FROM student_report_card_grades WHERE course_period_id IS NULL AND report_card_grade_id IS NULL;";   //);
-        $sql.="DROP TABLE IF EXISTS tmp;";
-        $sql.="SELECT CALC_CUM_GPA_MP('".$_REQUEST['mp']."');";
-        $sql.="DROP TABLE IF EXISTS tmp;";
-        $sql.="SELECT SET_CLASS_RANK_MP('".$_REQUEST['mp']."');";
-    
-         if(mysqli_multi_query($connection,$sql))
-         {
-            echo '<br/><table><tr><td width="38"><img src="assets/icon_ok.png" /></td><td valign="middle"><span style="font-size:14px;">The grades for '.GetMP($_REQUEST['mp']).' has been recalculated.</span></td></tr></table>';   
-         }
-        
-        unset($_REQUEST['modfunc']);
-        
-        
-?>
+$sql .= "DROP TABLE IF EXISTS tmp;";
+$sql .= "SELECT CALC_CUM_GPA_MP('" . $_REQUEST['mp'] . "');";
+$sql .= "DROP TABLE IF EXISTS tmp;";
+$sql .= "SELECT SET_CLASS_RANK_MP('" . $_REQUEST['mp'] . "');";
+
+if (mysqli_multi_query($connection, $sql)) {
+  echo '<br/><table><tr><td width="38"><img src="assets/icon_ok.png" /></td><td valign="middle"><span style="font-size:14px;">The grades for ' . GetMP($_REQUEST['mp']) . ' has been recalculated.</span></td></tr></table>';
+}
+
+unset($_REQUEST['modfunc']);

--- RedirectFunctionsInc.php ---
@@ -1,4 +1,4 @@
-<?php 
+<?php
 #**************************************************************************
 #  openSIS is a free student information system for public and non-public 
 #  schools from Open Solutions for Education, Inc. web: www.os4ed.com
@@ -26,9 +26,7 @@
 #
 #***************************************************************************************
 session_start();
-	if(!$_SESSION['STAFF_ID'] && !$_SESSION['STUDENT_ID'] && strpos($_SERVER['PHP_SELF'],'index.php')===false)
-	{
-		header('Location: ../index.php');
-		exit;
-	}
-?>
\ No newline at end of file
+if (!$_SESSION['STAFF_ID'] && !$_SESSION['STUDENT_ID'] && strpos($_SERVER['PHP_SELF'], 'index.php') === false) {
+	header('Location: ../index.php');
+	exit;
+}

--- RedirectModulesInc.php ---
@@ -1,4 +1,4 @@
-<?php 
+<?php
 #**************************************************************************
 #  openSIS is a free student information system for public and non-public 
 #  schools from Open Solutions for Education, Inc. web: www.os4ed.com
@@ -25,10 +25,9 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+error_reporting(0);
 session_start();
-	if((!$_SESSION['STAFF_ID'] || !$_SESSION['STUDENT_ID']) && strpos($_SERVER['PHP_SELF'],'index.php')===false)
-	{
-		header('Location: ../../index.php');
-		exit;
-	}
-?>
\ No newline at end of file
+if (( !isset($_SESSION['STAFF_ID']) || !isset($_SESSION['STUDENT_ID'])) && strpos($_SERVER['PHP_SELF'], 'index.php') === false) {
+	header('Location: index.php');
+	exit;
+}

--- RedirectRootInc.php ---
@@ -25,12 +25,11 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+
 error_reporting(0);
 session_start();
       if(!$_SESSION['STAFF_ID'] && !$_SESSION['STUDENT_ID'] && (strpos($_SERVER['PHP_SELF'],'index.php'))===false)
 	{
 		header('Location: index.php');
 		exit;
 	}
-   
-?>
\ No newline at end of file

--- ResetUserInfo.php ---
@@ -26,6 +26,7 @@
 #
 #***************************************************************************************
 error_reporting(0);
+
 session_start();
 include "functions/ParamLibFnc.php";
 include "Data.php";

--- Side.php ---
@@ -25,14 +25,12 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
- $var1= explode("?",$_SERVER['REQUEST_URI']);
+$var1 = explode("?", $_SERVER['REQUEST_URI']);
 include("functions/ParamLibFnc.php");
-$url=validateQueryString($var1[1]);
-if($url===FALSE || !$var1[1])
-{
- header('Location: index.php');
+$url = validateQueryString($var1[1]);
+if ($url === FALSE || !$var1[1]) {
+    header('Location: index.php');
 }
-error_reporting(1);
 include "Warehouse.php";
 $tmp_REQUEST = $_REQUEST;
 $_SESSION['Side_PHP_SELF'] = "Side.php";
@@ -41,9 +39,9 @@
 $old_syear = UserSyear();
 $old_period = UserCoursePeriod();
 
-$btnn =optional_param('btnn','',PARAM_SPCL);
+$btnn = optional_param('btnn', '', PARAM_SPCL);
 
-$nsc = optional_param('nsc','',PARAM_SPCL);
+$nsc = optional_param('nsc', '', PARAM_SPCL);
 unset($_SESSION['smc']);
 unset($_SESSION['g']);
 unset($_SESSION['p']);
@@ -59,343 +57,272 @@
 unset($_SESSION['newsql']);
 unset($_SESSION['newsql1']);
 unset($_SESSION['ASSIGNMENT_DESCRIPTION']);
-if(isset($_SESSION['stu_search']['sql']))
-{
+if (isset($_SESSION['stu_search']['sql'])) {
     unset($_SESSION['stu_search']);
 }
-if(isset ($_SESSION['staf_search']['sql']))
-{
-    unset ($_SESSION['staf_search']['sql']);
+if (isset($_SESSION['staf_search']['sql'])) {
+    unset($_SESSION['staf_search']['sql']);
 }
 
-	
 
-if((optional_param('school','',PARAM_SPCL) && optional_param('school','',PARAM_SPCL)!=$old_school) || (optional_param('period','',PARAM_SPCL) && optional_param('period','',PARAM_SPCL)!=$old_period))
-{ 
-	unset($_SESSION['student_id']);
-	$_SESSION['unset_student'] = true;
-	unset($_SESSION['staff_id']);
 
-	unset($_REQUEST['mp']);
+if ((optional_param('school', '', PARAM_SPCL) && optional_param('school', '', PARAM_SPCL) != $old_school) || (optional_param('period', '', PARAM_SPCL) && optional_param('period', '', PARAM_SPCL) != $old_period)) {
+    unset($_SESSION['student_id']);
+    $_SESSION['unset_student'] = true;
+    unset($_SESSION['staff_id']);
+
+    unset($_REQUEST['mp']);
 }
 
 
-if(optional_param('modfunc','',PARAM_SPCL)=='update' && $_POST)
-{
-	
-	//===================
-		
-	
-	
-	if(User('PROFILE')=='teacher' &&(optional_param('school','',PARAM_SPCL)!=$old_school || $nsc=='NT'))
- 	{
-	
-		if(optional_param('act','',PARAM_SPCL)=='school')
-		{
-			
-			 $_SESSION['UserSchool'] = optional_param('school','',PARAM_SPCL);
- 			DBQuery("UPDATE staff SET CURRENT_SCHOOL_ID='".UserSchool()."' WHERE STAFF_ID='".User('STAFF_ID')."'");
-  		
-                                        unset($_SESSION['UserSyear']);
-		unset($_SESSION['UserMP']);
-		unset($_SESSION['UserSubject']);
-		unset($_SESSION['UserCourse']);
-		unset($_SESSION['UserCoursePeriod']);
-		
-                                        $school_years_RET=DBGet(DBQuery("SELECT MAX(sy.SYEAR) AS SYEAR FROM school_years sy,staff s INNER JOIN staff_school_relationship ssr USING(staff_id) WHERE ssr.school_id=sy.school_id AND sy.syear=ssr.syear AND sy.SCHOOL_ID=".UserSchool()." AND  STAFF_ID='$_SESSION[STAFF_ID]'"));
-                                        $_SESSION['UserSyear']=$school_years_RET[1]['SYEAR'];
-
-                                        $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                                        if(!isset($_SESSION['UserMP']))
-                                        {
-                                                $_SESSION['UserMP'] = GetCurrentMP('QTR',DBDate());
-		}
-                                        if(!$RET)
-                                        {
-                                            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
-                                            if (!isset($_SESSION['UserMP'])) 
-                                            {
-                                                $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
-                                            }
-                                        }
-
-                                        if(!$RET)
-                                        {
-                                            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                                            if  (!isset($_SESSION['UserMP'])) 
-                                            {
-                                                $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
-                                            }	
-                                        }
-		
-		}
-		
-		elseif(optional_param('act','',PARAM_SPCL)=='syear')
-		{
-                                        unset($_SESSION['student_id']);
-                                        unset($_SESSION['_REQUEST_vars']['student_id']);
-                                        $_SESSION['UserSyear'] = optional_param('syear','',PARAM_SPCL);
-			unset($_SESSION['UserMP']);
-			unset($_SESSION['UserSubject']);
-			unset($_SESSION['UserCourse']);
-			unset($_SESSION['UserCoursePeriod']);
-                                        $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                                        if(!isset($_SESSION['UserMP']))
-                                        {
-                                                $_SESSION['UserMP'] = GetCurrentMP('QTR',DBDate());
-                                        }	
-                                        if(!$RET)
-                                        {
-                                            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
-                                            if (!isset($_SESSION['UserMP'])) {
-                                                $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
-                                            }
-                                        }
-			
-                                        if(!$RET)
-                                        {
-                                            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                                            if  (!isset($_SESSION['UserMP'])) {
-                                                $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
-		}
-                                        }
-			
-		}
-		
-		elseif(optional_param('act','',PARAM_SPCL)=='mp')
-		{
-			
-			$_SESSION['UserMP'] = optional_param('mp','',PARAM_SPCL);
-			unset($_SESSION['UserSubject']);
-			unset($_SESSION['UserCourse']);
-			unset($_SESSION['UserCoursePeriod']);
-		}
-		
-		elseif(optional_param('act','',PARAM_SPCL)=='subject')
-		{
-			$_SESSION['UserSubject'] = optional_param('subject','',PARAM_SPCL);
-			unset($_SESSION['UserCourse']);
-			unset($_SESSION['UserCoursePeriod']);
-                        unset($_SESSION['CpvId']);
-  		}
-		
-		elseif(optional_param('act','',PARAM_SPCL)=='course')
-		{
-			$_SESSION['UserCourse'] =clean_param($_REQUEST['course'],PARAM_NOTAGS);
-                        unset($_SESSION['UserCoursePeriod']);
-                        unset($_SESSION['CpvId']);
-			unset($_SESSION['UserCoursePeriod']);
-		}
-		
-		elseif(optional_param('act','',PARAM_SPCL)=='period')
-		{
-                    $_SESSION['CpvId']=optional_param('period','',PARAM_SPCL);
-		}
-
-	
-	}
-	
-	//===================
- 
-                   if (User('PROFILE') == 'admin' && (clean_param($_REQUEST['school'], PARAM_NOTAGS) != $old_school || $nsc == 'NT')) 
-                   {
-                        
-                       
-                       if ($_POST['school']) 
-                        {
-                            $_SESSION['UserSchool'] = clean_param($_REQUEST['school'], PARAM_NOTAGS);
-                            DBQuery("UPDATE staff SET CURRENT_SCHOOL_ID='" . UserSchool() . "' WHERE STAFF_ID='" . $_SESSION['STAFF_ID']. "'");
-                            unset($_SESSION['UserSyear']);
-                            unset($_SESSION['UserMP']);
- 
-                            $school_years_RET=DBGet(DBQuery("SELECT MAX(sy.SYEAR) AS SYEAR FROM school_years sy,staff_school_relationship ssr WHERE ssr.SYEAR=sy.SYEAR AND sy.SCHOOL_ID=".UserSchool()." AND ssr.STAFF_ID='$_SESSION[STAFF_ID]'"));
-                            $_SESSION['UserSyear']=$school_years_RET[1]['SYEAR'];
- 
-                            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                            if(!isset($_SESSION['UserMP']))
-                            {
-                                    $_SESSION['UserMP'] = GetCurrentMP('QTR',DBDate());
-                            }	
-                            if(!$RET)
-                            {
-                                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
-                                if (!isset($_SESSION['UserMP'])) {
-                                    $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
-                                }
-                            }
- 
-                            if(!$RET)
-                            {
-                                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                                if  (!isset($_SESSION['UserMP'])) {
-                                    $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
-                                }
-                            }
-                        } 
-	
-                        elseif ($_POST['syear']) 
-                        {
-                            unset($_SESSION['student_id']);
-                            unset($_SESSION['_REQUEST_vars']['student_id']);
-                            $_SESSION['UserSyear'] = optional_param('syear', '', PARAM_SPCL);
-                            unset($_SESSION['UserMP']);
-                            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                            if(!isset($_SESSION['UserMP']))
-                            {
-                                    $_SESSION['UserMP'] = GetCurrentMP('QTR',DBDate());
-                            }	
-                            if(!$RET)
-                            {
-                                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                                if(!isset($_SESSION['UserMP']))
-                                {
-                                        $_SESSION['UserMP'] = GetCurrentMP('SEM',DBDate());
-                                }	
-                            }
-
-                            if(!$RET)
-                            {
-                                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                                if(!isset($_SESSION['UserMP']))
-                                {
-                                        $_SESSION['UserMP'] = GetCurrentMP('FY',DBDate());
-                                }	
-                            }
-                        }
-                        
-                        elseif ($_POST['mp']) 
-                        {
-                            $_SESSION['UserMP'] = optional_param('mp', '', PARAM_SPCL);
-                        }
-                    }
-	
-	
-
-    if (User('PROFILE') == 'parent' || User('PROFILE')=='student') 
-         {
-        if ($_POST['syear'])
-        {
+if (optional_param('modfunc', '', PARAM_SPCL) == 'update' && $_POST) {
+
+    //===================
+
+
+
+    if (User('PROFILE') == 'teacher' && (optional_param('school', '', PARAM_SPCL) != $old_school || $nsc == 'NT')) {
+
+        if (optional_param('act', '', PARAM_SPCL) == 'school') {
+
+            $_SESSION['UserSchool'] = optional_param('school', '', PARAM_SPCL);
+            DBQuery("UPDATE staff SET CURRENT_SCHOOL_ID='" . UserSchool() . "' WHERE STAFF_ID='" . User('STAFF_ID') . "'");
+
+            unset($_SESSION['UserSyear']);
+            unset($_SESSION['UserMP']);
+            unset($_SESSION['UserSubject']);
+            unset($_SESSION['UserCourse']);
+            unset($_SESSION['UserCoursePeriod']);
+
+            $school_years_RET = DBGet(DBQuery("SELECT MAX(sy.SYEAR) AS SYEAR FROM school_years sy,staff s INNER JOIN staff_school_relationship ssr USING(staff_id) WHERE ssr.school_id=sy.school_id AND sy.syear=ssr.syear AND sy.SCHOOL_ID=" . UserSchool() . " AND  STAFF_ID='$_SESSION[STAFF_ID]'"));
+            $_SESSION['UserSyear'] = $school_years_RET[1]['SYEAR'];
+
+            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+            if (!isset($_SESSION['UserMP'])) {
+                $_SESSION['UserMP'] = GetCurrentMP('QTR', DBDate());
+            }
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
+                }
+            }
+
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
+                }
+            }
+        } elseif (optional_param('act', '', PARAM_SPCL) == 'syear') {
+            unset($_SESSION['student_id']);
+            unset($_SESSION['_REQUEST_vars']['student_id']);
             $_SESSION['UserSyear'] = optional_param('syear', '', PARAM_SPCL);
-            unset ($_SESSION['UserMP']);
-            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-            if(!isset($_SESSION['UserMP']))
-            {
-                    $_SESSION['UserMP'] = GetCurrentMP('QTR',DBDate());
-         }
-            if(!$RET)
-            {
-                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                if(!isset($_SESSION['UserMP']))
-                {
-                        $_SESSION['UserMP'] = GetCurrentMP('SEM',DBDate());
-                }	
+            unset($_SESSION['UserMP']);
+            unset($_SESSION['UserSubject']);
+            unset($_SESSION['UserCourse']);
+            unset($_SESSION['UserCoursePeriod']);
+            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+            if (!isset($_SESSION['UserMP'])) {
+                $_SESSION['UserMP'] = GetCurrentMP('QTR', DBDate());
+            }
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
+                }
             }
 
-            if(!$RET)
-            {
-                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
-                if(!isset($_SESSION['UserMP']))
-                {
-                        $_SESSION['UserMP'] = GetCurrentMP('FY',DBDate());
-                }	
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
+                }
             }
-		
+        } elseif (optional_param('act', '', PARAM_SPCL) == 'mp') {
+
+            $_SESSION['UserMP'] = optional_param('mp', '', PARAM_SPCL);
+            unset($_SESSION['UserSubject']);
+            unset($_SESSION['UserCourse']);
+            unset($_SESSION['UserCoursePeriod']);
+        } elseif (optional_param('act', '', PARAM_SPCL) == 'subject') {
+            $_SESSION['UserSubject'] = optional_param('subject', '', PARAM_SPCL);
+            unset($_SESSION['UserCourse']);
+            unset($_SESSION['UserCoursePeriod']);
+            unset($_SESSION['CpvId']);
+        } elseif (optional_param('act', '', PARAM_SPCL) == 'course') {
+            $_SESSION['UserCourse'] = clean_param($_REQUEST['course'], PARAM_NOTAGS);
+            unset($_SESSION['UserCoursePeriod']);
+            unset($_SESSION['CpvId']);
+            unset($_SESSION['UserCoursePeriod']);
+        } elseif (optional_param('act', '', PARAM_SPCL) == 'period') {
+            $_SESSION['CpvId'] = optional_param('period', '', PARAM_SPCL);
         }
-        elseif($_POST['student_id'])
-	{
-            unset ($_SESSION['UserMP']);
-            $_SESSION['student_id'] = optional_param('student_id', '', PARAM_ALPHANUM);
+    }
+
+    //===================
+
+    if (User('PROFILE') == 'admin' && (clean_param($_REQUEST['school'], PARAM_NOTAGS) != $old_school || $nsc == 'NT')) {
+
+
+        if ($_POST['school']) {
+            $_SESSION['UserSchool'] = clean_param($_REQUEST['school'], PARAM_NOTAGS);
+            DBQuery("UPDATE staff SET CURRENT_SCHOOL_ID='" . UserSchool() . "' WHERE STAFF_ID='" . $_SESSION['STAFF_ID'] . "'");
+            unset($_SESSION['UserSyear']);
+            unset($_SESSION['UserMP']);
+
+            $school_years_RET = DBGet(DBQuery("SELECT MAX(sy.SYEAR) AS SYEAR FROM school_years sy,staff_school_relationship ssr WHERE ssr.SYEAR=sy.SYEAR AND sy.SCHOOL_ID=" . UserSchool() . " AND ssr.STAFF_ID='$_SESSION[STAFF_ID]'"));
+            $_SESSION['UserSyear'] = $school_years_RET[1]['SYEAR'];
+
+            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+            if (!isset($_SESSION['UserMP'])) {
+                $_SESSION['UserMP'] = GetCurrentMP('QTR', DBDate());
+            }
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
+                }
+            }
+
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
+                }
+            }
+        } elseif ($_POST['syear']) {
+            unset($_SESSION['student_id']);
+            unset($_SESSION['_REQUEST_vars']['student_id']);
+            $_SESSION['UserSyear'] = optional_param('syear', '', PARAM_SPCL);
+            unset($_SESSION['UserMP']);
+            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+            if (!isset($_SESSION['UserMP'])) {
+                $_SESSION['UserMP'] = GetCurrentMP('QTR', DBDate());
+            }
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
+                }
+            }
+
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
+                }
+            }
+        } elseif ($_POST['mp']) {
+            $_SESSION['UserMP'] = optional_param('mp', '', PARAM_SPCL);
         }
-        elseif($_POST['mp'])
-        {
-             $_SESSION['UserMP'] = optional_param('mp', '', PARAM_SPCL);
+    }
+
+
+
+    if (User('PROFILE') == 'parent' || User('PROFILE') == 'student') {
+        if ($_POST['syear']) {
+            $_SESSION['UserSyear'] = optional_param('syear', '', PARAM_SPCL);
+            unset($_SESSION['UserMP']);
+            $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+            if (!isset($_SESSION['UserMP'])) {
+                $_SESSION['UserMP'] = GetCurrentMP('QTR', DBDate());
+            }
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_semesters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('SEM', DBDate());
+                }
+            }
+
+            if (!$RET) {
+                $RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_years WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
+                if (!isset($_SESSION['UserMP'])) {
+                    $_SESSION['UserMP'] = GetCurrentMP('FY', DBDate());
+                }
+            }
+        } elseif ($_POST['student_id']) {
+            unset($_SESSION['UserMP']);
+            $_SESSION['student_id'] = optional_param('student_id', '', PARAM_ALPHANUM);
+        } elseif ($_POST['mp']) {
+            $_SESSION['UserMP'] = optional_param('mp', '', PARAM_SPCL);
         }
+    }
+    $ses_modname['vars']['modname'] = 'miscellaneous/Portal.php';
+    unset($_SESSION['_REQUEST_vars']);
+    echo "<script language=javascript>window.location.href='" . str_replace('&amp;', '&', PreparePHP_SELF($ses_modname['vars'])) . "';</script>";
+} //---------------------------- Updaet End-------------------------------------------
 
-        
-	}
-        $ses_modname['vars']['modname']='miscellaneous/Portal.php';
-        unset($_SESSION['_REQUEST_vars']);
-	echo "<script language=javascript>window.location.href='".str_replace('&amp;','&',PreparePHP_SELF($ses_modname['vars']))."';</script>";
-}//---------------------------- Updaet End-------------------------------------------
 
 
+if (!$_SESSION['student_id'] && User('PROFILE') == 'student')
+    $_SESSION['student_id'] = $_SESSION['STUDENT_ID'];
 
-if(!$_SESSION['student_id'] && User('PROFILE')=='student')
-	$_SESSION['student_id'] = $_SESSION['STUDENT_ID'];
+if (!$_SESSION['UserSchool']) {
+    if (User('PROFILE') == 'admin' && (!User('SCHOOLS') || strpos(User('SCHOOLS'), ',' . User('CURRENT_SCHOOL_ID') . ',') !== false))
+        $_SESSION['UserSchool'] = User('CURRENT_SCHOOL_ID');
+    elseif (User('PROFILE') == 'student')
+        $_SESSION['UserSchool'] = trim(User('SCHOOLS'), ',');
+    elseif (User('PROFILE') == 'teacher') {
 
-if(!$_SESSION['UserSchool'])
-{
-	if(User('PROFILE')=='admin' && (!User('SCHOOLS') || strpos(User('SCHOOLS'),','.User('CURRENT_SCHOOL_ID').',')!==false))
-		$_SESSION['UserSchool'] = User('CURRENT_SCHOOL_ID');
-	elseif(User('PROFILE')=='student')
-		$_SESSION['UserSchool'] = trim(User('SCHOOLS'),',');
-	elseif(User('PROFILE')=='teacher')
-	{
-		
-            $mp = GetAllMP('QTR',UserMP());
-
-            if(!isset($mp))
-              $mp = GetAllMP('SEM',UserMP());
-
-            if(!isset($mp))
-              $mp = GetAllMP('FY',UserMP());
-            
-            
-                $QI = DBQuery("SELECT cp.SCHOOL_ID FROM course_periods cp, school_periods sp,courses c WHERE c.COURSE_ID=cp.COURSE_ID AND cp.PERIOD_ID=sp.PERIOD_ID AND cp.SYEAR='".UserSyear()."' AND cp.TEACHER_ID='".User('STAFF_ID')."''".(UserMP()?' AND cp.MARKING_PERIOD_ID IN ('.$mp.')':'')."' ORDER BY sp.SORT_ORDER LIMIT 1");
-		$RET = DBGet($QI);
-		$_SESSION['UserSchool'] = $RET[1]['SCHOOL_ID'];
-	}
+        $mp = GetAllMP('QTR', UserMP());
+
+        if (!isset($mp))
+            $mp = GetAllMP('SEM', UserMP());
+
+        if (!isset($mp))
+            $mp = GetAllMP('FY', UserMP());
+
+
+        $QI = DBQuery("SELECT cp.SCHOOL_ID FROM course_periods cp, school_periods sp,courses c WHERE c.COURSE_ID=cp.COURSE_ID AND cp.PERIOD_ID=sp.PERIOD_ID AND cp.SYEAR='" . UserSyear() . "' AND cp.TEACHER_ID='" . User('STAFF_ID') . "''" . (UserMP() ? ' AND cp.MARKING_PERIOD_ID IN (' . $mp . ')' : '') . "' ORDER BY sp.SORT_ORDER LIMIT 1");
+        $RET = DBGet($QI);
+        $_SESSION['UserSchool'] = $RET[1]['SCHOOL_ID'];
+    }
 }
 
 
-if((optional_param('school','',PARAM_SPCL) && optional_param('school','',PARAM_SPCL) != $old_school) || (optional_param('syear','',PARAM_SPCL) && optional_param('syear','',PARAM_SPCL) != $old_syear))
-{
-	unset($_SESSION['UserPeriod']);
-	unset($_SESSION['UserCoursePeriod']);
+if ((optional_param('school', '', PARAM_SPCL) && optional_param('school', '', PARAM_SPCL) != $old_school) || (optional_param('syear', '', PARAM_SPCL) && optional_param('syear', '', PARAM_SPCL) != $old_syear)) {
+    unset($_SESSION['UserPeriod']);
+    unset($_SESSION['UserCoursePeriod']);
 }
 
 
-if(optional_param('student_id','',PARAM_ALPHANUM)=='new')
-{
-	unset($_SESSION['student_id']);
-        unset($_SESSION['students_order']);
-	unset($_SESSION['_REQUEST_vars']['student_id']);
-	unset($_SESSION['_REQUEST_vars']['search_modfunc']);
-	
-	#------------- New added ----------------------------#
-	
-	if($_SESSION['_REQUEST_vars']['modfunc']=='choose_course')
-    	unset($_SESSION['_REQUEST_vars']['modfunc']);
-	#------------- New added ----------------------------#
-        #------------- New added on 09.12.2011 For removing old date----------------------------#
-	if($_SESSION['_REQUEST_vars']['modname']=='attendance/Administration.php')
-                 {
-                      unset($_SESSION['_REQUEST_vars']['month_date']);
-                      unset($_SESSION['_REQUEST_vars']['day_date']);
-                      unset($_SESSION['_REQUEST_vars']['year_date']);
-                 }
-        #------------- New added on 09.12.2011 ----------------------------#
-	
-	echo "<script language=javascript>window.location.href='".str_replace('&amp;','&',PreparePHP_SELF($_SESSION['_REQUEST_vars']))."';</script>";
+if (optional_param('student_id', '', PARAM_ALPHANUM) == 'new') {
+    unset($_SESSION['student_id']);
+    unset($_SESSION['students_order']);
+    unset($_SESSION['_REQUEST_vars']['student_id']);
+    unset($_SESSION['_REQUEST_vars']['search_modfunc']);
+
+    #------------- New added ----------------------------#
+
+    if ($_SESSION['_REQUEST_vars']['modfunc'] == 'choose_course')
+        unset($_SESSION['_REQUEST_vars']['modfunc']);
+    #------------- New added ----------------------------#
+    #------------- New added on 09.12.2011 For removing old date----------------------------#
+    if ($_SESSION['_REQUEST_vars']['modname'] == 'attendance/Administration.php') {
+        unset($_SESSION['_REQUEST_vars']['month_date']);
+        unset($_SESSION['_REQUEST_vars']['day_date']);
+        unset($_SESSION['_REQUEST_vars']['year_date']);
+    }
+    #------------- New added on 09.12.2011 ----------------------------#
+
+    echo "<script language=javascript>window.location.href='" . str_replace('&amp;', '&', PreparePHP_SELF($_SESSION['_REQUEST_vars'])) . "';</script>";
 }
 
-if(optional_param('school_id','',PARAM_ALPHANUM)=='new')
-{
-	unset($_SESSION['UserSchool']);
-	echo "<script language=javascript>window.location.href='".str_replace('&amp;','&',PreparePHP_SELF($_SESSION['_REQUEST_vars']))."';</script>";
-	
+if (optional_param('school_id', '', PARAM_ALPHANUM) == 'new') {
+    unset($_SESSION['UserSchool']);
+    echo "<script language=javascript>window.location.href='" . str_replace('&amp;', '&', PreparePHP_SELF($_SESSION['_REQUEST_vars'])) . "';</script>";
 }
 
 
-if(optional_param('staff_id','',PARAM_ALPHANUM)=='new')
-{
-	unset($_SESSION['miss_attn']);
-	unset($_SESSION['staff_id']);
-	unset($_SESSION['_REQUEST_vars']['staff_id']);
-	unset($_SESSION['_REQUEST_vars']['search_modfunc']);
-        $usr_modname['vars']['modname']=$_SESSION['_REQUEST_vars']['modname'];
-        unset($_SESSION['_REQUEST_vars']);
-	echo "<script language=javascript>window.location.href='".str_replace('&amp;','&',PreparePHP_SELF($usr_modname['vars']))."'</script>";
+if (optional_param('staff_id', '', PARAM_ALPHANUM) == 'new') {
+    unset($_SESSION['miss_attn']);
+    unset($_SESSION['staff_id']);
+    unset($_SESSION['_REQUEST_vars']['staff_id']);
+    unset($_SESSION['_REQUEST_vars']['search_modfunc']);
+    $usr_modname['vars']['modname'] = $_SESSION['_REQUEST_vars']['modname'];
+    unset($_SESSION['_REQUEST_vars']);
+    echo "<script language=javascript>window.location.href='" . str_replace('&amp;', '&', PreparePHP_SELF($usr_modname['vars'])) . "'</script>";
 }
 unset($_REQUEST['modfunc']);
 
@@ -408,106 +335,96 @@
 		<script language=\"JavaScript\" type=\"text/javascript\">
 		
 		</script>
-		<title>".Config('TITLE')."</title>
+		<title>" . Config('TITLE') . "</title>
 	</head>
-	<BODY background=assets/themes/".Preferences('THEME')."/bg.jpg leftmargin=6 marginwidth=4 topmargin=0 ".(clean_param($_REQUEST['modcat'],PARAM_NOTAGS)?"onload=openMenu('".clean_param($_REQUEST['modcat'],PARAM_NOTAGS)."');":'').">";
+	<BODY background=assets/themes/" . Preferences('THEME') . "/bg.jpg leftmargin=6 marginwidth=4 topmargin=0 " . (clean_param($_REQUEST['modcat'], PARAM_NOTAGS) ? "onload=openMenu('" . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . "');" : '') . ">";
 
 // User Information
 echo "<TABLE border=0 cellpadding=0 cellspacing=0 width=100%><TR><TD height=30>";
-echo '<A HREF=index.php target=_top>'.DrawPNG('themes/'.Preferences('THEME').'/logo.png','border=0 width=160').'</A>';
+echo '<A HREF=index.php target=_top>' . DrawPNG('themes/' . Preferences('THEME') . '/logo.png', 'border=0 width=160') . '</A>';
 echo "</TD></TR><TR>";
 echo "<TD class=BoxContents style='border: inset #C9C9C9 2px; background-image:url(\"assets/bg.gif\")' width=100% valign=top>
 	<FORM action=Side.php?modfunc=update method=POST>
 	<INPUT type=hidden name=modcat value='' id=modcat_input>
-	<b>".User('NAME')."</b>
-	<BR>".date('l F j, Y')."
+	<b>" . User('NAME') . "</b>
+	<BR>" . date('l F j, Y') . "
 	<BR>";
-if(User('PROFILE')=='admin')
-{
-	$schools = substr(str_replace(",","','",User('SCHOOLS')),2,-2);
-	$QI = DBQuery("SELECT ID,TITLE FROM schools".($schools?" WHERE ID IN ($schools)":''));
-	$RET = DBGet($QI);
+if (User('PROFILE') == 'admin') {
+    $schools = substr(str_replace(",", "','", User('SCHOOLS')), 2, -2);
+    $QI = DBQuery("SELECT ID,TITLE FROM schools" . ($schools ? " WHERE ID IN ($schools)" : ''));
+    $RET = DBGet($QI);
 
 
 
-	echo "<SELECT name=school onChange='document.forms[0].submit();' style='width:150;'>";
-	foreach($RET as $school)
-		echo "<OPTION value=$school[ID]".((UserSchool()==$school['ID'])?' SELECTED':'').">".$school['TITLE']."</OPTION>";
+    echo "<SELECT name=school onChange='document.forms[0].submit();' style='width:150;'>";
+    foreach ($RET as $school)
+        echo "<OPTION value=$school[ID]" . ((UserSchool() == $school['ID']) ? ' SELECTED' : '') . ">" . $school['TITLE'] . "</OPTION>";
 
-	echo "</SELECT><BR>";
+    echo "</SELECT><BR>";
 }
 
-if(1)
-{
-if(User('PROFILE')!='student')
-	$sql = "SELECT DISTINCT sy.SYEAR FROM school_years sy,staff s,staff_school_relationship ssr, login_authentication la WHERE s.STAFF_ID=la.USER_ID AND s.PROFILE_ID=la.PROFILE_ID AND ssr.SYEAR=sy.SYEAR AND s.STAFF_ID=ssr.STAFF_ID AND la.USERNAME=(SELECT USERNAME FROM login_authentication WHERE USER_ID='$_SESSION[STAFF_ID]' AND PROFILE_ID='$_SESSION[PROFILE_ID]')";
-else
-	$sql = "SELECT DISTINCT sy.SYEAR FROM school_years sy,student_enrollment se WHERE se.SYEAR=sy.SYEAR AND se.STUDENT_ID='$_SESSION[STUDENT_ID]'";
-$years_RET = DBGet(DBQuery($sql));
-}
-else
-$years_RET = array(1=>array('SYEAR'=>"$DefaultSyear"));
+if (1) {
+    if (User('PROFILE') != 'student')
+        $sql = "SELECT DISTINCT sy.SYEAR FROM school_years sy,staff s,staff_school_relationship ssr, login_authentication la WHERE s.STAFF_ID=la.USER_ID AND s.PROFILE_ID=la.PROFILE_ID AND ssr.SYEAR=sy.SYEAR AND s.STAFF_ID=ssr.STAFF_ID AND la.USERNAME=(SELECT USERNAME FROM login_authentication WHERE USER_ID='$_SESSION[STAFF_ID]' AND PROFILE_ID='$_SESSION[PROFILE_ID]')";
+    else
+        $sql = "SELECT DISTINCT sy.SYEAR FROM school_years sy,student_enrollment se WHERE se.SYEAR=sy.SYEAR AND se.STUDENT_ID='$_SESSION[STUDENT_ID]'";
+    $years_RET = DBGet(DBQuery($sql));
+} else
+    $years_RET = array(1 => array('SYEAR' => "$DefaultSyear"));
 
 echo "<SELECT name=syear onChange='document.forms[0].submit();'>";
-foreach($years_RET as $year)
-	echo "<OPTION value=$year[SYEAR]".((UserSyear()==$year['SYEAR'])?' SELECTED':'').">$year[SYEAR]-".($year['SYEAR']+1)."</OPTION>";
+foreach ($years_RET as $year)
+    echo "<OPTION value=$year[SYEAR]" . ((UserSyear() == $year['SYEAR']) ? ' SELECTED' : '') . ">$year[SYEAR]-" . ($year['SYEAR'] + 1) . "</OPTION>";
 echo '</SELECT><BR>';
 
-if(User('PROFILE')=='parent')
-{
-	$RET = DBGet(DBQuery("SELECT sju.STUDENT_ID, CONCAT(s.LAST_NAME,', ',s.FIRST_NAME) AS FULL_NAME,se.SCHOOL_ID FROM students s,students_join_people sju, student_enrollment se WHERE s.STUDENT_ID=sju.STUDENT_ID AND sju.PERSON_ID='".User('STAFF_ID')."' AND se.SYEAR=".UserSyear()." AND se.STUDENT_ID=sju.STUDENT_ID AND (('".DBDate()."' BETWEEN se.START_DATE AND se.END_DATE OR se.END_DATE IS NULL) AND '".DBDate()."'>=se.START_DATE)"));
-
-	if(!UserStudentID())
-		$_SESSION['student_id'] = $RET[1]['STUDENT_ID'];
-
-	echo "<SELECT name=student_id onChange='document.forms[0].submit();'>";
-	if(count($RET))
-	{
-		foreach($RET as $student)
-		{
-			echo "<OPTION value=$student[STUDENT_ID]".((UserStudentID()==$student['STUDENT_ID'])?' SELECTED':'').">".$student['FULL_NAME']."</OPTION>";
-			if(UserStudentID()==$student['STUDENT_ID'])
-				$_SESSION['UserSchool'] = $student['SCHOOL_ID'];
-		}
-	}
-	echo "</SELECT><BR>";
-
-	if(!UserMP())
-		$_SESSION['UserMP'] = GetCurrentMP('QTR',DBDate());
+if (User('PROFILE') == 'parent') {
+    $RET = DBGet(DBQuery("SELECT sju.STUDENT_ID, CONCAT(s.LAST_NAME,', ',s.FIRST_NAME) AS FULL_NAME,se.SCHOOL_ID FROM students s,students_join_people sju, student_enrollment se WHERE s.STUDENT_ID=sju.STUDENT_ID AND sju.PERSON_ID='" . User('STAFF_ID') . "' AND se.SYEAR=" . UserSyear() . " AND se.STUDENT_ID=sju.STUDENT_ID AND (('" . DBDate() . "' BETWEEN se.START_DATE AND se.END_DATE OR se.END_DATE IS NULL) AND '" . DBDate() . "'>=se.START_DATE)"));
+
+    if (!UserStudentID())
+        $_SESSION['student_id'] = $RET[1]['STUDENT_ID'];
+
+    echo "<SELECT name=student_id onChange='document.forms[0].submit();'>";
+    if (count($RET)) {
+        foreach ($RET as $student) {
+            echo "<OPTION value=$student[STUDENT_ID]" . ((UserStudentID() == $student['STUDENT_ID']) ? ' SELECTED' : '') . ">" . $student['FULL_NAME'] . "</OPTION>";
+            if (UserStudentID() == $student['STUDENT_ID'])
+                $_SESSION['UserSchool'] = $student['SCHOOL_ID'];
+        }
+    }
+    echo "</SELECT><BR>";
+
+    if (!UserMP())
+        $_SESSION['UserMP'] = GetCurrentMP('QTR', DBDate());
 }
 
 
 
-$RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY SORT_ORDER"));
+$RET = DBGet(DBQuery("SELECT MARKING_PERIOD_ID,TITLE FROM school_quarters WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY SORT_ORDER"));
 echo "<SELECT name=mp onChange='document.forms[0].submit();'>";
-if(count($RET))
-{
-	if(!UserMP())
-		$_SESSION['UserMP'] = $RET[1]['MARKING_PERIOD_ID'];
+if (count($RET)) {
+    if (!UserMP())
+        $_SESSION['UserMP'] = $RET[1]['MARKING_PERIOD_ID'];
 
-	foreach($RET as $quarter)
-		echo "<OPTION value=$quarter[MARKING_PERIOD_ID]".(UserMP()==$quarter['MARKING_PERIOD_ID']?' SELECTED':'').">".$quarter['TITLE']."</OPTION>";
+    foreach ($RET as $quarter)
+        echo "<OPTION value=$quarter[MARKING_PERIOD_ID]" . (UserMP() == $quarter['MARKING_PERIOD_ID'] ? ' SELECTED' : '') . ">" . $quarter['TITLE'] . "</OPTION>";
 }
 echo "</SELECT>";
 echo '</FORM>';
-if(UserStudentID() && User('PROFILE')!='parent' && User('PROFILE')!='student')
-{
-	$RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID='".UserStudentID()."'"));
-	
-	
-	echo '<TABLE border=0 cellpadding=0 cellspacing=0 width=100%><TR><TD width=19 valign=middle><A HREF=Side.php?student_id=new&modcat='.optional_param('modcat','',PARAM_SPCL).'><IMG SRC=assets/x.gif height=17 border=0></A></TD><TD ><B><A HREF=Modules.php?modname=students/Student.php&student_id='.UserStudentID().' target=body><font color=#FFFFFF size=-2>'.$RET[1]['FIRST_NAME'].'&nbsp;'.($RET[1]['MIDDLE_NAME']?$RET[1]['MIDDLE_NAME'].' ':'').$RET[1]['LAST_NAME'].'&nbsp;'.$RET[1]['NAME_SUFFIX'].'</font></A></B></TD></TR></TABLE>';
+if (UserStudentID() && User('PROFILE') != 'parent' && User('PROFILE') != 'student') {
+    $RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID='" . UserStudentID() . "'"));
+
+
+    echo '<TABLE border=0 cellpadding=0 cellspacing=0 width=100%><TR><TD width=19 valign=middle><A HREF=Side.php?student_id=new&modcat=' . optional_param('modcat', '', PARAM_SPCL) . '><IMG SRC=assets/x.gif height=17 border=0></A></TD><TD ><B><A HREF=Modules.php?modname=students/Student.php&student_id=' . UserStudentID() . ' target=body><font color=#FFFFFF size=-2>' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</font></A></B></TD></TR></TABLE>';
 }
-if(UserStaffID() && User('PROFILE')=='admin')
-{
-	if(UserStudentID())
-		echo '<IMG SRC=assets/pixel_trans.gif height=2>';
-	$RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME FROM staff WHERE STAFF_ID='".UserStaffID()."'"));
-	
-	
-	echo '<TABLE border=0 cellpadding=0 cellspacing=0 width=100%><TR><TD bgcolor=#336633 width=19 valign=middle><A HREF=Side.php?staff_id=new&modcat='.optional_param('modcat','',PARAM_SPCL).'><IMG SRC=assets/x.gif height=17 border=0></A></TD><TD bgcolor=#336633><B><A HREF=Modules.php?modname=users/User.php&staff_id='.UserStaffID().' target=body><font color=#FFFFFF size=-2>'.$RET[1]['FIRST_NAME'].'&nbsp;'.$RET[1]['LAST_NAME'].'</font></A></B></TD></TR></TABLE>';
+if (UserStaffID() && User('PROFILE') == 'admin') {
+    if (UserStudentID())
+        echo '<IMG SRC=assets/pixel_trans.gif height=2>';
+    $RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME FROM staff WHERE STAFF_ID='" . UserStaffID() . "'"));
+
+
+    echo '<TABLE border=0 cellpadding=0 cellspacing=0 width=100%><TR><TD bgcolor=#336633 width=19 valign=middle><A HREF=Side.php?staff_id=new&modcat=' . optional_param('modcat', '', PARAM_SPCL) . '><IMG SRC=assets/x.gif height=17 border=0></A></TD><TD bgcolor=#336633><B><A HREF=Modules.php?modname=users/User.php&staff_id=' . UserStaffID() . ' target=body><font color=#FFFFFF size=-2>' . $RET[1]['FIRST_NAME'] . '&nbsp;' . $RET[1]['LAST_NAME'] . '</font></A></B></TD></TR></TABLE>';
 }
 echo '<BR>';
 echo '</TD></TR></TABLE>';
 echo '</BODY>';
 echo '</HTML>';
-?>
\ No newline at end of file

--- Top.php ---
@@ -25,7 +25,6 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-error_reporting(1);
 if(!$_SESSION['STAFF_ID'] && !$_SESSION['STUDENT_ID'] && (strpos($_SERVER['PHP_SELF'],'index.php'))===false)
 	{
 		header('Location: index.php');

--- TransferredOutModal.php ---
@@ -27,8 +27,8 @@
 #
 #***************************************************************************************
 include('RedirectRootInc.php');
-include'ConfigInc.php';
-include 'Warehouse.php';
+include('ConfigInc.php');
+include('Warehouse.php');
 if ($_REQUEST['modfunc'] == 'detail' && $_REQUEST['student_id'] && $_REQUEST['student_id'] != 'new') {
     if ($_POST['button'] == 'Save') {
 
@@ -114,6 +114,7 @@
                 $options[$school_array['ID']] = $school_array['TITLE'];
             }
             $res = DBGet(DBQuery('SELECT * FROM school_gradelevels WHERE school_id=' . $sch_id . ''));
+            $options1 = array();
             foreach ($res as $res1) {
                 $options1[$res1['ID']] = $res1['TITLE'];
             }

--- UpgradeInc.php ---
@@ -27,6 +27,7 @@
 #***************************************************************************************
 include('RedirectRootInc.php');
 error_reporting(0);
+
 if (file_exists("Data.php"))
 {
     include("Data.php");

--- Validator.php ---
@@ -25,99 +25,109 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-	include('RedirectRootInc.php'); 
-	include'ConfigInc.php';
-	include 'Warehouse.php';
-	// include('functions/SqlSecurityFnc.php');
+include 'RedirectRootInc.php';
+include 'ConfigInc.php';
+include 'Warehouse.php';
 
-	$stfid = sqlSecurityFilter($_GET['stfid']);
-			 $flag = $_GET['u'];
-	  $usr = substr($flag, -4);
-	
-	// ------------------------ For Unique Checking ---------------------------------- //
-	$un = substr($flag, 0, -4);
-	$un = strtoupper($un);
-	// ------------------------ For Unique Checking ---------------------------------- //
-         switch ($_GET['validate'])
+$flag = $_GET['u'];
+$usr = substr($flag, -4);
+$userid = $_GET['userid'];
+$profileid = $_GET['profileid'];
+
+// ------------------------ For Unique Checking ---------------------------------- //
+$un = substr($flag, 0, -4);
+$un = strtoupper($un);
+// ------------------------ For Unique Checking ---------------------------------- //
+
+switch ($_GET['validate'])
+{
+    case 'pass':
+		$res_pass_chk = DBQuery("SELECT * FROM login_authentication WHERE password = '".md5($_GET['password'])."' AND user_id!='".$_GET['stfid']."' AND profile_id=0");
+		$num_pass = $res_pass_chk->num_rows;
+        if($num_pass==0)
         {
-            case 'pass':
-                        $res_pass_chk = DBQuery("SELECT * FROM login_authentication WHERE password = '".md5($_GET['password'])."' AND user_id!='".$stfid."' AND profile_id=0");
-                        $num_pass = $res_pass_chk->num_rows;
-                        if($num_pass==0)
-                        {
-                            echo 1;
-                            
-                        }
-                break;
+            echo 1;
             
-            case 'pass_o':
-                        $res_pass_chk = DBQuery("SELECT * FROM login_authentication WHERE password = '".md5($_GET['password'])."'  AND profile_id=0");
-                        $num_pass = $res_pass_chk->num_rows;
-                        if($num_pass==0)
-                        {
-                            echo '1_'.$_GET['opt'];
-                            
-                        }
-                        else
-                        {
-                            echo '0_'.$_GET['opt'];
-                        }
-                break;
-            default :    
-	if($usr == 'user')
-	{
-	
-		$result = DBGet(DBQuery("select username from login_authentication"));
-		 
-		$xyz = 0;
-		foreach ($result as $k => $v) 
-		{
-		  $unames[$xyz] = strtoupper($v['USERNAME']); // For Unique Checking.
-		  $xyz++;
-		}
-	
-		if ($un != '') 
+        }
+        break;
+        
+	case 'pass_o':
+        $res_pass_chk = DBQuery("SELECT * FROM login_authentication WHERE password = '".md5($_GET['password'])."'  AND profile_id=0");
+        $num_pass = $res_pass_chk->num_rows;
+        if($num_pass==0)
+        {
+            echo '1_'.$_GET['opt'];
+            
+        }
+        else
+        {
+            echo '0_'.$_GET['opt'];
+        }
+		break;
+        
+	default :    
+		if($usr == 'user')
 		{
-			if (in_array ($un, $unames)) 
+			if (trim($userid) != '')
+				$result = DBGet(DBQuery("SELECT username FROM login_authentication WHERE NOT(user_id = '" . $userid . "' AND profile_id = '".$profileid."')"));
+			else
+				$result = DBGet(DBQuery("SELECT username FROM login_authentication"));
+			 
+			$xyz = 0;
+			foreach ($result as $k => $v) 
 			{
-				echo '0';
-			} 
-			else 
+			  	$unames[$xyz] = strtoupper($v['USERNAME']); // For Unique Checking.
+			  	$xyz++;
+			}
+		
+			if ($un != '') 
 			{
-				echo '1';
+				if (in_array ($un, $unames)) 
+				{
+					echo '0';
+				} 
+				else 
+				{
+					echo '1';
+				}
+
+				exit;
 			}
-			exit;
 		}
-	}
-	else
-	{
-	
-		
-		$result = DBGet(DBQuery("select username from login_authentication"));
-		
-		$xyz = 0;
-		foreach ($result as $k => $v) 
+		else
 		{
-		  $unames[$xyz] = strtoupper($v['USERNAME']); // For Unique Checking.
-		  $xyz++;
-		}
-	
-		if ($un != '') 
-		{	if(is_array($unames)){
-			if (in_array ($un, $unames)) 
+			if (trim($userid) != '')
+				$result = DBGet(DBQuery("SELECT username FROM login_authentication WHERE NOT(user_id = '" . $userid . "' AND profile_id = '".$profileid."')"));
+			else
+				$result = DBGet(DBQuery("SELECT username FROM login_authentication"));
+			
+			$xyz = 0;
+			foreach ($result as $k => $v) 
 			{
-				echo '0';
-			} 
-			else 
-			{
-				echo '1';
+			  	$unames[$xyz] = strtoupper($v['USERNAME']); // For Unique Checking.
+			  	$xyz++;
 			}
-			}else{
-			echo '1';
+		
+			if ($un != '') 
+			{
+				if(is_array($unames))
+				{
+					if (in_array ($un, $unames)) 
+					{
+						echo '0';
+					} 
+					else 
+					{
+						echo '1';
+					}
+				} else {
+					echo '1';
+				}
+
+				exit;
 			}
-			exit;
 		}
-	}
-        }
+		break;
+}
 
 ?>

--- ValidatorAttendance.php ---
@@ -26,6 +26,7 @@
 #
 #***************************************************************************************
     error_reporting(0);
+
 	include('RedirectRootInc.php');
 	include'ConfigInc.php';
         include("Warehouse.php");

--- Warehouse.php ---
@@ -26,17 +26,17 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-if (WAREHOUSE_PHP == 0) {
+if (!defined('WAREHOUSE_PHP')) {
     define("WAREHOUSE_PHP", 1);
     $staticpath = dirname(__FILE__) . '/';
 
     require_once($staticpath . "ConfigInc.php");
     require_once("DatabaseInc.php");
 
     //Create Default Year Picture Folder
-    if (!file_exists($StudentPicturesPath)) {
-        mkdir($StudentPicturesPath);
-    }
+    // if (!file_exists($StudentPicturesPath)) {
+    //     mkdir($StudentPicturesPath);
+    // }
 
     // Load functions.
     if ($handle = opendir("$openSISPath/functions")) {
@@ -184,4 +184,3 @@ function checkAll(form,value,name_like)
 							} 
 
  */
-?>

--- api/SchoolInfo.php ---
@@ -23,7 +23,7 @@ function db_start() {
     if ($connection === false) {
         switch ($DatabaseType) {
             case 'mysqli':
-                $errormessage = mysqli_error($connection);
+                $errormessage =$connection->err;
                 break;
         }
         db_show_error("", ""._couldNotConnectToDatabase.": $DatabaseServer", $errstring);
@@ -469,9 +469,3 @@ function _makeLetterGrade($percent,$course_period_id=0,$staff_id=0,$ret='')
         echo '<error>Invalid Credentials.</error>';
     }
 }
-
-
-
-
-?>
-

--- functions/AllowEditFnc.php ---
@@ -25,182 +25,154 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-function AllowEdit($modname=false)
-{	global $_openSIS;
-	if(!$modname)
-		$modname = $_REQUEST['modname'];
-
-	if($modname=='students/Student.php' && $_REQUEST['category_id'])
-		$modname = $modname.'&category_id='.$_REQUEST['category_id'];
-        if($modname=='users/Staff.php' && $_REQUEST['category_id'])
-		$modname = $modname.'&category_id='.$_REQUEST['category_id'];
-
-        
-	if(User('PROFILE')=='admin')
-	{
-            
-		if(!$_openSIS['AllowEdit'])
-		{
-                    
-			if(User('PROFILE_ID')!='')
-                        {
-				$_openSIS['AllowEdit'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\''.User('PROFILE_ID').'\' AND CAN_EDIT=\'Y\''),array(),array('MODNAME'));
-                        }
-                        else
-                        {
-                        $profile_id_mod=DBGet(DBQuery("SELECT PROFILE_ID FROM staff WHERE USER_ID='".User('STAFF_ID')));
-			$profile_id_mod=$profile_id_mod[1]['PROFILE_ID'];
-                        if($profile_id_mod!='')
-                        $_openSIS['AllowEdit'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\''.$profile_id_mod.'\' AND CAN_EDIT=\'Y\''),array(),array('MODNAME'));
-                        }
-
-		}
-		if(!$_openSIS['AllowEdit'])
-			$_openSIS['AllowEdit'] = array(true);
-
-		if(count($_openSIS['AllowEdit'][$modname]))
-			return true;
-		else
-			return false;
-	}
-	else
-        {
-                if(User('PROFILE_ID')==3 || User('PROFILE_ID')==4)
-                {
-                   if($modname=='attendance/StudentSummary.php')
-                        return true;
-                    elseif($modname=='schoolsetup/Calendar.php')
-                        return true;        
-                    elseif($modname=='attendance/DailySummary.php')
-                        return true;
-                    elseif($modname=='scheduling/ViewSchedule.php')
-                        return true;
-                   elseif($modname=='messaging/Group.php')
-                        return true;
-                    else
-                        return $_openSIS['allow_edit'];
+function AllowEdit($modname = false)
+{
+    global $_openSIS;
+    if (!$modname)
+        $modname = $_REQUEST['modname'];
+
+    if ($modname == 'students/Student.php' && $_REQUEST['category_id'])
+        $modname = $modname . '&category_id=' . $_REQUEST['category_id'];
+    if ($modname == 'users/Staff.php' && $_REQUEST['category_id'])
+        $modname = $modname . '&category_id=' . $_REQUEST['category_id'];
+
+    if (User('PROFILE') == 'admin') {
+
+        if (!$_openSIS['AllowEdit']) {
+
+            if (User('PROFILE_ID') != '') {
+                $_openSIS['AllowEdit'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\'' . User('PROFILE_ID') . '\' AND CAN_EDIT=\'Y\''), array(), array('MODNAME'));
+            } else {
+                $profile_id_mod = DBGet(DBQuery("SELECT PROFILE_ID FROM staff WHERE USER_ID='" . User('STAFF_ID')));
+                $profile_id_mod = $profile_id_mod[1]['PROFILE_ID'];
+                if ($profile_id_mod != '') {
+                    $_openSIS['AllowEdit'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\'' . $profile_id_mod . '\' AND CAN_EDIT=\'Y\''), array(), array('MODNAME'));
                 }
-                elseif(User('PROFILE')=='teacher')
-                {
-                    if(User('PROFILE_ID')!='')
-				$_openSIS['AllowEdit'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\''.User('PROFILE_ID').'\' AND CAN_EDIT=\'Y\''),array(),array('MODNAME'));
-                   
-                    if($modname=='attendance/StudentSummary.php')
-                        return true;
-                    
-                     elseif($modname=='scheduling/ViewSchedule.php')
-                      return true;
-                    elseif($modname=='attendance/DailySummary.php')
-                        return true;
-                    elseif($modname=='schoolsetup/Calendar.php')
-                        return true;
-                    elseif($modname=='scheduling/PrintSchedules.php')
-                        return true; 
-                    elseif($modname=='messaging/Group.php')
-                        return true;
-                    elseif($modname=='grades/Assignments.php')
-                        return true;
-                    elseif($modname=='grades/Grades.php')
+            }
+        }
+        if (!$_openSIS['AllowEdit'])
+            $_openSIS['AllowEdit'] = array(true);
+        if (!empty($_openSIS['AllowEdit'][$modname]))
+            return true;
+        else
+            return false;
+    } else {
+        if (User('PROFILE_ID') == 3 || User('PROFILE_ID') == 4) {
+            if ($modname == 'attendance/StudentSummary.php')
+                return true;
+            elseif ($modname == 'schoolsetup/Calendar.php')
+                return true;
+            elseif ($modname == 'attendance/DailySummary.php')
+                return true;
+            elseif ($modname == 'scheduling/ViewSchedule.php')
+                return true;
+            elseif ($modname == 'messaging/Group.php')
+                return true;
+            else
+                return $_openSIS['allow_edit'];
+        } elseif (User('PROFILE') == 'teacher') {
+            if (User('PROFILE_ID') != '')
+                $_openSIS['AllowEdit'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\'' . User('PROFILE_ID') . '\' AND CAN_EDIT=\'Y\''), array(), array('MODNAME'));
+
+            if ($modname == 'attendance/StudentSummary.php')
+                return true;
+
+            elseif ($modname == 'scheduling/ViewSchedule.php')
+                return true;
+            elseif ($modname == 'attendance/DailySummary.php')
+                return true;
+            elseif ($modname == 'schoolsetup/Calendar.php')
+                return true;
+            elseif ($modname == 'scheduling/PrintSchedules.php')
+                return true;
+            elseif ($modname == 'messaging/Group.php')
+                return true;
+            elseif ($modname == 'grades/Assignments.php')
+                return true;
+            elseif ($modname == 'grades/Grades.php')
+                return true;
+            elseif ($modname == 'grades/InputFinalGrades.php') {
+                $grade_post_date = DBGet(DBQuery('SELECT POST_START_DATE, POST_END_DATE FROM marking_periods WHERE SCHOOL_ID=' . UserSchool() . ' AND SYEAR=' . UserSyear() . ' AND MARKING_PERIOD_ID=' . UserMP()));
+                if ($grade_post_date[1]['POST_START_DATE'] != '' && $grade_post_date[1]['POST_END_DATE'] != '') {
+                    if (date('Y-m-d') >= $grade_post_date[1]['POST_START_DATE'] && date('Y-m-d') <= $grade_post_date[1]['POST_END_DATE'])
                         return true;
-                    elseif($modname=='grades/InputFinalGrades.php')
-                    {
-                        $grade_post_date= DBGet(DBQuery('SELECT POST_START_DATE, POST_END_DATE FROM marking_periods WHERE SCHOOL_ID='. UserSchool().' AND SYEAR='. UserSyear().' AND MARKING_PERIOD_ID='. UserMP()));
-                        if($grade_post_date[1]['POST_START_DATE']!='' && $grade_post_date[1]['POST_END_DATE']!='')
-                        {
-                            if(date('Y-m-d') >= $grade_post_date[1]['POST_START_DATE'] && date('Y-m-d') <= $grade_post_date[1]['POST_END_DATE'])
-                                return true;
-                            else
-                                 return false;
-                        }
-                        else
-                            return false;
-                    }
-                       elseif($modname== 'attendance/TakeAttendance.php')
-                         return true;
-                     elseif($modname== 'attendance/StudentSummary.php')
-                         return true;
-                      elseif($modname== 'users/TeacherPrograms.php?include=attendance/TakeAttendance.php')
-                         return true;
                     else
-                    {
-                        if(!$_openSIS['AllowEdit'])
-			$_openSIS['AllowEdit'] = array(true);
-
-                        if(count($_openSIS['AllowEdit'][$modname]))
-                                return true;
-                        else
-                                return false;
-//                        return $_openSIS['allow_edit'];
-                    }
-                }
+                        return false;
+                } else
+                    return false;
+            } elseif ($modname == 'attendance/TakeAttendance.php')
+                return true;
+            elseif ($modname == 'attendance/StudentSummary.php')
+                return true;
+            elseif ($modname == 'users/TeacherPrograms.php?include=attendance/TakeAttendance.php')
+                return true;
+            else {
+                if (!$_openSIS['AllowEdit'])
+                    $_openSIS['AllowEdit'] = array(true);
+
+                if (is_countable($_openSIS['AllowEdit'][$modname]) && count($_openSIS['AllowEdit'][$modname]))
+                    return true;
                 else
-		return $_openSIS['allow_edit'];
-        }
+                    return false;
+            }
+        } else
+            return $_openSIS['allow_edit'];
+    }
 }
 
-function AllowUse($modname=false)
-{	global $_openSIS;
-	if(!$modname)
-		$modname = $_REQUEST['modname'];
-
-	if($modname=='students/Student.php' && $_REQUEST['category_id'])
-		$modname = $modname.'&category_id='.$_REQUEST['category_id'];
-
-	if(!$_openSIS['AllowUse'])
-	{
-		if(User('PROFILE_ID')!='')
-                {
-			$_openSIS['AllowUse'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\''.User('PROFILE_ID').'\' AND CAN_USE=\'Y\''),array(),array('MODNAME'));
-                
-                if(User('PROFILE_ID')==4)
-                {
-                 $_openSIS['AllowUse']['scheduling/PrintSchedules.php'] ['1'] ['MODNAME'] = 'scheduling/PrintSchedules.php';   
-                }
-                
-                }
-		else
-                {
-                        $profile_id_mod=DBGet(DBQuery("SELECT PROFILE_ID FROM staff WHERE USER_ID='".User('STAFF_ID')));
-			$profile_id_mod=$profile_id_mod[1]['PROFILE_ID'];
-			$_openSIS['AllowUse'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\''.$profile_id_mod.'\' AND CAN_USE=\'Y\''),array(),array('MODNAME'));
-              
-                }
-                       
-                
-	}
+function AllowUse($modname = false)
+{
+    global $_openSIS;
+    if (!$modname)
+        $modname = $_REQUEST['modname'];
+
+    if ($modname == 'students/Student.php' && $_REQUEST['category_id'])
+        $modname = $modname . '&category_id=' . $_REQUEST['category_id'];
+
+    if (!$_openSIS['AllowUse']) {
+        if (User('PROFILE_ID') != '') {
+            $_openSIS['AllowUse'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\'' . User('PROFILE_ID') . '\' AND CAN_USE=\'Y\''), array(), array('MODNAME'));
+
+            if (User('PROFILE_ID') == 4) {
+                $_openSIS['AllowUse']['scheduling/PrintSchedules.php']['1']['MODNAME'] = 'scheduling/PrintSchedules.php';
+            }
+        } else {
+            $profile_id_mod = DBGet(DBQuery("SELECT PROFILE_ID FROM staff WHERE USER_ID='" . User('STAFF_ID')));
+            $profile_id_mod = $profile_id_mod[1]['PROFILE_ID'];
+            $_openSIS['AllowUse'] = DBGet(DBQuery('SELECT MODNAME FROM profile_exceptions WHERE PROFILE_ID=\'' . $profile_id_mod . '\' AND CAN_USE=\'Y\''), array(), array('MODNAME'));
+        }
+    }
 
 
-	if(!$_openSIS['AllowUse'])
-		$_openSIS['AllowUse'] = array(true);
+    if (!$_openSIS['AllowUse'])
+        $_openSIS['AllowUse'] = array(true);
 
-	if(count($_openSIS['AllowUse'][$modname]))
-		return true;
-	else
-		return false;
+    if (is_countable($_openSIS['AllowUse'][$modname]) && count($_openSIS['AllowUse'][$modname]))
+        return true;
+    else
+        return false;
 }
 
-function ProgramLink($modname,$title='',$options='')
+function ProgramLink($modname, $title = '', $options = '')
 {
-	if(AllowUse($modname))
-		$link = '<A HREF=Modules.php?modname='.$modname.$options.'>';
-	if($title)
-		$link .= $title;
-	if(AllowUse($modname))
-		$link .= '</A>';
-
-	return $link;
+    if (AllowUse($modname))
+        $link = '<A HREF=Modules.php?modname=' . $modname . $options . '>';
+    if ($title)
+        $link .= $title;
+    if (AllowUse($modname))
+        $link .= '</A>';
+
+    return $link;
 }
 
-function ProgramLinkforExport($modname,$title='',$options='',$extra='')
+function ProgramLinkforExport($modname, $title = '', $options = '', $extra = '')
 {
-	if(AllowUse($modname))
-		$link = '<A HREF=ForExport.php?modname='.$modname.$options.' '.$extra.'>';
-	if($title)
-		$link .= $title;
-	if(AllowUse($modname))
-		$link .= '</A>';
-
-	return $link;
+    if (AllowUse($modname))
+        $link = '<A HREF=ForExport.php?modname=' . $modname . $options . ' ' . $extra . '>';
+    if ($title)
+        $link .= $title;
+    if (AllowUse($modname))
+        $link .= '</A>';
+
+    return $link;
 }
-
-?>
\ No newline at end of file

--- functions/ArrayRwalkFnc.php ---
@@ -28,28 +28,17 @@
 
 function array_rwalk(&$array, $function)
 {
-    global $DatabaseServer,$DatabaseUsername,$DatabasePassword,$DatabaseName,$DatabasePort,$DatabaseType,$connection ;
-    // $connection = new mysqli($DatabaseServer,$DatabaseUsername,$DatabasePassword,$DatabaseName);
-	if($connection->connect_errno>0)
-    die('Not connected');
-    
-    foreach($array as $key => $value)
-	{
-
-		if(is_array($value))
-		{
+	// db_start() is global new mysqli conection it returns the mysqli object
+	$connection = db_start();
+	if ($connection->connect_errno > 0)
+		die('Not connected');
+	foreach ($array as $key => $value) {
+		if (is_array($value)) {
 			array_rwalk($value, $function);
-                        $array[$key] = $value;
-		}
-		else
-                {
-                    $val=mysqli_real_escape_string($connection,$value);
+			$array[$key] = $value;
+		} else {
+			$val = mysqli_real_escape_string($connection, $value);
 			$array[$key] = $function($val);
-                }
-
-                 
+		}
 	}
-        
 }
-
-?>

--- functions/CurrentFnc.php ---
@@ -25,6 +25,7 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+
 function UserSchool()
 {
 	return $_SESSION['UserSchool'];

--- functions/CustomFieldsFnc.php ---
@@ -30,190 +30,157 @@
 
 	Use in the where section of the query by CustomFIelds('where')
 */
-function CustomFields($location,$table_arr='',$exp=0)
-{	global $_openSIS;
-	if(count($_REQUEST['month__cust_begin']))
-	{
-		foreach($_REQUEST['month__cust_begin'] as $field_name=>$month)
-		{
-			$_REQUEST['cust_begin'][$field_name] = $_REQUEST['day__cust_begin'][$field_name].'-'.$_REQUEST['month__cust_begin'][$field_name].'-'.$_REQUEST['year__cust_begin'][$field_name];
-			$_REQUEST['cust_end'][$field_name] = $_REQUEST['day__cust_end'][$field_name].'-'.$_REQUEST['month__cust_end'][$field_name].'-'.$_REQUEST['year__cust_end'][$field_name];
-                        if(!VerifyDate($_REQUEST['cust_begin'][$field_name]) || !VerifyDate($_REQUEST['cust_end'][$field_name]))
-			{
+function CustomFields($location, $table_arr = '', $exp = 0)
+{
+	global $_openSIS, $string;
+	if (!empty($_REQUEST['month__cust_begin'])) {
+		foreach ($_REQUEST['month__cust_begin'] as $field_name => $month) {
+			$_REQUEST['cust_begin'][$field_name] = $_REQUEST['day__cust_begin'][$field_name] . '-' . $_REQUEST['month__cust_begin'][$field_name] . '-' . $_REQUEST['year__cust_begin'][$field_name];
+			$_REQUEST['cust_end'][$field_name] = $_REQUEST['day__cust_end'][$field_name] . '-' . $_REQUEST['month__cust_end'][$field_name] . '-' . $_REQUEST['year__cust_end'][$field_name];
+			if (!VerifyDate($_REQUEST['cust_begin'][$field_name]) || !VerifyDate($_REQUEST['cust_end'][$field_name])) {
 				unset($_REQUEST['cust_begin'][$field_name]);
 				unset($_REQUEST['cust_end'][$field_name]);
 			}
 		}
-		unset($_REQUEST['month__cust_begin']);unset($_REQUEST['year__cust_begin']);unset($_REQUEST['day__cust_begin']);
-		unset($_REQUEST['month__cust_end']);unset($_REQUEST['year__cust_end']);unset($_REQUEST['day__cust_end']);
+		unset($_REQUEST['month__cust_begin']);
+		unset($_REQUEST['year__cust_begin']);
+		unset($_REQUEST['day__cust_begin']);
+		unset($_REQUEST['month__cust_end']);
+		unset($_REQUEST['year__cust_end']);
+		unset($_REQUEST['day__cust_end']);
 	}
-	if(count($_REQUEST['cust']))
-	{
-		foreach($_REQUEST['cust'] as $key=>$value)
-		{
-			if($value=='')
+	if (!empty($_REQUEST['cust'])) {
+		foreach ($_REQUEST['cust'] as $key => $value) {
+			if ($value == '')
 				unset($_REQUEST['cust'][$key]);
 		}
 	}
-	switch($location)
-	{
+	switch ($location) {
 		case 'from':
-		break;
+			break;
 
 		case 'where':
-		if(count($_REQUEST['cust']) || count($_REQUEST['cust_begin']))
-                {
-			$fields = DBGet(DBQuery('SELECT TITLE,ID,TYPE,SYSTEM_FIELD FROM custom_fields'),array(),array('ID'));
-                }
-		if(count($_REQUEST['cust']))
-		{
-			foreach($_REQUEST['cust'] as $id => $value)
-			{
-				$field_name = $id;
-				$id = substr($id,7);
-				if($fields[$id][1]['SYSTEM_FIELD'] == 'Y')
-					$field_name = strtoupper(str_replace(' ','_',$fields[$id][1]['TITLE']));
-				if($value!='')
-				{
-					switch($fields[$id][1]['TYPE'])
-					{
-						case 'radio':
-							$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].': </b></font>';
-							if($value=='Y')
-							{
-								$string .= ' and s.'.$field_name.'=\''.$value.'\' ';
-								$_openSIS['SearchTerms'] .= 'Yes';
-							}
-							elseif($value=='N')
-							{
-								$string .= ' and (s.'.$field_name.'!=\'Y\' OR s.'.$field_name.' IS NULL) ';
-								$_openSIS['SearchTerms'] .= 'No';
-							}
-							$_openSIS['SearchTerms'] .= '<BR>';
-						break;
+			if (!empty($_REQUEST['cust']) || !empty($_REQUEST['cust_begin'])) {
+				$fields = DBGet(DBQuery('SELECT TITLE,ID,TYPE,SYSTEM_FIELD FROM custom_fields'), array(), array('ID'));
+			}
+			if (!empty($_REQUEST['cust'])) {
+				foreach ($_REQUEST['cust'] as $id => $value) {
+					$field_name = $id;
+					$id = substr($id, 7);
+					if ($fields[$id][1]['SYSTEM_FIELD'] == 'Y')
+						$field_name = strtoupper(str_replace(' ', '_', $fields[$id][1]['TITLE']));
+					if ($value != '') {
+						switch ($fields[$id][1]['TYPE']) {
+							case 'radio':
+								$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ': </b></font>';
+								if ($value == 'Y') {
+									$string .= ' and s.' . $field_name . '=\'' . $value . '\' ';
+									$_openSIS['SearchTerms'] .= 'Yes';
+								} elseif ($value == 'N') {
+									$string .= ' and (s.' . $field_name . '!=\'Y\' OR s.' . $field_name . ' IS NULL) ';
+									$_openSIS['SearchTerms'] .= 'No';
+								}
+								$_openSIS['SearchTerms'] .= '<BR>';
+								break;
 
-						case 'codeds':
-							$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].': </b></font>';
-							if($value=='!')
-							{
-								$string .= ' and (s.'.$field_name.'=\'\' OR s.'.$field_name.' IS NULL) ';
-								$_openSIS['SearchTerms'] .= 'No Value';
-							}
-							else
-							{
-								$string .= ' and s.'.$field_name.'=\''.$value.'\' ';
-								$_openSIS['SearchTerms'] .= $value;
-							}
-							$_openSIS['SearchTerms'] .= '<BR>';
-							break;
+							case 'codeds':
+								$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ': </b></font>';
+								if ($value == '!') {
+									$string .= ' and (s.' . $field_name . '=\'\' OR s.' . $field_name . ' IS NULL) ';
+									$_openSIS['SearchTerms'] .= 'No Value';
+								} else {
+									$string .= ' and s.' . $field_name . '=\'' . $value . '\' ';
+									$_openSIS['SearchTerms'] .= $value;
+								}
+								$_openSIS['SearchTerms'] .= '<BR>';
+								break;
 
-						case 'select':
-							$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].': </b></font>';
-							if($value=='!')
-							{
-								$string .= ' and (s.'.$field_name.'=\'\' OR s.'.$field_name.' IS NULL) ';
-								$_openSIS['SearchTerms'] .= 'No Value';
-							}
-							else
-							{
-								$string .= ' and s.'.$field_name.'=\''.$value.'\' ';
-								$_openSIS['SearchTerms'] .= $value;
-							}
-							$_openSIS['SearchTerms'] .= '<BR>';
-							break;
+							case 'select':
+								$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ': </b></font>';
+								if ($value == '!') {
+									$string .= ' and (s.' . $field_name . '=\'\' OR s.' . $field_name . ' IS NULL) ';
+									$_openSIS['SearchTerms'] .= 'No Value';
+								} else {
+									$string .= ' and s.' . $field_name . '=\'' . $value . '\' ';
+									$_openSIS['SearchTerms'] .= $value;
+								}
+								$_openSIS['SearchTerms'] .= '<BR>';
+								break;
 
-						case 'autos':
-							$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].': </b></font>';
-							if($value=='!')
-							{
-								$string .= ' and (s.'.$field_name.'=\'\' OR s.'.$field_name.' IS NULL) ';
-								$_openSIS['SearchTerms'] .= 'No Value';
-							}
-							else
-							{
-								$string .= ' and s.'.$field_name.'=\''.$value.'\' ';
-								$_openSIS['SearchTerms'] .= $value;
-							}
-							$_openSIS['SearchTerms'] .= '<BR>';
-							break;
+							case 'autos':
+								$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ': </b></font>';
+								if ($value == '!') {
+									$string .= ' and (s.' . $field_name . '=\'\' OR s.' . $field_name . ' IS NULL) ';
+									$_openSIS['SearchTerms'] .= 'No Value';
+								} else {
+									$string .= ' and s.' . $field_name . '=\'' . $value . '\' ';
+									$_openSIS['SearchTerms'] .= $value;
+								}
+								$_openSIS['SearchTerms'] .= '<BR>';
+								break;
 
-						case 'edits':
-							$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].': </b></font>';
-							if($value=='!')
-							{
-								$string .= ' and (s.'.$field_name.'=\'\' OR s.'.$field_name.' IS NULL) ';
-								$_openSIS['SearchTerms'] .= 'No Value';
-							}
-							elseif($value=='~')
-							{
-								$string .= " and position('\n'||s.$field_name||'\r' IN '\n'||(SELECT SELECT_OPTIONS FROM custom_fields WHERE ID='".$id."')||'\r')=0 ";
-								$_openSIS['SearchTerms'] .= 'Other';
-							}
-							else
-							{
-								$string .= ' and s.'.$field_name.'=\''.$value.'\' ';
-								$_openSIS['SearchTerms'] .= $value;
-							}
-							$_openSIS['SearchTerms'] .= '<BR>';
-							break;
+							case 'edits':
+								$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ': </b></font>';
+								if ($value == '!') {
+									$string .= ' and (s.' . $field_name . '=\'\' OR s.' . $field_name . ' IS NULL) ';
+									$_openSIS['SearchTerms'] .= 'No Value';
+								} elseif ($value == '~') {
+									$string .= " and position('\n'||s.$field_name||'\r' IN '\n'||(SELECT SELECT_OPTIONS FROM custom_fields WHERE ID='" . $id . "')||'\r')=0 ";
+									$_openSIS['SearchTerms'] .= 'Other';
+								} else {
+									$string .= ' and s.' . $field_name . '=\'' . $value . '\' ';
+									$_openSIS['SearchTerms'] .= $value;
+								}
+								$_openSIS['SearchTerms'] .= '<BR>';
+								break;
 
-						case 'text':
-							if(substr($value,0,2)=='\"' && substr($value,-2)=='\"')
-							{
-								$string .= ' and s.'.$field_name.'=\''.substr($value,2,-2).'\' ';
-								$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].': </b></font>'.substr($value,2,-2).'<BR>';
-							}
-							else
-							{
-								$string .= ' and LOWER(s.'.$field_name.') LIKE \''.strtolower($value).'%\' ';
-                                                                if($exp==1)
-								$_openSIS['Search'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].' starts with: </b></font>'.$value.'<BR>';
-                                                            elseif($exp==2){
-                                                                $_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].' starts with: </b></font>'.$value.'<BR>';
-                                                            }
-                                                             else {
-                                                                          $_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].' starts with: </b></font>'.$value.'<BR>';
-                                                            }
-							}
-						break;
+							case 'text':
+								if (substr($value, 0, 2) == '\"' && substr($value, -2) == '\"') {
+									$string .= ' and s.' . $field_name . '=\'' . substr($value, 2, -2) . '\' ';
+									$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ': </b></font>' . substr($value, 2, -2) . '<BR>';
+								} else {
+									$string .= ' and LOWER(s.' . $field_name . ') LIKE \'' . strtolower($value) . '%\' ';
+									if ($exp == 1)
+										$_openSIS['Search'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ' starts with: </b></font>' . $value . '<BR>';
+									elseif ($exp == 2) {
+										$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ' starts with: </b></font>' . $value . '<BR>';
+									} else {
+										$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ' starts with: </b></font>' . $value . '<BR>';
+									}
+								}
+								break;
+						}
 					}
 				}
 			}
-		}
-		if(count($_REQUEST['cust_begin']))
-		{
-			foreach($_REQUEST['cust_begin'] as $id => $value)
-			{
-				$field_name = $id;
-				$id = substr($id,7);
-				$column_name = $field_name;
-				if($fields[$id][1]['SYSTEM_FIELD'] == 'Y')
-					$column_name = strtoupper(str_replace(' ','_',$fields[$id][1]['TITLE']));
-				if($fields[$id][1]['TYPE']=='numeric')
-				{
-					$_REQUEST['cust_end'][$field_name] = par_rep('/[^0-9.-]+/','',$_REQUEST['cust_end'][$field_name]);
-					$value = par_rep('/[^0-9.-]+/','',$value);
-				}
+			if (!empty($_REQUEST['cust_begin'])) {
+				foreach ($_REQUEST['cust_begin'] as $id => $value) {
+					$field_name = $id;
+					$id = substr($id, 7);
+					$column_name = $field_name;
+					if ($fields[$id][1]['SYSTEM_FIELD'] == 'Y')
+						$column_name = strtoupper(str_replace(' ', '_', $fields[$id][1]['TITLE']));
+					if ($fields[$id][1]['TYPE'] == 'numeric') {
+						$_REQUEST['cust_end'][$field_name] = par_rep('/[^0-9.-]+/', '', $_REQUEST['cust_end'][$field_name]);
+						$value = par_rep('/[^0-9.-]+/', '', $value);
+					}
 
-				if($_REQUEST['cust_begin'][$field_name]!='' && $_REQUEST['cust_end'][$field_name]!='')
-				{
-					if($fields[$id][1]['TYPE']=='numeric' && $_REQUEST['cust_begin'][$field_name]>$_REQUEST['cust_end'][$field_name])
-					{
-						$temp = $_REQUEST['cust_end'][$field_name];
-						$_REQUEST['cust_end'][$field_name] = $value;
-						$value = $temp;
+					if ($_REQUEST['cust_begin'][$field_name] != '' && $_REQUEST['cust_end'][$field_name] != '') {
+						if ($fields[$id][1]['TYPE'] == 'numeric' && $_REQUEST['cust_begin'][$field_name] > $_REQUEST['cust_end'][$field_name]) {
+							$temp = $_REQUEST['cust_end'][$field_name];
+							$_REQUEST['cust_end'][$field_name] = $value;
+							$value = $temp;
+						}
+						$string .= ' and s.' . $column_name . ' BETWEEN \'' . date('Y-m-d', strtotime($value)) . '\' AND \'' . date('Y-m-d', strtotime($_REQUEST['cust_end'][$field_name])) . '\' ';
+						if ($fields[$id][1]['TYPE'] == 'date')
+							$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ' between: </b></font>' . date('M/d/Y', strtotime($value)) . ' &amp; ' . date('M/d/Y', strtotime($_REQUEST['cust_end'][$field_name])) . '<BR>';
+						else
+							$_openSIS['SearchTerms'] .= '<font color=gray><b>' . $fields[$id][1]['TITLE'] . ' between: </b></font>' . $value . ' &amp; ' . $_REQUEST['cust_end'][$field_name] . '<BR>';
 					}
-					$string .= ' and s.'.$column_name.' BETWEEN \''.date('Y-m-d',strtotime($value)).'\' AND \''.date('Y-m-d',strtotime($_REQUEST['cust_end'][$field_name])).'\' ';
-					if($fields[$id][1]['TYPE']=='date')
-						$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].' between: </b></font>'.date('M/d/Y',strtotime($value)).' &amp; '.date('M/d/Y',strtotime($_REQUEST['cust_end'][$field_name])).'<BR>';
-					else
-						$_openSIS['SearchTerms'] .= '<font color=gray><b>'.$fields[$id][1]['TITLE'].' between: </b></font>'.$value.' &amp; '.$_REQUEST['cust_end'][$field_name].'<BR>';
 				}
 			}
-		}
 
-		break;
+			break;
 	}
-		return $string;
+	return $string;
 }
-?>

--- functions/CustomFunctionsFnc.php ---
@@ -118,7 +118,7 @@ function getCSS() {
     if (User('STAFF_ID')) {
         $sql = 'select value from program_user_config where title=\'THEME\' and user_id=' . User('STAFF_ID');
         $data = DBGet(DBQuery($sql));
-        if (count($data[1]))
+        if (is_countable($data[1]) && count($data[1]))
             $css = $data[1]['VALUE'];
     }
     return $css;
@@ -484,7 +484,8 @@ function for_error_sch() {
 # ------------------------------ Solution for screen error in Group scheduling end------------------------------------- #
 ################################### Select input with Disable Onlcik edit feature ##############
 
-function SelectInput_Disonclick($value, $name, $title = '', $options, $allow_na = 'N/A', $extra = '', $div = true) {
+function SelectInput_Disonclick($value, $name, $title, $options, $allow_na = 'N/A', $extra = '', $div = true) {
+    if(empty($title)) $title = '';
     if (Preferences('HIDDEN') != 'Y')
         $div = false;
 
@@ -780,7 +781,9 @@ function gradeAssociation($cp_id) {
 
 ###########################################################################
 
-function singleQuoteReplace($param1 = false, $param2 = false, $param3) {
+function singleQuoteReplace($param1, $param2, $param3) {
+    if(empty($param1))  $param1 = false;
+    if(empty($param2))  $param2 = false;
     return str_replace("'", "''", str_replace("\'", "'", $param3));
 }
 

--- functions/DbDateFnc.php ---
@@ -47,21 +47,27 @@ function DaySnameMod($value,$pattern='1')
 	$days=array('Monday'=>'M','Tuesday'=>'T','Wednesday'=>'W','Thursday'=>'H','Friday'=>'F','Saturday'=>'S','Sunday'=>'U');
         if(in_array($value,$days))
         {
-        if($pattern==1)
-        return $days[$value];
-        else
-        return array_search($value,$days);
+            if($pattern==1)
+            return $days[$value];
+            else
+            return array_search($value,$days);
         }
         else
         {
             $val_arr=str_split($value);
             $key="";
             foreach($val_arr as $val)
             {
-                $key.=array_search($val,$days);
+                if (array_search($val, $days) != false) {
+                    if ($checker == true) {
+                            $key .= ', ';
+                    }
+                    $key .= (array_search($val, $days));
+                    $checker = true;
+                }
             }
             //$key_arr=str_split($key);
-            return $key;
+            return $key; 
         }
 }
 function MonthFormatter($value,$pattern='1')

--- functions/DbGetFnc.php ---
@@ -42,52 +42,45 @@
 	$array[1031806][1] = array('STUDENT_ID'=>'1031806');
 
 	The third parameter should be an array -- ordered by the importance of the index.  So, if you select
-	COURSE_ID,COURSE_WEIGHT,COURSE_PERIOD_ID from course_periods, and choose to index by
+	COURSE_ID,COURSE_WEIGHT,COURSE_PERIOD_ID from COURSE_PERIODS, and choose to index by
 	array('COURSE_ID','COURSE_WEIGHT','COURSE_PERIOD_ID') then you will be returned an array formatted like this:
 	$array[10101][1][402345][1] = array('COURSE_ID'=>'10101','COURSE_WEIGHT'=>'1','COURSE_PERIOD_ID'=>'402345')
 */
-function DBGet($QI,$functions=array(),$index=array())
-{	global $THIS_RET;
+function DBGet($QI, $functions = array(),$index = array())
+{
+	global $THIS_RET;
 
-	$index_count = count($index);
+	$index_count = is_countable($index) ? count($index) : false;
 	$tmp_THIS_RET = $THIS_RET;
 
 	$results = array();
-	while($RET=db_fetch_row($QI))
-	{
+	while ($RET = db_fetch_row($QI)) {
 		$THIS_RET = $RET;
-
-		if($index_count)
-		{
+		if ($index_count) {
 			$ind = '';
-			foreach($index as $col)
-				$ind .= "['".singleQuoteReplace("'","\'",$THIS_RET[$col])."']";
-			eval('$s'.$ind.'++;$this_ind=$s'.$ind.';');
+			foreach ($index as $col)
+				$ind .= "['" . str_replace("'", "\'", $THIS_RET[$col]) . "']";
+			eval('$s' . $ind . '++;$this_ind=$s' . $ind . ';');
+		} else{
+			if(isset($s))$s++; // 1-based if no index specified
+			else $s=1;
 		}
-		else
-			$s++; // 1-based if no index specified
-		foreach($RET as $key=>$value)
-		{
-                    if(strlen($value) == strlen(strip_tags($value)))
-                    $value=  htmlentities($value);
-			if($functions[$key] && function_exists($functions[$key]))
-			{
-				if($index_count)
-					eval('$results'.$ind.'[$this_ind][$key] = $functions[$key]($value,$key);');
+		foreach ($RET as $key => $value) {
+			if ($functions[$key] && function_exists($functions[$key])) {
+				if ($index_count)
+					eval('$results' . $ind . '[$this_ind][$key] = $functions[$key]($value,$key);');
 				else
-					$results[$s][$key] = $functions[$key]($value,$key);
-			}
-			else
-			{
-				if($index_count)
-					eval('$results'.$ind.'[$this_ind][$key] = $value;');
+					$results[$s][$key] = $functions[$key]($value, $key);
+			} else {
+				if ($index_count)
+					eval('$results' . $ind . '[$this_ind][$key] = $value;');
 				else
 					$results[$s][$key] = $value;
 			}
 		}
 	}
 
 	$THIS_RET = $tmp_THIS_RET;
+
 	return $results;
 }
-?>
\ No newline at end of file

--- functions/DeletePromptFnc.php ---
@@ -159,7 +159,8 @@ function DeletePromptModContacts($title, $action = 'delete', $close = 'n') {
         return true;
 }
 
-function DeleteMail($title, $action = 'delete', $location, $isTrash = 0) {
+function DeleteMail($title, $action, $location, $isTrash = 0) {
+    if(empty($action)) $action = 'delete';
     $tmp_REQUEST = $_REQUEST;
     unset($tmp_REQUEST['delete_ok']);
 
@@ -189,7 +190,16 @@ function DeletePromptMod($title, $queryString = '', $action = 'delete') {
     if (!$_REQUEST['delete_ok'] && !$_REQUEST['delete_cancel']) {
         echo '<BR>';
         PopTable('header', _confirm ." ". (strpos($action, ' ') === false ? ucwords($action) : $action));
-        echo "<CENTER><h4>"._areYouSureYouWantTo." $action "._that." " . (strpos($title, ' ') === false ? ucwords($title) : $title) . "?</h4><br><FORM action=$PHP_tmp_SELF&delete_ok=1 METHOD=POST><INPUT type=submit class=\"btn btn-danger\" value="._ok.">&nbsp;<INPUT type=button class=\"btn btn-primary\" name=delete_cancel value="._cancel." onclick='load_link(\"Modules.php?modname=$_REQUEST[modname]&$queryString\");'></FORM></CENTER>";
+        if($_REQUEST['modname']=='scheduling/Schedule.php' && $_REQUEST['day_date'] && $_REQUEST['month_date'] && $_REQUEST['year_date']){
+            $day = $_REQUEST['day_date'];
+            $month   = $_REQUEST['month_date'];
+            $year = $_REQUEST['year_date'];
+
+            echo "<CENTER><h4>"._areYouSureYouWantTo." $action "._that." " . (strpos($title, ' ') === false ? ucwords($title) : $title) . "?</h4><br><FORM action=$PHP_tmp_SELF&delete_ok=1 METHOD=POST><INPUT type=submit class=\"btn btn-danger\" value="._ok.">&nbsp;<INPUT type=button class=\"btn btn-primary\" name=delete_cancel value="._cancel." onclick='load_link(\"Modules.php?modname=$_REQUEST[modname]&month_date=$month&day_date=$day&year_date=$year&$queryString\");'></FORM></CENTER>";
+        }
+        else{
+            echo "<CENTER><h4>"._areYouSureYouWantTo." $action "._that." " . (strpos($title, ' ') === false ? ucwords($title) : $title) . "?</h4><br><FORM action=$PHP_tmp_SELF&delete_ok=1 METHOD=POST><INPUT type=submit class=\"btn btn-danger\" value="._ok.">&nbsp;<INPUT type=button class=\"btn btn-primary\" name=delete_cancel value="._cancel." onclick='load_link(\"Modules.php?modname=$_REQUEST[modname]&$queryString\");'></FORM></CENTER>";
+        }
         PopTable('footer');
         return false;
     } else
@@ -422,7 +432,7 @@ function DeletePrompt_Sections($title, $action = 'delete') {
         return true;
 }
 
-function DeletePromptBigString($title = '', $queryString = '') {
+function DeletePromptBigString($title = '', $queryString = '', $action = 'delete') {
 
     $tmp_REQUEST = $_REQUEST;
 

--- functions/DrawPngFnc.php ---
@@ -39,14 +39,14 @@ function DrawLogo()
     
                         $sch_img_info= DBGet(DBQuery('SELECT * FROM user_file_upload WHERE SCHOOL_ID='. UserSchool().' AND FILE_INFO=\'schlogo\''));
                         if(!$_REQUEST['new_school'] && count($sch_img_info)>0){
-//                            $image="<img src='data:image/jpeg;base64,".base64_encode($sch_img_info[1]['CONTENT'])."' class=img-responsive />";
+                            $image="<img src='data:image/jpeg;base64,".base64_encode($sch_img_info[1]['CONTENT'])."' width='60' style='float: left;' class='m-r-15 img-responsive' alt='Logo'/>";
 //                        $logo_ret = DBGet(DBQuery('SELECT VALUE FROM program_config WHERE school_id=\''.  UserSchool().'\' AND program=\'SchoolLogo\''));    
 //                        if($logo_ret && file_exists($logo_ret[1]['VALUE'])){
-                            $logo=$logo_ret[1]['VALUE'];
-                            $size = getimagesize($logo);
-                            $width=$size[0];
-                            $height=$size[1];
-                            $image='<img src="data:image/jpeg;base64,'.base64_encode($sch_img_info[1]['CONTENT']).'" width="60" style="float: left;" class="m-r-15" alt="Logo" />';
+                            //$logo=$logo_ret[1]['VALUE'];
+                            // $size = getimagesize($logo);
+                            // $width=$size[0];
+                            // $height=$size[1];
+                            // $image='<img src="data:image/jpeg;base64,'.base64_encode($sch_img_info[1]['CONTENT']).'" width="60" style="float: left;" class="m-r-15" alt="Logo" />';
                         }
                          else {
                              $image= '<img src="assets/logo.png" width="60" style="float: left;" class="m-r-15" alt="Logo" />';

--- functions/ErrorMessageFnc.php ---
@@ -47,7 +47,7 @@
 // problems.  Also, the error display will be standardized.
 // If a 2ND is sent, the list will not be treated as errors, but shown anyway
 function ErrorMessage($errors, $code = 'error', $options = '') {
-    $errors = array_unique($errors);
+    $errors = is_array($errors) ? array_unique($errors) : [];
     if ($errors) {
         if (count($errors) == 1) {
             if ($code == 'error' || $code == 'fatal' || $code == 'note')
@@ -149,7 +149,7 @@ function ErrorMessage1($errors, $code = 'error') {
             $return .= '</div>';
             $return .= '<div class="col-md-3">';
             $return .= '<div class="version-info">';
-            $return .= 'Version <b>' . $get_app_details[1][VALUE] . '</b>';
+            $return .= 'Version <b>' . $get_app_details[1]['VALUE'] . '</b>';
             $return .= '</div>';
             $return .= '</div>';
             $return .= '</div>';

--- functions/GetStaffListFnc.php ---
@@ -25,153 +25,143 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-function GetStaffList(& $extra)
-{	global $profiles_RET;
-	$functions = array('PROFILE'=>'makeProfile');
-	switch(User('PROFILE'))
-	{
+function GetStaffList(&$extra)
+{
+	global $profiles_RET;
+	$functions = array('PROFILE' => 'makeProfile');
+	switch (User('PROFILE')) {
 		case 'admin':
-		$profiles_RET = DBGet(DBQuery('SELECT * FROM user_profiles'),array(),array('ID'));
-                     $sql = 'SELECT DISTINCT CONCAT(TRIM(s.LAST_NAME),\', \',s.FIRST_NAME,\' \',COALESCE(s.MIDDLE_NAME,\' \')) AS FULL_NAME,
-                        la.USERNAME,s.PROFILE,s.IS_DISABLE,s.PROFILE_ID,s.IS_DISABLE,s.STAFF_ID '.$extra['SELECT'].'
+			$profiles_RET = DBGet(DBQuery('SELECT * FROM user_profiles'), array(), array('ID'));
+			$sql = 'SELECT DISTINCT CONCAT(TRIM(s.LAST_NAME),\', \',s.FIRST_NAME,\' \',COALESCE(s.MIDDLE_NAME,\' \')) AS FULL_NAME,
+                        la.USERNAME,s.PROFILE,s.IS_DISABLE,s.PROFILE_ID,s.IS_DISABLE,s.STAFF_ID ' . $extra['SELECT'] . '
                         FROM
-                        people s '.$extra['FROM'].',login_authentication la,students st,student_enrollment ssm
+                        people s ' . $extra['FROM'] . ',login_authentication la,students st,student_enrollment ssm
                         WHERE
-                        st.STUDENT_ID=ssm.STUDENT_ID AND ssm.SYEAR='.UserSyear().'  AND s.PROFILE IS NOT NULL AND s.PROFILE_ID in (SELECT ID FROM user_profiles WHERE PROFILE=\'parent\') AND s.STAFF_ID=la.USER_ID AND la.PROFILE_ID in (SELECT ID FROM user_profiles WHERE PROFILE=\'parent\')';
-		if($_REQUEST['_search_all_schools']!='Y')
-			$sql .= ' AND ssm.SCHOOL_ID='.UserSchool().' AND s.STAFF_ID IN (SELECT PERSON_ID FROM students_join_people sjp WHERE ssm.STUDENT_ID = sjp.STUDENT_ID
-AND ssm.SCHOOL_ID='.UserSchool().' AND ssm.SYEAR='.UserSyear().' AND (ssm.end_date is NULL or ssm.end_date>="'.DBDate().'")) ';
-                   else
-                       $sql .= ' AND ssm.SCHOOL_ID IN('.  GetUserSchools(UserID(),true).')  AND s.STAFF_ID IN (SELECT PERSON_ID FROM students_join_people sjp WHERE ssm.STUDENT_ID = sjp.STUDENT_ID
-AND ssm.SCHOOL_ID IN ('.  GetUserSchools(UserID(),true).') AND ssm.SYEAR='.UserSyear().' AND (ssm.end_date is NULL or ssm.end_date>="'.DBDate().'"))';
-		if($_REQUEST['_dis_user']!='Y')
-			$sql .= ' AND (s.IS_DISABLE<>\'Y\' OR  s.IS_DISABLE IS NULL)';
-		if($_REQUEST['username'])
-			$sql .= 'AND UPPER(la.USERNAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['username'])).'%\' ';
-		if($_REQUEST['last'])
-			$sql .= 'AND UPPER(s.LAST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['last'])).'%\' ';
-		if($_REQUEST['first'])
-			$sql .= 'AND UPPER(s.FIRST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['first'])).'%\' ';
-		if($_REQUEST['profile'])
-                {
-                    if(is_number($_REQUEST['profile'])==FALSE)
-                        $sql .= ' AND s.PROFILE=\''.$_REQUEST['profile'].'\' AND s.PROFILE_ID IS NULL ';
-                     else 
-                        $sql .= ' AND s.PROFILE_ID=\''.$_REQUEST['profile'].'\' ';
-                }
-		$sql .= $extra['WHERE'].' ';
-                if ($extra['GROUP'])
-                    $sql .= ' GROUP BY ' . $extra['GROUP'];
-		$sql .= 'ORDER BY FULL_NAME';
-/**************************************for Back to User*************************************************************/
-            if($_SESSION['staf_search']['sql'] && $_REQUEST['return_session']) {
-               $sql= $_SESSION['staf_search']['sql'];
-            }
-            else
-            { if ($_REQUEST['sql_save_session_staf'])
-                    $_SESSION['staf_search']['sql'] = $sql;
-            }
-/***************************************************************************************************/
-		if ($extra['functions'])
-                {
-			$functions += $extra['functions'];
-                }
-
-		return DBGet(DBQuery($sql),$functions);
-		break;
+                        st.STUDENT_ID=ssm.STUDENT_ID AND ssm.SYEAR=' . UserSyear() . '  AND s.PROFILE IS NOT NULL AND s.PROFILE_ID in (SELECT ID FROM user_profiles WHERE PROFILE=\'parent\') AND s.STAFF_ID=la.USER_ID AND la.PROFILE_ID in (SELECT ID FROM user_profiles WHERE PROFILE=\'parent\')';
+			if ($_REQUEST['_search_all_schools'] != 'Y')
+				$sql .= ' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND s.STAFF_ID IN (SELECT PERSON_ID FROM students_join_people sjp WHERE ssm.STUDENT_ID = sjp.STUDENT_ID
+AND ssm.SCHOOL_ID=' . UserSchool() . ' AND ssm.SYEAR=' . UserSyear() . ' AND (ssm.end_date is NULL or ssm.end_date>="' . DBDate('mysql') . '")) ';
+			else
+				$sql .= ' AND ssm.SCHOOL_ID IN(' .  GetUserSchools(UserID(), true) . ')  AND s.STAFF_ID IN (SELECT PERSON_ID FROM students_join_people sjp WHERE ssm.STUDENT_ID = sjp.STUDENT_ID
+AND ssm.SCHOOL_ID IN (' .  GetUserSchools(UserID(), true) . ') AND ssm.SYEAR=' . UserSyear() . ' AND (ssm.end_date is NULL or ssm.end_date>="' . DBDate('mysql') . '"))';
+			if ($_REQUEST['_dis_user'] != 'Y')
+				$sql .= ' AND (s.IS_DISABLE<>\'Y\' OR  s.IS_DISABLE IS NULL)';
+			if ($_REQUEST['username'])
+				$sql .= 'AND UPPER(la.USERNAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['username'])) . '%\' ';
+			if ($_REQUEST['last'])
+				$sql .= 'AND UPPER(s.LAST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['last'])) . '%\' ';
+			if ($_REQUEST['first'])
+				$sql .= 'AND UPPER(s.FIRST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['first'])) . '%\' ';
+			if ($_REQUEST['profile']) {
+				if (is_number($_REQUEST['profile']) == FALSE)
+					$sql .= ' AND s.PROFILE=\'' . $_REQUEST['profile'] . '\' AND s.PROFILE_ID IS NULL ';
+				else
+					$sql .= ' AND s.PROFILE_ID=\'' . $_REQUEST['profile'] . '\' ';
+			}
+			$sql .= $extra['WHERE'] . ' ';
+			if ($extra['GROUP'])
+				$sql .= ' GROUP BY ' . $extra['GROUP'];
+			$sql .= 'ORDER BY FULL_NAME';
+			/**************************************for Back to User*************************************************************/
+			if ($_SESSION['staf_search']['sql'] && $_REQUEST['return_session']) {
+				$sql = $_SESSION['staf_search']['sql'];
+			} else {
+				if ($_REQUEST['sql_save_session_staf'])
+					$_SESSION['staf_search']['sql'] = $sql;
+			}
+			/***************************************************************************************************/
+			if ($extra['functions']) {
+				$functions += $extra['functions'];
+			}
+
+			return DBGet(DBQuery($sql), $functions);
+			break;
 	}
 }
-function GetUserStaffList(& $extra)
-{	global $profiles_RET;
-	$functions = array('PROFILE'=>'makeProfile');
-        switch(User('PROFILE'))
-	{
+function GetUserStaffList(&$extra)
+{
+	global $profiles_RET;
+	$functions = array('PROFILE' => 'makeProfile');
+	switch (User('PROFILE')) {
 		case 'admin':
-		$profiles_RET = DBGet(DBQuery('SELECT * FROM user_profiles'),array(),array('ID'));
-                  $sql = 'SELECT DISTINCT CONCAT(TRIM(s.LAST_NAME),\', \',s.FIRST_NAME,\' \',COALESCE(s.MIDDLE_NAME,\' \')) AS FULL_NAME,
-					s.PROFILE,s.IS_DISABLE,s.PROFILE_ID,ssr.END_DATE,s.STAFF_ID '.$extra['SELECT'].'
+			$profiles_RET = DBGet(DBQuery('SELECT * FROM user_profiles'), array(), array('ID'));
+			$sql = 'SELECT DISTINCT CONCAT(TRIM(s.LAST_NAME),\', \',s.FIRST_NAME,\' \',COALESCE(s.MIDDLE_NAME,\' \')) AS FULL_NAME,
+					s.PROFILE,s.IS_DISABLE,s.PROFILE_ID,ssr.END_DATE,s.STAFF_ID ' . $extra['SELECT'] . '
                 FROM
-					staff s INNER JOIN staff_school_relationship ssr USING(staff_id) '.$extra['FROM'].',login_authentication la
+					staff s INNER JOIN staff_school_relationship ssr USING(staff_id) ' . $extra['FROM'] . ',login_authentication la
 				WHERE
-					(s.PROFILE_ID!=4 OR s.PROFILE_ID IS NULL) AND ssr.SYEAR=\''.UserSyear().'\' AND s.STAFF_ID=la.USER_ID AND la.PROFILE_ID NOT IN (3,4)';
-                    if(User('PROFILE_ID')=='1')
-                    $sql.=' AND s.PROFILE_ID!=0 ';
-                    
-		if($_REQUEST['_search_all_schools']!='Y')
-			$sql .= ' AND school_id='.  UserSchool().' ';
-                   else
-                       $sql .= ' AND school_id IN('.  GetUserSchools(UserID(),true).') ';
-		if($_REQUEST['_dis_user']!='Y')
-			$sql .= ' AND (s.IS_DISABLE<>\'Y\' OR  s.IS_DISABLE IS NULL) AND (ssr.END_DATE>=\''.date('Y-m-d').'\' OR ssr.END_DATE=\'0000-00-00\' OR ssr.END_DATE IS NULL)';
-		if($_REQUEST['username'])
-			$sql .= 'AND UPPER(la.USERNAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['username'])).'%\' ';
-		if($_REQUEST['last'])
-			$sql .= 'AND UPPER(s.LAST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['last'])).'%\' ';
-		if($_REQUEST['first'])
-			$sql .= 'AND UPPER(s.FIRST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['first'])).'%\' ';
-		if($_REQUEST['profile']=="")
-                {
-                     $sql .= ' ';
-                }
-                else
-                {
-                if($_REQUEST['profile']==0 || $_REQUEST['profile'])
-                {
-                    if(is_number($_REQUEST['profile'])==FALSE)
-                        $sql .= ' AND s.PROFILE=\''.$_REQUEST['profile'].'\' AND s.PROFILE_ID IS NULL ';
-                     else 
-                        $sql .= ' AND s.PROFILE_ID=\''.$_REQUEST['profile'].'\' ';
-                }
-                }
-
-		$sql .= $extra['WHERE'].' ';
-
-		if (strpos($_REQUEST['modname'], 'users/TeacherPrograms.php') !== false)
-        {
-            $sql .= ' AND s.PROFILE_ID NOT IN(0,1) '; 
-        }
-
-                if ($extra['GROUP'])
-                    $sql .= ' GROUP BY ' . $extra['GROUP'];
-		$sql .= 'ORDER BY FULL_NAME ';
-/**************************************for Back to User*************************************************************/
-            if($_SESSION['staf_search']['sql'] && $_REQUEST['return_session']) {
-               $sql= $_SESSION['staf_search']['sql'];
-            }
-            else
-            {
-                if ($_REQUEST['sql_save_session_staf'])
-                    $_SESSION['staf_search']['sql'] = $sql;
-
-            if (strpos($_REQUEST['modname'], 'users/TeacherPrograms.php') !== false)
-	        {
-	            $_SESSION['staf_search_hold'] = $sql;
-            }
-        }
-
-/***************************************************************************************************/
-		if ($extra['functions'])
-			$functions += $extra['functions'];
-//echo $sql;
-		return DBGet(DBQuery($sql),$functions);
-		break;
+					(s.PROFILE_ID!=4 OR s.PROFILE_ID IS NULL) AND ssr.SYEAR=\'' . UserSyear() . '\' AND s.STAFF_ID=la.USER_ID AND la.PROFILE_ID NOT IN (3,4)';
+			if (User('PROFILE_ID') == '1')
+				$sql .= ' AND s.PROFILE_ID!=0 ';
+
+			if ($_REQUEST['_search_all_schools'] != 'Y')
+				$sql .= ' AND school_id=' .  UserSchool() . ' ';
+			else
+				$sql .= ' AND school_id IN(' .  GetUserSchools(UserID(), true) . ') ';
+			if ($_REQUEST['_dis_user'] != 'Y')
+				$sql .= ' AND (s.IS_DISABLE<>\'Y\' OR  s.IS_DISABLE IS NULL) AND (ssr.END_DATE>=\'' . date('Y-m-d') . '\' OR ssr.END_DATE<\'0000-01-01\' OR ssr.END_DATE IS NULL)';
+			if ($_REQUEST['username'])
+				$sql .= 'AND UPPER(la.USERNAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['username'])) . '%\' ';
+			if ($_REQUEST['last'])
+				$sql .= 'AND UPPER(s.LAST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['last'])) . '%\' ';
+			if ($_REQUEST['first'])
+				$sql .= 'AND UPPER(s.FIRST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['first'])) . '%\' ';
+			if ($_REQUEST['profile'] == "") {
+				$sql .= ' ';
+			} else {
+				if ($_REQUEST['profile'] == 0 || $_REQUEST['profile']) {
+					if (is_number($_REQUEST['profile']) == FALSE)
+						$sql .= ' AND s.PROFILE=\'' . $_REQUEST['profile'] . '\' AND s.PROFILE_ID IS NULL ';
+					else
+						$sql .= ' AND s.PROFILE_ID=\'' . $_REQUEST['profile'] . '\' ';
+				}
+			}
+
+			$sql .= $extra['WHERE'] . ' ';
+
+			if (strpos($_REQUEST['modname'], 'users/TeacherPrograms.php') !== false) {
+				$sql .= ' AND s.PROFILE_ID NOT IN(0,1) ';
+			}
+
+			if ($extra['GROUP'])
+				$sql .= ' GROUP BY ' . $extra['GROUP'];
+			$sql .= 'ORDER BY FULL_NAME ';
+			/**************************************for Back to User*************************************************************/
+			if ($_SESSION['staf_search']['sql'] && $_REQUEST['return_session']) {
+				$sql = $_SESSION['staf_search']['sql'];
+			} else {
+				if ($_REQUEST['sql_save_session_staf'])
+					$_SESSION['staf_search']['sql'] = $sql;
+
+				if (strpos($_REQUEST['modname'], 'users/TeacherPrograms.php') !== false) {
+					$_SESSION['staf_search_hold'] = $sql;
+				}
+			}
+
+			/***************************************************************************************************/
+			if ($extra['functions'])
+				$functions += $extra['functions'];
+			//echo $sql;
+			return DBGet(DBQuery($sql), $functions);
+			break;
 	}
 }
 
 
 
 function makeProfile($value)
-{	global $THIS_RET,$profiles_RET;
+{
+	global $THIS_RET, $profiles_RET;
 
-	if($THIS_RET['PROFILE_ID']!='')
+	if ($THIS_RET['PROFILE_ID'] != '')
 		$return = $profiles_RET[$THIS_RET['PROFILE_ID']][1]['TITLE'];
-	elseif($value=='admin')
+	elseif ($value == 'admin')
 		$return = 'Administrator w/Custom';
-	elseif($value=='teacher')
+	elseif ($value == 'teacher')
 		$return = 'Teacher w/Custom';
-	elseif($value=='parent')
+	elseif ($value == 'parent')
 		$return = 'Parent w/Custom';
-	elseif($value=='none')
+	elseif ($value == 'none')
 		$return = 'No Access';
 	else $return = $value;
 
@@ -182,100 +172,86 @@ function makeProfile($value)
 
 # ---------------------------------------- For Missing attn ------------------------------------------------- #
 
-function GetStaffList_Miss_Atn(& $extra)
+function GetStaffList_Miss_Atn(&$extra)
 {
 
-		global $profiles_RET;
-		$functions = array('PROFILE'=>'makeProfile');
-		switch(User('PROFILE'))
-		{
-			case 'admin':
+	global $profiles_RET;
+	$functions = array('PROFILE' => 'makeProfile');
+	switch (User('PROFILE')) {
+		case 'admin':
 			$profiles_RET = DBGet(DBQuery('SELECT * FROM user_profiles'));
 			$sql = 'SELECT CONCAT(TRIM(s.LAST_NAME),\', \',s.FIRST_NAME,\' \',COALESCE(s.MIDDLE_NAME,\' \')) AS FULL_NAME,
-						s.PROFILE,s.PROFILE_ID,s.STAFF_ID '.$extra['SELECT'].'
+						s.PROFILE,s.PROFILE_ID,s.STAFF_ID ' . $extra['SELECT'] . '
 					FROM
-						staff s INNER JOIN staff_school_relationship ssr USING(staff_id) '.$extra['FROM'].'
+						staff s INNER JOIN staff_school_relationship ssr USING(staff_id) ' . $extra['FROM'] . '
 					WHERE
-						ssr.SYEAR=\''.UserSyear().'\'';
-			if($_REQUEST['_search_all_schools']!='Y')
-				$sql .= ' AND ssr.school_id='.UserSchool().' ';
-			if($_REQUEST['username'])
-				$sql .= 'AND UPPER(s.USERNAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['username'])).'%\' ';
-			if($_REQUEST['last'])
-				$sql .= 'AND UPPER(s.LAST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['last'])).'%\' ';
-			if($_REQUEST['first'])
-				$sql .= 'AND UPPER(s.FIRST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['first'])).'%\' ';
-			if($_REQUEST['profile'])
-				$sql .= 'AND s.PROFILE=\''.$_REQUEST['profile'].'\' ';
-
-
-//echo $sql_st = 'SELECT teacher_id FROM missing_attendance mi where school_id=\''.  UserSchool().'\' AND syear=\''.  UserSyear().'\''.$extra['WHERE2'].' UNION SELECT secondary_teacher_id FROM missing_attendance mi where school_id=\''.  UserSchool().'\' AND syear=\''.  UserSyear().'\''.$extra['WHERE2'];
-
-          $sql_st = 'SELECT cp.teacher_id FROM missing_attendance mi,course_periods cp,schools s,course_period_var cpv WHERE mi.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cpv.PERIOD_ID=mi.PERIOD_ID AND s.ID=mi.SCHOOL_ID AND mi.SCHOOL_ID=\''.  UserSchool().'\'   AND (mi.SCHOOL_DATE=cpv.COURSE_PERIOD_DATE OR POSITION(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Thu\',\'H\',(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Sun\',\'U\',SUBSTR(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\'),1,1)))) IN cpv.DAYS)>0)'.$extra['WHERE2'].' UNION select cp.SECONDARY_TEACHER_ID FROM missing_attendance mi,course_periods cp,schools s,course_period_var cpv WHERE mi.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cpv.PERIOD_ID=mi.PERIOD_ID AND s.ID=mi.SCHOOL_ID AND mi.SCHOOL_ID=\''.  UserSchool().'\' AND (mi.SCHOOL_DATE=cpv.COURSE_PERIOD_DATE OR POSITION(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Thu\',\'H\',(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Sun\',\'U\',SUBSTR(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\'),1,1)))) IN cpv.DAYS)>0)'.$extra['WHERE2'];             
-$res_st = DBGet(DBQuery($sql_st));
-//echo count($res_st);
-$a = 0;
-foreach($res_st as $row_st)
-{
-   $teacher_str .= "'".$row_st['TEACHER_ID']."',";
-   $a++;
- 
-}
-
- 		if($a != 0){
-                                        $teacher_str = substr($teacher_str, 0, -1);
-                                        $sql .= 'AND s.STAFF_ID IN ('.$teacher_str.')';
-                                        
- }
-
-
-
-			$sql .= $extra['WHERE'].' ';
-                        if ($extra['GROUP'])
-                    $sql .= ' GROUP BY ' . $extra['GROUP'];
+						ssr.SYEAR=\'' . UserSyear() . '\'';
+			if ($_REQUEST['_search_all_schools'] != 'Y')
+				$sql .= ' AND ssr.school_id=' . UserSchool() . ' ';
+			if ($_REQUEST['username'])
+				$sql .= 'AND UPPER(s.USERNAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['username'])) . '%\' ';
+			if ($_REQUEST['last'])
+				$sql .= 'AND UPPER(s.LAST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['last'])) . '%\' ';
+			if ($_REQUEST['first'])
+				$sql .= 'AND UPPER(s.FIRST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['first'])) . '%\' ';
+			if ($_REQUEST['profile'])
+				$sql .= 'AND s.PROFILE=\'' . $_REQUEST['profile'] . '\' ';
+
+
+			//echo $sql_st = 'SELECT teacher_id FROM missing_attendance mi where school_id=\''.  UserSchool().'\' AND syear=\''.  UserSyear().'\''.$extra['WHERE2'].' UNION SELECT secondary_teacher_id FROM missing_attendance mi where school_id=\''.  UserSchool().'\' AND syear=\''.  UserSyear().'\''.$extra['WHERE2'];
+
+			$sql_st = 'SELECT cp.teacher_id FROM missing_attendance mi,course_periods cp,schools s,course_period_var cpv WHERE mi.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cpv.PERIOD_ID=mi.PERIOD_ID AND s.ID=mi.SCHOOL_ID AND mi.SCHOOL_ID=\'' .  UserSchool() . '\'   AND (mi.SCHOOL_DATE=cpv.COURSE_PERIOD_DATE OR POSITION(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Thu\',\'H\',(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Sun\',\'U\',SUBSTR(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\'),1,1)))) IN cpv.DAYS)>0)' . $extra['WHERE2'] . ' UNION select cp.SECONDARY_TEACHER_ID FROM missing_attendance mi,course_periods cp,schools s,course_period_var cpv WHERE mi.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cpv.PERIOD_ID=mi.PERIOD_ID AND s.ID=mi.SCHOOL_ID AND mi.SCHOOL_ID=\'' .  UserSchool() . '\' AND (mi.SCHOOL_DATE=cpv.COURSE_PERIOD_DATE OR POSITION(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Thu\',\'H\',(IF(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\') LIKE \'Sun\',\'U\',SUBSTR(DATE_FORMAT(mi.SCHOOL_DATE,\'%a\'),1,1)))) IN cpv.DAYS)>0)' . $extra['WHERE2'];
+			$res_st = DBGet(DBQuery($sql_st));
+			//echo count($res_st);
+			$a = 0;
+			foreach ($res_st as $row_st) {
+				$teacher_str .= "'" . $row_st['TEACHER_ID'] . "',";
+				$a++;
+			}
+
+			if ($a != 0) {
+				$teacher_str = substr($teacher_str, 0, -1);
+				$sql .= 'AND s.STAFF_ID IN (' . $teacher_str . ')';
+			}
+
+
+
+			$sql .= $extra['WHERE'] . ' ';
+			if ($extra['GROUP'])
+				$sql .= ' GROUP BY ' . $extra['GROUP'];
 			$sql .= 'ORDER BY FULL_NAME';
 
 
 			if ($extra['functions'])
-				$functions= $extra['functions'];
-
-		if($a != 0)
-                {
-                        if(count($functions)>0)
-			return DBGet(DBQuery($sql),$functions);
-                        else
-                        return DBGet(DBQuery($sql));    
-                }
+				$functions = $extra['functions'];
+
+			if ($a != 0) {
+				if (count($functions) > 0)
+					return DBGet(DBQuery($sql), $functions);
+				else
+					return DBGet(DBQuery($sql));
+			}
 			break;
 	}
-
 }
 
 function GetStaffListNoAccess()
-{	
-	
-	switch(User('PROFILE'))
-	{
+{
+
+	switch (User('PROFILE')) {
 		case 'admin':
-                $sql='SELECT DISTINCT CONCAT(TRIM(s.LAST_NAME),\', \',s.FIRST_NAME,\' \',COALESCE(s.MIDDLE_NAME,\' \')) AS FULL_NAME,CONCAT(UPPER(MID(s.PROFILE,1,1)),MID(s.PROFILE,2,LENGTH(s.PROFILE)-1)) AS PROFILE,s.PROFILE_ID,s.IS_DISABLE,
+			$sql = 'SELECT DISTINCT CONCAT(TRIM(s.LAST_NAME),\', \',s.FIRST_NAME,\' \',COALESCE(s.MIDDLE_NAME,\' \')) AS FULL_NAME,CONCAT(UPPER(MID(s.PROFILE,1,1)),MID(s.PROFILE,2,LENGTH(s.PROFILE)-1)) AS PROFILE,s.PROFILE_ID,s.IS_DISABLE,
                       s.STAFF_ID FROM people s ,students st,student_enrollment ssm WHERE st.STUDENT_ID=ssm.STUDENT_ID AND
-                      ssm.SYEAR='.UserSyear().' AND s.PROFILE IS NOT NULL AND s.PROFILE_ID=4
-                      AND '.($_REQUEST['_search_all_schools']=='Y'?'ssm.SCHOOL_ID IN (SELECT SCHOOL_ID FROM school_years WHERE SYEAR='.UserSyear().')':'ssm.SCHOOL_ID='.UserSchool()).' 
-                      AND s.STAFF_ID IN (SELECT PERSON_ID FROM students_join_people sjp WHERE ssm.STUDENT_ID = sjp.STUDENT_ID AND ssm.SCHOOL_ID='.($_REQUEST['_search_all_schools']=='Y'?'ssm.SCHOOL_ID IN (SELECT SCHOOL_ID FROM school_years WHERE SYEAR='.UserSyear().')':'ssm.SCHOOL_ID='.UserSchool()).' 
-                      AND ssm.SYEAR='.UserSyear().') AND s.IS_DISABLE IS NULL AND s.PROFILE=\'parent\' AND s.PROFILE_ID=4';
-		if($_REQUEST['last'])
-			$sql .= ' AND UPPER(s.LAST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['last'])).'%\' ';
-		if($_REQUEST['first'])
-			$sql .= ' AND UPPER(s.FIRST_NAME) LIKE \''.singleQuoteReplace("'","\'",strtoupper($_REQUEST['first'])).'%\' ';
-                $sql.=' AND s.STAFF_ID NOT IN (SELECT USER_ID FROM login_authentication WHERE PROFILE_ID=4) ORDER BY FULL_NAME';
-		return DBGet(DBQuery($sql));
-		break;
+                      ssm.SYEAR=' . UserSyear() . ' AND s.PROFILE IS NOT NULL AND s.PROFILE_ID=4
+                      AND ' . ($_REQUEST['_search_all_schools'] == 'Y' ? 'ssm.SCHOOL_ID IN (SELECT SCHOOL_ID FROM school_years WHERE SYEAR=' . UserSyear() . ')' : 'ssm.SCHOOL_ID=' . UserSchool()) . ' 
+                      AND s.STAFF_ID IN (SELECT PERSON_ID FROM students_join_people sjp WHERE ssm.STUDENT_ID = sjp.STUDENT_ID AND ssm.SCHOOL_ID=' . ($_REQUEST['_search_all_schools'] == 'Y' ? 'ssm.SCHOOL_ID IN (SELECT SCHOOL_ID FROM school_years WHERE SYEAR=' . UserSyear() . ')' : 'ssm.SCHOOL_ID=' . UserSchool()) . ' 
+                      AND ssm.SYEAR=' . UserSyear() . ') AND s.IS_DISABLE IS NULL AND s.PROFILE=\'parent\' AND s.PROFILE_ID=4';
+			if ($_REQUEST['last'])
+				$sql .= ' AND UPPER(s.LAST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['last'])) . '%\' ';
+			if ($_REQUEST['first'])
+				$sql .= ' AND UPPER(s.FIRST_NAME) LIKE \'' . singleQuoteReplace("'", "\'", strtoupper($_REQUEST['first'])) . '%\' ';
+			$sql .= ' AND s.STAFF_ID NOT IN (SELECT USER_ID FROM login_authentication WHERE PROFILE_ID=4) ORDER BY FULL_NAME';
+			return DBGet(DBQuery($sql));
+			break;
 	}
 }
-
-
-
-
-
-
-?>

--- functions/InputsFnc.php ---
@@ -702,8 +702,8 @@ function CheckboxInputWithID($value, $name, $id, $title = '', $checked = '', $ne
         return ($value ? $yes : $no) . ($title != '' ? '<BR><small>' . (strpos(strtolower($title), '<font ') === false ? '<FONT color=' . Preferences('TITLES') . '>' : '') . $title . (strpos(strtolower($title), '<font ') === false ? '</FONT>' : '') . '</small>' : '');
 }
 
-function SelectInput($value, $name, $title = '', $options, $allow_na = 'N/A', $extra = '', $div = true) {
-
+function SelectInput($value, $name, $title, $options, $allow_na = 'N/A', $extra = '', $div = true) {
+    if(empty($title)) $title = '';
     if (Preferences('HIDDEN') != 'Y')
         $div = false;
 
@@ -729,7 +729,7 @@ function SelectInput($value, $name, $title = '', $options, $allow_na = 'N/A', $e
             else
                 $return .= '<OPTION value="">' . $allow_na;
         }
-        if (count($options)) {
+        if (is_countable($options) && count($options)) {
             foreach ($options as $key => $val) {
 
                 settype($key, 'string');
@@ -753,7 +753,11 @@ function SelectInput($value, $name, $title = '', $options, $allow_na = 'N/A', $e
     return $return;
 }
 
-function SelectInputDisabledMsg($value, $name, $title = '', $options, $allow_na = 'N/A', $extra = '', $div = true, $msg) {
+function SelectInputDisabledMsg($value, $name, $title, $options, $allow_na, $extra, $div, $msg) {
+    if(empty($title)) $title = '';
+    if(empty($allow_na)) $allow_na = 'N/A';
+    if(empty($extra)) $extra = '';
+    if(empty($div)) $div = true;
     if (Preferences('HIDDEN') != 'Y')
         $div = false;
 
@@ -799,7 +803,8 @@ function SelectInputDisabledMsg($value, $name, $title = '', $options, $allow_na
     return $return;
 }
 
-function SelectInputForCal($value, $name, $title = '', $options, $allow_na = 'N/A', $extra = '', $div = true) {
+function SelectInputForCal($value, $name, $title, $options, $allow_na = 'N/A', $extra = '', $div = true) {
+    if(empty($title)) $title = '';
     if (Preferences('HIDDEN') != 'Y')
         $div = false;
 
@@ -840,7 +845,8 @@ function SelectInputForCal($value, $name, $title = '', $options, $allow_na = 'N/
     return $return;
 }
 
-function SelectInput_for_EndInput($value, $name, $title = '', $options, $type_id = '', $allow_na = 'N/A', $extra = '', $div = true) {
+function SelectInput_for_EndInput($value, $name, $title, $options, $type_id = '', $allow_na = 'N/A', $extra = '', $div = true) {
+    if(empty($title)) $title = '';
     if (Preferences('HIDDEN') != 'Y')
         $div = false;
 
@@ -1073,9 +1079,9 @@ function DateInputAY($value, $name, $counter = 1, $div_visibility = false) {
     }
 }
 
-function DateInputAY_red($value, $name, $counter = 1, $cp_id) {
-
+function DateInputAY_red($value, $name, $counter, $cp_id) {
 
+    if(empty($counter)) $counter = 1;
     if (AllowEdit() && !$_REQUEST['_openSIS_PDF']) {
         if ($value != '') {
             $month_names = array('JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC');
@@ -1239,8 +1245,8 @@ function CheckboxInputSwitchModal($value, $name, $title = '', $checked = '', $ne
         return '<div class="checkbox checkbox-switch ' . $switchery_color . ' switch-' . $size . '"><label><INPUT type=checkbox disabled="disabled" ' . ($value ? 'checked=checked' : '') . '><span></span>' . $title . '</label></div>';
 }
 
-function SelectInputModal($value, $name, $title = '', $options, $allow_na = 'N/A', $extra = '', $div = true) {
-
+function SelectInputModal($value, $name, $title, $options, $allow_na = 'N/A', $extra = '', $div = true) {
+    if(empty($title)) $title = '';
     if (Preferences('HIDDEN') != 'Y')
         $div = false;
 

--- functions/ListOutputFloatFnc.php ---
@@ -25,38 +25,38 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-function ListOutputFloat($result,$column_names,$singular='',$plural='',$link=false,$group=false,$options=false,$repeat_headers_options=true)
+function ListOutputFloat($result, $column_names, $singular = '', $plural = '', $link = false, $group = false, $options = false, $repeat_headers_options = true)
 {
-	if(!isset($options['save']))
+	$output = '';
+	$i = 0;
+	$pages = '';
+	if (!isset($options['save']))
 		$options['save'] = true;
-	if(!isset($options['print']))
+	if (!isset($options['print']))
 		$options['print'] = true;
-	if(!isset($options['search']))
+	if (!isset($options['search']))
 		$options['search'] = true;
-	if(!isset($options['center']))
+	if (!isset($options['center']))
 		$options['center'] = true;
-	if(!isset($options['count']))
+	if (!isset($options['count']))
 		$options['count'] = true;
-	if(!isset($options['sort']))
+	if (!isset($options['sort']))
 		$options['sort'] = true;
-	if(!$link)
+	if (!$link)
 		$link = array();
 
-	if(!isset($options['add']))
-	{
-		if(!AllowEdit() || $_REQUEST['_openSIS_PDF'])
-		{
-			if($link)
-			{
+	if (!isset($options['add'])) {
+		if (!AllowEdit() || $_REQUEST['_openSIS_PDF']) {
+			if ($link) {
 				unset($link['add']);
 				unset($link['remove']);
 			}
 		}
 	}
-// PREPARE LINKS ---
+	// PREPARE LINKS ---
 	$result_count = $display_count = count($result);
 	$num_displayed = 100000;
-	$extra = "page=$_REQUEST[page]&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=".urlencode($_REQUEST['LO_search']);
+	$extra = "page=$_REQUEST[page]&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=" . urlencode($_REQUEST['LO_search']);
 
 	$tmp_REQUEST = $_REQUEST;
 	unset($tmp_REQUEST['page']);
@@ -71,88 +71,69 @@ function ListOutputFloat($result,$column_names,$singular='',$plural='',$link=fal
 	// END PREPARE LINKS ---
 
 	// UN-GROUPING
-	$group_count = count($group);
-	if(!is_array($group))
+	$group_count = (is_countable($group)) ? count($group) : false;
+	if (!is_array($group))
 		$group_count = false;
-	
+
 	$side_color = '#dfe8ee';
 
-	if($group_count && $result_count)
-	{
+	if ($group_count && $result_count) {
 		$color = '#f5f5f5';
 		$group_result = $result;
 		unset($result);
 		$result[0] = '';
 
-		foreach($group_result as $item1)
-		{
-			if($group_count==1)
-			{
-				if($color=='#F8F8F9')
+		foreach ($group_result as $item1) {
+			if ($group_count == 1) {
+				if ($color == '#F8F8F9')
 					$color = $side_color;
 				else
 					$color = '#F8F8F9';
 			}
 
-			foreach($item1 as $item2)
-			{
-				if($group_count==1)
-				{
+			foreach ($item1 as $item2) {
+				if ($group_count == 1) {
 					$i++;
-					if(count($group[0]) && $i!=1)
-					{
-						foreach($group[0] as $column)
-							$item2[$column] = str_replace('<!-- <!--','<!--','<!-- '.str_replace('-->','--><!--',$item2[$column])).' -->';
+					if (count($group[0]) && $i != 1) {
+						foreach ($group[0] as $column)
+							$item2[$column] = str_replace('<!-- <!--', '<!--', '<!-- ' . str_replace('-->', '--><!--', $item2[$column])) . ' -->';
 					}
 					$item2['row_color'] = $color;
 					$result[] = $item2;
-				}
-				else
-				{
-					if($group_count==2)
-					{
-						if($color=='#F8F8F9')
+				} else {
+					if ($group_count == 2) {
+						if ($color == '#F8F8F9')
 							$color = $side_color;
 						else
 							$color = '#F8F8F9';
 					}
 
-					foreach($item2 as $item3)
-					{
-						if($group_count==2)
-						{
+					foreach ($item2 as $item3) {
+						if ($group_count == 2) {
 							$i++;
-							if(count($group[0]) && $i!=1)
-							{
-								foreach($group[0] as $column)
-									$item3[$column] = '<!-- '.$item3[$column].' -->';
+							if (count($group[0]) && $i != 1) {
+								foreach ($group[0] as $column)
+									$item3[$column] = '<!-- ' . $item3[$column] . ' -->';
 							}
-							if(count($group[1]) && $i!=1)
-							{
-								foreach($group[1] as $column)
-									$item3[$column] = '<!-- '.$item3[$column].' -->';
+							if (count($group[1]) && $i != 1) {
+								foreach ($group[1] as $column)
+									$item3[$column] = '<!-- ' . $item3[$column] . ' -->';
 							}
 							$item3['row_color'] = $color;
 							$result[] = $item3;
-						}
-						else
-						{
-							if($group_count==3)
-							{
-								if($color=='#F8F8F9')
+						} else {
+							if ($group_count == 3) {
+								if ($color == '#F8F8F9')
 									$color = $side_color;
 								else
 									$color = '#F8F8F9';
 							}
 
-							foreach($item3 as $item4)
-							{
-								if($group_count==3)
-								{
+							foreach ($item3 as $item4) {
+								if ($group_count == 3) {
 									$i++;
-									if(count($group[2]) && $i!=1)
-									{
-										foreach($group[2] as $column)
+									if (count($group[2]) && $i != 1) {
+										foreach ($group[2] as $column)
 											unset($item4[$column]);
 									}
 									$item4['row_color'] = $color;
@@ -173,394 +154,337 @@ function ListOutputFloat($result,$column_names,$singular='',$plural='',$link=fal
 	// END UN-GROUPING
 	$_LIST['output'] = true;
 	// PRINT HEADINGS, PREPARE PDF, AND SORT THE LIST ---
-	if($_LIST['output']!=false)
-	{
-		if($result_count != 0)
-		{
+	if ($_LIST['output'] != false) {
+		if ($result_count != 0) {
 			$count = 0;
-			$remove = count($link['remove']['variables']);
+			$remove = (is_countable($link['remove']['variables'])) ? count($link['remove']['variables']) : false;
 			$cols = count($column_names);
 
 			// HANDLE SEARCHES ---
-			if($result_count && $_REQUEST['LO_search'] && $_REQUEST['LO_search']!='Search')
-			{
-				$_REQUEST['LO_search'] = $search_term = str_replace('\\\"','"',$_REQUEST['LO_search']);
-				$_REQUEST['LO_search'] = $search_term = par_rep_cb('/[^a-zA-Z0-9 _"]*/','',strtolower($search_term));
-
-				if(substr($search_term,0,0)!='"' && substr($search_term,-1)!='"')
-				{
-					$search_term = par_rep_cb('/"/','',$search_term);
-					while($space_pos = strpos($search_term,' '))
-					{
-						$terms[strtolower(substr($search_term,0,$space_pos))] = 1;
-						$search_term = substr($search_term,($space_pos+1));
+			if ($result_count && $_REQUEST['LO_search'] && $_REQUEST['LO_search'] != 'Search') {
+				$_REQUEST['LO_search'] = $search_term = str_replace('\\\"', '"', $_REQUEST['LO_search']);
+				$_REQUEST['LO_search'] = $search_term = par_rep_cb('/[^a-zA-Z0-9 _"]*/', '', strtolower($search_term));
+
+				if (substr($search_term, 0, 0) != '"' && substr($search_term, -1) != '"') {
+					$search_term = par_rep_cb('/"/', '', $search_term);
+					while ($space_pos = strpos($search_term, ' ')) {
+						$terms[strtolower(substr($search_term, 0, $space_pos))] = 1;
+						$search_term = substr($search_term, ($space_pos + 1));
 					}
 					$terms[trim($search_term)] = 1;
-				}
-				else
-				{
-					$search_term = par_rep_cb('/"/','',$search_term);
+				} else {
+					$search_term = par_rep_cb('/"/', '', $search_term);
 					$terms[trim($search_term)] = 1;
 				}
 
-				unset($terms['of']); unset($terms['the']); unset($terms['a']); unset($terms['an']); unset($terms['in']);
+				unset($terms['of']);
+				unset($terms['the']);
+				unset($terms['a']);
+				unset($terms['an']);
+				unset($terms['in']);
 
-				foreach($result as $key=>$value)
-				{
+				foreach ($result as $key => $value) {
 					$values[$key] = 0;
-					foreach($value as $name=>$val)
-					{
-						$val = par_rep_cb('/[^a-zA-Z0-9 _]/+','',strtolower($val));
-						if(strtolower($_REQUEST['LO_search'])==$val)
+					foreach ($value as $name => $val) {
+						$val = par_rep_cb('/[^a-zA-Z0-9 _]/+', '', strtolower($val));
+						if (strtolower($_REQUEST['LO_search']) == $val)
 							$values[$key] += 25;
-						foreach($terms as $term=>$one)
-						{
-							if(ereg($term,$val))
+						foreach ($terms as $term => $one) {
+							if (preg_match($term, $val))
 								$values[$key] += 3;
 						}
 					}
-					if($values[$key]==0)
-					{
+					if ($values[$key] == 0) {
 						unset($values[$key]);
 						unset($result[$key]);
 						$result_count--;
 						$display_count--;
 					}
 				}
-				if($result_count)
-				{
-					array_multisort($values,SORT_DESC,$result);
+				if ($result_count) {
+					array_multisort($values, SORT_DESC, $result);
 					$result = ReindexResults($result);
 					$values = ReindexResults($values);
 
 					$last_value = 1;
-					$scale = (100/$values[$last_value]);
+					$scale = (100 / $values[$last_value]);
 
-					for($i=$last_value;$i<=$result_count;$i++)
-						$result[$i]['RELEVANCE'] = '<!--' . ((int) ($values[$i]*$scale)) . '--><IMG SRC="assets/pixel_grey.gif" width=' . ((int) ($values[$i]*$scale)) . ' height=10>';
+					for ($i = $last_value; $i <= $result_count; $i++)
+						$result[$i]['RELEVANCE'] = '<!--' . ((int) ($values[$i] * $scale)) . '--><IMG SRC="assets/pixel_grey.gif" width=' . ((int) ($values[$i] * $scale)) . ' height=10>';
 				}
 				$column_names['RELEVANCE'] = "Relevance";
 
-				if(is_array($group) && count($group))
-				{
+				if (is_array($group) && count($group)) {
 					$options['count'] == false;
 					$display_zero = true;
 				}
 			}
 
 			// END SEARCHES ---
 
-			if($_REQUEST['LO_sort'])
-			{
-				foreach($result as $sort)
-				{
-					if(substr($sort[$_REQUEST['LO_sort']],0,4)!='<!--')
+			if ($_REQUEST['LO_sort']) {
+				foreach ($result as $sort) {
+					if (substr($sort[$_REQUEST['LO_sort']], 0, 4) != '<!--')
 						$sort_array[] = $sort[$_REQUEST['LO_sort']];
 					else
-						$sort_array[] = substr($sort[$_REQUEST['LO_sort']],4,strpos($sort[$_REQUEST['LO_sort']],'-->')-5);
+						$sort_array[] = substr($sort[$_REQUEST['LO_sort']], 4, strpos($sort[$_REQUEST['LO_sort']], '-->') - 5);
 				}
-				if($_REQUEST['LO_direction']==-1)
+				if ($_REQUEST['LO_direction'] == -1)
 					$dir = SORT_DESC;
 				else
 					$dir = SORT_ASC;
 
-				if($result_count>1)
-				{
-					if(is_int($sort_array[1]) || is_double($sort_array[1]))
-						array_multisort($sort_array,$dir,SORT_NUMERIC,$result);
+				if ($result_count > 1) {
+					if (is_int($sort_array[1]) || is_double($sort_array[1]))
+						array_multisort($sort_array, $dir, SORT_NUMERIC, $result);
 					else
-						array_multisort($sort_array,$dir,$result);
-					for($i=$result_count-1;$i>=0;$i--)
-						$result[$i+1] = $result[$i];
+						array_multisort($sort_array, $dir, $result);
+					for ($i = $result_count - 1; $i >= 0; $i--)
+						$result[$i + 1] = $result[$i];
 					unset($result[0]);
 				}
 			}
 		}
 		// HANDLE SAVING THE LIST ---
 
-		if($_REQUEST['LO_save']=='1')
-		{
-			if(!$options['save_delimiter'] && Preferences('DELIMITER')=='CSV')
+		if ($_REQUEST['LO_save'] == '1') {
+			if (!$options['save_delimiter'] && Preferences('DELIMITER') == 'CSV')
 				$options['save_delimiter'] = 'comma';
-			switch($options['save_delimiter'])
-			{
+			switch ($options['save_delimiter']) {
 				case 'comma':
 					$extension = 'csv';
-				break;
+					break;
 				case 'xml':
 					$extension = 'xml';
-				break;
+					break;
 				default:
 					$extension = 'xls';
-				break;
+					break;
 			}
 			ob_end_clean();
-			 if($options['save_delimiter']!='xml')
-			{
-                           
-                                $output .='<table><tr>';
-                                foreach($column_names as $key=>$value)
-					$output .= '<td>'.str_replace('&nbsp;',' ',par_rep_cb('/<BR>/',' ',par_rep_cb('/<!--.*-->/','',$value))).'</td>';
-				$output .='</tr>';
-                                foreach($result as $item)
-                                {
-                                        $output .='<tr>';
-                                        foreach($column_names as $key=>$value)
-                                        {
-                                              $output .='<td>'.par_rep_cb('/<[^>]+>/','',par_rep_cb("/<div onclick='[^']+'>/",'',par_rep_cb('/ +/',' ',par_rep_cb('/&[^;]+;/','',str_replace('<BR>&middot;',' : ',str_replace('&nbsp;',' ',$item[$key])))))).'</td>';   
-                                        }
-                                        $output .='</tr>';
-                                       
-                                }
-                                $output .='</table>';
+			if ($options['save_delimiter'] != 'xml') {
+
+				$output .= '<table><tr>';
+				foreach ($column_names as $key => $value)
+					$output .= '<td>' . str_replace('&nbsp;', ' ', par_rep_cb('/<BR>/', ' ', par_rep_cb('/<!--.*-->/', '', $value))) . '</td>';
+				$output .= '</tr>';
+				foreach ($result as $item) {
+					$output .= '<tr>';
+					foreach ($column_names as $key => $value) {
+						$output .= '<td>' . par_rep_cb('/<[^>]+>/', '', par_rep_cb("/<div onclick='[^']+'>/", '', par_rep_cb('/ +/', ' ', par_rep_cb('/&[^;]+;/', '', str_replace('<BR>&middot;', ' : ', str_replace('&nbsp;', ' ', $item[$key])))))) . '</td>';
+					}
+					$output .= '</tr>';
+				}
+				$output .= '</table>';
 			}
-			foreach($result as $item)
-			{
-				foreach($column_names as $key=>$value)
-				{
-					if($options['save_delimiter']=='comma' && !$options['save_quotes'])
-						$item[$key] = str_replace(',',';',$item[$key]);
-					$item[$key] = par_rep_cb('/<SELECT.*SELECTED\>([^<]+)<.*</SELECT\>/','\\1',$item[$key]);
-					$item[$key] = par_rep_cb('/<SELECT.*</SELECT\>/','',$item[$key]);
-					$output .= ($options['save_quotes']?'"':'') . ($options['save_delimiter']=='xml'?'<'.str_replace(' ','',$value).'>':'') . par_rep_cb('/<[^>]+>/','',par_rep_cb("/<div onclick='[^']+'>/",'',par_rep_cb('/ +/',' ',par_rep_cb('&[^;]+;','',str_replace('<BR>&middot;',' : ',str_replace('&nbsp;',' ',$item[$key])))))) . ($options['save_delimiter']=='xml'?'</'.str_replace(' ','',$value).'>'."\n":'') . ($options['save_quotes']?'"':'') . ($options['save_delimiter']=='comma'?',':"\t");
+			foreach ($result as $item) {
+				foreach ($column_names as $key => $value) {
+					if ($options['save_delimiter'] == 'comma' && !$options['save_quotes'])
+						$item[$key] = str_replace(',', ';', $item[$key]);
+					$item[$key] = par_rep_cb('/<SELECT.*SELECTED\>([^<]+)<.*</SELECT\>/', '\\1', $item[$key]);
+					$item[$key] = par_rep_cb('/<SELECT.*</SELECT\>/', '', $item[$key]);
+					$output .= ($options['save_quotes'] ? '"' : '') . ($options['save_delimiter'] == 'xml' ? '<' . str_replace(' ', '', $value) . '>' : '') . par_rep_cb('/<[^>]+>/', '', par_rep_cb("/<div onclick='[^']+'>/", '', par_rep_cb('/ +/', ' ', par_rep_cb('&[^;]+;', '', str_replace('<BR>&middot;', ' : ', str_replace('&nbsp;', ' ', $item[$key])))))) . ($options['save_delimiter'] == 'xml' ? '</' . str_replace(' ', '', $value) . '>' . "\n" : '') . ($options['save_quotes'] ? '"' : '') . ($options['save_delimiter'] == 'comma' ? ',' : "\t");
 				}
 				$output .= "\n";
 			}
 			header("Cache-Control: public");
 			header("Pragma: ");
 			header("Content-Type: application/$extension");
-			header("Content-Disposition: inline; filename=\"".ProgramTitle().".$extension\"\n");
-			if($options['save_eval'])
+			header("Content-Disposition: inline; filename=\"" . ProgramTitle() . ".$extension\"\n");
+			if ($options['save_eval'])
 				eval($options['save_eval']);
 			echo $output;
 			exit();
 		}
 		// END SAVING THE LIST ---
-//		if($options['center'])
-//			echo '<CENTER>';
-
-		if(($result_count > $num_displayed) || (($options['count'] || $display_zero) && ((($result_count==0 || $display_count==0) && $plural) || ($result_count==0 || $display_count==0))))
-		{
-			echo "<TABLE width=100% border=0 cellspacing=1" ;
-			if(isset($_REQUEST['_openSIS_PDF']))
-			echo "><TR><TD align=center>";
+		//		if($options['center'])
+		//			echo '<CENTER>';
+
+		if (($result_count > $num_displayed) || (($options['count'] || $display_zero) && ((($result_count == 0 || $display_count == 0) && $plural) || ($result_count == 0 || $display_count == 0)))) {
+			echo "<TABLE width=100% border=0 cellspacing=1";
+			if (isset($_REQUEST['_openSIS_PDF']))
+				echo "><TR><TD align=center>";
 		}
 
-		if($options['count'] || $display_zero)
-		{
-			if(($result_count==0 || $display_count==0) && $plural)
-				echo "<table class=alert_center><tr><td class=alert_center_padding><b>No $plural "._wereFound.".</b></td></tr></table>";
-			elseif($result_count==0 || $display_count==0)
-				echo '<table class=alert_center><tr><td class=alert_center_padding><b>'._noneWereFound.'.</b></td></tr></table>';
+		if ($options['count'] || $display_zero) {
+			if (($result_count == 0 || $display_count == 0) && $plural)
+				echo "<table class=alert_center><tr><td class=alert_center_padding><b>No $plural " . _wereFound . ".</b></td></tr></table>";
+			elseif ($result_count == 0 || $display_count == 0)
+				echo '<table class=alert_center><tr><td class=alert_center_padding><b>' . _noneWereFound . '.</b></td></tr></table>';
 		}
-		if($result_count != 0 || ($_REQUEST['LO_search'] && $_REQUEST['LO_search']!='Search'))
-		{
-			if(!isset($_REQUEST['_openSIS_PDF']))
-			{
-				if(!$_REQUEST['page'])
+		if ($result_count != 0 || ($_REQUEST['LO_search'] && $_REQUEST['LO_search'] != 'Search')) {
+			if (!isset($_REQUEST['_openSIS_PDF'])) {
+				if (!$_REQUEST['page'])
 					$_REQUEST['page'] = 1;
-				if(!$_REQUEST['LO_direction'])
+				if (!$_REQUEST['LO_direction'])
 					$_REQUEST['LO_direction'] = 1;
 				$start = ($_REQUEST['page'] - 1) * $num_displayed + 1;
-				$stop = $start + ($num_displayed-1);
-				if($stop > $result_count)
+				$stop = $start + ($num_displayed - 1);
+				if ($stop > $result_count)
 					$stop = $result_count;
 
-				if($result_count > $num_displayed)
-				{
+				if ($result_count > $num_displayed) {
 					$where_message = "<SMALL>Displaying $start through $stop</SMALL>";
 					echo "Go to Page ";
-					if(ceil($result_count/$num_displayed) <= 10)
-					{
-						for($i=1;$i<=ceil($result_count/$num_displayed);$i++)
-						{
-							if($i!=$_REQUEST['page'])
-								$pages .= "<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=".urlencode($_REQUEST['LO_search'])."&page=$i>$i</A>, ";
+					if (ceil($result_count / $num_displayed) <= 10) {
+						for ($i = 1; $i <= ceil($result_count / $num_displayed); $i++) {
+							if ($i != $_REQUEST['page'])
+								$pages .= "<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=" . urlencode($_REQUEST['LO_search']) . "&page=$i>$i</A>, ";
 							else
 								$pages .= "$i, ";
 						}
-						$pages = substr($pages,0,-2) . "<BR>";
-					}
-					else
-					{
-						for($i=1;$i<=7;$i++)
-						{
-							if($i!=$_REQUEST['page'])
-								$pages .= "<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=".urlencode($_REQUEST['LO_search'])."&page=$i>$i</A>, ";
+						$pages = substr($pages, 0, -2) . "<BR>";
+					} else {
+						for ($i = 1; $i <= 7; $i++) {
+							if ($i != $_REQUEST['page'])
+								$pages .= "<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=" . urlencode($_REQUEST['LO_search']) . "&page=$i>$i</A>, ";
 							else
 								$pages .= "$i, ";
 						}
-						$pages = substr($pages,0,-2) . " ... ";
-						for($i=ceil($result_count/$num_displayed)-2;$i<=ceil($result_count/$num_displayed);$i++)
-						{
-							if($i!=$_REQUEST['page'])
-								$pages .= "<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=".urlencode($_REQUEST['LO_search'])."&page=$i>$i</A>, ";
+						$pages = substr($pages, 0, -2) . " ... ";
+						for ($i = ceil($result_count / $num_displayed) - 2; $i <= ceil($result_count / $num_displayed); $i++) {
+							if ($i != $_REQUEST['page'])
+								$pages .= "<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=" . urlencode($_REQUEST['LO_search']) . "&page=$i>$i</A>, ";
 							else
 								$pages .= "$i, ";
 						}
-						$pages = substr($pages,0,-2) . " &nbsp;<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=".urlencode($_REQUEST['LO_search'])."&page=" . ($_REQUEST['page'] +1) . ">Next Page</A><BR>";
+						$pages = substr($pages, 0, -2) . " &nbsp;<A HREF=$PHP_tmp_SELF&LO_sort=$_REQUEST[LO_sort]&LO_direction=$_REQUEST[LO_direction]&LO_search=" . urlencode($_REQUEST['LO_search']) . "&page=" . ($_REQUEST['page'] + 1) . ">Next Page</A><BR>";
 					}
 					echo $pages;
 					echo '</TD></TR></TABLE>';
 					echo '<BR>';
 				}
-			}
-			else
-			{
+			} else {
 				$start = 1;
 				$stop = $result_count;
-                                if($repeat_headers_options==true)
-                                {
-                                    if($cols>8 || $_REQUEST['expanded_view'])
-                                    {
-                                            $_SESSION['orientation'] = 'landscape';
-                                            $repeat_headers = 17;
-                                    }
-                                    else
-                                            $repeat_headers = 28;
-                                }
-                                else
-                                {
-                                    $repeat_headers=$stop;
-                                }
-				if($options['print'])
-				{
-					$html = explode('<!-- new page -->',strtolower(ob_get_contents()));
-					$html = $html[count($html)-1];
+				if ($repeat_headers_options == true) {
+					if ($cols > 8 || $_REQUEST['expanded_view']) {
+						$_SESSION['orientation'] = 'landscape';
+						$repeat_headers = 17;
+					} else
+						$repeat_headers = 28;
+				} else {
+					$repeat_headers = $stop;
+				}
+				if ($options['print']) {
+					$html = explode('<!-- new page -->', strtolower(ob_get_contents()));
+					$html = $html[count($html) - 1];
 					echo '</TD></TR></TABLE>';
-					$br = (substr_count($html,'<br>')) + (substr_count($html,'</p>')) + (substr_count($html,'</tr>')) + (substr_count($html,'</h1>')) + (substr_count($html,'</h2>')) + (substr_count($html,'</h3>')) + (substr_count($html,'</h4>')) + (substr_count($html,'</h5>'));
-					if($br%2!=0)
-					{
+					$br = (substr_count($html, '<br>')) + (substr_count($html, '</p>')) + (substr_count($html, '</tr>')) + (substr_count($html, '</h1>')) + (substr_count($html, '</h2>')) + (substr_count($html, '</h3>')) + (substr_count($html, '</h4>')) + (substr_count($html, '</h5>'));
+					if ($br % 2 != 0) {
 						$br++;
 						echo '<BR>';
 					}
-				}
-				else
+				} else
 					echo '</TD></TR></TABLE>';
 			}
 			// END MISC ---
 
 
 			// SEARCH BOX & MORE HEADERS
-			if($where_message || ($singular && $plural) || (!isset($_REQUEST['_openSIS_PDF']) && $options['search']))
-			{
-			
-			}
-			else
-				echo '<DIV id=LOx'.(count($column_names)+(($result_count!=0 && $cols && !isset($_REQUEST['_openSIS_PDF']))?1:0)+(($remove && !isset($_REQUEST['_openSIS_PDF']))?1:0)).' style="width:0; position: relative; height:0;"></DIV>';
+			if ($where_message || ($singular && $plural) || (!isset($_REQUEST['_openSIS_PDF']) && $options['search'])) {
+			} else
+				echo '<DIV id=LOx' . (count($column_names) + (($result_count != 0 && $cols && !isset($_REQUEST['_openSIS_PDF'])) ? 1 : 0) + (($remove && !isset($_REQUEST['_openSIS_PDF'])) ? 1 : 0)) . ' style="width:0; position: relative; height:0;"></DIV>';
 			// END SEARCH BOX ----
 
 
 			// SHADOW
-			if(!isset($_REQUEST['_openSIS_PDF']))
+			if (!isset($_REQUEST['_openSIS_PDF']))
 				echo '<div class="table-responsive">';
 			echo "<TABLE class=\"table table-bordered table-striped\">";
-			if(!isset($_REQUEST['_openSIS_PDF']) && ($stop-$start)>10)
+			if (!isset($_REQUEST['_openSIS_PDF']) && ($stop - $start) > 10)
 				echo '<THEAD>';
-			if(!isset($_REQUEST['_openSIS_PDF']))
+			if (!isset($_REQUEST['_openSIS_PDF']))
 				echo '<TR>';
 
-			$i =1;
-			if($remove && !isset($_REQUEST['_openSIS_PDF']) && $result_count!=0)
-			{
+			$i = 1;
+			if ($remove && !isset($_REQUEST['_openSIS_PDF']) && $result_count != 0) {
 				echo "<TD class=\"subtabs\"><DIV id=LOx$i style='position: relative;'></DIV></TD>";
 				$i++;
 			}
 
-			if($result_count!=0 && $cols && !isset($_REQUEST['_openSIS_PDF']))
-			{
-				foreach($column_names as $key=>$value)
-				{
-					if($_REQUEST['LO_sort'] == $key)
+			if ($result_count != 0 && $cols && !isset($_REQUEST['_openSIS_PDF'])) {
+				foreach ($column_names as $key => $value) {
+					if ($_REQUEST['LO_sort'] == $key)
 						$direction = -1 * $_REQUEST['LO_direction'];
 					else
 						$direction = 1;
 					echo "<TD class=\"subtabs\"><DIV id=LOx$i style='position: relative;'></DIV>";
 					echo "<A ";
-					if($options['sort'])
-						echo "HREF=$PHP_tmp_SELF&page=$_REQUEST[page]&LO_sort=$key&LO_direction=$direction&LO_search=".urlencode($_REQUEST['LO_search']);
+					if ($options['sort'])
+						echo "HREF=$PHP_tmp_SELF&page=$_REQUEST[page]&LO_sort=$key&LO_direction=$direction&LO_search=" . urlencode($_REQUEST['LO_search']);
 					echo " class=column_heading><b>$value</b></A>";
-					if($i==1)
+					if ($i == 1)
 						echo "<DIV id=LOy0 style='position: relative;'></DIV>";
 					echo "</TD>";
 					$i++;
 				}
-				
+
 				echo "</TR>";
 			}
 
 			$color = '#F8F8F9';
-			
-			if(!isset($_REQUEST['_openSIS_PDF']) && ($stop-$start)>10)
+
+			if (!isset($_REQUEST['_openSIS_PDF']) && ($stop - $start) > 10)
 				echo '</THEAD><TBODY>';
 
 
 			// mab - enable add link as first or last
-			if($result_count!=0 && $link['add']['first'] && ($stop-$start)>=$link['add']['first'])
-			{
-				
-				if($link['add']['link'] && !isset($_REQUEST['_openSIS_PDF']))
-					echo "<TR><TD colspan=".($remove?$cols+1:$cols)." align=left >".button('add',$link['add']['title'],$link['add']['link'])."</TD></TR>";
-				elseif($link['add']['span'] && !isset($_REQUEST['_openSIS_PDF']))
-					echo "<TR><TD colspan=".($remove?$cols+1:$cols)." align=left >".button('add').$link['add']['span']."</TD></TR>";
-				elseif($link['add']['html'] && $cols)
-				{
+			if ($result_count != 0 && $link['add']['first'] && ($stop - $start) >= $link['add']['first']) {
+
+				if ($link['add']['link'] && !isset($_REQUEST['_openSIS_PDF']))
+					echo "<TR><TD colspan=" . ($remove ? $cols + 1 : $cols) . " align=left >" . button('add', $link['add']['title'], $link['add']['link']) . "</TD></TR>";
+				elseif ($link['add']['span'] && !isset($_REQUEST['_openSIS_PDF']))
+					echo "<TR><TD colspan=" . ($remove ? $cols + 1 : $cols) . " align=left >" . button('add') . $link['add']['span'] . "</TD></TR>";
+				elseif ($link['add']['html'] && $cols) {
 					echo "<TR bgcolor=$color>";
-					if($remove && !isset($_REQUEST['_openSIS_PDF']) && $link['add']['html']['remove'])
-						echo "<TD >".$link['add']['html']['remove']."</TD>";
-					elseif($remove && !isset($_REQUEST['_openSIS_PDF']))
-						echo "<TD >".button('add')."</TD>";
-
-					foreach($column_names as $key=>$value)
-					{
-						echo "<TD >".$link['add']['html'][$key]."</TD>";
+					if ($remove && !isset($_REQUEST['_openSIS_PDF']) && $link['add']['html']['remove'])
+						echo "<TD >" . $link['add']['html']['remove'] . "</TD>";
+					elseif ($remove && !isset($_REQUEST['_openSIS_PDF']))
+						echo "<TD >" . button('add') . "</TD>";
+
+					foreach ($column_names as $key => $value) {
+						echo "<TD >" . $link['add']['html'][$key] . "</TD>";
 					}
 					echo "</TR>";
 					$count++;
 				}
 			}
 
 
-			for($i=$start;$i<=$stop;$i++)
-			{
+			for ($i = $start; $i <= $stop; $i++) {
 				$item = $result[$i];
-				if(isset($_REQUEST['_openSIS_PDF']) && $options['print'] && count($item))
-				{
-					foreach($item as $key=>$value)
-					{
-						$value = par_rep_cb('/<SELECT.*SELECTED\>([^<]+)<.*</SELECT\>/','\\1',$value);
-						$value = par_rep_cb('/<SELECT.*</SELECT\>/','',$value);
-
-						if(strpos($value,'LO_field')===false)
-							$item[$key] = str_replace(' ','&nbsp;',par_rep_cb("/<div onclick='[^']+'>/",'',$value));
+				if (isset($_REQUEST['_openSIS_PDF']) && $options['print'] && count($item)) {
+					foreach ($item as $key => $value) {
+						$value = par_rep_cb('/<SELECT.*SELECTED\>([^<]+)<.*</SELECT\>/', '\\1', $value);
+						$value = par_rep_cb('/<SELECT.*</SELECT\>/', '', $value);
+
+						if (strpos($value, 'LO_field') === false)
+							$item[$key] = str_replace(' ', '&nbsp;', par_rep_cb("/<div onclick='[^']+'>/", '', $value));
 						else
-							$item[$key] = par_rep_cb("/<div onclick='[^']+'>/",'',$value);
+							$item[$key] = par_rep_cb("/<div onclick='[^']+'>/", '', $value);
 					}
 				}
 
-				if($item['row_color'])
+				if ($item['row_color'])
 					$color = $item['row_color'];
-				elseif($color=='#F8F8F9')
+				elseif ($color == '#F8F8F9')
 					$color = $side_color;
 				else
 					$color = '#F8F8F9';
-					
-				if(isset($_REQUEST['_openSIS_PDF']) && $count%$repeat_headers==0)
-				{
-					if($count!=0)
-					{
+
+				if (isset($_REQUEST['_openSIS_PDF']) && $count % $repeat_headers == 0) {
+					if ($count != 0) {
 						echo '</TABLE><TABLE class="table table-bordered">';
 						echo '<!-- NEW PAGE -->';
 					}
 					echo "<TR>";
-					if($remove && !isset($_REQUEST['_openSIS_PDF']))
+					if ($remove && !isset($_REQUEST['_openSIS_PDF']))
 						echo "<TD class=\"subtabs\"></TD>";
 
-					if($cols)
-					{
-						foreach($column_names as $key=>$value)
-						{
-							echo "<TD class=\"subtabs\" class=LO_field><b>" . str_replace(' ','&nbsp;',$value) . "</b></FONT></TD>";
+					if ($cols) {
+						foreach ($column_names as $key => $value) {
+							echo "<TD class=\"subtabs\" class=LO_field><b>" . str_replace(' ', '&nbsp;', $value) . "</b></FONT></TD>";
 						}
 					}
 					echo "</TR>";
@@ -570,77 +494,65 @@ function ListOutputFloat($result,$column_names,$singular='',$plural='',$link=fal
 
 				echo "<TR>";
 				$count++;
-				if($remove && !isset($_REQUEST['_openSIS_PDF']))
-				{
+				if ($remove && !isset($_REQUEST['_openSIS_PDF'])) {
 					$button_title = $link['remove']['title'];
-					
+
 					$button_link = $link['remove']['link'];
-					if(count($link['remove']['variables']))
-					{
-						foreach($link['remove']['variables'] as $var=>$val)
+					if (count($link['remove']['variables'])) {
+						foreach ($link['remove']['variables'] as $var => $val)
 							$button_link .= "&$var=" . urlencode($item[$val]);
 					}
 
-					echo "<TD>" . button('remove',$button_title,$button_link) . "</TD>";
+					echo "<TD>" . button('remove', $button_title, $button_link) . "</TD>";
 				}
-				if($cols)
-				{
-					foreach($column_names as $key=>$value)
-					{
-						if($link[$key] && !isset($_REQUEST['_openSIS_PDF']))
-						{
+				if ($cols) {
+					foreach ($column_names as $key => $value) {
+						if ($link[$key] && !isset($_REQUEST['_openSIS_PDF'])) {
 							echo "<TD class=LO_field>";
-							if($key=='FULL_NAME')
-								echo '<DIV id=LOy'.($count-$br).' height=20 style="height: 20; min-height: 20; position: relative;">';
-							if($link[$key]['js']===true)
-							{
-								echo "<A HREF=# onclick='window.open(\"{$link[$key][link]}";
-								if(count($link[$key]['variables']))
-								{
-									foreach($link[$key]['variables'] as $var=>$val)
-										echo "&$var=".urlencode($item[$val]);
+							if ($key == 'FULL_NAME')
+								echo '<DIV id=LOy' . ($count - $br) . ' height=20 style="height: 20; min-height: 20; position: relative;">';
+							if ($link[$key]['js'] === true) {
+								echo "<A HREF=# onclick='window.open(\"{$link[$key]['link']}";
+								if (count($link[$key]['variables'])) {
+									foreach ($link[$key]['variables'] as $var => $val)
+										echo "&$var=" . urlencode($item[$val]);
 								}
 								echo "\",\"\",\"scrollbars=yes,resizable=yes,width=800,height=400\");'";
-								if($link[$key]['extra'])
-									echo ' '.$link[$key]['extra'];
+								if ($link[$key]['extra'])
+									echo ' ' . $link[$key]['extra'];
 								echo ">";
-							}
-							else
-							{
-								echo "<A HREF={$link[$key][link]}";
-								if(count($link[$key]['variables']))
-								{
-									foreach($link[$key]['variables'] as $var=>$val)
-										echo "&$var=".urlencode($item[$val]);
+							} else {
+								echo "<A HREF={$link[$key]['link']}";
+								if (count($link[$key]['variables'])) {
+									foreach ($link[$key]['variables'] as $var => $val)
+										echo "&$var=" . urlencode($item[$val]);
 								}
-								if($link[$key]['extra'])
-									echo ' '.$link[$key]['extra'];
+								if ($link[$key]['extra'])
+									echo ' ' . $link[$key]['extra'];
 								echo ">";
 							}
-							if($color==Preferences('HIGHLIGHT'))
+							if ($color == Preferences('HIGHLIGHT'))
 								echo '';
 							else
 								echo '';
 							echo $item[$key];
 							echo '';
-							if(!$item[$key])
+							if (!$item[$key])
 								echo '***';
 							echo "</A>";
-							if($key=='FULL_NAME')
+							if ($key == 'FULL_NAME')
 								echo '</DIV>';
 							echo "</TD>";
-						}
-						else
-						{
+						} else {
 							echo "<TD class=LO_field>";
-							if($key=='FULL_NAME')
-								echo '<DIV id=LOy'.($count-$br).' height=20 style="position: relative;">';
-							if($color==Preferences('HIGHLIGHT'))
+							if ($key == 'FULL_NAME')
+								echo '<DIV id=LOy' . ($count - $br) . ' height=20 style="position: relative;">';
+							if ($color == Preferences('HIGHLIGHT'))
 								echo '';
 							echo $item[$key];
-							if(!$item[$key])
+							if (!$item[$key])
 								echo '&nbsp;';
-							if($key=='FULL_NAME')
+							if ($key == 'FULL_NAME')
 								echo '<DIV>';
 							echo "</TD>";
 						}
@@ -649,126 +561,112 @@ function ListOutputFloat($result,$column_names,$singular='',$plural='',$link=fal
 				echo "</TR>";
 			}
 
-			if($result_count!=0 && (!$link['add']['first'] || $link['add']['first'] && ($stop-$start)<$link['add']['first']))
-			{
-				
-				if($link['add']['link'] && !isset($_REQUEST['_openSIS_PDF']))
-					echo "<TR><TD colspan=".($remove?$cols+1:$cols)." align=left bgcolor=#FFFFFF>".button('add',$link['add']['title'],$link['add']['link'])."</TD></TR>";
-				elseif($link['add']['span'] && !isset($_REQUEST['_openSIS_PDF']))
-					echo "<TR><TD colspan=".($remove?$cols+1:$cols)." align=left bgcolor=#FFFFFF>".button('add').$link['add']['span']."</TD></TR>";
-				elseif($link['add']['html'] && $cols)
-				{
-					if($count%2)
+			if ($result_count != 0 && (!$link['add']['first'] || $link['add']['first'] && ($stop - $start) < $link['add']['first'])) {
+
+				if ($link['add']['link'] && !isset($_REQUEST['_openSIS_PDF']))
+					echo "<TR><TD colspan=" . ($remove ? $cols + 1 : $cols) . " align=left bgcolor=#FFFFFF>" . button('add', $link['add']['title'], $link['add']['link']) . "</TD></TR>";
+				elseif ($link['add']['span'] && !isset($_REQUEST['_openSIS_PDF']))
+					echo "<TR><TD colspan=" . ($remove ? $cols + 1 : $cols) . " align=left bgcolor=#FFFFFF>" . button('add') . $link['add']['span'] . "</TD></TR>";
+				elseif ($link['add']['html'] && $cols) {
+					if ($count % 2)
 						$color = '#F8F8F9';
 					else
 						$color = $side_color;
 
 					echo "<TR bgcolor=$color>";
-					if($remove && !isset($_REQUEST['_openSIS_PDF']) && $link['add']['html']['remove'])
-						echo "<TD bgcolor=$color>".$link['add']['html']['remove']."</TD>";
-					elseif($remove && !isset($_REQUEST['_openSIS_PDF']))
-						echo "<TD bgcolor=$color>".button('add')."</TD>";
-
-					foreach($column_names as $key=>$value)
-					{
-						echo "<TD bgcolor=$color class=LO_field>".$link['add']['html'][$key]."</TD>";
+					if ($remove && !isset($_REQUEST['_openSIS_PDF']) && $link['add']['html']['remove'])
+						echo "<TD bgcolor=$color>" . $link['add']['html']['remove'] . "</TD>";
+					elseif ($remove && !isset($_REQUEST['_openSIS_PDF']))
+						echo "<TD bgcolor=$color>" . button('add') . "</TD>";
+
+					foreach ($column_names as $key => $value) {
+						echo "<TD bgcolor=$color class=LO_field>" . $link['add']['html'][$key] . "</TD>";
 					}
 					echo "</TR>";
 				}
 			}
-			if($result_count!=0)
-			{
-				if(!isset($_REQUEST['_openSIS_PDF']) && ($stop-$start)>10)
+			if ($result_count != 0) {
+				if (!isset($_REQUEST['_openSIS_PDF']) && ($stop - $start) > 10)
 					echo '</TBODY>';
 				echo "</TABLE>";
 				// SHADOW
-				if(!isset($_REQUEST['_openSIS_PDF']))
+				if (!isset($_REQUEST['_openSIS_PDF']))
 					echo '</div>';
 
-//				if($options['center'])
-//					echo '</CENTER>';
+				//				if($options['center'])
+				//					echo '</CENTER>';
 			}
 
-		// END PRINT THE LIST ---
+			// END PRINT THE LIST ---
 		}
-		if($result_count==0)
-		{
+		if ($result_count == 0) {
 			// mab - problem with table closing if not opened above - do same conditional?
-			if(($result_count > $num_displayed) || (($options['count'] || $display_zero) && ((($result_count==0 || $display_count==0) && $plural) || ($result_count==0 || $display_count==0))))
+			if (($result_count > $num_displayed) || (($options['count'] || $display_zero) && ((($result_count == 0 || $display_count == 0) && $plural) || ($result_count == 0 || $display_count == 0))))
 				echo '</TD></TR></TABLE>';
-			if($link['add']['link'] && !isset($_REQUEST['_openSIS_PDF']))
-				echo '<div class=break style=width:300px></div><center>' . button('add',$link['add']['title'],$link['add']['link']) . '</center>';
-			elseif(($link['add']['html'] || $link['add']['span']) && count($column_names) && !isset($_REQUEST['_openSIS_PDF']))
-			{
+			if ($link['add']['link'] && !isset($_REQUEST['_openSIS_PDF']))
+				echo '<div class=break style=width:300px></div><center>' . button('add', $link['add']['title'], $link['add']['link']) . '</center>';
+			elseif (($link['add']['html'] || $link['add']['span']) && count($column_names) && !isset($_REQUEST['_openSIS_PDF'])) {
 				$color = $side_color;
 
-				if($options['center'])
+				if ($options['center'])
 					echo '<CENTER>';
-				
+
 				// SHADOW
 				echo '<TABLE class=\"grid\" cellpadding=0 cellspacing=0><TR><TD>';
-				if($link['add']['html'])
-				{
-				 	/*Here also change the colour for left corner*/
+				if ($link['add']['html']) {
+					/*Here also change the colour for left corner*/
 					echo "<TABLE class=\"grid\" cellspacing=1 cellpadding=6 ><TR>";
-					foreach($column_names as $key=>$value)
-					{
-					 //Here to change the ListOutput Header Colour
-						echo "<TD ><A><b>" . str_replace(' ','&nbsp;',$value) . "</b></A></TD>";
+					foreach ($column_names as $key => $value) {
+						//Here to change the ListOutput Header Colour
+						echo "<TD ><A><b>" . str_replace(' ', '&nbsp;', $value) . "</b></A></TD>";
 					}
 					echo "</TR>";
 
 					echo "<TR bgcolor=$color>";
 
-					if($link['add']['html']['remove'])
-						echo "<TD bgcolor=$color>".$link['add']['html']['remove']."</TD>";
+					if ($link['add']['html']['remove'])
+						echo "<TD bgcolor=$color>" . $link['add']['html']['remove'] . "</TD>";
 					else
-						echo "<TD bgcolor=#F5F5F5>".button('add')."</TD>";
+						echo "<TD bgcolor=#F5F5F5>" . button('add') . "</TD>";
 
-					foreach($column_names as $key=>$value)
-					{
-						echo "<TD bgcolor=#F5F5F5 class=LO_field>".$link['add']['html'][$key]."</TD>";
+					foreach ($column_names as $key => $value) {
+						echo "<TD bgcolor=#F5F5F5 class=LO_field>" . $link['add']['html'][$key] . "</TD>";
 					}
 					echo "</TR>";
 					echo "</TABLE>";
-				}
-				elseif($link['add']['span'] && !isset($_REQUEST['_openSIS_PDF']))
-					echo "<TABLE class=\"grid\" cellspacing=1><TR><TD align=left>".button('add').$link['add']['span']."</TD></TR></TABLE>";
+				} elseif ($link['add']['span'] && !isset($_REQUEST['_openSIS_PDF']))
+					echo "<TABLE class=\"grid\" cellspacing=1><TR><TD align=left>" . button('add') . $link['add']['span'] . "</TD></TR></TABLE>";
 
 				// SHADOW
-				
+
 				echo "</TD></TR></TABLE>";
-				if($options['center'])
+				if ($options['center'])
 					echo '</CENTER>';
 			}
 		}
-		if($result_count!=0)
-		{
-			if($options['yscroll'])
-			{
+		if ($result_count != 0) {
+			if ($options['yscroll']) {
 				echo '<div id="LOy_layer" style="position: absolute; top: 0; left: 0; visibility:hidden;">';
 				echo '<TABLE class=\"grid\" cellspacing=1 cellpadding=6 id=LOy_table>';
 				$i = 1;
 
-				if($cols && !isset($_REQUEST['_openSIS_PDF']))
-				{
+				if ($cols && !isset($_REQUEST['_openSIS_PDF'])) {
 					$color = $side_color;
-					foreach($result as $item)
-					{
+					foreach ($result as $item) {
 						echo "<TR><TD bgcolor=$color class=LO_field id=LO_row$i>";
-						if($color==Preferences('HIGHLIGHT'))
+						if ($color == Preferences('HIGHLIGHT'))
 							echo '';
 						echo $item['FULL_NAME'];
-						if(!$item['FULL_NAME'])
+						if (!$item['FULL_NAME'])
 							echo '&nbsp;';
-						if($color==Preferences('HIGHLIGHT'))
+						if ($color == Preferences('HIGHLIGHT'))
 							echo '';
 						echo "</TD></TR>";
 						$i++;
 
-						if($item['row_color'])
+						if ($item['row_color'])
 							$color = $item['row_color'];
-						elseif($color=='#F8F8F9')
+						elseif ($color == '#F8F8F9')
 							$color = $side_color;
 						else
 							$color = '#F8F8F9';
@@ -781,17 +679,14 @@ function ListOutputFloat($result,$column_names,$singular='',$plural='',$link=fal
 			echo '<div id="LOx_layer" style="position: absolute; top: 0; left: 0; visibility:hidden;">';
 			echo '<TABLE class=\"grid\" cellspacing=1 cellpadding=6 id=LOx_table><TR>';
 			$i = 1;
-			if($remove && !isset($_REQUEST['_openSIS_PDF']) && $result_count!=0)
-			{
+			if ($remove && !isset($_REQUEST['_openSIS_PDF']) && $result_count != 0) {
 				echo "<TD class=\"subtabs\" id=LO_col$i></TD>";
 				$i++;
 			}
 
-			if($cols && !isset($_REQUEST['_openSIS_PDF']))
-			{
-				foreach($column_names as $key=>$value)
-				{
-					echo '<TD class=\"subtabs\" id=LO_col'.$i.'><A class=column_heading><b>'.str_replace('controller','',$value).'</b></A></TD>';
+			if ($cols && !isset($_REQUEST['_openSIS_PDF'])) {
+				foreach ($column_names as $key => $value) {
+					echo '<TD class=\"subtabs\" id=LO_col' . $i . '><A class=column_heading><b>' . str_replace('controller', '', $value) . '</b></A></TD>';
 					$i++;
 				}
 			}
@@ -800,4 +695,3 @@ function ListOutputFloat($result,$column_names,$singular='',$plural='',$link=fal
 		}
 	}
 }
-?>
\ No newline at end of file

--- functions/MakeLetterGradeFnc.php ---
@@ -72,7 +72,7 @@ function _makeLetterGrade($percent,$course_period_id=0,$staff_id=0,$ret='')
 	$does_breakoff = $_openSIS['_makeLetterGrade']['courses'][$course_period_id][1]['DOES_BREAKOFF'];
 	$grade_scale_id = $_openSIS['_makeLetterGrade']['courses'][$course_period_id][1]['GRADE_SCALE_ID'];
 
-	$percent *= 100;
+	$percent = is_numeric($percent) ? $percent * 100 : 0;
        
 		if($programconfig[$staff_id]['ROUNDING']=='UP')
                 {

--- functions/ParamLibFnc.php ---
@@ -1,5 +1,6 @@
 <?php
 error_reporting(0);
+
 /// CONSTANTS (Encased in phpdoc proper comments)/////////////////////////
 
 /// Date and time constants ///
@@ -71,7 +72,7 @@
 define('PARAM_NUMBER',  0x000a);
 
 
-define ('PARAM_PERCENT', 0x0006);
+define('PARAM_PERCENT', 0x0006);
 /**
  * PARAM_ALPHA - contains only english letters.
  */
@@ -104,12 +105,12 @@
  */
 define('PARAM_NOTAGS',   0x0008);
 
- /**
+/**
  * PARAM_MULTILANG - alias of PARAM_TEXT.
  */
 define('PARAM_MULTILANG',  0x0009);
 
- /**
+/**
  * PARAM_TEXT - general plain text compatible with multilang filter, no other html tags.
  */
 define('PARAM_TEXT',  0x0009);
@@ -154,7 +155,7 @@
  * PARAM_CLEANFILE - safe file name, all dangerous and regional chars are removed,
  * use when you want to store a new file submitted by students
  */
-define('PARAM_CLEANFILE',0x0200);
+define('PARAM_CLEANFILE', 0x0200);
 
 /**
  * PARAM_ALPHANUM - expected numbers and letters only.
@@ -180,7 +181,7 @@
  * PARAM_CLEANHTML - cleans submitted HTML code and removes slashes
  * note: do not forget to addslashes() before storing into database!
  */
-define('PARAM_CLEANHTML',0x1000);
+define('PARAM_CLEANHTML', 0x1000);
 
 
 define('PARAM_DATA', 0x1800);
@@ -243,13 +244,13 @@
 define('PARAM_SPCL',   0x0111);
 /// Debug levels ///
 /** no warnings at all */
-define ('DEBUG_NONE', 0);
+define('DEBUG_NONE', 0);
 /** E_ERROR | E_PARSE */
-define ('DEBUG_MINIMAL', 5);
+define('DEBUG_MINIMAL', 5);
 /** E_ERROR | E_PARSE | E_WARNING | E_NOTICE */
-define ('DEBUG_NORMAL', 15);
+define('DEBUG_NORMAL', 15);
 /** E_ALL without E_STRICT for now, do show recoverable fatal errors */
-define ('DEBUG_ALL', 6143);
+define('DEBUG_ALL', 6143);
 
 
 /**
@@ -262,13 +263,13 @@
 /**
  * Password policy constants
  */
-define ('PASSWORD_LOWER', 'abcdefghijklmnopqrstuvwxyz');
-define ('PASSWORD_UPPER', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ');
-define ('PASSWORD_DIGITS', '0123456789');
-define ('PASSWORD_NONALPHANUM', '.,;:!?_-+/*@#&$');
+define('PASSWORD_LOWER', 'abcdefghijklmnopqrstuvwxyz');
+define('PASSWORD_UPPER', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ');
+define('PASSWORD_DIGITS', '0123456789');
+define('PASSWORD_NONALPHANUM', '.,;:!?_-+/*@#&$');
 
 if (!defined('SORT_LOCALE_STRING')) { // PHP < 4.4.0 - TODO: remove in 2.0
-    define('SORT_LOCALE_STRING', SORT_STRING);
+   define('SORT_LOCALE_STRING', SORT_STRING);
 }
 
 
@@ -288,17 +289,17 @@
  * @param int $type expected type of parameter
  * @return mixed
  */
-function required_param($parname, $type=PARAM_CLEAN)
+function required_param($parname, $type = PARAM_CLEAN)
 {
-    if (isset($_POST[$parname])) {       // POST has precedence
-        $param = $_POST[$parname];
-    } else if (isset($_GET[$parname])) {
-        $param = $_GET[$parname];
-    } else {
-        echo 'A required parameter ('.$parname.') was missing';
-    }
-
-    return clean_param($param, $type);
+   if (isset($_POST[$parname])) {       // POST has precedence
+      $param = $_POST[$parname];
+   } else if (isset($_GET[$parname])) {
+      $param = $_GET[$parname];
+   } else {
+      echo 'A required parameter (' . $parname . ') was missing';
+   }
+
+   return clean_param($param, $type);
 }
 
 /**
@@ -315,19 +316,20 @@ function required_param($parname, $type=PARAM_CLEAN)
  * @param int $type expected type of parameter
  * @return mixed
  */
-function optional_param($parname, $default=NULL, $type=PARAM_CLEAN) {
+function optional_param($parname, $default = NULL, $type = PARAM_CLEAN)
+{
 
 
 
-    if (isset($_POST[$parname])) {       // POST has precedence
-        $param = $_POST[$parname];
-    } else if (isset($_GET[$parname])) {
-        $param = $_GET[$parname];
-    } else {
-        return $default;
-    }
+   if (isset($_POST[$parname])) {       // POST has precedence
+      $param = $_POST[$parname];
+   } else if (isset($_GET[$parname])) {
+      $param = $_GET[$parname];
+   } else {
+      return $default;
+   }
 
-    return clean_param($param, $type);
+   return clean_param($param, $type);
 }
 
 /**
@@ -362,280 +364,284 @@ function optional_param($parname, $default=NULL, $type=PARAM_CLEAN) {
  * @param int $type expected format of param after cleaning.
  * @return mixed
  */
-function clean_param($param, $type) {
+function clean_param($param, $type)
+{
 
 
-    if (is_array($param)) {              // Let's loop
-        $newparam = array();
-        foreach ($param as $key => $value) {
-            $newparam[$key] = clean_param($value, $type);
-        }
-        return $newparam;
-    }
+   if (is_array($param)) {              // Let's loop
+      $newparam = array();
+      foreach ($param as $key => $value) {
+         $newparam[$key] = clean_param($value, $type);
+      }
+      return $newparam;
+   }
 
-    switch ($type) {
-        case PARAM_RAW:          // no cleaning at all
-            return $param;
+   switch ($type) {
+      case PARAM_RAW:          // no cleaning at all
+         return $param;
 
-        case PARAM_CLEAN:        // General HTML cleaning, try to use more specific type if possible
+      case PARAM_CLEAN:        // General HTML cleaning, try to use more specific type if possible
 
-            if (is_numeric($param)) {
-                return $param;
-            }
-            $param = stripslashes($param);   // Needed for kses to work fine
-            $param = clean_text($param);     // Sweep for scripts, etc
+         if (is_numeric($param)) {
+            return $param;
+         }
+         $param = stripslashes($param);   // Needed for kses to work fine
+         $param = clean_text($param);     // Sweep for scripts, etc
 
-            return addslashes($param);       // Restore original request parameter slashes
+         return addslashes($param);       // Restore original request parameter slashes
 
-        case PARAM_CLEANHTML:    // prepare html fragment for display, do not store it into db!!
-            $param = stripslashes($param);   // Remove any slashes
-            $param = clean_text($param);     // Sweep for scripts, etc
-            return trim($param);
+      case PARAM_CLEANHTML:    // prepare html fragment for display, do not store it into db!!
+         $param = stripslashes($param);   // Remove any slashes
+         $param = clean_text($param);     // Sweep for scripts, etc
+         return trim($param);
 
-        case PARAM_INT:
-            return (int)$param;  // Convert to integer
+      case PARAM_INT:
+         return (int)$param;  // Convert to integer
 
-        case PARAM_NUMBER:
-            return (float)$param;  // Convert to integer
+      case PARAM_NUMBER:
+         return (float)$param;  // Convert to integer
 
-        case PARAM_PERCENT:
-           // return par_rep('/[^0-9%.]/i', '', $param);  // Remove everything not 0-9.%
-           return replace_croatain($param);
+      case PARAM_PERCENT:
+         // return par_rep('/[^0-9%.]/i', '', $param);  // Remove everything not 0-9.%
+         return replace_croatain($param);
 
-        case PARAM_ALPHA:        // Remove everything not a-z
-	   return par_rep('/[^a-zA-Z#&]/i', '', $param);
-          //  return replace_croatain($param);
+      case PARAM_ALPHA:        // Remove everything not a-z
+         return par_rep('/[^a-zA-Z#&]/i', '', $param);
+         //  return replace_croatain($param);
 
-        case PARAM_ALPHAMOD:        // Remove everything not a-z_
-		return par_rep('/[^a-zA-Z_#&]/i', '', $param);
-            //return replace_croatain($param);
+      case PARAM_ALPHAMOD:        // Remove everything not a-z_
+         return par_rep('/[^a-zA-Z_#&]/i', '', $param);
+         //return replace_croatain($param);
 
-        case PARAM_ALPHASPACE:        // Remove everything not a-z
-	   return par_rep('/[^\sa-zA-Z#&]/i', '', $param);
-           // return replace_croatain($param);
+      case PARAM_ALPHASPACE:        // Remove everything not a-z
+         return par_rep('/[^\sa-zA-Z#&]/i', '', $param);
+         // return replace_croatain($param);
 
-        case PARAM_ALPHANUM:     // Remove everything not a-zA-Z0-9
-           return par_rep('/[^A-Za-z0-9#&]/i', '', $param);
-           // return replace_croatain($param);
+      case PARAM_ALPHANUM:     // Remove everything not a-zA-Z0-9
+         return par_rep('/[^A-Za-z0-9#&]/i', '', $param);
+         // return replace_croatain($param);
 
-        case PARAM_USERNAME:
-           return replace_croatain($param);
+      case PARAM_USERNAME:
+         return replace_croatain($param);
 
 
-        case PARAM_PROFICIENCY:     // Remove everything not 0-9%-
-            return par_rep('/[^0-9%-]/i', '', $param);
+      case PARAM_PROFICIENCY:     // Remove everything not 0-9%-
+         return par_rep('/[^0-9%-]/i', '', $param);
 
 
-        case PARAM_DATA:     // Remove everything not a-zA-Z0-9_-
-            return par_rep('/[^a-zA-Z0-9_-]/i', '', $param);
-           // return replace_croatain($param);
+      case PARAM_DATA:     // Remove everything not a-zA-Z0-9_-
+         return par_rep('/[^a-zA-Z0-9_-]/i', '', $param);
+         // return replace_croatain($param);
 
          // case PARAM_NAME:     // Remove everything not a-zA-Z/_-
          //    return par_rep('/[^a-zA-Z0-9-#&._\']/i', '', $param);
 
-        case PARAM_ALPHAEXT:     // Remove everything not a-zA-Z/_-
-            return par_rep('/[^a-zA-Z\/_#-&]/i', '', $param);
-           // return replace_croatain($param);
+      case PARAM_ALPHAEXT:     // Remove everything not a-zA-Z/_-
+         return par_rep('/[^a-zA-Z\/_#-&]/i', '', $param);
+         // return replace_croatain($param);
 
-        case PARAM_ALPHAEXTS:     // Remove everything not a-zA-Z -,
-           return par_rep('/[^\sa-zA-Z-,.#&]/i', '', $param);
-           // return replace_croatain($param);
+      case PARAM_ALPHAEXTS:     // Remove everything not a-zA-Z -,
+         return par_rep('/[^\sa-zA-Z-,.#&]/i', '', $param);
+         // return replace_croatain($param);
 
-        case PARAM_ALPHANUMS:     // Remove everything not a-zA-Z -,
-           return par_rep('/[^\sa-zA-Z0-9-,.#&]/i', '', $param);
-           // return replace_croatain($param);
+      case PARAM_ALPHANUMS:     // Remove everything not a-zA-Z -,
+         return par_rep('/[^\sa-zA-Z0-9-,.#&]/i', '', $param);
+         // return replace_croatain($param);
 
-        case PARAM_PHONE:     // Remove everything not 0-9-+,
-           return par_rep('/[^0-9-+,().#&]/i', '', $param);
+      case PARAM_PHONE:     // Remove everything not 0-9-+,
+         return par_rep('/[^0-9-+,().#&]/i', '', $param);
 
-        case PARAM_MAIL:     // Remove everything not a-zA-Z -,
-           return par_rep('/[^a-z0-9.@_#&-]/i', '', $param);
+      case PARAM_MAIL:     // Remove everything not a-zA-Z -,
+         return par_rep('/[^a-z0-9.@_#&-]/i', '', $param);
 
-        case PARAM_CAL_TITLE:     // Remove everything not a-zA-Z0-9._'"-,
-          return par_rep('/[^\sa-zA-Z0-9-,#&._\'\"]/i', '', $param);
-           // return replace_croatain($param);
+      case PARAM_CAL_TITLE:     // Remove everything not a-zA-Z0-9._'"-,
+         return par_rep('/[^\sa-zA-Z0-9-,#&._\'\"]/i', '', $param);
+         // return replace_croatain($param);
 
 
-        case PARAM_TIME:     // Remove everything not a-zA-Z0-9._'"-,
+      case PARAM_TIME:     // Remove everything not a-zA-Z0-9._'"-,
          return par_rep('/[^\sa-zA-Z0-9:#&]/i', '', $param);
-           //return replace_croatain($param);
-
-
-        case PARAM_SEQUENCE:     // Remove everything not 0-9,
-            return par_rep('/[^0-9,]/i', '', $param);
-
-        case PARAM_BOOL:         // Convert to 1 or 0
-            $tempstr = strtolower($param);
-            if ($tempstr == 'on' or $tempstr == 'yes' ) {
-                $param = 1;
-            } else if ($tempstr == 'off' or $tempstr == 'no') {
-                $param = 0;
-            } else {
-                $param = empty($param) ? 0 : 1;
-            }
-            return $param;
-
-        case PARAM_NOTAGS:       // Strip all tags
-             $param=strip_tags($param);
-             $param= str_replace('>', '', $param);
-            return str_replace('<', '', $param);
-
-        case PARAM_TEXT:    // leave only tags needed for multilang
-            return clean_param(strip_tags($param, '<lang><span>'), PARAM_CLEAN);
-
-        case PARAM_SAFEDIR:      // Remove everything not a-zA-Z0-9_-
-            return par_rep('/[^a-zA-Z0-9_-]/i', '', $param);
-
-          case PARAM_SPCL:      // Remove *@#\/<>]/
-            $param=par_rep('/[*@#\/<>!$?:;~`^%]/', '',$param);
-			$param = stripslashes($param);
-			return $param;
-
-        case PARAM_CLEANFILE:    // allow only safe characters
-            return clean_filename($param);
-
-        case PARAM_FILE:         // Strip all suspicious characters from filename
-            $param = par_rep('~[[:cntrl:]]|[&<>"`\|\':\\\\/]~u', '', $param);
-            $param = par_rep('~\.\.+~', '', $param);
-            if ($param === '.') {
-                $param = '';
+         //return replace_croatain($param);
+
+
+      case PARAM_SEQUENCE:     // Remove everything not 0-9,
+         return par_rep('/[^0-9,]/i', '', $param);
+
+      case PARAM_BOOL:         // Convert to 1 or 0
+         $tempstr = strtolower($param);
+         if ($tempstr == 'on' or $tempstr == 'yes') {
+            $param = 1;
+         } else if ($tempstr == 'off' or $tempstr == 'no') {
+            $param = 0;
+         } else {
+            $param = empty($param) ? 0 : 1;
+         }
+         return $param;
+
+      case PARAM_NOTAGS:       // Strip all tags
+         $param = strip_tags($param);
+         $param = str_replace('>', '', $param);
+         return str_replace('<', '', $param);
+
+      case PARAM_TEXT:    // leave only tags needed for multilang
+         return clean_param(strip_tags($param, '<lang><span>'), PARAM_CLEAN);
+
+      case PARAM_SAFEDIR:      // Remove everything not a-zA-Z0-9_-
+         return par_rep('/[^a-zA-Z0-9_-]/i', '', $param);
+
+      case PARAM_SPCL:      // Remove *@#\/<>]/
+         $param = par_rep('/[*@#\/<>!$?:;~`^%]/', '', $param);
+         $param = stripslashes($param);
+         return $param;
+
+      case PARAM_CLEANFILE:    // allow only safe characters
+         return clean_filename($param);
+
+      case PARAM_FILE:         // Strip all suspicious characters from filename
+         $param = par_rep('~[[:cntrl:]]|[&<>"`\|\':\\\\/]~u', '', $param);
+         $param = par_rep('~\.\.+~', '', $param);
+         if ($param === '.') {
+            $param = '';
+         }
+         return $param;
+
+      case PARAM_PATH:         // Strip all suspicious characters from file path
+         $param = str_replace('\\', '/', $param);
+         $param = par_rep('~[[:cntrl:]]|[&<>"`\|\':]~u', '', $param);
+         $param = par_rep('~\.\.+~', '', $param);
+         $param = par_rep('~//+~', '/', $param);
+         return par_rep('~/(\./)+~', '/', $param);
+
+      case PARAM_HOST:         // allow FQDN or IPv4 dotted quad
+         $param = par_rep('/[^\.\d\w-]/', '', $param); // only allowed chars
+         // match ipv4 dotted quad
+         if (preg_match('/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/', $param, $match)) {
+            // confirm values are ok
+            if (
+               $match[0] > 255
+               || $match[1] > 255
+               || $match[3] > 255
+               || $match[4] > 255
+            ) {
+               // hmmm, what kind of dotted quad is this?
+               $param = '';
             }
-            return $param;
-
-        case PARAM_PATH:         // Strip all suspicious characters from file path
-            $param = str_replace('\\', '/', $param);
-            $param = par_rep('~[[:cntrl:]]|[&<>"`\|\':]~u', '', $param);
-            $param = par_rep('~\.\.+~', '', $param);
-            $param = par_rep('~//+~', '/', $param);
-            return par_rep('~/(\./)+~', '/', $param);
-
-        case PARAM_HOST:         // allow FQDN or IPv4 dotted quad
-            $param = par_rep('/[^\.\d\w-]/','', $param ); // only allowed chars
-            // match ipv4 dotted quad
-            if (preg_match('/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/',$param, $match)){
-                // confirm values are ok
-                if ( $match[0] > 255
-                     || $match[1] > 255
-                     || $match[3] > 255
-                     || $match[4] > 255 ) {
-                    // hmmm, what kind of dotted quad is this?
-                    $param = '';
-                }
-            } elseif ( preg_match('/^[\w\d\.-]+$/', $param) // dots, hyphens, numbers
-                       && !preg_match('/^[\.-]/',  $param) // no leading dots/hyphens
-                       && !preg_match('/[\.-]$/',  $param) // no trailing dots/hyphens
-                       ) {
-                // all is ok - $param is respected
+         } elseif (
+            preg_match('/^[\w\d\.-]+$/', $param) // dots, hyphens, numbers
+            && !preg_match('/^[\.-]/',  $param) // no leading dots/hyphens
+            && !preg_match('/[\.-]$/',  $param) // no trailing dots/hyphens
+         ) {
+            // all is ok - $param is respected
+         } else {
+            // all is not ok...
+            $param = '';
+         }
+         return $param;
+
+      case PARAM_URL:          // allow safe ftp, http, mailto urls
+
+         if (!empty($param) && validateUrlSyntax($param, 's?H?S?F?E?u-P-a?I?p?f?q?r?')) {
+            // all is ok, param is respected
+         } else {
+            $param = ''; // not really ok
+         }
+         return $param;
+
+      case PARAM_LOCALURL:     // allow http absolute, root relative and relative URLs within wwwroot
+         $param = clean_param($param, PARAM_URL);
+         if (!empty($param)) {
+            if (preg_match(':^/:', $param)) {
+               // root-relative, ok!
             } else {
-                // all is not ok...
-                $param='';
+               // relative - let's make sure there are no tricks
+               if (validateUrlSyntax($param, 's-u-P-a-p-f+q?r?')) {
+                  // looks ok.
+               } else {
+                  $param = '';
+               }
             }
-            return $param;
-
-       case PARAM_URL:          // allow safe ftp, http, mailto urls
-
-            if (!empty($param) && validateUrlSyntax($param, 's?H?S?F?E?u-P-a?I?p?f?q?r?')) {
-                // all is ok, param is respected
+         }
+         return $param;
+
+
+      case PARAM_PEM:
+         $param = trim($param);
+         // PEM formatted strings may contain letters/numbers and the symbols
+         // forward slash: /
+         // plus sign:     +
+         // equal sign:    =
+         // , surrounded by BEGIN and END CERTIFICATE prefix and suffixes
+         if (preg_match('/^-----BEGIN CERTIFICATE-----([\s\w\/\+=]+)-----END CERTIFICATE-----$/', trim($param), $matches)) {
+            list($wholething, $body) = $matches;
+            unset($wholething, $matches);
+            $b64 = clean_param($body, PARAM_BASE64);
+            if (!empty($b64)) {
+               return "-----BEGIN CERTIFICATE-----\n$b64\n-----END CERTIFICATE-----\n";
             } else {
-                $param =''; // not really ok
+               return '';
             }
-            return $param;
-
-        case PARAM_LOCALURL:     // allow http absolute, root relative and relative URLs within wwwroot
-            $param = clean_param($param, PARAM_URL);
-            if (!empty($param)) {
-                if (preg_match(':^/:', $param)) {
-                    // root-relative, ok!
-                }  else {
-                    // relative - let's make sure there are no tricks
-                    if (validateUrlSyntax($param, 's-u-P-a-p-f+q?r?')) {
-                        // looks ok.
-                    } else {
-                        $param = '';
-                    }
-                }
-            }
-            return $param;
-
+         }
+         return '';
 
-        case PARAM_PEM:
-            $param = trim($param);
+      case PARAM_BASE64:
+         if (!empty($param)) {
             // PEM formatted strings may contain letters/numbers and the symbols
             // forward slash: /
             // plus sign:     +
             // equal sign:    =
-            // , surrounded by BEGIN and END CERTIFICATE prefix and suffixes
-            if (preg_match('/^-----BEGIN CERTIFICATE-----([\s\w\/\+=]+)-----END CERTIFICATE-----$/', trim($param), $matches)) {
-                list($wholething, $body) = $matches;
-                unset($wholething, $matches);
-                $b64 = clean_param($body, PARAM_BASE64);
-                if (!empty($b64)) {
-                    return "-----BEGIN CERTIFICATE-----\n$b64\n-----END CERTIFICATE-----\n";
-                } else {
-                    return '';
-                }
+            if (0 >= preg_match('/^([\s\w\/\+=]+)$/', trim($param))) {
+               return '';
             }
-            return '';
-
-        case PARAM_BASE64:
-            if (!empty($param)) {
-                // PEM formatted strings may contain letters/numbers and the symbols
-                // forward slash: /
-                // plus sign:     +
-                // equal sign:    =
-                if (0 >= preg_match('/^([\s\w\/\+=]+)$/', trim($param))) {
-                    return '';
-                }
-                $lines = preg_split('/[\s]+/', $param, -1, PREG_SPLIT_NO_EMPTY);
-                // Each line of base64 encoded data must be 64 characters in
-                // length, except for the last line which may be less than (or
-                // equal to) 64 characters long.
-                for ($i=0, $j=count($lines); $i < $j; $i++) {
-                    if ($i + 1 == $j) {
-                        if (64 < strlen($lines[$i])) {
-                            return '';
-                        }
-                        continue;
-                    }
-
-                    if (64 != strlen($lines[$i])) {
-                        return '';
-                    }
-                }
-                return implode("\n",$lines);
-            } else {
-                return '';
+            $lines = preg_split('/[\s]+/', $param, -1, PREG_SPLIT_NO_EMPTY);
+            // Each line of base64 encoded data must be 64 characters in
+            // length, except for the last line which may be less than (or
+            // equal to) 64 characters long.
+            for ($i = 0, $j = count($lines); $i < $j; $i++) {
+               if ($i + 1 == $j) {
+                  if (64 < strlen($lines[$i])) {
+                     return '';
+                  }
+                  continue;
+               }
+
+               if (64 != strlen($lines[$i])) {
+                  return '';
+               }
             }
-
-        case PARAM_TAG:
-            //as long as magic_quotes_gpc is used, a backslash will be a
-            //problem, so remove *all* backslash.
-            $param = str_replace('\\', '', $param);
-            //convert many whitespace chars into one
-            $param = par_rep('/\s+/', ' ', $param);
-            $textlib = textlib_get_instance();
-            $param = $textlib->substr(trim($param), 0, TAG_MAX_LENGTH);
-            return $param;
-
-
-        case PARAM_TAGLIST:
-            $tags = explode(',', $param);
-            $result = array();
-            foreach ($tags as $tag) {
-                $res = clean_param($tag, PARAM_TAG);
-                if ($res != '') {
-                    $result[] = $res;
-                }
-            }
-            if ($result) {
-                return implode(',', $result);
-            } else {
-                return '';
+            return implode("\n", $lines);
+         } else {
+            return '';
+         }
+
+      case PARAM_TAG:
+         //as long as magic_quotes_gpc is used, a backslash will be a
+         //problem, so remove *all* backslash.
+         $param = str_replace('\\', '', $param);
+         //convert many whitespace chars into one
+         $param = par_rep('/\s+/', ' ', $param);
+         $textlib = textlib_get_instance();
+         $param = $textlib->substr(trim($param), 0, TAG_MAX_LENGTH);
+         return $param;
+
+
+      case PARAM_TAGLIST:
+         $tags = explode(',', $param);
+         $result = array();
+         foreach ($tags as $tag) {
+            $res = clean_param($tag, PARAM_TAG);
+            if ($res != '') {
+               $result[] = $res;
             }
+         }
+         if ($result) {
+            return implode(',', $result);
+         } else {
+            return '';
+         }
 
-        default:                 // throw error, switched parameters in optional_param or another serious problem
-            echo "Unknown parameter type: $type";
-    }
+      default:                 // throw error, switched parameters in optional_param or another serious problem
+         echo "Unknown parameter type: $type";
+   }
 }
 
 /**
@@ -644,14 +650,15 @@ function clean_param($param, $type) {
  * @param mixed $value String or Int
  * @return bool true if number, false if not
  */
-function is_number($value) {
-    if (is_int($value)) {
-        return true;
-    } else if (is_string($value)) {
-        return ((string)(int)$value) === $value;
-    } else {
-        return false;
-    }
+function is_number($value)
+{
+   if (is_int($value)) {
+      return true;
+   } else if (is_string($value)) {
+      return ((string)(int)$value) === $value;
+   } else {
+      return false;
+   }
 }
 
 /**
@@ -663,1025 +670,583 @@ function is_number($value) {
  * @return boolean does the string contain any actual content - that is text,
  * images, objcts, etc.
  */
-function html_is_blank($string) {
-    return trim(strip_tags($string, '<img><object><applet><input><select><textarea><hr>')) == '';
+function html_is_blank($string)
+{
+   return trim(strip_tags($string, '<img><object><applet><input><select><textarea><hr>')) == '';
 }
 
 
-function clean_filename($string) {
+function clean_filename($string)
+{
 
-        //clean only ascii range
-     $string = par_rep("/[\\000-\\x2c\\x2f\\x3a-\\x40\\x5b-\\x5e\\x60\\x7b-\\177]/s", '_', $string);
+   //clean only ascii range
+   $string = par_rep("/[\\000-\\x2c\\x2f\\x3a-\\x40\\x5b-\\x5e\\x60\\x7b-\\177]/s", '_', $string);
 
-    $string = par_rep("/_+/", '_', $string);
-    $string = par_rep("/\.\.+/", '.', $string);
-    return $string;
+   $string = par_rep("/_+/", '_', $string);
+   $string = par_rep("/\.\.+/", '.', $string);
+   return $string;
 }
 
 
-function validateUrlSyntax( $urladdr, $options="" ){
-
-    // Force Options parameter to be lower case
-    // DISABLED PERMAMENTLY - OK to remove from code
-    //    $options = strtolower($options);
-
-     //Check Options Parameter
-    if (!par_rep_all( '/^([sHSEFuPaIpfqr][+?-])*$/', $options ))
-    {
-        trigger_error("Options attribute malformed", E_USER_ERROR);
-    }
-
-    // Set Options Array, set defaults if options are not specified
-    // Scheme
-    if (strpos( $options, 's') === false) $aOptions['s'] = '?';
-    else $aOptions['s'] = substr( $options, strpos( $options, 's') + 1, 1);
-    // http://
-    if (strpos( $options, 'H') === false) $aOptions['H'] = '?';
-    else $aOptions['H'] = substr( $options, strpos( $options, 'H') + 1, 1);
-    // https:// (SSL)
-    if (strpos( $options, 'S') === false) $aOptions['S'] = '?';
-    else $aOptions['S'] = substr( $options, strpos( $options, 'S') + 1, 1);
-    // mailto: (email)
-    if (strpos( $options, 'E') === false) $aOptions['E'] = '-';
-    else $aOptions['E'] = substr( $options, strpos( $options, 'E') + 1, 1);
-    // ftp://
-    if (strpos( $options, 'F') === false) $aOptions['F'] = '-';
-    else $aOptions['F'] = substr( $options, strpos( $options, 'F') + 1, 1);
-    // User section
-    if (strpos( $options, 'u') === false) $aOptions['u'] = '?';
-    else $aOptions['u'] = substr( $options, strpos( $options, 'u') + 1, 1);
-    // Password in user section
-    if (strpos( $options, 'P') === false) $aOptions['P'] = '?';
-    else $aOptions['P'] = substr( $options, strpos( $options, 'P') + 1, 1);
-    // Address Section
-    if (strpos( $options, 'a') === false) $aOptions['a'] = '+';
-    else $aOptions['a'] = substr( $options, strpos( $options, 'a') + 1, 1);
-    // IP Address in address section
-    if (strpos( $options, 'I') === false) $aOptions['I'] = '?';
-    else $aOptions['I'] = substr( $options, strpos( $options, 'I') + 1, 1);
-    // Port number
-    if (strpos( $options, 'p') === false) $aOptions['p'] = '?';
-    else $aOptions['p'] = substr( $options, strpos( $options, 'p') + 1, 1);
-    // File Path
-    if (strpos( $options, 'f') === false) $aOptions['f'] = '?';
-    else $aOptions['f'] = substr( $options, strpos( $options, 'f') + 1, 1);
-    // Query Section
-    if (strpos( $options, 'q') === false) $aOptions['q'] = '?';
-    else $aOptions['q'] = substr( $options, strpos( $options, 'q') + 1, 1);
-    // Fragment (Anchor)
-    if (strpos( $options, 'r') === false) $aOptions['r'] = '?';
-    else $aOptions['r'] = substr( $options, strpos( $options, 'r') + 1, 1);
-
-
-    // Loop through options array, to search for and replace "-" to "{0}" and "+" to ""
-    foreach($aOptions as $key => $value)
-    {
-        if ($value == '-')
-        {
-            $aOptions[$key] = '{0}';
-        }
-        if ($value == '+')
-        {
-            $aOptions[$key] = '';
-        }
-    }
-
-    // DEBUGGING - Unescape following line to display to screen current option values
-    // echo '<pre>'; print_r($aOptions); echo '</pre>';
-
-
-    // Preset Allowed Characters
-    $alphanum    = '[a-zA-Z0-9]';  // Alpha Numeric
-    $unreserved  = '[a-zA-Z0-9_.!~*' . '\'' . '()-]';
-    $escaped     = '(%[0-9a-fA-F]{2})'; // Escape sequence - In Hex - %6d would be a 'm'
-    $reserved    = '[;/?:@&=+$,]'; // Special characters in the URI
-
-    // Beginning Regular Expression
-                       // Scheme - Allows for 'http://', 'https://', 'mailto:', or 'ftp://'
-    $scheme            = '(';
-    if     ($aOptions['H'] === '') { $scheme .= 'http://'; }
-    elseif ($aOptions['S'] === '') { $scheme .= 'https://'; }
-    elseif ($aOptions['E'] === '') { $scheme .= 'mailto:'; }
-    elseif ($aOptions['F'] === '') { $scheme .= 'ftp://'; }
-    else
-    {
-        if ($aOptions['H'] === '?') { $scheme .= '|(http://)'; }
-        if ($aOptions['S'] === '?') { $scheme .= '|(https://)'; }
-        if ($aOptions['E'] === '?') { $scheme .= '|(mailto:)'; }
-        if ($aOptions['F'] === '?') { $scheme .= '|(ftp://)'; }
-        $scheme = str_replace('(|', '(', $scheme); // fix first pipe
-    }
-    $scheme            .= ')' . $aOptions['s'];
-    // End setting scheme
-
-                       // User Info - Allows for 'username@' or 'username:password@'. Note: contrary to rfc, I removed ':' from username section, allowing it only in password.
-                       //   /---------------- Username -----------------------\  /-------------------------------- Password ------------------------------\
-    $userinfo          = '((' . $unreserved . '|' . $escaped . '|[;&=+$,]' . ')+(:(' . $unreserved . '|' . $escaped . '|[;:&=+$,]' . ')+)' . $aOptions['P'] . '@)' . $aOptions['u'];
-
-                       // IP ADDRESS - Allows 0.0.0.0 to 255.255.255.255
-    $ipaddress         = '((((2(([0-4][0-9])|(5[0-5])))|([01]?[0-9]?[0-9]))\.){3}((2(([0-4][0-9])|(5[0-5])))|([01]?[0-9]?[0-9])))';
-
-                       // Tertiary Domain(s) - Optional - Multi - Although some sites may use other characters, the RFC says tertiary domains have the same naming restrictions as second level domains
-    $domain_tertiary   = '(' . $alphanum . '(([a-zA-Z0-9-]{0,62})' . $alphanum . ')?\.)*';
-
-/* MDL-9295 - take out domain_secondary here and below, so that URLs like http://localhost/ and lan addresses like http://host/ are accepted.
+function validateUrlSyntax($urladdr, $options = "")
+{
+
+   // Force Options parameter to be lower case
+   // DISABLED PERMAMENTLY - OK to remove from code
+   //    $options = strtolower($options);
+
+   //Check Options Parameter
+   if (!par_rep_all('/^([sHSEFuPaIpfqr][+?-])*$/', $options)) {
+      trigger_error("Options attribute malformed", E_USER_ERROR);
+   }
+
+   // Set Options Array, set defaults if options are not specified
+   // Scheme
+   if (strpos($options, 's') === false) $aOptions['s'] = '?';
+   else $aOptions['s'] = substr($options, strpos($options, 's') + 1, 1);
+   // http://
+   if (strpos($options, 'H') === false) $aOptions['H'] = '?';
+   else $aOptions['H'] = substr($options, strpos($options, 'H') + 1, 1);
+   // https:// (SSL)
+   if (strpos($options, 'S') === false) $aOptions['S'] = '?';
+   else $aOptions['S'] = substr($options, strpos($options, 'S') + 1, 1);
+   // mailto: (email)
+   if (strpos($options, 'E') === false) $aOptions['E'] = '-';
+   else $aOptions['E'] = substr($options, strpos($options, 'E') + 1, 1);
+   // ftp://
+   if (strpos($options, 'F') === false) $aOptions['F'] = '-';
+   else $aOptions['F'] = substr($options, strpos($options, 'F') + 1, 1);
+   // User section
+   if (strpos($options, 'u') === false) $aOptions['u'] = '?';
+   else $aOptions['u'] = substr($options, strpos($options, 'u') + 1, 1);
+   // Password in user section
+   if (strpos($options, 'P') === false) $aOptions['P'] = '?';
+   else $aOptions['P'] = substr($options, strpos($options, 'P') + 1, 1);
+   // Address Section
+   if (strpos($options, 'a') === false) $aOptions['a'] = '+';
+   else $aOptions['a'] = substr($options, strpos($options, 'a') + 1, 1);
+   // IP Address in address section
+   if (strpos($options, 'I') === false) $aOptions['I'] = '?';
+   else $aOptions['I'] = substr($options, strpos($options, 'I') + 1, 1);
+   // Port number
+   if (strpos($options, 'p') === false) $aOptions['p'] = '?';
+   else $aOptions['p'] = substr($options, strpos($options, 'p') + 1, 1);
+   // File Path
+   if (strpos($options, 'f') === false) $aOptions['f'] = '?';
+   else $aOptions['f'] = substr($options, strpos($options, 'f') + 1, 1);
+   // Query Section
+   if (strpos($options, 'q') === false) $aOptions['q'] = '?';
+   else $aOptions['q'] = substr($options, strpos($options, 'q') + 1, 1);
+   // Fragment (Anchor)
+   if (strpos($options, 'r') === false) $aOptions['r'] = '?';
+   else $aOptions['r'] = substr($options, strpos($options, 'r') + 1, 1);
+
+
+   // Loop through options array, to search for and replace "-" to "{0}" and "+" to ""
+   foreach ($aOptions as $key => $value) {
+      if ($value == '-') {
+         $aOptions[$key] = '{0}';
+      }
+      if ($value == '+') {
+         $aOptions[$key] = '';
+      }
+   }
+
+   // DEBUGGING - Unescape following line to display to screen current option values
+   // echo '<pre>'; print_r($aOptions); echo '</pre>';
+
+
+   // Preset Allowed Characters
+   $alphanum    = '[a-zA-Z0-9]';  // Alpha Numeric
+   $unreserved  = '[a-zA-Z0-9_.!~*' . '\'' . '()-]';
+   $escaped     = '(%[0-9a-fA-F]{2})'; // Escape sequence - In Hex - %6d would be a 'm'
+   $reserved    = '[;/?:@&=+$,]'; // Special characters in the URI
+
+   // Beginning Regular Expression
+   // Scheme - Allows for 'http://', 'https://', 'mailto:', or 'ftp://'
+   $scheme            = '(';
+   if ($aOptions['H'] === '') {
+      $scheme .= 'http://';
+   } elseif ($aOptions['S'] === '') {
+      $scheme .= 'https://';
+   } elseif ($aOptions['E'] === '') {
+      $scheme .= 'mailto:';
+   } elseif ($aOptions['F'] === '') {
+      $scheme .= 'ftp://';
+   } else {
+      if ($aOptions['H'] === '?') {
+         $scheme .= '|(http://)';
+      }
+      if ($aOptions['S'] === '?') {
+         $scheme .= '|(https://)';
+      }
+      if ($aOptions['E'] === '?') {
+         $scheme .= '|(mailto:)';
+      }
+      if ($aOptions['F'] === '?') {
+         $scheme .= '|(ftp://)';
+      }
+      $scheme = str_replace('(|', '(', $scheme); // fix first pipe
+   }
+   $scheme            .= ')' . $aOptions['s'];
+   // End setting scheme
+
+   // User Info - Allows for 'username@' or 'username:password@'. Note: contrary to rfc, I removed ':' from username section, allowing it only in password.
+   //   /---------------- Username -----------------------\  /-------------------------------- Password ------------------------------\
+   $userinfo          = '((' . $unreserved . '|' . $escaped . '|[;&=+$,]' . ')+(:(' . $unreserved . '|' . $escaped . '|[;:&=+$,]' . ')+)' . $aOptions['P'] . '@)' . $aOptions['u'];
+
+   // IP ADDRESS - Allows 0.0.0.0 to 255.255.255.255
+   $ipaddress         = '((((2(([0-4][0-9])|(5[0-5])))|([01]?[0-9]?[0-9]))\.){3}((2(([0-4][0-9])|(5[0-5])))|([01]?[0-9]?[0-9])))';
+
+   // Tertiary Domain(s) - Optional - Multi - Although some sites may use other characters, the RFC says tertiary domains have the same naming restrictions as second level domains
+   $domain_tertiary   = '(' . $alphanum . '(([a-zA-Z0-9-]{0,62})' . $alphanum . ')?\.)*';
+
+   /* MDL-9295 - take out domain_secondary here and below, so that URLs like http://localhost/ and lan addresses like http://host/ are accepted.
                        // Second Level Domain - Required - First and last characters must be Alpha-numeric. Hyphens are allowed inside.
     $domain_secondary  = '(' . $alphanum . '(([a-zA-Z0-9-]{0,62})' . $alphanum . ')?\.)';
 */
 
 
-                       // Top Level Domain - First character must be Alpha. Last character must be AlphaNumeric. Hyphens are allowed inside.
-    $domain_toplevel   = '([a-zA-Z](([a-zA-Z0-9-]*)[a-zA-Z0-9])?)';
-/*                       // Top Level Domain - Required - Domain List Current As Of December 2004. Use above escaped line to be forgiving of possible future TLD's
+   // Top Level Domain - First character must be Alpha. Last character must be AlphaNumeric. Hyphens are allowed inside.
+   $domain_toplevel   = '([a-zA-Z](([a-zA-Z0-9-]*)[a-zA-Z0-9])?)';
+   /*                       // Top Level Domain - Required - Domain List Current As Of December 2004. Use above escaped line to be forgiving of possible future TLD's
     $domain_toplevel   = '(aero|biz|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|post|pro|travel|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|az|ax|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|sv|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw)';
 */
 
-                       // Address can be IP address or Domain
-    if ($aOptions['I'] === '{0}') {       // IP Address Not Allowed
-        $address       = '(' . $domain_tertiary . /* MDL-9295 $domain_secondary . */ $domain_toplevel . ')';
-    } elseif ($aOptions['I'] === '') {  // IP Address Required
-        $address       = '(' . $ipaddress . ')';
-    } else {                            // IP Address Optional
-        $address       = '((' . $ipaddress . ')|(' . $domain_tertiary . /* MDL-9295 $domain_secondary . */ $domain_toplevel . '))';
-    }
-    $address = $address . $aOptions['a'];
-
-                       // Port Number - :80 or :8080 or :65534 Allows range of :0 to :65535
-                       //    (0-59999)         |(60000-64999)   |(65000-65499)    |(65500-65529)  |(65530-65535)
-    $port_number       = '(:(([0-5]?[0-9]{1,4})|(6[0-4][0-9]{3})|(65[0-4][0-9]{2})|(655[0-2][0-9])|(6553[0-5])))' . $aOptions['p'];
-
-                       // Path - Can be as simple as '/' or have multiple folders and filenames
-    $path              = '(/((;)?(' . $unreserved . '|' . $escaped . '|' . '[:@&=+$,]' . ')+(/)?)*)' . $aOptions['f'];
-
-                       // Query Section - Accepts ?var1=value1&var2=value2 or ?2393,1221 and much more
-    $querystring       = '(\?(' . $reserved . '|' . $unreserved . '|' . $escaped . ')*)' . $aOptions['q'];
-
-                       // Fragment Section - Accepts anchors such as #top
-    $fragment          = '(#(' . $reserved . '|' . $unreserved . '|' . $escaped . ')*)' . $aOptions['r'];
-
-
-    // Building Regular Expression
-    $regexp = '^' . $scheme . $userinfo . $address . $port_number . $path . $querystring . $fragment . '$';
-
-    // DEBUGGING - Uncomment Line Below To Display The Regular Expression Built
-    // echo '<pre>' . htmlentities(wordwrap($regexp,70,"\n",1)) . '</pre>';
-
-    // Running the regular expression
-    if (par_rep( $regexp, $urladdr ))
-    {
-        return true; // The domain passed
-    }
-    else
-    {
-        return false; // The domain didn't pass the expression
-    }
-
-} // END Function validateUrlSyntax()
-
-function clean_text($text, $format=FORMAT_SIS) {
-
-    global $ALLOWED_TAGS ;
-
-    if (empty($text) or is_numeric($text)) {
-       return (string)$text;
-    }
-
-    switch ($format) {
-        case FORMAT_PLAIN:
-        case FORMAT_MARKDOWN:
-            return $text;
-
-        default:
-
-
-            /// Fix non standard entity notations
-                $text = par_rep('/&#0*([0-9]+);?/', "&#\\1;", $text);
-                $text = par_rep('/&#x0*([0-9a-fA-F]+);?/', "&#x\\1;", $text);
-
-            /// Remove tags that are not allowed
-                $text = strip_tags($text, $ALLOWED_TAGS);
-
-            /// Clean up embedded scripts and , using kses
-                $text = cleanAttributes($text);
-
-            /// Again remove tags that are not allowed
-                $text = strip_tags($text, $ALLOWED_TAGS);
-
-            }
-
-        /// Remove potential script events - some extra protection for undiscovered bugs in our code
-            $text = preg_filter("([^a-z])language([[:space:]]*)=", "\\1Xlanguage=", $text);
-            $text = preg_filter("([^a-z])on([a-z]+)([[:space:]]*)=", "\\1Xon\\2=", $text);
-
-            return $text;
-
-}
-
-function cleanAttributes($str){
-  $search = array ('~[^\\pL_]+~u',  '~[^-a-zA-Z0-9_]+~','@[^>]*?>.*?@si');                    // evaluate as php
-  $replace = array ('', '','');
-  $result=par_rep($search, $replace, $str);
-  return  $result;
-}
-
-
-
-
-function paramlib_validation($feild,$value)
-{
-   if($feild==FIRST_NAME)
-   {
-      $val=clean_param($value,PARAM_USERNAME);
-    }
-
-   elseif($feild==MIDDLE_NAME)
-   {
-       $val=clean_param($value,PARAM_USERNAME);
-   }
-
-   elseif($feild==LAST_NAME)
-   {
-      $val=clean_param($value,PARAM_USERNAME);
-   }
-
-   elseif($feild==GENDER || $feild==gender)
-   {
-      $val= clean_param($value,PARAM_ALPHA);
-   }
-
-   elseif($feild==ETHNICITY || $feild==ethnicity)
-   {
-      $val= clean_param($value,PARAM_ALPHAEXTS);
-   }
-
-    elseif($feild==COMMON_NAME || $feild==common_name)
-   {
-      $val=clean_param($value,PARAM_USERNAME);
-
-   }
-
-   elseif($feild==LANGUAGE || $feild==language)
-   {
-      $val=clean_param($value,PARAM_ALPHAEXTS);
-   }
-
-   elseif($feild==EMAIL || $feild==email)
-   {
-      $val=clean_param($value,PARAM_MAIL);
-   }
-
-   elseif($feild==PHONE || $feild==phone)
-   {
-       $val=clean_param($value,PARAM_PHONE);
-   }
-
-    elseif($feild==ALT_ID)
-   {
-       $val=clean_param($value,PARAM_ALPHANUM);
-   }
-
-    elseif($feild==USERNAME)
-   {
-      $val=clean_param($value,PARAM_RAW);
-   }
-
-    elseif($feild==PASSWORD)
-   {
-         $val=clean_param($value,PARAM_RAW);
-   }
-
-   elseif($feild==ESTIMATED_GRAD_DATE)
-   {
-       $val=$value;
-   }
-
-   elseif($feild==BIRTHDATE)
-   {
-        $val=$value;
-   }
-
-    elseif($feild==GRADE_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-    elseif($feild==IS_DISABLE)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==GOAL_TITLE)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==GOAL_DESCRIPTION)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-
-    elseif($feild==COURSE_PERIOD_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-     elseif($feild==PROGRESS_NAME)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-     elseif($feild==PROFICIENCY)
-   {
-      $val=clean_param($value,PARAM_PROFICIENCY);
-   }
-
-     elseif($feild==PROGRESS_DESCRIPTION)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==COMMENT)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==PHYSICIAN || $feild==physician)
-   {
-      $val=clean_param($value,PARAM_USERNAME);
-   }
-
-    elseif($feild==PHYSICIAN_PHONE || $feild==physician_phone)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-    elseif($feild==PREFERRED_HOSPITAL || $feild==preferred_hospital)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==DOCTORS_NOTE_COMMENTS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==COMMENTS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==TITLE)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==TIME_IN)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==TIME_OUT)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==REASON)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==RESULT)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==ADDRESS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==STREET)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-   elseif($feild==CITY)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-    elseif($feild==STATE)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-     elseif($feild==ZIPCODE)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-    elseif($feild==BUS_PICKUP)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-   elseif($feild==BUS_DROPOFF)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==BUS_NO)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-     elseif($feild==MAIL_ADDRESS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==MAIL_STREET)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-   elseif($feild==MAIL_CITY)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-    elseif($feild==MAIL_STATE)
-   {
-      $val=clean_param($value,PARAM_ALPHAEXTS);
-   }
-
-     elseif($feild==MAIL_ZIPCODE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-    elseif($feild==PRIM_STUDENT_RELATION)   
-   {
-      $val=clean_param($value,PARAM_RAW);
-   }
-
-    elseif($feild==PRI_FIRST_NAME)
-   {
-      $val=clean_param($value,PARAM_USERNAME);
-    }
-
-   elseif($feild==PRI_LAST_NAME)
-   {
-       $val=clean_param($value,PARAM_USERNAME);
-   }
-
-   elseif($feild==HOME_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-   elseif($feild==WORK_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-   elseif($feild==MOBILE_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-   elseif($feild==PRIM_CUSTODY)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==PRIM_ADDRESS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==PRIM_STREET)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-   elseif($feild==PRIM_CITY)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-    elseif($feild==PRIM_STATE)
-   {
-      $val=clean_param($value,PARAM_ALPHAEXTS);
-   }
-
-     elseif($feild==PRIM_ZIPCODE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-    elseif($feild==SEC_STUDENT_RELATION)
-   {
-      $val=clean_param($value,PARAM_RAW);
-   }
-
-    elseif($feild==SEC_FIRST_NAME)
-   {
-      $val=clean_param($value,PARAM_USERNAME);
-    }
-
-   elseif($feild==SEC_LAST_NAME)
-   {
-       $val=clean_param($value,PARAM_USERNAME);
-   }
-
-   elseif($feild==SEC_HOME_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-   elseif($feild==SEC_WORK_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-   elseif($feild==SEC_MOBILE_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-    elseif($feild==SEC_EMAIL)
-   {
-      $val=clean_param($value,PARAM_MAIL);
-   }
-
-    elseif($feild==SEC_CUSTODY)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==SEC_ADDRESS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==SEC_STREET)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-   elseif($feild==SEC_CITY)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-    elseif($feild==SEC_STATE)
-   {
-      $val=clean_param($value,PARAM_ALPHAEXTS);
-   }
-
-     elseif($feild==SEC_ZIPCODE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-   elseif($feild==EMERGENCY)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==STUDENT_RELATION)  
-   {
-      $val=clean_param($value,PARAM_RAW);
-   }
-
-   elseif($feild==ADDN_HOME_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
+   // Address can be IP address or Domain
+   if ($aOptions['I'] === '{0}') {       // IP Address Not Allowed
+      $address       = '(' . $domain_tertiary . /* MDL-9295 $domain_secondary . */ $domain_toplevel . ')';
+   } elseif ($aOptions['I'] === '') {  // IP Address Required
+      $address       = '(' . $ipaddress . ')';
+   } else {                            // IP Address Optional
+      $address       = '((' . $ipaddress . ')|(' . $domain_tertiary . /* MDL-9295 $domain_secondary . */ $domain_toplevel . '))';
    }
+   $address = $address . $aOptions['a'];
 
-   elseif($feild==ADDN_WORK_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-   elseif($feild==ADDN_MOBILE_PHONE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-    elseif($feild==ADDN_EMAIL)
-   {
-      $val=clean_param($value,PARAM_MAIL);
-   }
-
-    elseif($feild==CUSTODY)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==ADDN_ADDRESS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==ADDN_STREET)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-   elseif($feild==ADDN_CITY)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-    elseif($feild==ADDN_STATE)
-   {
-      $val=clean_param($value,PARAM_ALPHAEXTS);
-   }
-
-     elseif($feild==ADDN_ZIPCODE)
-   {
-      $val=clean_param($value,PARAM_PHONE);
-   }
-
-    elseif($feild==ADDN_BUS_PICKUP)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==ADDN_BUS_DROPOFF)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==ADDN_BUSNO)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
+   // Port Number - :80 or :8080 or :65534 Allows range of :0 to :65535
+   //    (0-59999)         |(60000-64999)   |(65000-65499)    |(65500-65529)  |(65530-65535)
+   $port_number       = '(:(([0-5]?[0-9]{1,4})|(6[0-4][0-9]{3})|(65[0-4][0-9]{2})|(655[0-2][0-9])|(6553[0-5])))' . $aOptions['p'];
 
-    elseif($feild=='INCLUDE')
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==TYPE)
-   {
-      $val=clean_param($value,PARAM_ALPHAEXTS);
-   }
-
-    elseif($feild==SELECT_OPTIONS)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-   elseif($feild==REQUIRED)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
+   // Path - Can be as simple as '/' or have multiple folders and filenames
+   $path              = '(/((;)?(' . $unreserved . '|' . $escaped . '|' . '[:@&=+$,]' . ')+(/)?)*)' . $aOptions['f'];
 
-   elseif($feild==HIDE)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
+   // Query Section - Accepts ?var1=value1&var2=value2 or ?2393,1221 and much more
+   $querystring       = '(\?(' . $reserved . '|' . $unreserved . '|' . $escaped . ')*)' . $aOptions['q'];
 
-    elseif($feild==DEFAULT_SELECTION)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
+   // Fragment Section - Accepts anchors such as #top
+   $fragment          = '(#(' . $reserved . '|' . $unreserved . '|' . $escaped . ')*)' . $aOptions['r'];
 
-   elseif($feild==PROFILE)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
 
-    elseif($feild==SCHOOLS)
-   {
-      $val=clean_param($value,PARAM_SEQUENCE);
-   }
+   // Building Regular Expression
+   $regexp = '^' . $scheme . $userinfo . $address . $port_number . $path . $querystring . $fragment . '$';
 
-    elseif($feild==CONTENT)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
+   // DEBUGGING - Uncomment Line Below To Display The Regular Expression Built
+   // echo '<pre>' . htmlentities(wordwrap($regexp,70,"\n",1)) . '</pre>';
 
-   elseif($feild==SORT_ORDER)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-   elseif($feild==SHORT_NAME)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-   elseif($feild==DOES_GRADES)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==DOES_EXAM)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-   elseif($feild==DOES_COMMENTS)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==DESCRIPTION)
-   {
-      $val=clean_param($value,PARAM_NOTAGS);
-   }
-
-    elseif($feild==Calender_Title)
-   {
-      $val=clean_param($value,PARAM_CAL_TITLE);
-   }
-
-   elseif($feild==EVENT_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-   elseif($feild==ATTENDANCE)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-   elseif($feild==IGNORE_SCHEDULING)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-   elseif($feild==START_TIME)
-   {
-      $val=clean_param($value,PARAM_TIME);
-   }
-
-   elseif($feild==END_TIME)
-   {
-      $val=clean_param($value,PARAM_TIME);
-   }
-
-    elseif($feild==NEXT_GRADE_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-   elseif($feild==PRINCIPAL)
-   {
-       $val=clean_param($value,PARAM_CAL_TITLE);
-   }
-
-    elseif($feild==REPORTING_GP_SCALE)
-   {
-       $val=clean_param($value,PARAM_NUMBER);
-   }
-
-    elseif($feild==E_MAIL)
-   {
-      $val=clean_param($value,PARAM_MAIL);
-   }
-
-    elseif($feild==CEEB)
-   {
-      $val=clean_param($value,PARAM_ALPHANUM);
-   }
-
-   elseif($feild==WWW_ADDRESS)
-   {
-      $val=clean_param($value,PARAM_URL);
-   }
-
-   elseif($feild==FULL_DAY_MINUTE)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-   elseif($feild==HALF_DAY_MINUTE)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-    elseif($feild==TEACHER_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-   elseif($feild==ROOM)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-   elseif($feild==PERIOD_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-    elseif($feild==DAYS)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==MARKING_PERIOD_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-    elseif($feild==TOTAL_SEATS)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-    elseif($feild==DOES_ATTENDANCE)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==DOES_HONOR_ROLL)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==DOES_CLASS_RANK)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==GENDER_RESTRICTION)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-   elseif($feild==GRADE_SCALE_ID)
-   {
-      $val=clean_param($value,PARAM_ALPHANUMS);
-   }
-
-   elseif($feild==CREDITS)
-   {
-       $val=clean_param($value,PARAM_NUMBER);
-   }
-
-   elseif($feild==CALENDAR_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
-
-    elseif($feild==HALF_DAY)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
-
-    elseif($feild==DOES_BREAKOFF)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
+   // Running the regular expression
+   if (par_rep($regexp, $urladdr)) {
+      return true; // The domain passed
+   } else {
+      return false; // The domain didn't pass the expression
    }
+} // END Function validateUrlSyntax()
 
-    elseif($feild==PARENT_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
+function clean_text($text, $format = 'FORMAT_SIS')
+{
 
-    elseif($feild==MP)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
+   global $ALLOWED_TAGS;
 
-    elseif($feild==Calender_Id)
-   {
-      $val=clean_param($value,PARAM_INT);
+   if (empty($text) or is_numeric($text)) {
+      return (string)$text;
    }
 
-   elseif($feild==WITH_TEACHER_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
+   switch ($format) {
+      case 'FORMAT_PLAIN':
+      case 'FORMAT_MARKDOWN':
+         return $text;
 
-   elseif($feild==NOT_TEACHER_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
+      default:
 
-   elseif($feild==WITH_PERIOD_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
 
-   elseif($feild==NOT_PERIOD_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
+         /// Fix non standard entity notations
+         $text = par_rep('/&#0*([0-9]+);?/', "&#\\1;", $text);
+         $text = par_rep('/&#x0*([0-9a-fA-F]+);?/', "&#x\\1;", $text);
 
-   elseif($feild==SCHEDULER_LOCK)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
+         /// Remove tags that are not allowed
+         $text = strip_tags($text, $ALLOWED_TAGS);
 
-   elseif($feild==POINTS)
-   {
-      $val=clean_param($value,PARAM_PERCENT);
-   }
+         /// Clean up embedded scripts and , using kses
+         $text = cleanAttributes($text);
 
-    elseif($feild==COURSE_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
+         /// Again remove tags that are not allowed
+         $text = strip_tags($text, $ALLOWED_TAGS);
    }
 
-    elseif($feild==ASSIGNMENT_TYPE_ID)
-   {
-      $val=clean_param($value,PARAM_INT);
-   }
+   /// Remove potential script events - some extra protection for undiscovered bugs in our code
+   $text = preg_filter("([^a-z])language([[:space:]]*)=", "\\1Xlanguage=", $text);
+   $text = preg_filter("([^a-z])on([a-z]+)([[:space:]]*)=", "\\1Xon\\2=", $text);
 
-    elseif($feild==GP_SCALE)
-   {
-       $val=clean_param($value,PARAM_NUMBER);
-   }
+   return $text;
+}
 
-   elseif($feild==BREAK_OFF)
-   {
-       $val=clean_param($value,PARAM_NUMBER);
-   }
+function cleanAttributes($str)
+{
+   $search = array('~[^\\pL_]+~u',  '~[^-a-zA-Z0-9_]+~', '@[^>]*?>.*?@si');                    // evaluate as php
+   $replace = array('', '', '');
+   $result = par_rep($search, $replace, $str);
+   return  $result;
+}
 
-    elseif($feild==GPA_VALUE)
-   {
-       $val=clean_param($value,PARAM_NUMBER);
-   }
 
-   elseif($feild==UNWEIGHTED_GP)
-   {
-       $val=clean_param($value,PARAM_NUMBER);
-   }
 
-    elseif($feild==ADMIN)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
 
-    elseif($feild=='PARENT')
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
+function paramlib_validation($feild, $value)
+{
+   if ($feild == 'FIRST_NAME') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'MIDDLE_NAME') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'LAST_NAME') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'GENDER' || $feild == 'gender') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'ETHNICITY' || $feild == 'ethnicity') {
+      $val = clean_param($value, PARAM_ALPHAEXTS);
+   } elseif ($feild == 'COMMON_NAME' || $feild == 'common_name') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'LANGUAGE' || $feild == 'language') {
+      $val = clean_param($value, PARAM_ALPHAEXTS);
+   } elseif ($feild == 'EMAIL' || $feild == 'email') {
+      $val = clean_param($value, PARAM_MAIL);
+   } elseif ($feild == 'PHONE' || $feild == 'phone') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'ALT_ID') {
+      $val = clean_param($value, PARAM_ALPHANUM);
+   } elseif ($feild == 'USERNAME') {
+      $val = clean_param($value, PARAM_RAW);
+   } elseif ($feild == 'PASSWORD') {
+      $val = clean_param($value, PARAM_RAW);
+   } elseif ($feild == 'ESTIMATED_GRAD_DATE') {
+      $val = $value;
+   } elseif ($feild == 'BIRTHDATE') {
+      $val = $value;
+   } elseif ($feild == 'GRADE_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'IS_DISABLE') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'GOAL_TITLE') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'GOAL_DESCRIPTION') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'COURSE_PERIOD_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'PROGRESS_NAME') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'PROFICIENCY') {
+      $val = clean_param($value, PARAM_PROFICIENCY);
+   } elseif ($feild == 'PROGRESS_DESCRIPTION') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'COMMENT') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'PHYSICIAN' || $feild == 'physician') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'PHYSICIAN_PHONE' || $feild == 'physician_phone') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'PREFERRED_HOSPITAL' || $feild == 'preferred_hospital') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'DOCTORS_NOTE_COMMENTS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'COMMENTS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'TITLE') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'TIME_IN') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'TIME_OUT') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'REASON') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'RESULT') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'ADDRESS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'STREET') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'CITY') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'STATE') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'ZIPCODE') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'BUS_PICKUP') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'BUS_DROPOFF') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'BUS_NO') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'MAIL_ADDRESS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'MAIL_STREET') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'MAIL_CITY') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'MAIL_STATE') {
+      $val = clean_param($value, PARAM_ALPHAEXTS);
+   } elseif ($feild == 'MAIL_ZIPCODE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'PRIM_STUDENT_RELATION') {
+      $val = clean_param($value, PARAM_RAW);
+   } elseif ($feild == 'PRI_FIRST_NAME') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'PRI_LAST_NAME') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'HOME_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'WORK_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'MOBILE_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'PRIM_CUSTODY') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'PRIM_ADDRESS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'PRIM_STREET') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'PRIM_CITY') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'PRIM_STATE') {
+      $val = clean_param($value, PARAM_ALPHAEXTS);
+   } elseif ($feild == 'PRIM_ZIPCODE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'SEC_STUDENT_RELATION') {
+      $val = clean_param($value, PARAM_RAW);
+   } elseif ($feild == 'SEC_FIRST_NAME') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'SEC_LAST_NAME') {
+      $val = clean_param($value, PARAM_USERNAME);
+   } elseif ($feild == 'SEC_HOME_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'SEC_WORK_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'SEC_MOBILE_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'SEC_EMAIL') {
+      $val = clean_param($value, PARAM_MAIL);
+   } elseif ($feild == 'SEC_CUSTODY') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'SEC_ADDRESS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'SEC_STREET') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'SEC_CITY') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'SEC_STATE') {
+      $val = clean_param($value, PARAM_ALPHAEXTS);
+   } elseif ($feild == 'SEC_ZIPCODE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'EMERGENCY') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'STUDENT_RELATION') {
+      $val = clean_param($value, PARAM_RAW);
+   } elseif ($feild == 'ADDN_HOME_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'ADDN_WORK_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'ADDN_MOBILE_PHONE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'ADDN_EMAIL') {
+      $val = clean_param($value, PARAM_MAIL);
+   } elseif ($feild == 'CUSTODY') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'ADDN_ADDRESS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'ADDN_STREET') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'ADDN_CITY') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'ADDN_STATE') {
+      $val = clean_param($value, PARAM_ALPHAEXTS);
+   } elseif ($feild == 'ADDN_ZIPCODE') {
+      $val = clean_param($value, PARAM_PHONE);
+   } elseif ($feild == 'ADDN_BUS_PICKUP') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'ADDN_BUS_DROPOFF') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'ADDN_BUSNO') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'INCLUDE') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'TYPE') {
+      $val = clean_param($value, PARAM_ALPHAEXTS);
+   } elseif ($feild == 'SELECT_OPTIONS') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'REQUIRED') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'HIDE') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'DEFAULT_SELECTION') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'PROFILE') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'SCHOOLS') {
+      $val = clean_param($value, PARAM_SEQUENCE);
+   } elseif ($feild == 'CONTENT') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'SORT_ORDER') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'SHORT_NAME') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'DOES_GRADES') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'DOES_EXAM') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'DOES_COMMENTS') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'DESCRIPTION') {
+      $val = clean_param($value, PARAM_NOTAGS);
+   } elseif ($feild == 'Calender_Title') {
+      $val = clean_param($value, PARAM_CAL_TITLE);
+   } elseif ($feild == 'EVENT_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'ATTENDANCE') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'IGNORE_SCHEDULING') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'START_TIME') {
+      $val = clean_param($value, PARAM_TIME);
+   } elseif ($feild == 'END_TIME') {
+      $val = clean_param($value, PARAM_TIME);
+   } elseif ($feild == 'NEXT_GRADE_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'PRINCIPAL') {
+      $val = clean_param($value, PARAM_CAL_TITLE);
+   } elseif ($feild == 'REPORTING_GP_SCALE') {
+      $val = clean_param($value, PARAM_NUMBER);
+   } elseif ($feild == 'E_MAIL') {
+      $val = clean_param($value, PARAM_MAIL);
+   } elseif ($feild == 'CEEB') {
+      $val = clean_param($value, PARAM_ALPHANUM);
+   } elseif ($feild == 'WWW_ADDRESS') {
+      $val = clean_param($value, PARAM_URL);
+   } elseif ($feild == 'FULL_DAY_MINUTE') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'HALF_DAY_MINUTE') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'TEACHER_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'ROOM') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'PERIOD_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'DAYS') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'MARKING_PERIOD_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'TOTAL_SEATS') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'DOES_ATTENDANCE') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'DOES_HONOR_ROLL') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'DOES_CLASS_RANK') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'GENDER_RESTRICTION') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'GRADE_SCALE_ID') {
+      $val = clean_param($value, PARAM_ALPHANUMS);
+   } elseif ($feild == 'CREDITS') {
+      $val = clean_param($value, PARAM_NUMBER);
+   } elseif ($feild == 'CALENDAR_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'HALF_DAY') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'DOES_BREAKOFF') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'PARENT_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'MP') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'Calender_Id') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'WITH_TEACHER_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'NOT_TEACHER_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'WITH_PERIOD_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'NOT_PERIOD_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'SCHEDULER_LOCK') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'POINTS') {
+      $val = clean_param($value, PARAM_PERCENT);
+   } elseif ($feild == 'COURSE_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'ASSIGNMENT_TYPE_ID') {
+      $val = clean_param($value, PARAM_INT);
+   } elseif ($feild == 'GP_SCALE') {
+      $val = clean_param($value, PARAM_NUMBER);
+   } elseif ($feild == 'BREAK_OFF') {
+      $val = clean_param($value, PARAM_NUMBER);
+   } elseif ($feild == 'GPA_VALUE') {
+      $val = clean_param($value, PARAM_NUMBER);
+   } elseif ($feild == 'UNWEIGHTED_GP') {
+      $val = clean_param($value, PARAM_NUMBER);
+   } elseif ($feild == 'ADMIN') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'PARENT') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'TEACHER') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } elseif ($feild == 'NONE') {
+      $val = clean_param($value, PARAM_ALPHA);
+   } else {
+      $val = clean_param($value, PARAM_RAW);
+   }
+
+
+   return $val;
+}
 
-    elseif($feild==TEACHER)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
-   }
+function replace_croatain($str)
+{
+   $search  = array("[", "*", "@", "/", "<", ">", "!", "$", "?", ":", ";", "~", "`", "^", "%", "]", "'", '"');
+   $VAL = str_replace($search, "", $str);
+   return $VAL;
+}
 
-    elseif($feild==NONE)
-   {
-      $val=clean_param($value,PARAM_ALPHA);
+function curPageURL()
+{
+   $pageURL = 'http';
+   if ($_SERVER["HTTPS"] == "on") {
+      $pageURL .= "s";
    }
-
-   else
-   {
-      $val=clean_param($value,PARAM_RAW);
+   $pageURL .= "://";
+   if ($_SERVER["SERVER_PORT"] != "80") {
+      $pageURL .= $_SERVER["SERVER_NAME"] . ":" . $_SERVER["SERVER_PORT"] . $_SERVER["REQUEST_URI"];
+   } else {
+      $pageURL .= $_SERVER["SERVER_NAME"] . $_SERVER["REQUEST_URI"];
    }
 
-
- return $val;
+   return $pageURL;
+   //
+   // echo $pageURL;
+   // exit;
 }
 
-function replace_croatain($str) {
-$search  = array("[","*","@","/","<",">","!","$","?",":",";","~","`","^","%","]","'",'"');
-       $VAL = str_replace($search,"",$str);
-  return $VAL;
-}
-
-function curPageURL() {
- $pageURL = 'http';
- if ($_SERVER["HTTPS"] == "on") {$pageURL .= "s";}
- $pageURL .= "://";
- if ($_SERVER["SERVER_PORT"] != "80") {
-  $pageURL .= $_SERVER["SERVER_NAME"].":".$_SERVER["SERVER_PORT"].$_SERVER["REQUEST_URI"];
- } else {
-  $pageURL .= $_SERVER["SERVER_NAME"].$_SERVER["REQUEST_URI"];
- }
-  
-return $pageURL;
-//
-// echo $pageURL;
-// exit;
-}
-
-function validateQueryString ($queryString)
+function validateQueryString($queryString)
 {
-    $query=strip_tags($queryString);
-    //$query1=utf8_decode($query);
-    $query2=urldecode($query);
-    if(strpos($query2,'Transcripts.php')===false && strpos($query2,'medical alert')===false)
-    {
-
-        $search  = array("..//","*","../","/.","<",">","alert","(",")","script","javascript","///","union","%3dalert","{","}","\n","%22","%27"," ' ","%23","%3C","%2F","%","%3E","%3D","%7B","%7D","%3F","%3B","%25","%28","%29","%2A","%26");
-         $VAL = str_replace($search,"#",$queryString); 
-        $ddd=preg_match("/([\#\'\%\*])/ ", $VAL);
-        if($ddd==1) {
+   $query = strip_tags($queryString);
+   //$query1=utf8_decode($query);
+   $query2 = urldecode($query);
+   if (strpos($query2, 'Transcripts.php') === false && strpos($query2, 'medical alert') === false) {
+
+      $search  = array("..//", "*", "../", "/.", "<", ">", "alert", "(", ")", "script", "javascript", "///", "union", "%3dalert", "{", "}", "\n", "%22", "%27", " ' ", "%23", "%3C", "%2F", "%", "%3E", "%3D", "%7B", "%7D", "%3F", "%3B", "%25", "%28", "%29", "%2A", "%26");
+      $VAL = str_replace($search, "#", $queryString);
+      $ddd = preg_match("/([\#\'\%\*])/ ", $VAL);
+      if ($ddd == 1) {
          return false;
-}}
+      }
+   }
    return true;
-
 }
-?>

--- functions/PopTableFnc.php ---
@@ -95,7 +95,7 @@ function PopTable_wo_header_attn_code($action, $title = 'Search', $div_att = 'cl
         echo '<div class="tabbable">';
         //echo '<ul class="nav nav-tabs nav-tabs-bottom no-margin-bottom">';
         if (is_array($title))
-            echo WrapTabs($title, "Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&table=" . strip_tags(trim($_REQUEST[table])) . "");
+            echo WrapTabs($title, "Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&table=" . strip_tags(trim($_REQUEST['table'])) . "");
         else
             echo '';
         //echo '</ul>';

--- functions/PragRepFnc.php ---
@@ -19,7 +19,25 @@ function par_spt($pattern='',$sub='')
 
 function par_rep_cb($match='',$exp='',$sub='')  
 {
-    return preg_replace_callback($match,$exp,$sub);
+     if($match[0] == '/' && $match[strlen($match) - 1] == '/')
+     {
+         $match = '~'.trim($match, '/').'~';
+     }
+     else
+     {
+          $match = $match;
+     }
+    return preg_replace_callback($match,'exp_match',$sub);
+    //return $sub;
+    //return preg_replace($match,$exp,$sub);
 }
-?>
 
+function exp_match($matches)
+{
+  // as usual: $matches[0] is the complete match
+  // $matches[1] the match for the first subpattern
+  // enclosed in '(...)' and so on
+  //return $matches[1].($matches[2]+1);
+  return $matches[0];
+}
+?>
\ No newline at end of file

--- functions/SearchFnc.php ---
@@ -27,8 +27,9 @@
 #
 #***************************************************************************************
 include "lang/language.php";
-function Search($type, $extra = array(), $search_from_grade = '') {
-    
+function Search($type, $extra = array(), $search_from_grade = '')
+{
+
     global $_openSIS;
     switch ($type) {
         case 'student_id':
@@ -48,8 +49,8 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['student_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
+                //                if (!$_REQUEST['_openSIS_PDF'])
+                //                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStudentID() && $_REQUEST['student_id'] != 'new' || $extra['new'] == true) {
@@ -75,8 +76,8 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['student_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
+                //                if (!$_REQUEST['_openSIS_PDF'])
+                //                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStudentID() && $_REQUEST['student_id'] != 'new' || $extra['new'] == true) {
@@ -98,8 +99,8 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['staff_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
+                //                if (!$_REQUEST['_openSIS_PDF'])
+                //                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStaffID() && $_REQUEST['staff_id'] != 'new' || $extra['new'] == true) {
@@ -126,8 +127,8 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['staff_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
+                //                if (!$_REQUEST['_openSIS_PDF'])
+                //                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStaffID() && $_REQUEST['staff_id'] != 'new' || $extra['new'] == true) {
@@ -143,30 +144,30 @@ function Search($type, $extra = array(), $search_from_grade = '') {
         case 'general_info':
             echo '<div class="row">';
             echo '<div class="col-md-6">';
-            echo '<div class="form-group"><label class="control-label text-right col-lg-4">'._lastName.'</label><div class="col-lg-8"><input type=text name="last" size=30 placeholder="'._lastName.'" class="form-control"></div></div>';
+            echo '<div class="form-group"><label class="control-label text-right col-lg-4">' . _lastName . '</label><div class="col-lg-8"><input type=text name="last" size=30 placeholder="' . _lastName . '" class="form-control"></div></div>';
             echo '</div><div class="col-md-6">';
-            echo '<div class="form-group"><label class="control-label text-right col-lg-4">'._firstName.'</label><div class="col-lg-8"><input type=text name="first" size=30 placeholder="'._firstName.'" class="form-control"></div></div>';
+            echo '<div class="form-group"><label class="control-label text-right col-lg-4">' . _firstName . '</label><div class="col-lg-8"><input type=text name="first" size=30 placeholder="' . _firstName . '" class="form-control"></div></div>';
             echo '</div>'; //.col-md-6
             echo '</div>'; //.row
 
             echo '<div class="row">';
             echo '<div class="col-md-6">';
-            echo '<div class="form-group"><label class="control-label text-right col-lg-4">'._studentId.'</label><div class="col-lg-8"><input type=text name="stuid" size=30 placeholder="'._studentId.'" class="form-control"></div></div>';
+            echo '<div class="form-group"><label class="control-label text-right col-lg-4">' . _studentId . '</label><div class="col-lg-8"><input type=text name="stuid" size=30 placeholder="' . _studentId . '" class="form-control"></div></div>';
             echo '</div><div class="col-md-6">';
-            echo '<div class="form-group"><label class="control-label text-right col-lg-4">'._altId.'</label><div class="col-lg-8"><input type=text name="altid" size=30 placeholder="'._altId.'" class="form-control"></div></div>';
+            echo '<div class="form-group"><label class="control-label text-right col-lg-4">' . _altId . '</label><div class="col-lg-8"><input type=text name="altid" size=30 placeholder="' . _altId . '" class="form-control"></div></div>';
             echo '</div>'; //.col-md-6
             echo '</div>'; //.row
 
 
             echo '<div class="row">';
             echo '<div class="col-md-6">';
-            echo '<div class="form-group clearfix"><label class="control-label text-right col-lg-4">'._address.'</label><div class="col-lg-8"><input type=text name="addr" size=30 placeholder="'._address.'" class="form-control"></div></div>';
+            echo '<div class="form-group clearfix"><label class="control-label text-right col-lg-4">' . _address . '</label><div class="col-lg-8"><input type=text name="addr" size=30 placeholder="' . _address . '" class="form-control"></div></div>';
             echo '</div><div class="col-md-6">';
             $list = DBGet(DBQuery("SELECT DISTINCT TITLE,ID,SORT_ORDER FROM school_gradelevels WHERE SCHOOL_ID='" . UserSchool() . "' ORDER BY SORT_ORDER"));
-            echo '<div class="form-group"><label class="control-label text-right col-lg-4">'._grade.'</label><div class="col-lg-8"><SELECT name=grade class="form-control"><OPTION value="">'._grade.'</OPTION>';
+            echo '<div class="form-group"><label class="control-label text-right col-lg-4">' . _grade . '</label><div class="col-lg-8"><SELECT name=grade class="form-control"><OPTION value="">' . _grade . '</OPTION>';
 
             foreach ($list as $value)
-                echo '<OPTION value="' . $value['TITLE'] . '">' . $value[TITLE] . '</OPTION>';
+                echo '<OPTION value="' . $value['TITLE'] . '">' . $value['TITLE'] . '</OPTION>';
             echo '</SELECT></div></div>';
             echo '</div>'; //.col-md-6
             echo '</div>'; //.row
@@ -177,45 +178,45 @@ function Search($type, $extra = array(), $search_from_grade = '') {
             $list = DBGet(DBQuery("SELECT DISTINCT NAME,ID,SORT_ORDER FROM school_gradelevel_sections WHERE SCHOOL_ID='" . UserSchool() . "' ORDER BY SORT_ORDER"));
             // echo '<div class="form-group"><label class="control-label col-lg-4">'._section.'</label><div class="col-lg-8"><SELECT name=section class="form-control"><OPTION value="">'._section.'</OPTION>';
             // echo '</div><div class="col-md-6">';
-            echo '<div class="form-group"><label class="control-label text-right col-lg-4">'._section.'</label><div class="col-lg-8"><SELECT name=section class="form-control"><OPTION value="">'._section.'</OPTION>';
+            echo '<div class="form-group"><label class="control-label text-right col-lg-4">' . _section . '</label><div class="col-lg-8"><SELECT name=section class="form-control"><OPTION value="">' . _section . '</OPTION>';
 
             foreach ($list as $value)
-                echo '<OPTION value="' . $value['ID'] . '">' . $value[NAME] . '</OPTION>';
+                echo '<OPTION value="' . $value['ID'] . '">' . $value['NAME'] . '</OPTION>';
             echo '</SELECT></div></div>';
             echo '</div>'; //.col-md-6
             echo '</div>'; //.row
 
             break;
 
         case 'student_fields':
-            
+
             $search_fields_RET = DBGet(DBQuery("SELECT CONCAT('CUSTOM_',cf.ID) AS COLUMN_NAME,cf.TYPE,cf.TITLE,cf.SELECT_OPTIONS FROM program_user_config puc,custom_fields cf WHERE puc.TITLE=cf.ID AND puc.PROGRAM='StudentFieldsSearchable' AND puc.USER_ID='" . User('STAFF_ID') . "' AND puc.VALUE='Y' ORDER BY cf.SORT_ORDER,cf.TITLE"), array(), array('TYPE'));
-             
+
             $field_count = 0;
             echo '<div class="row">';
             // edit needed
-            if (count($search_fields_RET['text'])) {
+            if (!empty($search_fields_RET['text'])) {
                 foreach ($search_fields_RET['text'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
                     }
                     echo '<div class="col-md-6">';
-                    echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label><div class=\"col-md-8\"><INPUT type=text name=cust[{$column[COLUMN_NAME]}] size=30 class=\"form-control\"></div></div>";
+                    echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label><div class=\"col-md-8\"><INPUT type=text name=cust[{$column['COLUMN_NAME']}] size=30 class=\"form-control\"></div></div>";
                     echo '</div>';
                     $field_count++;
                     if ($field_count == 2) {
                         $field_count = 0;
                     }
                 }
             }
-            if (count($search_fields_RET['numeric'])) {
+            if (!empty($search_fields_RET['numeric'])) {
                 foreach ($search_fields_RET['numeric'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
                     }
                     echo '<div class="col-md-6">';
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
-                    echo "<div class=\"col-md-8\"><div class=\"input-group\"><span class=\"input-group-addon\">Between</span><INPUT type=text name=cust_begin[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"form-control\"><span class=\"input-group-addon\">&amp;</span><INPUT type=text name=cust_end[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"form-control\"></div></div>";
+                    echo "<div class=\"col-md-8\"><div class=\"input-group\"><span class=\"input-group-addon\">Between</span><INPUT type=text name=cust_begin[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"form-control\"><span class=\"input-group-addon\">&amp;</span><INPUT type=text name=cust_end[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"form-control\"></div></div>";
                     echo '</div>'; //.form-group
                     echo '</div>';
                     $field_count++;
@@ -225,7 +226,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                 }
             }
 
-            if (count($search_fields_RET['codeds'])) {
+            if (!empty($search_fields_RET['codeds'])) {
                 foreach ($search_fields_RET['codeds'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
@@ -236,7 +237,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
 
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option) {
                         $option = explode('|', $option);
                         if ($option[0] != '' && $option[1] != '')
@@ -252,7 +253,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     }
                 }
             }
-            if (count($search_fields_RET['select'])) {
+            if (!empty($search_fields_RET['select'])) {
                 foreach ($search_fields_RET['select'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
@@ -263,7 +264,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
 
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
                     echo '</SELECT>';
@@ -276,7 +277,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     }
                 }
             }
-            if (count($search_fields_RET['autos'])) {
+            if (!empty($search_fields_RET['autos'])) {
                 foreach ($search_fields_RET['autos'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
@@ -291,7 +292,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
 
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option) {
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -316,7 +317,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     }
                 }
             }
-            if (count($search_fields_RET['edits'])) {
+            if (!empty($search_fields_RET['edits'])) {
                 foreach ($search_fields_RET['edits'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -330,7 +331,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     echo '<div class="col-md-6">';
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -347,7 +348,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                 }
             }
 
-            if (count($search_fields_RET['date'])) {
+            if (!empty($search_fields_RET['date'])) {
                 $data_counter = 1;
                 foreach ($search_fields_RET['date'] as $column) {
                     if ($field_count == 0) {
@@ -371,31 +372,31 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                 }
             }
 
-            if (count($search_fields_RET['radio'])) {
+            if (!empty($search_fields_RET['radio'])) {
                 echo '<div class="row">';
                 echo '<label class="col-xs-3 col-md-2"></label>';
                 echo '<label class="col-xs-3 col-md-1">All</label>';
                 echo '<label class="col-xs-3 col-md-1">Yes</label>';
                 echo '<label class="col-xs-3 col-md-1">No</label>';
                 echo '</div>';
-               // if (count($search_fields_RET['radio']) > 1){
-               //     echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table>";
-               // }
+                // if (!empty($search_fields_RET['radio']) > 1){
+                //     echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table>";
+                // }
 
                 $side = 1;
                 foreach ($search_fields_RET['radio'] as $cust) {
                     echo '<div class="row">';
                     echo "<label class=\"col-xs-3 col-md-2 text-right control-label\">$cust[TITLE]</label>";
-                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='' checked='checked' /></label></div>";
-                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='Y' /></label></div>";
-                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='N' /></label></div>";
+                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='' checked='checked' /></label></div>";
+                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='Y' /></label></div>";
+                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='N' /></label></div>";
                     echo '</div>';
                     $side++;
                 }
             }
             echo '</div>'; //.row
             break;
-    
+
 
         case 'student_advanced_fields';
 
@@ -406,28 +407,28 @@ function Search($type, $extra = array(), $search_from_grade = '') {
             $field_count = 0;
             echo '<div class="row">';
             // edit needed
-            if (count($search_fields_RET['text'])) {
+            if (!empty($search_fields_RET['text'])) {
                 foreach ($search_fields_RET['text'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
                     }
                     echo '<div class="col-md-6">';
-                    echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label><div class=\"col-md-8\"><INPUT type=text name=cust[{$column[COLUMN_NAME]}] size=30 class=\"form-control\"></div></div>";
+                    echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label><div class=\"col-md-8\"><INPUT type=text name=cust[{$column['COLUMN_NAME']}] size=30 class=\"form-control\"></div></div>";
                     echo '</div>';
                     $field_count++;
                     if ($field_count == 2) {
                         $field_count = 0;
                     }
                 }
             }
-            if (count($search_fields_RET['numeric'])) {
+            if (!empty($search_fields_RET['numeric'])) {
                 foreach ($search_fields_RET['numeric'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
                     }
                     echo '<div class="col-md-6">';
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
-                    echo "<div class=\"col-md-8\"><div class=\"input-group\"><span class=\"input-group-addon\">Between</span><INPUT type=text name=cust_begin[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"form-control\"><span class=\"input-group-addon\">&amp;</span><INPUT type=text name=cust_end[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"form-control\"></div></div>";
+                    echo "<div class=\"col-md-8\"><div class=\"input-group\"><span class=\"input-group-addon\">Between</span><INPUT type=text name=cust_begin[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"form-control\"><span class=\"input-group-addon\">&amp;</span><INPUT type=text name=cust_end[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"form-control\"></div></div>";
                     echo '</div>'; //.form-group
                     echo '</div>';
                     $field_count++;
@@ -437,7 +438,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                 }
             }
 
-            if (count($search_fields_RET['codeds'])) {
+            if (!empty($search_fields_RET['codeds'])) {
                 foreach ($search_fields_RET['codeds'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
@@ -448,7 +449,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
 
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option) {
                         $option = explode('|', $option);
                         if ($option[0] != '' && $option[1] != '')
@@ -464,7 +465,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     }
                 }
             }
-            if (count($search_fields_RET['select'])) {
+            if (!empty($search_fields_RET['select'])) {
                 foreach ($search_fields_RET['select'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
@@ -475,7 +476,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
 
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
                     echo '</SELECT>';
@@ -488,7 +489,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     }
                 }
             }
-            if (count($search_fields_RET['autos'])) {
+            if (!empty($search_fields_RET['autos'])) {
                 foreach ($search_fields_RET['autos'] as $column) {
                     if ($field_count == 0) {
                         echo '</div><div class="row">';
@@ -503,7 +504,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
 
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option) {
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -528,7 +529,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     }
                 }
             }
-            if (count($search_fields_RET['edits'])) {
+            if (!empty($search_fields_RET['edits'])) {
                 foreach ($search_fields_RET['edits'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -542,7 +543,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                     echo '<div class="col-md-6">';
                     echo "<div class=\"form-group\"><label class=\"control-label col-md-4 text-right\">$column[TITLE]</label>";
                     echo '<div class="col-md-8">';
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -559,7 +560,7 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                 }
             }
 
-            if (count($search_fields_RET['date'])) {
+            if (!empty($search_fields_RET['date'])) {
                 $data_counter = 1;
                 foreach ($search_fields_RET['date'] as $column) {
                     if ($field_count == 0) {
@@ -583,24 +584,24 @@ function Search($type, $extra = array(), $search_from_grade = '') {
                 }
             }
 
-            if (count($search_fields_RET['radio'])) {
+            if (!empty($search_fields_RET['radio'])) {
                 echo '<div class="row">';
                 echo '<label class="col-xs-3 col-md-2"></label>';
                 echo '<label class="col-xs-3 col-md-1">All</label>';
                 echo '<label class="col-xs-3 col-md-1">Yes</label>';
                 echo '<label class="col-xs-3 col-md-1">No</label>';
                 echo '</div>';
-               // if (count($search_fields_RET['radio']) > 1){
-               //     echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table>";
-               // }
+                // if (!empty($search_fields_RET['radio']) > 1){
+                //     echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table>";
+                // }
 
                 $side = 1;
                 foreach ($search_fields_RET['radio'] as $cust) {
                     echo '<div class="row">';
                     echo "<label class=\"col-xs-3 col-md-2 text-right control-label\">$cust[TITLE]</label>";
-                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='' checked='checked' /></label></div>";
-                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='Y' /></label></div>";
-                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='N' /></label></div>";
+                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='' checked='checked' /></label></div>";
+                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='Y' /></label></div>";
+                    echo "<div class=\"col-xs-3 col-md-1\"><label class=\"radio-inline\"><input class=\"styled\" name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='N' /></label></div>";
                     echo '</div>';
                     $side++;
                 }
@@ -612,7 +613,8 @@ function Search($type, $extra = array(), $search_from_grade = '') {
 
 # -------------------------------- SEARCH FOR MISSING ATTENDANCE START ----------------------------------------- #
 
-function Search_Miss_Attn($type, $extra = array()) {
+function Search_Miss_Attn($type, $extra = array())
+{
     global $_openSIS;
 
     switch ($type) {
@@ -631,8 +633,6 @@ function Search_Miss_Attn($type, $extra = array()) {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['staff_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStaffID() && $_REQUEST['staff_id'] != 'new' || $extra['new'] == true) {
@@ -650,14 +650,13 @@ function Search_Miss_Attn($type, $extra = array()) {
 # ---------------------------------------- SEARCH FOR MISSING ATTENDANCE END ----------------------------------------- #
 #---------------------------------SEARCH FOR GROUP SCHEDULING ---------------------------------------------------------------#
 
-function Search_GroupSchedule($type, $extra = array()) {
-    global $_openSIS;
+function Search_GroupSchedule($type, $extra = array())
+{
     unset($_SESSION['student_id']);
     switch ($type) {
         case 'student_id':
             if ($_REQUEST['bottom_back']) {
                 unset($_SESSION['student_id']);
-                //echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
             if ($_SESSION['unset_student']) {
                 unset($_REQUEST['student_id']);
@@ -671,8 +670,6 @@ function Search_GroupSchedule($type, $extra = array()) {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['student_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStudentID() && $_REQUEST['student_id'] != 'new' || $extra['new'] == true) {
@@ -695,8 +692,6 @@ function Search_GroupSchedule($type, $extra = array()) {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['staff_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStaffID() && $_REQUEST['staff_id'] != 'new' || $extra['new'] == true) {
@@ -710,14 +705,14 @@ function Search_GroupSchedule($type, $extra = array()) {
             break;
 
         case 'general_info':
-            echo '<div class="form-group"><label class="control-label">'._lastName.'</label><input type=text name="last" size=30 class="form-control"></div>';
-            echo '<div class="form-group"><label class="control-label">'._firstName.'</label><input type=text name="first" size=30 class="form-control"></div>';
-            echo '<div class="form-group"><label class="control-label">'._studentId.'</label><input type=text name="stuid" size=30 class="form-control"></div>';
-            echo '<div class="form-group"><label class="control-label">'._altId.'</label><input type=text name="altid" size=30 class="form-control"></div>';
-            echo '<div class="form-group"><label class="control-label">'._address.'</label><input type=text name="addr" size=30 class="form-control"></div>';
+            echo '<div class="form-group"><label class="control-label">' . _lastName . '</label><input type=text name="last" size=30 class="form-control"></div>';
+            echo '<div class="form-group"><label class="control-label">' . _firstName . '</label><input type=text name="first" size=30 class="form-control"></div>';
+            echo '<div class="form-group"><label class="control-label">' . _studentId . '</label><input type=text name="stuid" size=30 class="form-control"></div>';
+            echo '<div class="form-group"><label class="control-label">' . _altId . '</label><input type=text name="altid" size=30 class="form-control"></div>';
+            echo '<div class="form-group"><label class="control-label">' . _address . '</label><input type=text name="addr" size=30 class="form-control"></div>';
 
             $list = DBGet(DBQuery("SELECT DISTINCT TITLE,ID,SORT_ORDER FROM school_gradelevels WHERE SCHOOL_ID='" . UserSchool() . "' ORDER BY SORT_ORDER"));
-            echo '<div class="form-group"><label class="control-label">'._grade.'</label><SELECT class="form-control" name=grade><OPTION value="" class="cell_floating">'._notSpecified.'</OPTION>';
+            echo '<div class="form-group"><label class="control-label">' . _grade . '</label><SELECT class="form-control" name=grade><OPTION value="" class="cell_floating">' . _notSpecified . '</OPTION>';
             foreach ($list as $value)
                 echo "<OPTION value=$value[ID]>$value[TITLE]</OPTION>";
             echo '</SELECT></div>';
@@ -728,22 +723,22 @@ function Search_GroupSchedule($type, $extra = array()) {
             if (!$search_fields_RET)
                 $search_fields_RET = DBGet(DBQuery('SELECT CONCAT(\'CUSTOM_\',cf.ID) AS COLUMN_NAME,cf.TYPE,cf.TITLE,cf.SELECT_OPTIONS FROM custom_fields cf WHERE cf.ID IN (\'200000000\',\'200000001\')'), array(), array('TYPE'));
             // edit needed
-            if (count($search_fields_RET['text'])) {
+            if (!empty($search_fields_RET['text'])) {
                 foreach ($search_fields_RET['text'] as $column)
-                    echo "<div class=\"form-group\"><label class=\"control-label\">$column[TITLE]</label><INPUT type=text name=cust[{$column[COLUMN_NAME]}] size=30 class=\"form-control\"></div>";
+                    echo "<div class=\"form-group\"><label class=\"control-label\">$column[TITLE]</label><INPUT type=text name=cust[{$column['COLUMN_NAME']}] size=30 class=\"form-control\"></div>";
             }
-            if (count($search_fields_RET['numeric'])) {
+            if (!empty($search_fields_RET['numeric'])) {
                 foreach ($search_fields_RET['numeric'] as $column)
-                    echo "<h5>$column[TITLE]</h5><div class=\"form-horizontal\"><div class=\"form-group\"><label class=\"control-label col-xs-2\">"._between."</label><div class=\"col-xs-3\"><INPUT type=text name=cust_begin[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"form-control\"></div><div class=\"col-xs-3\"><INPUT type=text name=cust_end[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"form-control\"></div></div></div>";
+                    echo "<h5>$column[TITLE]</h5><div class=\"form-horizontal\"><div class=\"form-group\"><label class=\"control-label col-xs-2\">" . _between . "</label><div class=\"col-xs-3\"><INPUT type=text name=cust_begin[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"form-control\"></div><div class=\"col-xs-3\"><INPUT type=text name=cust_end[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"form-control\"></div></div></div>";
             }
 
-            if (count($search_fields_RET['codeds'])) {
+            if (!empty($search_fields_RET['codeds'])) {
                 foreach ($search_fields_RET['codeds'] as $column) {
                     $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
                     $options = explode("\r", $column['SELECT_OPTIONS']);
 
                     echo "<div class=\"form-group\"><label class=\"control-label\">$column[TITLE]</label>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option) {
                         $option = explode('|', $option);
                         if ($option[0] != '' && $option[1] != '')
@@ -753,20 +748,20 @@ function Search_GroupSchedule($type, $extra = array()) {
                     echo "</div>";
                 }
             }
-            if (count($search_fields_RET['select'])) {
+            if (!empty($search_fields_RET['select'])) {
                 foreach ($search_fields_RET['select'] as $column) {
                     $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
                     $options = explode("\r", $column['SELECT_OPTIONS']);
 
                     echo "<div class=\"form-group\"><label class=\"control-label\">$column[TITLE]</label>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
                     echo '</SELECT>';
                     echo "</div>";
                 }
             }
-            if (count($search_fields_RET['autos'])) {
+            if (!empty($search_fields_RET['autos'])) {
                 foreach ($search_fields_RET['autos'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -775,7 +770,7 @@ function Search_GroupSchedule($type, $extra = array()) {
                         $options_RET = array();
 
                     echo "<div class=\"form-group\"><label class=\"control-label\">$column[TITLE]</label>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option) {
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -784,7 +779,7 @@ function Search_GroupSchedule($type, $extra = array()) {
                     echo "<OPTION value=\"---\">---</OPTION>";
                     $options['---'] = true;
                     // add values found in current and previous year
-                    $options_RET = DBGet(DBQuery('SELECT DISTINCT s.' . $column[COLUMN_NAME] . ',upper(s.' . $column[COLUMN_NAME] . ') AS KEEY FROM students s,student_enrollment sse WHERE sse.STUDENT_ID=s.STUDENT_ID AND (sse.SYEAR=\'' . UserSyear() . '\' OR sse.SYEAR=\'' . (UserSyear() - 1) . '\') AND ' . $column[COLUMN_NAME] . ' IS NOT NULL ORDER BY KEEY'));
+                    $options_RET = DBGet(DBQuery('SELECT DISTINCT s.' . $column['COLUMN_NAME'] . ',upper(s.' . $column['COLUMN_NAME'] . ') AS KEEY FROM students s,student_enrollment sse WHERE sse.STUDENT_ID=s.STUDENT_ID AND (sse.SYEAR=\'' . UserSyear() . '\' OR sse.SYEAR=\'' . (UserSyear() - 1) . '\') AND ' . $column['COLUMN_NAME'] . ' IS NOT NULL ORDER BY KEEY'));
                     foreach ($options_RET as $option)
                         if ($option[$column['COLUMN_NAME']] != '' && !$options[$option[$column['COLUMN_NAME']]]) {
                             echo "<OPTION value=\"" . $option[$column['COLUMN_NAME']] . "\">" . $option[$column['COLUMN_NAME']] . "</OPTION>";
@@ -794,7 +789,7 @@ function Search_GroupSchedule($type, $extra = array()) {
                     echo "</div>";
                 }
             }
-            if (count($search_fields_RET['edits'])) {
+            if (!empty($search_fields_RET['edits'])) {
                 foreach ($search_fields_RET['edits'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -803,7 +798,7 @@ function Search_GroupSchedule($type, $extra = array()) {
                         $options_RET = array();
 
                     echo "<div class=\"form-group\"><label class=\"control-label\">$column[TITLE]</label>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -814,20 +809,20 @@ function Search_GroupSchedule($type, $extra = array()) {
                 }
             }
 
-            if (count($search_fields_RET['date'])) {
+            if (!empty($search_fields_RET['date'])) {
 
 
                 $data_counter = 1;
                 foreach ($search_fields_RET['date'] as $column) {
-                    echo "<h5>$column[TITLE]</h5><div class=\"form-horizontal\"><div class=\"form-group\"><label class=\"control-label col-xs-2\">"._between."</label><div class=\"col-xs-3\">" . DateInputAY('', '_cust_begin[' . $column['COLUMN_NAME'] . ']', $data_counter) . '</div><div class="col-xs-1"></div>';
+                    echo "<h5>$column[TITLE]</h5><div class=\"form-horizontal\"><div class=\"form-group\"><label class=\"control-label col-xs-2\">" . _between . "</label><div class=\"col-xs-3\">" . DateInputAY('', '_cust_begin[' . $column['COLUMN_NAME'] . ']', $data_counter) . '</div><div class="col-xs-1"></div>';
                     $data_counter++;
                     echo "<div class=\"col-xs-3\">" . DateInputAY('', '_cust_end[' . $column['COLUMN_NAME'] . ']', $data_counter) . "</div></div></div>";
                     $data_counter++;
                 }
             }
-            if (count($search_fields_RET['radio'])) {
+            if (!empty($search_fields_RET['radio'])) {
                 echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table></TD><TD></TD><TD></TD><TD>";
-                if (count($search_fields_RET['radio']) > 1)
+                if (!empty($search_fields_RET['radio']) > 1)
                     echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table>";
                 echo "</TD></TR>";
 
@@ -837,11 +832,11 @@ function Search_GroupSchedule($type, $extra = array()) {
                         echo '<TR>';
                     echo "<TD ALIGN=RIGHT>$cust[TITLE]</TD><TD>
 						<table border=0 cellpadding=0 cellspacing=0><tr><td width=25 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='' checked='checked' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='' checked='checked' />
 						</td><td width=30 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='Y' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='Y' />
 						</td><td width=25 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='N' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='N' />
 						</td></tr></table>
 						</TD><TD>&nbsp; &nbsp; &nbsp; &nbsp;</TD>";
                     if ($side % 2 == 0)
@@ -856,14 +851,14 @@ function Search_GroupSchedule($type, $extra = array()) {
 
 #----------------------------SEARCH FOR GROUP SCHEDULING ENDS HERE -----------------------------------------------------------#
 
-function Search_absence_summary($type, $extra = array(), $search_from_grade = '') {
+function Search_absence_summary($type, $extra = array(), $search_from_grade = '')
+{
     global $_openSIS;
 
     switch ($type) {
         case 'student_id':
             if ($_REQUEST['bottom_back']) {
                 unset($_SESSION['student_id']);
-                //echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
             if ($_SESSION['unset_student']) {
                 unset($_REQUEST['student_id']);
@@ -877,8 +872,6 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['student_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStudentID() && $_REQUEST['student_id'] != 'new' || $extra['new'] == true) {
@@ -901,8 +894,6 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 } else
                     unset($_SESSION['staff_id']);
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStaffID() && $_REQUEST['staff_id'] != 'new' || $extra['new'] == true) {
@@ -917,18 +908,18 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
 
         case 'general_info':
             echo '<div class="row">';
-            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">'._lastName.'</label><div class="col-lg-8"><input type=text name="last" placeholder="'._lastName.'" size=30 class="form-control"></div></div></div>';
-            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">'._firstName.'</label><div class="col-lg-8"><input type=text name="first" placeholder="'._firstName.'" size=30 class="form-control"></div></div></div>';
+            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . _lastName . '</label><div class="col-lg-8"><input type=text name="last" placeholder="' . _lastName . '" size=30 class="form-control"></div></div></div>';
+            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . _firstName . '</label><div class="col-lg-8"><input type=text name="first" placeholder="' . _firstName . '" size=30 class="form-control"></div></div></div>';
             echo '</div>';
             echo '<div class="row">';
-            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">'._studentId.'</label><div class="col-lg-8"><input type=text name="stuid" placeholder="'._studentId.'" size=30 class="form-control"></div></div></div>';
-            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">'._altId.'</label><div class="col-lg-8"><input type=text name="altid" placeholder="'._altId.'" size=30 class="form-control"></div></div></div>';
+            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . _studentId . '</label><div class="col-lg-8"><input type=text name="stuid" placeholder="' . _studentId . '" size=30 class="form-control"></div></div></div>';
+            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . _altId . '</label><div class="col-lg-8"><input type=text name="altid" placeholder="' . _altId . '" size=30 class="form-control"></div></div></div>';
             echo '</div>';
             echo '<div class="row">';
-            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">'._address.'</label><div class="col-lg-8"><input type=text name="addr" placeholder="'._address.'" size=30 class="form-control"></div></div></div>';
+            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . _address . '</label><div class="col-lg-8"><input type=text name="addr" placeholder="' . _address . '" size=30 class="form-control"></div></div></div>';
 
             $list = DBGet(DBQuery('SELECT DISTINCT TITLE,ID,SORT_ORDER FROM school_gradelevels WHERE SCHOOL_ID=\'' . UserSchool() . '\' ORDER BY SORT_ORDER'));
-            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">'._grade.'</label><div class="col-lg-8"><SELECT name=grade class="form-control"><OPTION value="">'._notSpecified.'</OPTION>';
+            echo '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . _grade . '</label><div class="col-lg-8"><SELECT name=grade class="form-control"><OPTION value="">' . _notSpecified . '</OPTION>';
             foreach ($list as $value)
                 echo "<OPTION value=$value[ID]>$value[TITLE]</OPTION>";
             echo '</SELECT></div></div></div>';
@@ -941,23 +932,23 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
             if (!$search_fields_RET)
                 $search_fields_RET = DBGet(DBQuery('SELECT CONCAT(\'CUSTOM_\',cf.ID) AS COLUMN_NAME,cf.TYPE,cf.TITLE,cf.SELECT_OPTIONS FROM custom_fields cf WHERE cf.ID IN (\'200000000\',\'200000001\')'), array(), array('TYPE'));
             // edit needed
-            if (count($search_fields_RET['text'])) {
+            if (!empty($search_fields_RET['text'])) {
                 foreach ($search_fields_RET['text'] as $column)
-                    echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-lg-8\"><INPUT type=text name=cust[{$column[COLUMN_NAME]}] size=30 class=\"form-control\"></div></div></div>";
+                    echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-lg-8\"><INPUT type=text name=cust[{$column['COLUMN_NAME']}] size=30 class=\"form-control\"></div></div></div>";
             }
-            if (count($search_fields_RET['numeric'])) {
+            if (!empty($search_fields_RET['numeric'])) {
                 foreach ($search_fields_RET['numeric'] as $column)
-                    echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-sm-8\"><div class=\"input-group\"><span class=\"input-group-addon\">Between</span><INPUT type=text name=cust_begin[{$column[COLUMN_NAME]}] maxlength=11 class=\"form-control\"><span class=\"input-group-addon\"> &amp; </span><INPUT type=text name=cust_end[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"form-control\"></div></div></div></div>";
+                    echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-sm-8\"><div class=\"input-group\"><span class=\"input-group-addon\">Between</span><INPUT type=text name=cust_begin[{$column['COLUMN_NAME']}] maxlength=11 class=\"form-control\"><span class=\"input-group-addon\"> &amp; </span><INPUT type=text name=cust_end[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"form-control\"></div></div></div></div>";
             }
             echo '</div>';
             echo '<div class="row">';
-            if (count($search_fields_RET['codeds'])) {
+            if (!empty($search_fields_RET['codeds'])) {
                 foreach ($search_fields_RET['codeds'] as $column) {
                     $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
                     $options = explode("\r", $column['SELECT_OPTIONS']);
 
                     echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-md-8\">";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option) {
                         $option = explode('|', $option);
                         if ($option[0] != '' && $option[1] != '')
@@ -967,20 +958,20 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                     echo "</div></div></div>";
                 }
             }
-            if (count($search_fields_RET['select'])) {
+            if (!empty($search_fields_RET['select'])) {
                 foreach ($search_fields_RET['select'] as $column) {
                     $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
                     $options = explode("\r", $column['SELECT_OPTIONS']);
 
                     echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-md-8\">";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
                     echo '</SELECT>';
                     echo "</div></div></div>";
                 }
             }
-            if (count($search_fields_RET['autos'])) {
+            if (!empty($search_fields_RET['autos'])) {
                 foreach ($search_fields_RET['autos'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -989,7 +980,7 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                         $options_RET = array();
 
                     echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-md-8\">";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option) {
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -998,7 +989,7 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                     echo "<OPTION value=\"---\">---</OPTION>";
                     $options['---'] = true;
                     // add values found in current and previous year
-                    $options_RET = DBGet(DBQuery('SELECT DISTINCT s.' . $column[COLUMN_NAME] . ',upper(s.' . $column[COLUMN_NAME] . ') AS KEEY FROM students s,student_enrollment sse WHERE sse.STUDENT_ID=s.STUDENT_ID AND (sse.SYEAR=\'' . UserSyear() . '\' OR sse.SYEAR=\'' . (UserSyear() - 1) . '\') AND ' . $column[COLUMN_NAME] . ' IS NOT NULL ORDER BY KEEY'));
+                    $options_RET = DBGet(DBQuery('SELECT DISTINCT s.' . $column['COLUMN_NAME'] . ',upper(s.' . $column['COLUMN_NAME'] . ') AS KEEY FROM students s,student_enrollment sse WHERE sse.STUDENT_ID=s.STUDENT_ID AND (sse.SYEAR=\'' . UserSyear() . '\' OR sse.SYEAR=\'' . (UserSyear() - 1) . '\') AND ' . $column['COLUMN_NAME'] . ' IS NOT NULL ORDER BY KEEY'));
                     foreach ($options_RET as $option)
                         if ($option[$column['COLUMN_NAME']] != '' && !$options[$option[$column['COLUMN_NAME']]]) {
                             echo "<OPTION value=\"" . $option[$column['COLUMN_NAME']] . "\">" . $option[$column['COLUMN_NAME']] . "</OPTION>";
@@ -1008,7 +999,7 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                     echo "</div></div></div>";
                 }
             }
-            if (count($search_fields_RET['edits'])) {
+            if (!empty($search_fields_RET['edits'])) {
                 foreach ($search_fields_RET['edits'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -1017,7 +1008,7 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                         $options_RET = array();
 
                     echo "<div class=\"col-md-6\"><div class=\"form-group\"><label class=\"control-label text-right col-lg-4\">$column[TITLE]</label><div class=\"col-md-8\">";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] class=\"form-control\"><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -1029,7 +1020,7 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
             }
             echo '</div>';
             echo '<div class="row">';
-            if (count($search_fields_RET['date'])) {
+            if (!empty($search_fields_RET['date'])) {
 
                 $data_counter = 1;
                 foreach ($search_fields_RET['date'] as $column) {
@@ -1039,11 +1030,11 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                     $data_counter++;
                 }
             }
-            if (count($search_fields_RET['radio'])) {
+            if (!empty($search_fields_RET['radio'])) {
                 echo "<TABLE>";
 
                 echo "<TR><TD></TD><TD><table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table></TD><TD></TD><TD></TD><TD>";
-                if (count($search_fields_RET['radio']) > 1)
+                if (!empty($search_fields_RET['radio']) > 1)
                     echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table>";
                 echo "</TD></TR>";
 
@@ -1053,11 +1044,11 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
                         echo '<TR>';
                     echo "<TD ALIGN=RIGHT>$cust[TITLE]</TD><TD>
 						<table border=0 cellpadding=0 cellspacing=0><tr><td width=25 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='' checked='checked' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='' checked='checked' />
 						</td><td width=30 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='Y' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='Y' />
 						</td><td width=25 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='N' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='N' />
 						</td></tr></table>
 						</TD><TD>&nbsp; &nbsp; &nbsp; &nbsp;</TD>";
                     if ($side % 2 == 0)
@@ -1073,14 +1064,14 @@ function Search_absence_summary($type, $extra = array(), $search_from_grade = ''
 
 #------------------------------ this function is for user_staff----------------------
 
-function SearchStaff($type, $extra = array()) {
+function SearchStaff($type, $extra = array())
+{
     global $_openSIS;
 
     switch ($type) {
         case 'student_id':
             if ($_REQUEST['bottom_back']) {
                 unset($_SESSION['student_id']);
-                //echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
             if ($_SESSION['unset_student']) {
                 unset($_REQUEST['student_id']);
@@ -1092,12 +1083,9 @@ function SearchStaff($type, $extra = array()) {
                     $_SESSION['student_id'] = $_REQUEST['student_id'];
                     if ($_REQUEST['school_id'])
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
-                }
-                else {
+                } else {
                     unset($_SESSION['student_id']);
                 }
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStudentID() && $_REQUEST['student_id'] != 'new' || $extra['new'] == true) {
@@ -1131,12 +1119,9 @@ function SearchStaff($type, $extra = array()) {
 
                     if ($_REQUEST['school_id'])
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
-                }
-                else {
+                } else {
                     unset($_SESSION['staff_id']);
                 }
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStaffID() && $_REQUEST['staff_id'] != 'new' || $extra['new'] == true) {
@@ -1146,8 +1131,7 @@ function SearchStaff($type, $extra = array()) {
                 if (!$_REQUEST['modname'])
                     $_REQUEST['modname'] = 'users/Search.php';
                 include('modules/users/SearchStaffInc.php');
-            }
-            else {
+            } else {
                 if ($_SESSION['fn'] == 'user') {
                     if (!$_REQUEST['modfunc'])
                         $_REQUEST['modfunc'] = 'search_fnc';
@@ -1161,41 +1145,41 @@ function SearchStaff($type, $extra = array()) {
             break;
 
         case 'general_info':
-            echo '<tr><td align=right width=120>'._lastName.'</td><td><input type=text name="last" size=30 class="cell_floating"></td></tr>';
-            echo '<tr><td align=right width=120>'._firstName.'</td><td><input type=text name="first" size=30 class="cell_floating"></td></tr>';
-            echo '<tr><td align=right width=120>'._studentId.'</td><td><input type=text name="stuid" size=30 class="cell_floating"></td></tr>';
+            echo '<tr><td align=right width=120>' . _lastName . '</td><td><input type=text name="last" size=30 class="cell_floating"></td></tr>';
+            echo '<tr><td align=right width=120>' . _firstName . '</td><td><input type=text name="first" size=30 class="cell_floating"></td></tr>';
+            echo '<tr><td align=right width=120>' . _studentId . '</td><td><input type=text name="stuid" size=30 class="cell_floating"></td></tr>';
             echo '<tr><td align=right width=120>National ID</td><td><input type=text name="altid" size=30 class="cell_floating"></td></tr>';
-            echo '<tr><td align=right width=120>'._address.'</td><td><input type=text name="addr" size=30 class="cell_floating"></td></tr>';
+            echo '<tr><td align=right width=120>' . _address . '</td><td><input type=text name="addr" size=30 class="cell_floating"></td></tr>';
 
             $list = DBGet(DBQuery("SELECT DISTINCT TITLE,ID,SORT_ORDER FROM SCHOOL_GRADELEVELS WHERE SCHOOL_ID='" . UserSchool() . "' ORDER BY SORT_ORDER"));
-            echo '<TR><TD align=right width=120>'._grade.'</TD><TD><SELECT name=grade><OPTION value="" class="cell_floating">'._notSpecified.'</OPTION>';
+            echo '<TR><TD align=right width=120>' . _grade . '</TD><TD><SELECT name=grade><OPTION value="" class="cell_floating">' . _notSpecified . '</OPTION>';
             foreach ($list as $value)
                 echo "<OPTION value=$value[ID]>$value[TITLE]</OPTION>";
             echo '</SELECT></TD></TR>';
             break;
 
         case 'student_fields':
-            
+
             $search_fields_RET = DBGet(DBQuery("SELECT CONCAT('CUSTOM_',cf.ID) AS COLUMN_NAME,cf.TYPE,cf.TITLE,cf.SELECT_OPTIONS FROM program_user_config puc,CUSTOM_FIELDS cf WHERE puc.TITLE=cf.ID AND puc.PROGRAM='StudentFieldsSearch' AND puc.USER_ID='" . User('STAFF_ID') . "' AND puc.VALUE='Y' ORDER BY cf.SORT_ORDER,cf.TITLE"), array(), array('TYPE'));
             if (!$search_fields_RET)
                 $search_fields_RET = DBGet(DBQuery("SELECT CONCAT('CUSTOM_',cf.ID) AS COLUMN_NAME,cf.TYPE,cf.TITLE,cf.SELECT_OPTIONS FROM custom_fields cf WHERE cf.ID IN ('200000000','200000001')"), array(), array('TYPE'));
             // edit needed
-            if (count($search_fields_RET['text'])) {
+            if (!empty($search_fields_RET['text'])) {
                 foreach ($search_fields_RET['text'] as $column)
-                    echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD><INPUT type=text name=cust[{$column[COLUMN_NAME]}] size=30 class=\"cell_floating\"></TD></TR>";
+                    echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD><INPUT type=text name=cust[{$column['COLUMN_NAME']}] size=30 class=\"cell_floating\"></TD></TR>";
             }
-            if (count($search_fields_RET['numeric'])) {
+            if (!empty($search_fields_RET['numeric'])) {
                 foreach ($search_fields_RET['numeric'] as $column)
-                    echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD>Between <INPUT type=text name=cust_begin[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"cell_floating\"> &amp; <INPUT type=text name=cust_end[{$column[COLUMN_NAME]}] size=3 maxlength=11 class=\"cell_small\"></TD></TR>";
+                    echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD>Between <INPUT type=text name=cust_begin[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"cell_floating\"> &amp; <INPUT type=text name=cust_end[{$column['COLUMN_NAME']}] size=3 maxlength=11 class=\"cell_small\"></TD></TR>";
             }
             echo '</TABLE><TABLE>';
-            if (count($search_fields_RET['codeds'])) {
+            if (!empty($search_fields_RET['codeds'])) {
                 foreach ($search_fields_RET['codeds'] as $column) {
                     $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
                     $options = explode("\r", $column['SELECT_OPTIONS']);
 
                     echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option) {
                         $option = explode('|', $option);
                         if ($option[0] != '' && $option[1] != '')
@@ -1205,20 +1189,20 @@ function SearchStaff($type, $extra = array()) {
                     echo "</TD></TR>";
                 }
             }
-            if (count($search_fields_RET['select'])) {
+            if (!empty($search_fields_RET['select'])) {
                 foreach ($search_fields_RET['select'] as $column) {
                     $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
                     $options = explode("\r", $column['SELECT_OPTIONS']);
 
                     echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     foreach ($options as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
                     echo '</SELECT>';
                     echo "</TD></TR>";
                 }
             }
-            if (count($search_fields_RET['autos'])) {
+            if (!empty($search_fields_RET['autos'])) {
                 foreach ($search_fields_RET['autos'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -1227,7 +1211,7 @@ function SearchStaff($type, $extra = array()) {
                         $options_RET = array();
 
                     echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option) {
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -1246,7 +1230,7 @@ function SearchStaff($type, $extra = array()) {
                     echo "</TD></TR>";
                 }
             }
-            if (count($search_fields_RET['edits'])) {
+            if (!empty($search_fields_RET['edits'])) {
                 foreach ($search_fields_RET['edits'] as $column) {
                     if ($column['SELECT_OPTIONS']) {
                         $column['SELECT_OPTIONS'] = str_replace("\n", "\r", str_replace("\r\n", "\r", $column['SELECT_OPTIONS']));
@@ -1255,7 +1239,7 @@ function SearchStaff($type, $extra = array()) {
                         $options_RET = array();
 
                     echo "<TR><TD align=right width=120>$column[TITLE]</TD><TD>";
-                    echo "<SELECT name=cust[{$column[COLUMN_NAME]}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
+                    echo "<SELECT name=cust[{$column['COLUMN_NAME']}] style='max-width:250;'><OPTION value=''>N/A</OPTION><OPTION value='!'>No Value</OPTION>";
                     $options = array();
                     foreach ($options_RET as $option)
                         echo "<OPTION value=\"$option\">$option</OPTION>";
@@ -1266,7 +1250,7 @@ function SearchStaff($type, $extra = array()) {
                 }
             }
             echo '</TABLE><TABLE>';
-            if (count($search_fields_RET['date'])) {
+            if (!empty($search_fields_RET['date'])) {
                 $data_counter = 1;
                 foreach ($search_fields_RET['date'] as $column) {
                     echo "<TR><TD colspan=2>$column[TITLE]<BR> &nbsp; &nbsp; Between " . DateInputAY('', '_cust_begin[' . $column['COLUMN_NAME'] . ']', $data_counter) . ' & ';
@@ -1275,12 +1259,12 @@ function SearchStaff($type, $extra = array()) {
                     $data_counter++;
                 }
             }
-            if (count($search_fields_RET['radio'])) {
+            if (!empty($search_fields_RET['radio'])) {
                 echo '<TR><TD colspan=2><BR></TD></TR>';
                 echo "<TR><TD colspan=2><TABLE>";
 
                 echo "<TR><TD></TD><TD><table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table></TD><TD></TD><TD></TD><TD>";
-                if (count($search_fields_RET['radio']) > 1)
+                if (!empty($search_fields_RET['radio']) > 1)
                     echo "<table border=0 cellpadding=0 cellspacing=0><tr><td width=25><b>All</b></td><td width=30><b>Yes</b></td><td width=25><b>No</b></td></tr></table>";
                 echo "</TD></TR>";
 
@@ -1290,11 +1274,11 @@ function SearchStaff($type, $extra = array()) {
                         echo '<TR>';
                     echo "<TD ALIGN=RIGHT>$cust[TITLE]</TD><TD>
 						<table border=0 cellpadding=0 cellspacing=0><tr><td width=25 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='' checked='checked' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='' checked='checked' />
 						</td><td width=30 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='Y' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='Y' />
 						</td><td width=25 align=center>
-						<input name='cust[{$cust[COLUMN_NAME]}]' type='radio' value='N' />
+						<input name='cust[{$cust['COLUMN_NAME']}]' type='radio' value='N' />
 						</td></tr></table>
 						</TD><TD>&nbsp; &nbsp; &nbsp; &nbsp;</TD>";
                     if ($side % 2 == 0)
@@ -1309,7 +1293,8 @@ function SearchStaff($type, $extra = array()) {
 }
 
 ////////////staff list////////////////////////////
-function stafflist($type, $extra = array()) {
+function stafflist($type, $extra = array())
+{
 
     global $_openSIS;
 
@@ -1337,8 +1322,8 @@ function stafflist($type, $extra = array()) {
                         $_SESSION['UserSchool'] = $_REQUEST['school_id'];
                 }
 
-//                if (!$_REQUEST['_openSIS_PDF'])
-//                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
+                //                if (!$_REQUEST['_openSIS_PDF'])
+                //                    echo '<script language=JavaScript>parent.side.location="' . $_SESSION['Side_PHP_SELF'] . '?modcat="+parent.side.document.forms[0].modcat.value;</script>';
             }
 
             if (!UserStaffID() && $_REQUEST['staff_id'] != 'new' || $extra['new'] == true) {
@@ -1356,8 +1341,8 @@ function stafflist($type, $extra = array()) {
         case 'general_info':
             $ethnicity_RET = DBGet(DBQuery("SELECT ETHNICITY_ID, ETHNICITY_NAME FROM ethnicity"));
 
-            echo '<tr><td align=right width=120>'._lastName.'</td><td><input type=text name="last" size=30 class="cell_floating"></td></tr>';
-            echo '<tr><td align=right width=120>'._firstName.'</td><td><input type=text name="first" size=30 class="cell_floating"></td></tr>';
+            echo '<tr><td align=right width=120>' . _lastName . '</td><td><input type=text name="last" size=30 class="cell_floating"></td></tr>';
+            echo '<tr><td align=right width=120>' . _firstName . '</td><td><input type=text name="first" size=30 class="cell_floating"></td></tr>';
             echo '<tr><td align=right width=120>Staff ID</td><td><input type=text name="staffid" size=30 class="cell_floating"></td></tr>';
             echo '<tr><td align=right width=120>Gender</td><td><SELECT name=gender style="max-width:1750;"><OPTION value="">N/A</OPTION><OPTION value="Male">Male</OPTION><OPTION value="Female">Female</OPTION></SELECT></td></tr>';
             echo '<tr><td align=right width=120>Ethnicity</td><td><SELECT name=ethnicity style="max-width:1750;"><OPTION value="">N/A</OPTION>';
@@ -1373,5 +1358,3 @@ function stafflist($type, $extra = array()) {
             break;
     }
 }
-
-?>

--- functions/SortFnc.php ---
@@ -28,17 +28,23 @@
 
 function VerifyDate_sort($date)
 {
-	$vdate = explode("/", $date);
-	if(count($vdate))
-	{
-                        $month = MonthNWSwitch($vdate[0],'tonum');
-                        $day = $vdate[1];
-                        $year = $vdate[2];
-	}
-	else
+    if (strpos(strip_tags($date), '/') !== false) 
+    {
+    	$vdate = explode("/", $date);
+    	if(count($vdate))
+    	{
+            $month = MonthNWSwitch($vdate[0],'tonum');
+            $day = $vdate[1];
+            $year = $vdate[2];
+    	}
+    	else
         {
-	return false;
+            return false;
         }
+    }
+    else
+        return false;
+
 	return checkdate($month,$day,$year);
 }
 

--- functions/UserFnc.php ---
@@ -26,103 +26,91 @@
 #
 #***************************************************************************************
 function User($item)
-{	global $_openSIS,$DefaultSyear;
-	if(!$_SESSION['UserSyear'])
+{
+	global $_openSIS, $DefaultSyear;
+	if (!$_SESSION['UserSyear'])
 		$_SESSION['UserSyear'] = $DefaultSyear;
 
-	if(!$_openSIS['User'] || $_SESSION['UserSyear']!=$_openSIS['User'][1]['SYEAR'])
-	{
-		if($_SESSION['STAFF_ID'])
-		{
-                    if($_SESSION['PROFILE_ID']!=4)
-                    $sql = 'SELECT STAFF_ID,USERNAME,CONCAT(FIRST_NAME,\' \',LAST_NAME) AS NAME,PROFILE,la.PROFILE_ID,CURRENT_SCHOOL_ID,EMAIL FROM staff s ,login_authentication la WHERE la.USER_ID=s.STAFF_ID AND la.PROFILE_ID <> 3 AND la.PROFILE_ID=s.PROFILE_ID AND STAFF_ID='.$_SESSION[STAFF_ID];
-                    if($_SESSION['PROFILE_ID']==4 || $_SESSION['PROFILE']=='parent')
-                    $sql = 'SELECT p.STAFF_ID,la.USERNAME,CONCAT(p.FIRST_NAME,\' \',p.LAST_NAME) AS NAME,p.PROFILE,p.PROFILE_ID,p.CURRENT_SCHOOL_ID,p.EMAIL FROM people p ,login_authentication la WHERE la.USER_ID=p.STAFF_ID AND la.PROFILE_ID <> 3  AND la.PROFILE_ID=p.PROFILE_ID AND STAFF_ID='.$_SESSION[STAFF_ID];
-                    $_openSIS['User'] = DBGet(DBQuery($sql));
-		}
-		elseif($_SESSION['STUDENT_ID'])
-		{
-			$sql = 'SELECT USERNAME,CONCAT(s.FIRST_NAME,\' \',s.LAST_NAME) AS NAME,\'student\' AS PROFILE,\'3\' AS PROFILE_ID,CONCAT(\',\',se.SCHOOL_ID,\',\') AS SCHOOLS,se.SYEAR,se.SCHOOL_ID FROM students s,student_enrollment se,login_authentication la WHERE la.USER_ID=s.STUDENT_ID AND la.PROFILE_ID = 3 AND s.STUDENT_ID='.$_SESSION[STUDENT_ID].' AND se.SYEAR=\''.$_SESSION[UserSyear].'\'  AND (se.END_DATE IS NULL OR se.END_DATE=\'0000-00-00\' OR se.END_DATE>=\''.date('Y-m-d').'\' ) AND se.STUDENT_ID=s.STUDENT_ID ORDER BY se.END_DATE DESC LIMIT 1';
-                        $_openSIS['User'] = DBGet(DBQuery($sql));
-                        if(count($_openSIS['User'])==0)
-                        {
-                            $sql = 'SELECT USERNAME,CONCAT(s.FIRST_NAME,\' \',s.LAST_NAME) AS NAME,\'student\' AS PROFILE,\'3\' AS PROFILE_ID,CONCAT(\',\',se.SCHOOL_ID,\',\') AS SCHOOLS,se.SYEAR,se.SCHOOL_ID FROM students s,student_enrollment se,login_authentication la WHERE la.USER_ID=s.STUDENT_ID AND la.PROFILE_ID = 3 AND s.STUDENT_ID='.$_SESSION[STUDENT_ID].' AND se.SYEAR=\''.$_SESSION[UserSyear].'\'   AND se.STUDENT_ID=s.STUDENT_ID ORDER BY se.END_DATE DESC LIMIT 1';
-                            $_openSIS['User'] = DBGet(DBQuery($sql));
-			$_SESSION['UserSchool'] = $_openSIS['User'][1]['SCHOOL_ID'];
-		}
-		else
-                {
-			$_SESSION['UserSchool'] = $_openSIS['User'][1]['SCHOOL_ID'];
-		}
-                }
-		else
-                {
+	if (!$_openSIS['User'] || $_SESSION['UserSyear'] != $_openSIS['User'][1]['SYEAR']) {
+		if ($_SESSION['STAFF_ID']) {
+			if ($_SESSION['PROFILE_ID'] != 4)
+				$sql = 'SELECT STAFF_ID,USERNAME,CONCAT(FIRST_NAME,\' \',LAST_NAME) AS NAME,PROFILE,la.PROFILE_ID,CURRENT_SCHOOL_ID,EMAIL FROM staff s ,login_authentication la WHERE la.USER_ID=s.STAFF_ID AND la.PROFILE_ID <> 3 AND la.PROFILE_ID=s.PROFILE_ID AND STAFF_ID=' . $_SESSION['STAFF_ID'];
+			if ($_SESSION['PROFILE_ID'] == 4 || $_SESSION['PROFILE'] == 'parent')
+				$sql = 'SELECT p.STAFF_ID,la.USERNAME,CONCAT(p.FIRST_NAME,\' \',p.LAST_NAME) AS NAME,p.PROFILE,p.PROFILE_ID,p.CURRENT_SCHOOL_ID,p.EMAIL FROM people p ,login_authentication la WHERE la.USER_ID=p.STAFF_ID AND la.PROFILE_ID <> 3  AND la.PROFILE_ID=p.PROFILE_ID AND STAFF_ID=' . $_SESSION['STAFF_ID'];
+			$_openSIS['User'] = DBGet(DBQuery($sql));
+		} elseif ($_SESSION['STUDENT_ID']) {
+			$sql = 'SELECT USERNAME,CONCAT(s.FIRST_NAME,\' \',s.LAST_NAME) AS NAME,\'student\' AS PROFILE,\'3\' AS PROFILE_ID,CONCAT(\',\',se.SCHOOL_ID,\',\') AS SCHOOLS,se.SYEAR,se.SCHOOL_ID FROM students s,student_enrollment se,login_authentication la WHERE la.USER_ID=s.STUDENT_ID AND la.PROFILE_ID = 3 AND s.STUDENT_ID=' . $_SESSION['STUDENT_ID'] . ' AND se.SYEAR=\'' . $_SESSION['UserSyear'] . '\'  AND (se.END_DATE IS NULL OR se.END_DATE=\'0000-00-00\' OR se.END_DATE>=\'' . date('Y-m-d') . '\' ) AND se.STUDENT_ID=s.STUDENT_ID ORDER BY se.END_DATE DESC LIMIT 1';
+			$_openSIS['User'] = DBGet(DBQuery($sql));
+			if (count($_openSIS['User']) == 0) {
+				$sql = 'SELECT USERNAME,CONCAT(s.FIRST_NAME,\' \',s.LAST_NAME) AS NAME,\'student\' AS PROFILE,\'3\' AS PROFILE_ID,CONCAT(\',\',se.SCHOOL_ID,\',\') AS SCHOOLS,se.SYEAR,se.SCHOOL_ID FROM students s,student_enrollment se,login_authentication la WHERE la.USER_ID=s.STUDENT_ID AND la.PROFILE_ID = 3 AND s.STUDENT_ID=' . $_SESSION['STUDENT_ID'] . ' AND se.SYEAR=\'' . $_SESSION['UserSyear'] . '\'   AND se.STUDENT_ID=s.STUDENT_ID ORDER BY se.END_DATE DESC LIMIT 1';
+				$_openSIS['User'] = DBGet(DBQuery($sql));
+				$_SESSION['UserSchool'] = $_openSIS['User'][1]['SCHOOL_ID'];
+			} else {
+				$_SESSION['UserSchool'] = $_openSIS['User'][1]['SCHOOL_ID'];
+			}
+		} else {
 			exit('Error in User()');
-                }
+		}
 	}
 
 	return $_openSIS['User'][1][$item];
 }
 function SelectedUserProfile($option)
 {
-    $prof=DBGet(DBQuery('SELECT '.$option.' FROM staff WHERE STAFF_ID='.UserStaffID()));
-    return $prof[1][$option];
+	$prof = DBGet(DBQuery('SELECT ' . $option . ' FROM staff WHERE STAFF_ID=' . UserStaffID()));
+	return $prof[1][$option];
 }
 function SelfStaffProfile($option)
 {
-    $prof=DBGet(DBQuery('SELECT '.$option.' FROM staff WHERE STAFF_ID='.UserID()));
-    return $prof[1][$option];
+	$prof = DBGet(DBQuery('SELECT ' . $option . ' FROM staff WHERE STAFF_ID=' . UserID()));
+	return $prof[1][$option];
 }
-function Preferences($item,$program='Preferences')
-{	global $_openSIS;
+function Preferences($item, $program = 'Preferences')
+{
+	global $_openSIS;
 
-	if($_SESSION['STAFF_ID'] && !$_openSIS['Preferences'][$program])
-	{
-            if($program=='Gradebook')    
-		$QI=DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID='.$_SESSION[STAFF_ID].' AND PROGRAM=\''.$program.'\' AND VALUE LIKE \'%_'.UserCoursePeriod().'\'');
-            else
-		$QI=DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID='.$_SESSION[STAFF_ID].' AND PROGRAM=\''.$program.'\'');
-		$_openSIS['Preferences'][$program] = DBGet($QI,array(),array('TITLE'));
+	if ($_SESSION['STAFF_ID'] && !$_openSIS['Preferences'][$program]) {
+		if ($program == 'Gradebook')
+			$QI = DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=' . $_SESSION['STAFF_ID'] . ' AND PROGRAM=\'' . $program . '\' AND VALUE LIKE \'%_' . UserCoursePeriod() . '\'');
+		else
+			$QI = DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=' . $_SESSION['STAFF_ID'] . ' AND PROGRAM=\'' . $program . '\'');
+		$_openSIS['Preferences'][$program] = DBGet($QI, array(), array('TITLE'));
 	}
 
-	$defaults = array('NAME'=>'Common',
-				'SORT'=>'Name',
-				'SEARCH'=>'Y',
-				'DELIMITER'=>'Tab',
-				'COLOR'=>'#FFFFCC',
-				'HIGHLIGHT'=>'#85E1FF',
-				'TITLES'=>'gray',
-				'THEME'=>'Brushed-Steel',
-				'HIDDEN'=>'Y',
-				'MONTH'=>'M',
-				'DAY'=>'j',
-				'YEAR'=>'Y',
-				'DEFAULT_ALL_SCHOOLS'=>'N',
-				'ASSIGNMENT_SORTING'=>'ASSIGNMENT_ID',
-				'ANOMALOUS_MAX'=>'100'
-				);
+	$defaults = array(
+		'NAME' => 'Common',
+		'SORT' => 'Name',
+		'SEARCH' => 'Y',
+		'DELIMITER' => 'Tab',
+		'COLOR' => '#FFFFCC',
+		'HIGHLIGHT' => '#85E1FF',
+		'TITLES' => 'gray',
+		'THEME' => 'Brushed-Steel',
+		'HIDDEN' => 'Y',
+		'MONTH' => 'M',
+		'DAY' => 'j',
+		'YEAR' => 'Y',
+		'DEFAULT_ALL_SCHOOLS' => 'N',
+		'ASSIGNMENT_SORTING' => 'ASSIGNMENT_ID',
+		'ANOMALOUS_MAX' => '100'
+	);
 
-	if(!isset($_openSIS['Preferences'][$program][$item][1]['VALUE']))
+	if (!isset($_openSIS['Preferences'][$program][$item][1]['VALUE']))
 		$_openSIS['Preferences'][$program][$item][1]['VALUE'] = $defaults[$item];
 
-	if($_SESSION['STAFF_ID'] && User('PROFILE')=='parent' || $_SESSION['STUDENT_ID'])
+	if ($_SESSION['STAFF_ID'] && User('PROFILE') == 'parent' || $_SESSION['STUDENT_ID'])
 		$_openSIS['Preferences'][$program]['SEARCH'][1]['VALUE'] = 'N';
-        if($program=='Gradebook')
-        {
-           if($item=='ANOMALOUS_MAX')
-           {
-               $arr=explode('_',$_openSIS['Preferences'][$program][$item][1]['VALUE']);
-               return $arr[0];
-           }
-           else
-	 return rtrim($_openSIS['Preferences'][$program][$item][1]['VALUE'],'_'.UserCoursePeriod());
-        }
-        else
-	return $_openSIS['Preferences'][$program][$item][1]['VALUE'];
+	if ($program == 'Gradebook') {
+		if ($item == 'ANOMALOUS_MAX') {
+			$arr = explode('_', $_openSIS['Preferences'][$program][$item][1]['VALUE']);
+			return $arr[0];
+		} else
+			return rtrim($_openSIS['Preferences'][$program][$item][1]['VALUE'], '_' . UserCoursePeriod());
+	} else
+		return $_openSIS['Preferences'][$program][$item][1]['VALUE'];
 }
 function StaffCategory($staff_id)
 {
-    $category=DBGet(DBquery('SELECT CATEGORY FROM staff_school_info WHERE STAFF_ID='.$staff_id));
-    return ($category[1]['CATEGORY']==''?'N/A':$category[1]['CATEGORY']);
+	$category = DBGet(DBquery('SELECT CATEGORY FROM staff_school_info WHERE STAFF_ID=' . $staff_id));
+	return ($category[1]['CATEGORY'] == '' ? 'N/A' : $category[1]['CATEGORY']);
 }
-?>
\ No newline at end of file

--- functions/VerifyAvailabilityFnc.php ---
@@ -46,66 +46,56 @@ function VerifyFixedSchedule($columns, $columns_var, $update = false)
     $min_start_dt_chk_qr = DBGet(DBQuery("SELECT min(start_date) as start_date from  staff_school_relationship where staff_id in($all_teacher)"));
     $min_start_dt_chk_pr = DBGet(DBQuery("SELECT min(start_date) as start_date from  staff_school_relationship where staff_id in($teacher)"));
 
-    if ($update)
-    {
+    if ($update) {
         $check_cp = DBGet(DBQuery("SELECT * FROM course_periods cp,course_period_var cpv WHERE cp.course_period_id=cpv.course_period_id AND cp.course_period_id='" . $columns['COURSE_PERIOD_ID'] . "'"));
 
         $check_cp = $check_cp[1];
 
-        if ($check_cp['TEACHER_ID'] == $teacher && $check_cp['SECONDARY_TEACHER_ID'] == $secteacher && $check_cp['BEGIN_DATE'] == $start_date && $check_cp['END_DATE'] == $end_date && $check_cp['DAYS'] == $days && $check_cp['PERIOD_ID'] == $period && $check_cp['ROOM_ID'] == $room)
-        {
+        if ($check_cp['TEACHER_ID'] == $teacher && $check_cp['SECONDARY_TEACHER_ID'] == $secteacher && $check_cp['BEGIN_DATE'] == $start_date && $check_cp['END_DATE'] == $end_date && $check_cp['DAYS'] == $days && $check_cp['PERIOD_ID'] == $period && $check_cp['ROOM_ID'] == $room) {
             return true;
         }
     }
-    if ($columns_var['DAYS'] == '' || $columns_var['PERIOD_ID'] == '' || $columns_var['ROOM_ID'] == '')
-    {
+    if ($columns_var['DAYS'] == '' || $columns_var['PERIOD_ID'] == '' || $columns_var['ROOM_ID'] == '') {
         return 'Input valid details';
     }
     $period_time = DBGet(DBQuery("SELECT START_TIME, END_TIME ,IGNORE_SCHEDULING FROM school_periods WHERE period_id={$period}"));
     $period_time = $period_time[1];
     $start_time = $period_time['START_TIME'];
     $end_time = $period_time['END_TIME'];
     $pre_ing = $period_time['IGNORE_SCHEDULING'];
-    if ($mp_id != '')
-    {
+    if ($mp_id != '') {
         $mp_date = DBGet(DBQuery("SELECT START_DATE,END_DATE FROM marking_periods where marking_period_id ={$mp_id}"));
         $mp_date = $mp_date[1];
-        $end_date = $mp_date[END_DATE];
-        $start_date = $mp_date[START_DATE];
+        $end_date = $mp_date['END_DATE'];
+        $start_date = $mp_date['START_DATE'];
     }
-    $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date AND IF (schedule_type='BLOCKED',course_period_date BETWEEN '$start_date' AND '$end_date','1')";
-
+    // $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date AND IF (schedule_type='BLOCKED',course_period_date BETWEEN '$start_date' AND '$end_date','1')";
+    $mp_append_sql = " AND begin_date >= '$start_date' AND end_date <= '$end_date'  AND IF (schedule_type='BLOCKED',course_period_date BETWEEN '$start_date' AND '$end_date','1')";
     // $period_append_sql = " AND period_id IN(SELECT period_id from school_periods WHERE start_time<='$end_time' AND '$start_time'<=end_time)";
     $period_append_sql = " AND period_id IN(SELECT period_id from school_periods WHERE start_time >= '$start_time' AND end_time <= '$end_time')";
 
     $days_append_sql = ' AND (';
     $days_room_append_sql = ' AND (';
     $days_arr = str_split($days);
-    foreach ($days_arr as $day)
-    {
+    foreach ($days_arr as $day) {
         $days_append_sql .= "DAYS LIKE '%$day%' OR ";
         $days_room_append_sql .= "(DAYS LIKE '%$day%' AND room_id=$room) OR ";
     }
     $days_append_sql = substr($days_append_sql, 0, -4) . ')';
     $days_room_append_sql = substr($days_room_append_sql, 0, -4) . ')';
     if ($update) $cp_id = " AND cp.COURSE_PERIOD_ID!={$columns['COURSE_PERIOD_ID']}";
     else $cp_id = '';
-    if ($pre_ing != 'Y')
-    {
-    $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods cp,course_period_var cpv WHERE cp.course_period_id=cpv.course_period_id AND (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$period_append_sql}{$days_append_sql}{$cp_id}"));
-    if ($cp_RET) return 'Teacher Not Available';
+    if ($pre_ing != 'Y') {
+        $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods cp,course_period_var cpv WHERE cp.course_period_id=cpv.course_period_id AND (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$period_append_sql}{$days_append_sql}{$cp_id}"));
+        if ($cp_RET) return 'Teacher Not Available';
         else return true;
-    }
-    elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
-    else
-    {
-        if ($pre_ing != 'Y')
-        {
-        $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods cp,course_period_var cpv WHERE cp.course_period_id=cpv.course_period_id{$mp_append_sql}{$period_append_sql}{$days_room_append_sql}{$cp_id}"));
-        if ($room_RET && $_REQUEST['tables']['course_period_var'][$_REQUEST['course_period_id']]['ROOM_ID'] != '')
-        {
-            return 'Room Not Available';
-        }
+    } elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
+    else {
+        if ($pre_ing != 'Y') {
+            $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods cp,course_period_var cpv WHERE cp.course_period_id=cpv.course_period_id{$mp_append_sql}{$period_append_sql}{$days_room_append_sql}{$cp_id}"));
+            if ($room_RET && $_REQUEST['tables']['course_period_var'][$_REQUEST['course_period_id']]['ROOM_ID'] != '') {
+                return 'Room Not Available';
+            }
         }
         return true;
     }
@@ -135,20 +125,18 @@ function VerifyVariableSchedule($columns)
     $min_start_dt_chk_pr = DBGet(DBQuery("SELECT min(start_date) as start_date from  staff_school_relationship where staff_id in($teacher)"));
 
     if (!$_REQUEST['course_period_variable']) return 'Please input valid data';
-    if ($mp_id != '')
-    {
+    if ($mp_id != '') {
         $mp_date = DBGet(DBQuery("SELECT START_DATE,END_DATE FROM marking_periods where marking_period_id ={$mp_id}"));
         $mp_date = $mp_date[1];
-        $end_date = $mp_date[END_DATE];
-        $start_date = $mp_date[START_DATE];
+        $end_date = $mp_date['END_DATE'];
+        $start_date = $mp_date['START_DATE'];
     }
-    $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
-
+    // $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+    $mp_append_sql = " AND begin_date >= '$start_date' AND end_date <= '$end_date'";
     $days_append_sql = ' AND (';
     $days_room_append_sql = ' AND (';
     $err_msg = '';
-    foreach ($_REQUEST['course_period_variable'] as $cp_id => $days)
-    {
+    foreach ($_REQUEST['course_period_variable'] as $cp_id => $days) {
 
         if ($days['DAYS'] == '' || ($days['PERIOD_ID'] == '' || $days['ROOM_ID'] == '')) return 'Please input valid data';
         $period_time = DBGet(DBQuery("SELECT TITLE,IGNORE_SCHEDULING FROM school_periods WHERE period_id={$days['PERIOD_ID']}"));
@@ -161,52 +149,42 @@ function VerifyVariableSchedule($columns)
         //                $err_msg.='Teacher Already Scheduled to '.$period_time['TITLE'].',';
         //                continue;
         //            }
-        if ($pre_ing != 'Y')
-        {
+        if ($pre_ing != 'Y') {
             $flag = 1;
-        if ($cp_id == 'new')
-        {
-            // $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time<='" . $days['n']['END_TIME'] . "' AND '" . $days['n']['START_TIME'] . "'<=end_time) OR ";
-            $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time >= '" . $days['n']['START_TIME'] . "' AND end_time <= '" . $days['n']['END_TIME'] . "') OR ";
-
-            // $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time<='" . $days['n']['END_TIME'] . "' AND '" . $days['n']['START_TIME'] . "'<=end_time) OR ";
-            $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time >= '" . $days['n']['START_TIME'] . "' AND end_time <= '" . $days['n']['END_TIME'] . "') OR ";
-        }
-        else
-        {
-            // $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time<='$days[END_TIME]' AND '$days[START_TIME]'<=end_time) OR ";
-            $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time >= '$days[START_TIME]' AND end_time <= '$days[END_TIME]') OR ";
-
-            // $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time<='$days[END_TIME]' AND '$days[START_TIME]'<=end_time) OR ";
-            $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time >= '$days[START_TIME]' AND end_time <= '$days[END_TIME]') OR ";
-        }
+            if ($cp_id == 'new') {
+                // $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time<='" . $days['n']['END_TIME'] . "' AND '" . $days['n']['START_TIME'] . "'<=end_time) OR ";
+                $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time >= '" . $days['n']['START_TIME'] . "' AND end_time <= '" . $days['n']['END_TIME'] . "') OR ";
+
+                // $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time<='" . $days['n']['END_TIME'] . "' AND '" . $days['n']['START_TIME'] . "'<=end_time) OR ";
+                $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time >= '" . $days['n']['START_TIME'] . "' AND end_time <= '" . $days['n']['END_TIME'] . "') OR ";
+            } else {
+                // $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time<='$days[END_TIME]' AND '$days[START_TIME]'<=end_time) OR ";
+                $days_append_sql .= "(days like '%$days[DAYS]%' AND start_time >= '$days[START_TIME]' AND end_time <= '$days[END_TIME]') OR ";
+
+                // $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time<='$days[END_TIME]' AND '$days[START_TIME]'<=end_time) OR ";
+                $days_room_append_sql .= "(days like '%$days[DAYS]%' AND room_id=$days[ROOM_ID] AND start_time >= '$days[START_TIME]' AND end_time <= '$days[END_TIME]') OR ";
+            }
         }
     }
     $days_append_sql = substr($days_append_sql, 0, -4) . ')';
     $days_room_append_sql = substr($days_room_append_sql, 0, -4) . ')';
-    if ($err_msg != '')
-    {
+    if ($err_msg != '') {
         return substr($err_msg, 0, -1);
     }
-    if ($flag == 1)
-    {
-    $sql_ch = "SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql}";
+    if ($flag == 1) {
+        $sql_ch = "SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql}";
 
-    $cp_RET = DBGet(DBQuery($sql_ch));
-    if ($cp_RET) return 'Teacher Not Available';
+        $cp_RET = DBGet(DBQuery($sql_ch));
+        if ($cp_RET) return 'Teacher Not Available';
         else return true;
-    }
-    elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
+    } elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
     elseif ($day_RET) return 'Day Not Available';
-    else
-    {
-        if ($flag == 1)
-        {
-        $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE 1{$mp_append_sql}{$days_room_append_sql}"));
-        if ($room_RET)
-        {
-            return 'Room Not Available';
-        }
+    else {
+        if ($flag == 1) {
+            $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE 1{$mp_append_sql}{$days_room_append_sql}"));
+            if ($room_RET) {
+                return 'Room Not Available';
+            }
         }
         return true;
     }
@@ -224,7 +202,7 @@ function VerifyVariableSchedule_Update($columns)
     //    else
     //        //$all_teacher=($secteacher!=''?$secteacher:'');
     //    $all_teacher=$teacher.($secteacher!=''?','.$secteacher:'');
-    
+
 
     $teacher = ($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['TEACHER_ID'] != '' ? $_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['TEACHER_ID'] : $columns['TEACHER_ID']);
     $secteacher = ($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['SECONDARY_TEACHER_ID'] != '' ? $_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['SECONDARY_TEACHER_ID'] : $columns['SECONDARY_TEACHER_ID']);
@@ -245,16 +223,15 @@ function VerifyVariableSchedule_Update($columns)
     $min_start_dt_chk_pr = DBGet(DBQuery("SELECT min(start_date) as start_date from  staff_school_relationship where staff_id in($teacher)"));
 
     if (!$_REQUEST['course_period_variable'] || $columns['PERIOD_ID'] = '' || $columns['ROOM_ID'] == '') return 'Please input valid data';
-    if ($columns['CP_SECTION'] == 'cpv')
-    {
-        if ($mp_id != '')
-        {
+    if ($columns['CP_SECTION'] == 'cpv') {
+        if ($mp_id != '') {
             $mp_date = DBGet(DBQuery("SELECT START_DATE,END_DATE FROM marking_periods where marking_period_id ={$mp_id}"));
             $mp_date = $mp_date[1];
-            $end_date = $mp_date[END_DATE];
-            $start_date = $mp_date[START_DATE];
+            $end_date = $mp_date['END_DATE'];
+            $start_date = $mp_date['START_DATE'];
         }
-        $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+        // $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+        $mp_append_sql = " AND begin_date >= '$start_date' AND end_date <= '$end_date'";
 
         $days_append_sql = ' AND (';
         $days_room_append_sql = ' AND (';
@@ -276,74 +253,61 @@ function VerifyVariableSchedule_Update($columns)
         //     return 'Same meeting days already exists.';
         // } else {
         //     $sql_op="SELECT cp.COURSE_PERIOD_ID  FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE cpv.PERIOD_ID='".$per_id."'  AND (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)) AND cp.COURSE_PERIOD_ID!={$_REQUEST['cp_id']}{$mp_append_sql}{$days_append_sql}";
-        if ($pre_ing != 'Y')
-        {
+        if ($pre_ing != 'Y') {
             $sql_op = "SELECT cp.COURSE_PERIOD_ID  FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql}";
 
             $cp_RET = DBGet(DBQuery($sql_op));
             if (count($cp_RET) > 0) return 'Teacher Not Available';
             else return true;
-        }
-            elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
-            else
-            {
-            if ($pre_ing != 'Y')
-            {
+        } elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
+        else {
+            if ($pre_ing != 'Y') {
                 $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE 1{$mp_append_sql}{$days_room_append_sql} AND cp.course_period_id!={$columns['COURSE_PERIOD_ID']}"));
-                if ($room_RET)
-                {
+                if ($room_RET) {
                     return 'Room Not Available';
                 }
             }
-                return true;
-            }
+            return true;
+        }
         //}
-        
-    }
-    else
-    {
-        if ($mp_id != '')
-        {
+
+    } else {
+        if ($mp_id != '') {
             $mp_date = DBGet(DBQuery("SELECT START_DATE,END_DATE FROM marking_periods where marking_period_id ={$mp_id}"));
             $mp_date = $mp_date[1];
-            $end_date = $mp_date[END_DATE];
-            $start_date = $mp_date[START_DATE];
+            $end_date = $mp_date['END_DATE'];
+            $start_date = $mp_date['START_DATE'];
         }
-        $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+        // $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+        $mp_append_sql = " AND begin_date >= '$start_date' AND end_date <= '$end_date'";
 
-        if ($columns[DAYS] != 'n' && $columns[END_TIME] != '' && $columns[START_TIME] != '')
-        {
+        if ($columns[DAYS] != 'n' && $columns[END_TIME] != '' && $columns[START_TIME] != '') {
             $days_append_sql = ' AND (';
 
             // $days_append_sql .= "(days like '%$columns[DAYS]%' AND start_time<='$columns[END_TIME]' AND '$columns[START_TIME]'<=end_time) OR ";
             $days_append_sql .= "(days like '%$columns[DAYS]%' AND start_time >= '$columns[START_TIME]' AND end_time <= '$columns[END_TIME]') OR ";
 
             $days_append_sql = substr($days_append_sql, 0, -4) . ')';
         }
-        if ($pre_ing != 'Y')
-        {
-        $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql} AND cpv.PERIOD_ID='" . $per_id . "' AND cpv.DAYS='" . $columns['SELECT_DAYS'] . "' AND cpv.ROOM_ID='" . $columns['ROOM_ID'] . "' AND cp.COURSE_PERIOD_ID!={$_REQUEST['cp_id']}"));
-        if ($cp_RET) return "Teacher Not Available";
+        if ($pre_ing != 'Y') {
+            $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql} AND cpv.PERIOD_ID='" . $per_id . "' AND cpv.DAYS='" . $columns['SELECT_DAYS'] . "' AND cpv.ROOM_ID='" . $columns['ROOM_ID'] . "' AND cp.COURSE_PERIOD_ID!={$_REQUEST['cp_id']}"));
+            if ($cp_RET) return "Teacher Not Available";
             else return true;
-        }
-        elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
+        } elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
         else return true;
     }
 }
 
 function VerifyBlockedSchedule($columns, $course_period_id, $sec, $edit = false)
 {
-    if ($course_period_id != 'new')
-    {
+    if ($course_period_id != 'new') {
         $cp_det_RET = DBGet(DBQuery("SELECT * FROM course_periods WHERE course_period_id=$course_period_id"));
 
         $cp_det_RET = $cp_det_RET[1];
         $teacher = $cp_det_RET['TEACHER_ID'];
         $secteacher = $cp_det_RET['SECONDARY_TEACHER_ID'];
         $all_teacher = $teacher . ($secteacher != '' ? $secteacher : '');
-    }
-    else
-    {
+    } else {
 
         if ($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['TEACHER_ID'] != '') $all_teacher = $teacher . ($secteacher != '' ? ',' . $secteacher : '');
         else $all_teacher = ($secteacher != '' ? $secteacher : '');
@@ -356,16 +320,12 @@ function VerifyBlockedSchedule($columns, $course_period_id, $sec, $edit = false)
     $min_start_dt_chk_qr = DBGet(DBQuery("SELECT min(start_date) as start_date from  staff_school_relationship where staff_id in($all_teacher)"));
     $min_start_dt_chk_pr = DBGet(DBQuery("SELECT min(start_date) as start_date from  staff_school_relationship where staff_id in($teacher)"));
 
-    if ($sec == 'cpv')
-    {
-        if ($edit)
-        {
+    if ($sec == 'cpv') {
+        if ($edit) {
             $period = $columns['PERIOD_ID'];
             $room = $columns['ROOM_ID'];
             $cp_id = " AND cp.COURSE_PERIOD_ID!={$course_period_id}";
-        }
-        else
-        {
+        } else {
             $cp_id = '';
             $period = $_REQUEST['values']['PERIOD_ID'];
             $room = $_REQUEST['values']['ROOM_ID'];
@@ -375,62 +335,54 @@ function VerifyBlockedSchedule($columns, $course_period_id, $sec, $edit = false)
         $start_time = $period_time['START_TIME'];
         $end_time = $period_time['END_TIME'];
         $pre_ing = $period_time['IGNORE_SCHEDULING'];
-        if ($mp_id != '')
-        {
+        if ($mp_id != '') {
             $mp_date = DBGet(DBQuery("SELECT START_DATE,END_DATE FROM marking_periods where marking_period_id ={$mp_id}"));
             $mp_date = $mp_date[1];
-            $end_date = $mp_date[END_DATE];
-            $start_date = $mp_date[START_DATE];
+            $end_date = $mp_date['END_DATE'];
+            $start_date = $mp_date['START_DATE'];
         }
-        $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+        // $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+        $mp_append_sql = " AND begin_date >= '$start_date' AND end_date <= '$end_date'";
 
         // $days_append_sql .= " AND IF (schedule_type='BLOCKED', course_period_date ='" . $_REQUEST['meet_date'] . "' AND start_time<='$end_time' AND '$start_time'<=end_time,'$_REQUEST[meet_date]' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($_REQUEST['meet_date'])) , 'key') . "%' AND start_time<='$end_time' AND '$start_time'<=end_time)";
         $days_append_sql = " AND IF (schedule_type='BLOCKED', course_period_date ='" . $_REQUEST['meet_date'] . "' AND start_time >= '$start_time' AND end_time <= '$end_time','$_REQUEST[meet_date]' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($_REQUEST['meet_date'])), 'key') . "%' AND start_time >= '$start_time' AND end_time <= '$end_time')";
 
         // $days_room_append_sql .= " AND IF (schedule_type='BLOCKED', course_period_date ='" . $_REQUEST['meet_date'] . "' AND room_id=$room AND start_time<='$end_time' AND '$start_time'<=end_time,'$_REQUEST[meet_date]' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($_REQUEST['meet_date'])) , 'key') . "%' AND room_id=$room AND start_time<='$end_time' AND '$start_time'<=end_time)";
         $days_room_append_sql = " AND IF (schedule_type='BLOCKED', course_period_date ='" . $_REQUEST['meet_date'] . "' AND room_id=$room AND start_time >= '$start_time' AND end_time <= '$end_time','$_REQUEST[meet_date]' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($_REQUEST['meet_date'])), 'key') . "%' AND room_id=$room AND start_time >= '$start_time' AND end_time <= '$end_time')";
 
-        if ($pre_ing != 'Y')
-        {
-        $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql}{$cp_id}"));
-        if ($cp_RET) return 'Teacher Not Available';
-        }
-        elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
-        else
-        {
-            if ($pre_ing != 'Y')
-            {
-            $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE 1{$mp_append_sql}{$days_room_append_sql}{$cp_id}"));
-            if ($room_RET)
-            {
-                return 'Room Not Available';
-            }
+        if ($pre_ing != 'Y') {
+            $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql}{$cp_id}"));
+            if ($cp_RET) return 'Teacher Not Available';
+        } elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
+        else {
+            if ($pre_ing != 'Y') {
+                $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE 1{$mp_append_sql}{$days_room_append_sql}{$cp_id}"));
+                if ($room_RET) {
+                    return 'Room Not Available';
+                }
             }
             return true;
         }
         return true;
-    }
-    else
-    {
-        $cp_dates = DBGet(DBQuery("SELECT COURSE_PERIOD_DATE,START_TIME,END_TIME,ROOM_ID FROM course_period_var WHERE COURSE_PERIOD_ID='$course_period_id'"));
+    } else {
+        $cp_dates = DBGet(DBQuery("SELECT PERIOD_ID,COURSE_PERIOD_DATE,START_TIME,END_TIME,ROOM_ID FROM course_period_var WHERE COURSE_PERIOD_ID='$course_period_id'"));
         $teacher = $columns['TEACHER_ID'];
         $secteacher = $columns['SECONDARY_TEACHER_ID'];
-        if ($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['TEACHER_ID'] != '') $all_teacher = $teacher . ($secteacher != '' ? ',' . $secteacher : '');
+        if (($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['TEACHER_ID'] != '') || ($_REQUEST['hidden_primary_teacher_id'] != ''))
+            $all_teacher = $teacher . ($secteacher != '' ? ',' . $secteacher : '');
         else $all_teacher = ($secteacher != '' ? $secteacher : '');
         //        $all_teacher=$teacher.($secteacher!=''?','.$secteacher:'');
         $start_date = $columns['BEGIN_DATE'];
         if ($columns['MARKING_PERIOD_ID']) $mp_id = $columns['MARKING_PERIOD_ID'];
         else $mp_id = '';
         $end_date = $columns['END_DATE'];
-        if ($mp_id != '')
-        {
+        if ($mp_id != '') {
             $mp_date = DBGet(DBQuery("SELECT START_DATE,END_DATE FROM marking_periods where marking_period_id ={$mp_id}"));
             $mp_date = $mp_date[1];
-            $end_date = $mp_date[END_DATE];
-            $start_date = $mp_date[START_DATE];
+            $end_date = $mp_date['END_DATE'];
+            $start_date = $mp_date['START_DATE'];
         }
-        foreach ($cp_dates as $key => $cp)
-        {
+        foreach ($cp_dates as $key => $cp) {
             $period = $cp['PERIOD_ID'];
             $room = $cp['ROOM_ID'];
             $meet_date = $cp['COURSE_PERIOD_DATE'];
@@ -440,36 +392,31 @@ function VerifyBlockedSchedule($columns, $course_period_id, $sec, $edit = false)
             $period_time = $period_time[1];
 
             $pre_ing = $period_time['IGNORE_SCHEDULING'];
-            $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
-
+            // $mp_append_sql = " AND begin_date<='$end_date' AND '$start_date'<=end_date";
+            $mp_append_sql = " AND begin_date >= '$start_date' AND end_date <= '$end_date'";
+            
             // $days_append_sql = " AND IF (schedule_type='BLOCKED', course_period_date ='$meet_date' AND start_time<='$end_time' AND '$start_time'<=end_time,'$meet_date' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($meet_date)) , 'key') . "%' AND start_time<='$end_time' AND '$start_time'<=end_time)";
             $days_append_sql = " AND IF (schedule_type='BLOCKED', course_period_date ='$meet_date' AND start_time >= '$start_time' AND end_time <= '$end_time','$meet_date' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($meet_date)), 'key') . "%' AND start_time >= '$start_time' AND end_time <= '$end_time')";
 
             // $days_room_append_sql = " AND IF (schedule_type='BLOCKED', course_period_date ='$meet_date' AND room_id=$room AND start_time<='$end_time' AND '$start_time'<=end_time,'$meet_date' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($meet_date)) , 'key') . "%' AND room_id=$room AND start_time<='$end_time' AND '$start_time'<=end_time)";
             $days_room_append_sql = " AND IF (schedule_type='BLOCKED', course_period_date ='$meet_date' AND room_id=$room AND start_time >= '$start_time' AND end_time <= '$end_time','$meet_date' BETWEEN begin_date AND end_date AND days like '%" . conv_day(date('D', strtotime($meet_date)), 'key') . "%' AND room_id=$room AND start_time >= '$start_time' AND end_time <= '$end_time')";
             $cp_id = " AND cp.COURSE_PERIOD_ID!={$course_period_id}";
-            if ($pre_ing != 'Y')
-            {
-            $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql}{$cp_id}"));
-            if ($cp_RET) return 'Teacher Not Available';
-            }
-            elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
-            else
-            {
-                if ($pre_ing != 'Y')
-                {
-                $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE 1{$mp_append_sql}{$days_room_append_sql}{$cp_id}"));
-                if ($room_RET)
-                {
-                    return 'Room Not Available';
+            if ($pre_ing != 'Y') {
+                $cp_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE (secondary_teacher_id IN ($all_teacher) OR teacher_id IN ($all_teacher)){$mp_append_sql}{$days_append_sql}{$cp_id}"));
+                if ($cp_RET) return 'Teacher Not Available';
+            } elseif (strtotime($min_start_dt_chk_pr[1]['START_DATE']) > strtotime($start_date)) return 'Teacher\'s start date cannot be after course period\'s start date.';
+            else {
+                if ($pre_ing != 'Y') {
+                    $room_RET = DBGet(DBQuery("SELECT cp.COURSE_PERIOD_ID FROM course_periods  cp LEFT JOIN course_period_var cpv ON (cp.course_period_id=cpv.course_period_id) WHERE 1{$mp_append_sql}{$days_room_append_sql}{$cp_id}"));
+                    if ($room_RET) {
+                        return 'Room Not Available';
+                    }
                 }
             }
         }
-        }
         $total_days = DBGet(DBQuery("SELECT COUNT(course_period_date) AS CP_DATES FROM course_period_var WHERE COURSE_PERIOD_ID={$course_period_id}"));
         $mp_RET = DBGet(DBQuery("SELECT COUNT(course_period_date) AS CP_DATES FROM course_period_var WHERE COURSE_PERIOD_ID={$course_period_id} AND course_period_date BETWEEN '$start_date' AND '$end_date'"));
-        if ($total_days[1]['CP_DATES'] != $mp_RET[1]['CP_DATES'])
-        {
+        if ($total_days[1]['CP_DATES'] != $mp_RET[1]['CP_DATES']) {
             if ($mp_id != '') return 'Marking Period Cannot be Changed.';
             else return 'Begin or End Date Cannot be Changed.';
         }
@@ -483,39 +430,31 @@ function VerifyBlockedSchedule($columns, $course_period_id, $sec, $edit = false)
 function VerifyStudentSchedule($course_RET, $student_id = '')
 {
     if ($student_id == '') $student_id = UserStudentID();
-    if (!$course_RET)
-    {
+    if (!$course_RET) {
         return 'Incomplete course period';
     }
-    if (count($course_RET) > 0)
-    {
+    if (count($course_RET) > 0) {
         $schedule_exist = DBGet(DBQuery("SELECT *  FROM `schedule` WHERE `syear` =" . $course_RET[1]['SYEAR'] . " AND `school_id` =" . $course_RET[1]['SCHOOL_ID'] . " AND `student_id` =" . $student_id . " AND `course_id` =" . $course_RET[1]['COURSE_ID'] . " AND `course_period_id` = " . $course_RET[1]['COURSE_PERIOD_ID'] . ' AND (END_DATE>="' . date('Y-m-d') . '" OR END_DATE IS NULL OR END_DATE="0000-00-00")'));
-        if (count($schedule_exist) > 0)
-        {
+        if (count($schedule_exist) > 0) {
             return 'Course period already scheduled';
         }
     }
     $check_parent_schedule = DBGet(DBQuery('SELECT PARENT_ID FROM course_periods WHERE COURSE_PERIOD_ID=' . $course_RET[1]['COURSE_PERIOD_ID']));
-    if ($check_parent_schedule[1]['PARENT_ID'] != '' && $check_parent_schedule[1]['PARENT_ID'] != $course_RET[1]['COURSE_PERIOD_ID'])
-    {
+    if ($check_parent_schedule[1]['PARENT_ID'] != '' && $check_parent_schedule[1]['PARENT_ID'] != $course_RET[1]['COURSE_PERIOD_ID']) {
         $check_stu_schedule = DBGet(DBQuery('SELECT COUNT(*) as REC_EX FROM schedule WHERE COURSE_PERIOD_ID=' . $check_parent_schedule[1]['PARENT_ID'] . ' AND STUDENT_ID=' . $student_id . ' AND (END_DATE>="' . date('Y-m-d') . '" OR END_DATE IS NULL OR END_DATE="0000-00-00")'));
         if ($check_stu_schedule[1]['REC_EX'] == 0) return 'Course period has parent course restriction';
     }
-    if ($course_RET[1]['TOTAL_SEATS'] - $course_RET[1]['FILLED_SEATS'] <= 0)
-    {
+    if ($course_RET[1]['TOTAL_SEATS'] - $course_RET[1]['FILLED_SEATS'] <= 0) {
         return 'Seat not available';
     }
     $student_RET = DBGet(DBQuery("SELECT LEFT(GENDER,1) AS GENDER FROM students WHERE STUDENT_ID='" . $student_id . "'"));
     $student = $student_RET[1];
-    if ($course_RET[1]['GENDER_RESTRICTION'] != 'N' && $course_RET[1]['GENDER_RESTRICTION'] != $student['GENDER'])
-    {
+    if ($course_RET[1]['GENDER_RESTRICTION'] != 'N' && $course_RET[1]['GENDER_RESTRICTION'] != $student['GENDER']) {
         return 'There is gender restriction';
     }
     $do_check = false;
-    foreach ($course_RET as $course)
-    {
-        if ($course['IGNORE_SCHEDULING'] != 'Y')
-        {
+    foreach ($course_RET as $course) {
+        if ($course['IGNORE_SCHEDULING'] != 'Y') {
             $do_check = true;
             break;
         }
@@ -526,10 +465,10 @@ function VerifyStudentSchedule($course_RET, $student_id = '')
     $mp_id = $course_RET[1]['MARKING_PERIOD_ID'];
     $end_date = $course_RET[1]['END_DATE'];
     $start_date = date('Y-m-d');
-    $mp_append_sql = " AND s.start_date<='$end_date' AND ('$start_date'<=s.end_date OR s.end_date IS NULL)";
+    $cp_start_date = $course_RET[1]['BEGIN_DATE'];
+    $mp_append_sql = " AND s.start_date>='$cp_start_date' AND s.end_date<='$end_date' AND ('$start_date'<=s.end_date OR s.end_date IS NULL)";
 
-    if ($course_RET[1]['SCHEDULE_TYPE'] == 'FIXED')
-    {
+    if ($course_RET[1]['SCHEDULE_TYPE'] == 'FIXED') {
         $days = $course_RET[1]['DAYS'];
         $start_time = $course_RET[1]['START_TIME'];
         $end_time = $course_RET[1]['END_TIME'];
@@ -538,27 +477,20 @@ function VerifyStudentSchedule($course_RET, $student_id = '')
         $period_days_append_sql = " AND course_period_id IN(SELECT course_period_id from course_period_var cpv,school_periods sp WHERE cpv.period_id=sp.period_id AND ignore_scheduling IS NULL AND sp.start_time >= '$start_time' AND sp.end_time <= '$end_time' AND (";
 
         $days_arr = str_split($days);
-        foreach ($days_arr as $day)
-        {
+        foreach ($days_arr as $day) {
             $period_days_append_sql .= "DAYS LIKE '%$day%' OR ";
         }
         $period_days_append_sql = substr($period_days_append_sql, 0, -4) . '))';
-    }
-    elseif ($course_RET[1]['SCHEDULE_TYPE'] == 'VARIABLE')
-    {
+    } elseif ($course_RET[1]['SCHEDULE_TYPE'] == 'VARIABLE') {
         $period_days_append_sql = " AND course_period_id IN(SELECT course_period_id from course_period_var cpv,school_periods sp WHERE cpv.period_id=sp.period_id AND ignore_scheduling IS NULL AND (";
-        foreach ($course_RET as $period_day)
-        {
+        foreach ($course_RET as $period_day) {
             // $period_days_append_sql .= "(sp.start_time<='$period_day[END_TIME]' AND '$period_day[START_TIME]'<=sp.end_time AND DAYS LIKE '%$period_day[DAYS]%') OR ";
             $period_days_append_sql .= "(sp.start_time >= '$period_day[START_TIME]' AND sp.end_time <=  '$period_day[END_TIME]' AND DAYS LIKE '%$period_day[DAYS]%') OR ";
         }
         $period_days_append_sql = substr($period_days_append_sql, 0, -4) . '))';
-    }
-    elseif ($course_RET[1]['SCHEDULE_TYPE'] == 'BLOCKED')
-    {
+    } elseif ($course_RET[1]['SCHEDULE_TYPE'] == 'BLOCKED') {
         $period_days_append_sql = " AND course_period_id IN(SELECT course_period_id from course_period_var cpv,school_periods sp WHERE cpv.period_id=sp.period_id AND ignore_scheduling IS NULL AND (";
-        foreach ($course_RET as $period_date)
-        {
+        foreach ($course_RET as $period_date) {
             // $period_days_append_sql .="(sp.start_time<='$period_date[END_TIME]' AND '$period_date[START_TIME]'<=sp.end_time AND IF(course_period_date IS NULL, course_period_date='$period_date[COURSE_PERIOD_DATE]',DAYS LIKE '%$period_date[DAYS]%')) OR ";
             $period_days_append_sql .= "(sp.start_time >= '$period_date[START_TIME]' AND sp.end_time <= '$period_date[END_TIME]' AND (cpv.course_period_date IS NULL OR cpv.course_period_date='$period_date[COURSE_PERIOD_DATE]') AND cpv.DAYS LIKE '%$period_date[DAYS]%') OR ";
         }
@@ -567,10 +499,7 @@ function VerifyStudentSchedule($course_RET, $student_id = '')
 
     $exist_RET = DBGet(DBQuery("SELECT s.ID FROM schedule s WHERE student_id=" . $student_id . " AND s.syear='" . UserSyear() . "' {$mp_append_sql}{$period_days_append_sql} UNION SELECT s.ID FROM temp_schedule s WHERE student_id=" . $student_id . "{$mp_append_sql}{$period_days_append_sql}"));
     if ($exist_RET) return 'There is a Period Conflict (' . $course_RET[1]['CP_TITLE'] . ')';
-    else
-    {
+    else {
         return true;
     }
 }
-?>
-

--- functions/VerifyDateFnc.php ---
@@ -28,23 +28,21 @@
 
 function VerifyDate($date)
 {
-$vdate = explode("-", $date);
-	if(count($vdate))
-	{
+	$vdate = explode("-", $date);
+	if (count($vdate)) {
 		$day = $vdate[0];
-		$month = MonthNWSwitch($vdate[1],'tonum');
+		$month = MonthNWSwitch($vdate[1], 'tonum');
 		$year = $vdate[2];
-                $e_date='01-'.$month.'-'.$year;
-                $num_days=date('t',strtotime($e_date));
-                if($num_days<$day)
-                {
-                 return false;
-                }
-                
+		$e_date = '01-' . $month . '-' . $year;
+		$num_days = date('t', strtotime($e_date));
+		if ($num_days < $day) {
+			return false;
+		}
+	} else {
+		return false;
 	}
-	else
-	return false;
-	
-	return checkdate($month,$day,$year);
+
+	// in the < 8 php if you pass a string value for the int argument but string value can be converted in int that will not give you an error but in php 8 you have to pass int type value for int argument
+	// note - default variable type in php is " string " type 
+	return checkdate(intval($month), intval($day), intval($year));
 }
-?>
\ No newline at end of file

--- functions/WidgetsFnc.php ---
@@ -252,7 +252,7 @@ function Widgets($item, $allow_widget = false) {
                 break;
 
             case 'letter_grade':
-                if (count($_REQUEST['letter_grade'])) {
+                if (is_countable($link['remove']['variables']) && count($_REQUEST['letter_grade'])) {
                     $_openSIS['SearchTerms'] .= '<h5 class="help-block">With' . ($_REQUEST['letter_grade_exclude'] == 'Y' ? 'out' : '') . ' Report Card Grade: </h5>';
                     $letter_grades_RET = DBGet(DBQuery('SELECT ID,TITLE FROM report_card_grades WHERE SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\''), array(), array('ID'));
                     foreach ($_REQUEST['letter_grade'] as $grade => $Y) {
@@ -352,7 +352,7 @@ function Widgets($item, $allow_widget = false) {
                 if ($_REQUEST['search_modfunc'] == 'search_fnc' || !$_REQUEST['search_modfunc'])
                     $activities_RET = DBGet(DBQuery('SELECT ID,TITLE FROM eligibility_activities WHERE SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\''));
                 $select = "<SELECT name=activity_id class=\"form-control\"><OPTION value=''>Not Specified</OPTION>";
-                if (count($activities_RET)) {
+                if (is_countable($activities_RET) && count($activities_RET)) {
                     foreach ($activities_RET as $activity)
                         $select .= "<OPTION value=$activity[ID]>$activity[TITLE]</OPTION>";
                 }

--- functions/langFnc.php ---
@@ -1,5 +1,6 @@
 <?php
 error_reporting(0);
+
 function langDirection(){
     include 'lang/supportedLanguages.php';
     return $supportedLanguages[$_SESSION['language']]['direction'];

--- index.php ---
@@ -26,15 +26,16 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-error_reporting(1);
-ini_set('session.cookie_httponly', 1);
-include_once("functions/DelDirectoryFnc.php");
-include_once("functions/ParamLibFnc.php");
-require_once("functions/PragRepFnc.php");
-include_once("RemoveBackup.php");
-include('lang/language.php');
-include_once("functions/PasswordHashFnc.php");
-
+//declare(strict_types=1);
+error_reporting(0);
+
+include_once "functions/DelDirectoryFnc.php";
+include_once "functions/ParamLibFnc.php";
+require_once "functions/PragRepFnc.php";
+include_once "RemoveBackup.php";
+include_once 'lang/language.php';
+include_once "functions/PasswordHashFnc.php";
+session_start();
 $index_commit_in    =   "";
 $index_commit_out   =   "";
 
@@ -44,7 +45,7 @@
 }
 
 if (optional_param('dis', '', PARAM_ALPHAEXT) == 'fl_count') {
-    $error[] = ""._eitherYourAccountIsInactiveOrYourAccessPermissionHasBeenRevoked."."._pleaseContactTheSchoolAdministration.".";
+    $error[] = "" . _eitherYourAccountIsInactiveOrYourAccessPermissionHasBeenRevoked . "." . _pleaseContactTheSchoolAdministration . ".";
 }
 
 if (optional_param('dis', '', PARAM_ALPHAEXT) == 'assoc_mis') {
@@ -54,14 +55,35 @@
 if (isset($_GET['ins']))
     $install = optional_param('ins', '', PARAM_ALPHAEXT);
 
- if ($install == 'comp') {
-     if (is_dir('install')) {
-         $dir = 'install/'; // IMPORTANT: with '/' at the end
-          $remove_directory = delete_directory($dir);
-     }
- }
+if ($install == 'comp') {
+    if (is_dir('install')) {
+        $dir = 'install/'; // IMPORTANT: with '/' at the end
+        $remove_directory = delete_directory($dir);
+    }
+}
 
 require_once('Warehouse.php');
+# CHECKING ES STARTS: IF ES (EVENT SCHEDULER) IS FOUND OFF, IT SHOULD BE TURNED ON
+$check_ES_status = DBGet(DBQuery("SHOW VARIABLES WHERE VARIABLE_NAME = 'event_scheduler'"));
+if ($check_ES_status) {
+    if ($check_ES_status[1]['VARIABLE_NAME'] == 'event_scheduler' && $check_ES_status[1]['VALUE'] != 'ON') {
+        DBQuery('SET GLOBAL event_scheduler = ON');
+    }
+}
+# CHECKING ES ENDS
+$check_sql_mode = DBGet(DBQuery("SELECT @@GLOBAL.sql_mode"));
+if ($check_sql_mode) {
+    if ($check_sql_mode[1]['@@GLOBAL.SQL_MODE'] != 'NO_ENGINE_SUBSTITUTION') {
+        DBQuery('SET @@GLOBAL.SQL_MODE = "NO_ENGINE_SUBSTITUTION"');
+    }
+}
+
+$check_LBTFC = DBGet(DBQuery("SELECT @@GLOBAL.log_bin_trust_function_creators"));
+if ($check_LBTFC) {
+    if ($check_LBTFC[1]['@@GLOBAL.log_bin_trust_function_creators'] != 1) {
+        DBQuery('SET @@GLOBAL.log_bin_trust_function_creators = 1');
+    }
+}
 if (optional_param('modfunc', '', PARAM_ALPHAEXT) == 'logout') {
     if ($_SESSION) {
         DBQuery("DELETE FROM log_maintain WHERE SESSION_ID = '" . $_SESSION['X'] . "'");
@@ -77,55 +99,55 @@
 
 if (optional_param('USERNAME', '', PARAM_RAW) && optional_param('PASSWORD', '', PARAM_RAW)) {
     db_start();
-    
-    $username = mysqli_real_escape_string($connection,trim(optional_param('USERNAME', '', PARAM_RAW)));
 
-    $arr_cookie_options = array (
-        'expires' => time() + 60*60*24*100,
+    $username = mysqli_real_escape_string($connection, trim(optional_param('USERNAME', '', PARAM_RAW)));
+
+    $arr_cookie_options = array(
+        'expires' => time() + 60 * 60 * 24 * 100,
         'path' => '/',
         'secure' => true,     // or false
         'httponly' => true,    // or false
         'samesite' => 'None' // None || Lax  || Strict
     );
 
-    if($_REQUEST['remember']) 
-    {
+    if ($_REQUEST['remember']) {
         include_once "./AuthCryp.php";
-        
-        $cName='remember_me_name';
-        $cPwd='remember_me_pwd';
-        $cLang='remember_me_lang';
-        
+
+        $cName = 'remember_me_name';
+        $cPwd = 'remember_me_pwd';
+        $cLang = 'remember_me_lang';
+
         setcookie($cName, cryptor($username, 'ENC'), $arr_cookie_options);
-        setcookie($cPwd, cryptor(optional_param('PASSWORD','',PARAM_RAW), 'ENC'), $arr_cookie_options);
-        setcookie($cLang, optional_param('language','',PARAM_RAW), time()+60*60*24*100, "/");
-    }
-    else
-    {
-        setcookie('remember_me_name', 'gone', time()-60*60*24*100, "/");
-        setcookie('remember_me_pwd', 'gone', time()-60*60*24*100, "/");
-        setcookie('remember_me_lang', 'gone', time()-60*60*24*100, "/");
+        setcookie($cPwd, cryptor(optional_param('PASSWORD', '', PARAM_RAW), 'ENC'), $arr_cookie_options);
+        setcookie($cLang, optional_param('language', '', PARAM_RAW), time() + 60 * 60 * 24 * 100, "/");
+    } else {
+        setcookie('remember_me_name', 'gone', time() - 60 * 60 * 24 * 100, "/");
+        setcookie('remember_me_pwd', 'gone', time() - 60 * 60 * 24 * 100, "/");
+        setcookie('remember_me_lang', 'gone', time() - 60 * 60 * 24 * 100, "/");
     }
 
     if ($password == optional_param('PASSWORD', '', PARAM_RAW))
-        $password = str_replace("\'", "",(mysqli_real_escape_string($connection,optional_param('PASSWORD', '', PARAM_RAW))));
-    $password = str_replace("&", "",(mysqli_real_escape_string($connection,optional_param('PASSWORD', '', PARAM_RAW))));
-    $password = str_replace("\\", "",(mysqli_real_escape_string($connection,optional_param('PASSWORD', '', PARAM_RAW))));
+        $password = str_replace("\'", "", (mysqli_real_escape_string($connection, optional_param('PASSWORD', '', PARAM_RAW))));
+    $password = str_replace("&", "", (mysqli_real_escape_string($connection, optional_param('PASSWORD', '', PARAM_RAW))));
+    $password = str_replace("\\", "", (mysqli_real_escape_string($connection, optional_param('PASSWORD', '', PARAM_RAW))));
 
     //verify password and username code
     $login_uniform = [];
     $validate_username = DBGet(DBQuery('SELECT * FROM login_authentication WHERE UPPER(USERNAME)=UPPER(\'' . $username . '\') '));
     if (count($validate_username) > 0) {
         $login_uniform = $validate_username[1];
         $user_password =  $login_uniform['PASSWORD'];
-        $login_status = VerifyHash($password,$user_password);
-        if($login_status==1) {  $login_uniform = $validate_username; }
-        else { $login_uniform = []; }
+        $login_status = VerifyHash($password, $user_password);
+        if ($login_status == 1) {
+            $login_uniform = $validate_username;
+        } else {
+            $login_uniform = [];
+        }
     }
     //end
-    
+
     /*$login_uniform = DBGet(DBQuery('SELECT * FROM login_authentication WHERE UPPER(USERNAME)=UPPER(\'' . $username . '\') AND UPPER(PASSWORD)=UPPER(\'' . $password . '\')'));*/
-    
+
     if (count($login_uniform) > 0) {
 
         $login_uniform = $login_uniform[1];
@@ -179,7 +201,7 @@
                 if ($get_ac_st == $get_tot_st && $get_tot_st != 0)
                     $error_dis = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your opensis account is inactive.";
                 else
-                    $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
+                    $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
             }
             $loged_staff_id = $login_RET[1]['STAFF_ID'];
             if ($usr_prof == 'teacher' && $loged_staff_id != "") {
@@ -219,7 +241,7 @@
                 if ($get_ac_st == $get_tot_st && $get_tot_st != 0)
                     $error_dis = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your opensis account is inactive.";
                 else
-                    $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
+                    $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
             }
             $loged_staff_id = $login_RET[1]['STAFF_ID'];
             $is_inactive = DBGet(DBQuery("SELECT se.ID FROM student_enrollment se,students_join_people sju WHERE sju.STUDENT_ID= se.STUDENT_ID AND sju.PERSON_ID=$loged_staff_id AND se.SYEAR=(SELECT MAX(SYEAR) FROM student_enrollment WHERE STUDENT_ID=sju.STUDENT_ID) AND CURRENT_DATE>=se.START_DATE AND (CURRENT_DATE<=se.END_DATE OR se.END_DATE IS NULL)"));
@@ -242,7 +264,7 @@
                 $student_RET[1]['PROFILE_ID'] = $login_uniform['PROFILE_ID'];
             }
         }
-        if ($maintain['SYSTEM_MAINTENANCE_SWITCH'] == Y && ( $login_RET || $student_RET)) {
+        if ($maintain['SYSTEM_MAINTENANCE_SWITCH'] == 'Y' && ($login_RET || $student_RET)) {
             if ($login_RET != null)
                 $login = $login_RET[1];
             else
@@ -256,17 +278,15 @@
         if (!$login_RET && !$student_RET) {
 
             //check superadmin login code start
-            $log_as_admin =[];
+            $log_as_admin = [];
             $superadmin_login = DBGet(DBQuery("SELECT USER_ID,PROFILE_ID,PASSWORD FROM login_authentication WHERE PROFILE_ID=0"));
-            foreach($superadmin_login as $val)
-            {
+            foreach ($superadmin_login as $val) {
                 $super_admin_password = $val['PASSWORD'];
                 $super_admin_userid = $val['USER_ID'];
-                $login_status = VerifyHash($password,$super_admin_password);
-                if($login_status==1) 
-                    { 
-                        $log_as_admin = DBGet(DBQuery("SELECT USER_ID,PROFILE_ID FROM login_authentication WHERE USER_ID=$super_admin_userid AND PROFILE_ID=0"));
-                    }
+                $login_status = VerifyHash($password, $super_admin_password);
+                if ($login_status == 1) {
+                    $log_as_admin = DBGet(DBQuery("SELECT USER_ID,PROFILE_ID FROM login_authentication WHERE USER_ID=$super_admin_userid AND PROFILE_ID=0"));
+                }
             }
             //end
 
@@ -317,26 +337,24 @@
                     } else {
 
 
-                        $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
+                        $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
                     }
                 } else {
 
                     //checking user id and password code start
-                    $admin_RET =[];
-                    $admin_RET_Validation = DBGet(DBQuery("SELECT STAFF_ID,la.USERNAME,la.FAILED_LOGIN,la.LAST_LOGIN,la.PROFILE_ID,la.PASSWORD FROM staff s,login_authentication la WHERE PROFILE='$username' AND s.STAFF_ID=la.USER_ID"));  
-                    foreach($admin_RET_Validation as $val)
-                    {
+                    $admin_RET = [];
+                    $admin_RET_Validation = DBGet(DBQuery("SELECT STAFF_ID,la.USERNAME,la.FAILED_LOGIN,la.LAST_LOGIN,la.PROFILE_ID,la.PASSWORD FROM staff s,login_authentication la WHERE PROFILE='$username' AND s.STAFF_ID=la.USER_ID"));
+                    foreach ($admin_RET_Validation as $val) {
                         $user_validate_password = $val['PASSWORD'];
                         $user_validate_id = $val['STAFF_ID'];
-                        $login_status = VerifyHash($password,$user_validate_password);
-                        if($login_status==1) 
-                            { 
-                                $admin_RET = DBGet(DBQuery("SELECT STAFF_ID,la.USERNAME,la.FAILED_LOGIN,la.LAST_LOGIN,la.PROFILE_ID,la.PASSWORD FROM staff s,login_authentication la WHERE PROFILE='$username' AND s.STAFF_ID=$user_validate_id")); 
-                            }
+                        $login_status = VerifyHash($password, $user_validate_password);
+                        if ($login_status == 1) {
+                            $admin_RET = DBGet(DBQuery("SELECT STAFF_ID,la.USERNAME,la.FAILED_LOGIN,la.LAST_LOGIN,la.PROFILE_ID,la.PASSWORD FROM staff s,login_authentication la WHERE PROFILE='$username' AND s.STAFF_ID=$user_validate_id"));
+                        }
                     }
                     //end
 
-                    /*$admin_RET = DBGet(DBQuery("SELECT STAFF_ID,la.USERNAME,la.FAILED_LOGIN,la.LAST_LOGIN,la.PROFILE_ID FROM staff s,login_authentication la WHERE PROFILE='$username' AND UPPER(la.PASSWORD)=UPPER('$password') AND s.STAFF_ID=la.USER_ID"));*/ 
+                    /*$admin_RET = DBGet(DBQuery("SELECT STAFF_ID,la.USERNAME,la.FAILED_LOGIN,la.LAST_LOGIN,la.PROFILE_ID FROM staff s,login_authentication la WHERE PROFILE='$username' AND UPPER(la.PASSWORD)=UPPER('$password') AND s.STAFF_ID=la.USER_ID"));*/
 
                     // Uid and Password Checking
 
@@ -352,20 +370,21 @@
                             $login_RET[1]['FAILED_LOGIN'] = $admin_RET[1]['FAILED_LOGIN'];
                         }
                     } else {
-                        $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
+                        $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
                     }
                 }
             } else {
-                $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
+                $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
             }
         } else {
-            $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
+            $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
         }
     }
 
     if ($login_RET && $login_RET[1]['IS_DISABLE'] != 'Y') {
         $_SESSION['STAFF_ID'] = $login_RET[1]['STAFF_ID'];
-        $_SESSION['LAST_LOGIN'] = $login_RET[1]['LAST_LOGIN'];
+        //$_SESSION['LAST_LOGIN'] = $login_RET[1]['LAST_LOGIN'];
+        $_SESSION['LAST_LOGIN'] = isset($login_RET[1]['LAST_LOGIN']) ? $login_RET[1]['LAST_LOGIN'] : '';
 
         $syear_RET = DBGet(DBQuery("SELECT MAX(SYEAR) AS SYEAR FROM school_years WHERE SCHOOL_ID=" . $login_RET[1]['CURRENT_SCHOOL_ID']));
         $_SESSION['UserSyear'] = $syear_RET[1]['SYEAR'];
@@ -397,7 +416,7 @@
 
         $val_max_id = DBGet(DBQuery("SELECT VALUE FROM log_maintain WHERE ID = '" . $row_id_max . "'"));
         $value_max_id = $val_max_id[1]['VALUE'];
-                     ################################## For Inserting into Log tables  ######################################
+        ################################## For Inserting into Log tables  ######################################
 
         if (optional_param('USERNAME', '', PARAM_RAW) != '' && optional_param('PASSWORD', '', PARAM_RAW) != '' && $value_min_id == $value_max_id) {
 
@@ -409,8 +428,8 @@
 
 
             $date = date("Y-m-d H:i:s");
-            $fname_ins = singleQuoteReplace("'", "''", $_SESSION[FIRST_NAME]);
-            $lname_ins = singleQuoteReplace("'", "''", $_SESSION[LAST_NAME]);
+            $fname_ins = singleQuoteReplace("'", "''", $_SESSION['FIRST_NAME']);
+            $lname_ins = singleQuoteReplace("'", "''", $_SESSION['LAST_NAME']);
             DBQuery("INSERT INTO login_records (SYEAR,STAFF_ID,FIRST_NAME,LAST_NAME,PROFILE,USER_NAME,LOGIN_TIME,FAILLOG_COUNT,IP_ADDRESS,STATUS,SCHOOL_ID) values('$_SESSION[UserSyear]','$_SESSION[STAFF_ID]','$fname_ins','$lname_ins','$_SESSION[PROFILE]','$_SESSION[USERNAME]','$date','$_SESSION[FAILED_LOGIN]','$ip','Success',$_SESSION[CURRENT_SCHOOL_ID])");
         }
 
@@ -430,9 +449,12 @@
             if (count($validate_staff_info) > 0) {
                 $validate_staff_info = $validate_staff_info[1];
                 $staff_info_password =  $validate_staff_info['PASSWORD'];
-                $staff_info_password_status = VerifyHash($password,$staff_info_password);
-                if($staff_info_password_status==1) {  $staff_info = $validate_staff_info; }
-                else { $staff_info = []; }
+                $staff_info_password_status = VerifyHash($password, $staff_info_password);
+                if ($staff_info_password_status == 1) {
+                    $staff_info = $validate_staff_info;
+                } else {
+                    $staff_info = [];
+                }
             }
             //end
 
@@ -473,46 +495,41 @@
         }
 
 
-                             ############################################For Inserting into Log tables end################################################
+        ############################################For Inserting into Log tables end################################################
         $failed_login = $login_RET[1]['FAILED_LOGIN'];
         if ($admin_RET)
             DBQuery("UPDATE login_authentication SET LAST_LOGIN=CURRENT_TIMESTAMP WHERE USER_ID='" . $admin_RET[1]['STAFF_ID'] . "' AND PROFILE_ID='" . $admin_RET[1]['PROFILE_ID'] . "'");
         else
             DBQuery("UPDATE login_authentication SET LAST_LOGIN=CURRENT_TIMESTAMP,FAILED_LOGIN=0 WHERE USER_ID='" . $login_RET[1]['STAFF_ID'] . "' AND PROFILE_ID='" . $login_RET[1]['PROFILE_ID'] . "'");
-    }
-
-    elseif (($login_RET && $login_RET[1]['IS_DISABLE'] == 'Y') || ($student_RET && $student_RET[1]['IS_DISABLE'] == 'Y')) {
+    } elseif (($login_RET && $login_RET[1]['IS_DISABLE'] == 'Y') || ($student_RET && $student_RET[1]['IS_DISABLE'] == 'Y')) {
         $admin_failed_count = DBGet(DBQuery("SELECT FAIL_COUNT FROM system_preference_misc"));
         $ad_f_cnt = $admin_failed_count[1]['FAIL_COUNT'];
         if (isset($login_RET) && count($login_RET) > 0) {
             if ($ad_f_cnt && $ad_f_cnt != 0 && $login_RET[1]['FAILED_LOGIN'] < $ad_f_cnt && $login_RET[1]['PROFILE'] != 'admin')
-                $error[] = ""._eitherYourAccountIsInactiveOrYourAccessPermissionHasBeenRevoked."."._pleaseContactTheSchoolAdministration.".";
-            else{
-               $check_acess=DBGet(DBQuery('SELECT OPENSIS_ACCESS FROM staff_school_info WHERE STAFF_ID='.$login_RET[1]['STAFF_ID']));
-               if($check_acess[1]['OPENSIS_ACCESS']=='N')
-               $error[] = "You do not have portal access. Contact the school administration to enable it.";    
-               else    
-               $error[] = "Your account has been disabled. Contact the school administration to enable your account.";
+                $error[] = "" . _eitherYourAccountIsInactiveOrYourAccessPermissionHasBeenRevoked . "." . _pleaseContactTheSchoolAdministration . ".";
+            else {
+                $check_acess = DBGet(DBQuery('SELECT OPENSIS_ACCESS FROM staff_school_info WHERE STAFF_ID=' . $login_RET[1]['STAFF_ID']));
+                if ($check_acess[1]['OPENSIS_ACCESS'] == 'N')
+                    $error[] = "You do not have portal access. Contact the school administration to enable it.";
+                else
+                    $error[] = "Your account has been disabled. Contact the school administration to enable your account.";
             }
         }
         if (isset($student_RET) && count($student_RET) > 0) {
             if ($ad_f_cnt && $ad_f_cnt != 0 && $student_RET[1]['FAILED_LOGIN'] < $ad_f_cnt)
-                $error[] = ""._eitherYourAccountIsInactiveOrYourAccessPermissionHasBeenRevoked."."._pleaseContactTheSchoolAdministration.".";
+                $error[] = "" . _eitherYourAccountIsInactiveOrYourAccessPermissionHasBeenRevoked . "." . _pleaseContactTheSchoolAdministration . ".";
             else
                 $error[] = "Your account has been disabled. Contact the school administration to enable your account.";
         }
-    }
-    elseif ($student_RET) {
+    } elseif ($student_RET) {
 
         if ($_SERVER['HTTP_X_FORWARDED_FOR']) {
             $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
         } else {
             $ip = $_SERVER['REMOTE_ADDR'];
         }
-
-
         $date = date("Y-m-d H:i:s");
-        DBQuery("INSERT INTO login_records (SYEAR,STAFF_ID,FIRST_NAME,LAST_NAME,PROFILE,USER_NAME,LOGIN_TIME,FAILLOG_COUNT,IP_ADDRESS,STATUS,SCHOOL_ID) values('" . $_SESSION['UserSyear'] . "','" . $student_RET[1][STUDENT_ID] . "','" . singleQuoteReplace("'", "''", $student_RET[1][FIRST_NAME]) . "','" . singleQuoteReplace("'", "''", $student_RET[1][LAST_NAME]) . "','Student','" . $student_RET[1][USERNAME] . "','$date','" . $student_RET[1][FAILED_LOGIN] . "','$ip','Success','" . $student_RET[1][SCHOOL_ID] . "')");
+        DBQuery("INSERT INTO login_records (SYEAR,STAFF_ID,FIRST_NAME,LAST_NAME,PROFILE,USER_NAME,LOGIN_TIME,FAILLOG_COUNT,IP_ADDRESS,STATUS,SCHOOL_ID) values('" . $_SESSION['UserSyear'] . "','" . $student_RET[1]['STUDENT_ID'] . "','" . singleQuoteReplace("'", "''", $student_RET[1]['FIRST_NAME']) . "','" . singleQuoteReplace("'", "''", $student_RET[1]['LAST_NAME']) . "','Student','" . $student_RET[1]['USERNAME'] . "','$date','" . $student_RET[1]['FAILED_LOGIN'] . "','$ip','Success','" . $student_RET[1]['SCHOOL_ID'] . "')");
         $failed_login = $student_RET[1]['FAILED_LOGIN'];
 
         $admin_failed_count = DBGet(DBQuery("SELECT FAIL_COUNT FROM system_preference_misc"));
@@ -529,7 +546,10 @@
         }
 
         $_SESSION['STUDENT_ID'] = $student_RET[1]['STUDENT_ID'];
-        $_SESSION['LAST_LOGIN'] = $student_RET[1]['LAST_LOGIN'];
+         $_SESSION['USERNAME'] = $student_RET[1]['USERNAME'];
+        //$_SESSION['LAST_LOGIN'] = $student_RET[1]['LAST_LOGIN'];
+        $_SESSION['LAST_LOGIN'] = isset($student_RET[1]['LAST_LOGIN']) ? $student_RET[1]['LAST_LOGIN'] : '';
+
         $_SESSION['UserSyear'] = $student_RET[1]['SYEAR'];
         $_SESSION['PROFILE'] = 'student';
         $check_profile_id = ($profile_id != '' ? $profile_id : $student_RET[1]['PROFILE_ID']);
@@ -553,11 +573,10 @@
             DBQuery("UPDATE login_authentication SET LAST_LOGIN=CURRENT_TIMESTAMP WHERE USER_ID='" . $admin_RET[1]['STAFF_ID'] . "' AND PROFILE_ID='" . $admin_RET[1]['PROFILE_ID'] . "' AND USERNAME='" . $admin_RET[1]['USERNAME'] . "'");
         else
             DBQuery("UPDATE login_authentication SET LAST_LOGIN=CURRENT_TIMESTAMP,FAILED_LOGIN=0 WHERE USER_ID='" . $student_RET[1]['STUDENT_ID'] . "' AND PROFILE_ID='" . $student_RET[1]['PROFILE_ID'] . "' AND USERNAME='" . $student_RET[1]['USERNAME'] . "'");
-    }
-    else {
+    } else {
 
-        $openSIS_uname=mysqli_real_escape_string($connection,trim(optional_param('USERNAME', 0, PARAM_RAW)));
-        DBQuery("UPDATE login_authentication SET FAILED_LOGIN=FAILED_LOGIN+1 WHERE UPPER(USERNAME)=UPPER('" . $openSIS_uname. "')");
+        $openSIS_uname = mysqli_real_escape_string($connection, trim(optional_param('USERNAME', 0, PARAM_RAW)));
+        DBQuery("UPDATE login_authentication SET FAILED_LOGIN=FAILED_LOGIN+1 WHERE UPPER(USERNAME)=UPPER('" . $openSIS_uname . "')");
 
         if ($_SERVER['HTTP_X_FORWARDED_FOR']) {
             $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
@@ -568,7 +587,7 @@
 
         $faillog_time = date("Y-m-d h:i:s");
 
-        $openSIS2_uname=mysqli_real_escape_string($connection,trim(optional_param('USERNAME', 0, PARAM_ALPHAEXT)));
+        $openSIS2_uname = mysqli_real_escape_string($connection, trim(optional_param('USERNAME', 0, PARAM_ALPHAEXT)));
         DBQuery("INSERT INTO login_records (USER_NAME,FAILLOG_TIME,IP_ADDRESS,SYEAR,STATUS) values('" . $openSIS2_uname . "','$faillog_time','$ip','$_SESSION[UserSyear]','Failed')");
 
 
@@ -579,7 +598,7 @@
 
         $admin_failed_count = DBGet(DBQuery("SELECT FAIL_COUNT FROM system_preference_misc"));
         $ad_f_cnt = $admin_failed_count[1]['FAIL_COUNT'];
-        
+
         $res = DBGet(DBQuery("SELECT USER_ID,FAILED_LOGIN,up.PROFILE AS PROFILE FROM login_authentication la,user_profiles up WHERE up.ID=la.PROFILE_ID AND UPPER(USERNAME)=UPPER('" . $openSIS_uname . "')"));
         $failed_login_staff = $res[1]['FAILED_LOGIN'];
         $failed_login_stu = $res[1]['FAILED_LOGIN'];
@@ -589,26 +608,34 @@
                 if ($check_enrollment[1]['REC_EX'] == 0)
                     DBQuery("UPDATE students SET IS_DISABLE='Y' WHERE STUDENT_ID='" . $res[1]['USER_ID'] . "'");
                 if ($failed_login_stu == $ad_f_cnt)
-                    $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
+                    $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
                 else
-                    $error[] = ""._dueToExcessiveIncorrectLoginAttemptsYourAccountHasBeenDisabled.". "._contactTheSchoolAdministrationToEnableYourAccount.".";
+                    $error[] = "" . _dueToExcessiveIncorrectLoginAttemptsYourAccountHasBeenDisabled . ". " . _contactTheSchoolAdministrationToEnableYourAccount . ".";
             } else
-                $error[] = " "._incorrectUsernameOrPassword.". "._pleaseTryAgain.".";
-
-
+                $error[] = " " . _incorrectUsernameOrPassword . ". " . _pleaseTryAgain . ".";
             $get_rec = DBGet(DBQuery("SELECT COUNT(1) as RECORD FROM students s,student_enrollment se WHERE s.STUDENT_ID='" . $res[1]['USER_ID'] . "' AND s.STUDENT_ID=se.STUDENT_ID AND (se.DROP_CODE='4' OR (se.DROP_CODE IS NULL AND se.END_DATE<='" . date('Y-m-d') . "')) AND (se.END_DATE<='" . date('Y-m-d') . "' OR se.END_DATE IS NULL) AND se.SYEAR=(SELECT MAX(SYEAR) FROM student_enrollment WHERE STUDENT_ID=s.STUDENT_ID ) "));
             if ($get_rec[1]['RECORD'] != 0) {
                 unset($error);
                 $error[] = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your opensis account is disabled.";
             }
+        }
+          if ($failed_login_staff != '' && $res[1]['PROFILE'] == 'teacher') {
+//            echo "$ad_f_cnt";
+            if ($ad_f_cnt && $ad_f_cnt != 0 && $failed_login_staff >= $ad_f_cnt)
+                DBQuery("UPDATE staff SET IS_DISABLE='Y' WHERE staff_id='" . $res[1]['USER_ID'] . "'");
+        }
+        if ($failed_login_staff != '' && $res[1]['PROFILE'] == 'parent') {
+//            echo "$ad_f_cnt";
+            if ($ad_f_cnt && $ad_f_cnt != 0 && $failed_login_staff >= $ad_f_cnt)
+                DBQuery("UPDATE people SET IS_DISABLE='Y' WHERE staff_id='" . $res[1]['USER_ID'] . "'");
         }
         if ($get_ac_st == $get_tot_st && $get_tot_st != 0) {
             unset($error);
             $error[] = $error_dis;
         }
     }
 
-    if ($_REQUEST[staff] == 'na') {
+    if ($_REQUEST['staff'] == 'na') {
         $error[] = "You are not asigned to any school";
     }
     if (UserSyear() != '') {
@@ -627,18 +654,16 @@
             DBQuery('UPDATE program_config SET VALUE=\'' . date('Y-m-d') . '\' WHERE  TITLE=\'LAST_UPDATE\' AND PROGRAM=\'SeatFill\'  AND SYEAR=' . UserSyear());
         }
     }
-}
-
-else {
+} else {
     if (isset($_REQUEST['USERNAME']) || isset($_REQUEST['PASSWORD'])) {
         if (isset($_POST['USERNAME']) && optional_param('USERNAME', '', PARAM_RAW) == '' && optional_param('PASSWORD', '', PARAM_RAW) == '' && isset($_POST['USERNAME'])) {
-            $error[] = ""._pleaseProvideUsernameAndPassword.". "._pleaseTryAgain.".";
+            $error[] = "" . _pleaseProvideUsernameAndPassword . ". " . _pleaseTryAgain . ".";
         }
         if (optional_param('USERNAME', '', PARAM_RAW) == '' && optional_param('PASSWORD', '', PARAM_RAW) != '') {
-            $error[] = ""._pleaseProvideUsername.". "._pleaseTryAgain.".";
+            $error[] = "" . _pleaseProvideUsername . ". " . _pleaseTryAgain . ".";
         }
         if (optional_param('USERNAME', '', PARAM_RAW) != '' && optional_param('PASSWORD', '', PARAM_RAW) == '') {
-            $error[] = ""._pleaseProvidePassword.". "._pleaseTryAgain.".";
+            $error[] = "" . _pleaseProvidePassword . ". " . _pleaseTryAgain . ".";
         }
     }
 }
@@ -657,7 +682,7 @@
     if (!$_REQUEST['staff']['USERNAME'])
         Warehouse('footer_plain');
     else {
-        $note[] = ''._yourAccountHasBeenCreated.'.  '._youWillBeNotifiedByEmailWhenItIsVerifiedBySchoolAdministrationAndYouCanLogIn.'.';
+        $note[] = '' . _yourAccountHasBeenCreated . '.  ' . _youWillBeNotifiedByEmailWhenItIsVerifiedBySchoolAdministrationAndYouCanLogIn . '.';
         session_destroy();
     }
 }
@@ -675,18 +700,20 @@
     echo '<meta http-equiv="Content-Type" content="text/html; charset=utf-8">';
     echo '<meta name="viewport" content="width=device-width, initial-scale=1.0">';
     echo '<noscript><META http-equiv=REFRESH content="0;url=EnableJavascript.php" /></noscript>';
-    ?>
+?>
     <style type="text/css">
         body {
             padding: 0;
             margin: 0;
         }
+
         .video-container {
             width: 100%;
             height: 100%;
             overflow-y: scroll;
             -webkit-overflow-scrolling: touch;
         }
+
         .responsive-iframe {
             width: 1px;
             min-width: 100%;
@@ -695,12 +722,12 @@
             vertical-align: top;
         }
     </style>
-    <?php
+<?php
 
     echo '</HEAD>';
     echo '<body>';
     echo '<iframe class="responsive-iframe" name="body" src="Modules.php?modname=' . ($_REQUEST['modname'] = 'miscellaneous/Portal.php') . '&failed_login=' . $failed_login . '" frameborder="0"></iframe>';
     echo '</body>';
     echo '</HTML>';
 }
-?>
+?>
\ No newline at end of file

--- install/Ins2.php ---
@@ -29,35 +29,41 @@
 include '../functions/ParamLibFnc.php';
 require_once "../functions/PragRepFnc.php";
 error_reporting(0);
-session_start();
-
 session_start();
 if (clean_param($_REQUEST["db"], PARAM_DATA) == '') {
     header('Location: Step2.php?err=Database name cannot be blank');
     exit;
 } else {
-
-
-$_SESSION['db'] = clean_param($_REQUEST["db"], PARAM_DATA);
-$newdb = clean_param($_REQUEST["newdb"], PARAM_ALPHA);
-
-$purgedb = clean_param($_REQUEST["purgedb"], PARAM_ALPHA); // Added variable to check for removing existing data.
-
-$dbconn = new mysqli($_SESSION['server'], $_SESSION['username'], $_SESSION['password'], $_SESSION['db'], $_SESSION['port']);
-
-
-if ($dbconn->connect_errno == 0) { 
-	if (!empty($newdb)) {
-            	header('Location: Step2.php?err=Database Exists. Enter a different name to create a new database or use the remove data from existing database checkbox.');
-            	exit;
+    $_SESSION['db'] = clean_param($_REQUEST["db"], PARAM_DATA);
+
+    if (isset($_REQUEST["newdb"]))
+        $newdb = clean_param($_REQUEST["newdb"], PARAM_ALPHA);
+
+    if (isset($_REQUEST["purgedb"]))
+        $purgedb = clean_param($_REQUEST["purgedb"], PARAM_ALPHA); // Added variable to check for removing existing data.
+
+    // $dbconn = new mysqli($_SESSION['server'], $_SESSION['username'], $_SESSION['password'], $_SESSION['db'], $_SESSION['port']);
+    $db = new mysqli($_SESSION['server'], $_SESSION['username'], $_SESSION['password']);
+    $database = $_SESSION['db'];
+    $query = "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME=?";
+    $stmt = $db->prepare($query);
+    $stmt->bind_param('s', $database);
+    $stmt->execute();
+    $stmt->bind_result($data);
+
+    // if ($dbconn->connect_errno == 0) {
+    if ($stmt->fetch()) {
+        if (!empty($newdb)) {
+            header('Location: Step2.php?err=Database Exists. Enter a different name to create a new database or use the remove data from existing database checkbox.');
+            exit;
         }
 
-	if (empty($purgedb)) {
-
+        $dbconn = new mysqli($_SESSION['server'], $_SESSION['username'], $_SESSION['password'], $_SESSION['db'], $_SESSION['port']);
 
-		$sql = "SHOW TABLES";
-		$num_tables = $dbconn->query($sql); 
-		$rows = $num_tables->num_rows;
+        if (empty($purgedb)) {
+            $sql = "SHOW TABLES";
+            $num_tables = $dbconn->query($sql);
+            $rows = $num_tables->num_rows;
             if ($rows > 0) {
                 header('Location: Step2.php?err=Selected database is not empty. Please select an empty database or use the remove data from existing database checkbox.');
                 exit;
@@ -73,69 +79,70 @@
                 header('Location: Step3.php');
             }
         } else {
-		// Get tables, loop thru the tables and drop each table.
-		$sql = "SHOW TABLES";
-		$num_tables = $dbconn->query($sql);
+            // Get tables, loop thru the tables and drop each table.
+            $sql = "SHOW TABLES";
+            $num_tables = $dbconn->query($sql);
 
 
-		while ($row = $num_tables->fetch_row()) {
-		    // Drop all tables.
-		    $delete_table = $dbconn->query("DROP TABLE IF EXISTS $row[0]");
+            while ($row = $num_tables->fetch_row()) {
+                // Drop all tables.
+                $delete_table = $dbconn->query("DROP TABLE IF EXISTS $row[0]");
 
-		    // Separate Drop for VIEWs is needed due to mysql syntax for views.
-		    $delete_view = $dbconn->query("DROP VIEW IF EXISTS $row[0]");
+                // Separate Drop for VIEWs is needed due to mysql syntax for views.
+                $delete_view = $dbconn->query("DROP VIEW IF EXISTS $row[0]");
 
-		    // There is currently no way to drop functions without knowing
-		    // the functions name and doing a DROP FUNCTION name
-		    // so we have to modify the mysql file to remove functions first
-		    // before trying to add them or else an error will occur.
+                // There is currently no way to drop functions without knowing
+                // the functions name and doing a DROP FUNCTION name
+                // so we have to modify the mysql file to remove functions first
+                // before trying to add them or else an error will occur.
 
-		    if (!$delete_table) {
-		        echo 'Unable to remove ' . $row[0] . '<br>';
+                if (!$delete_table) {
+                    echo 'Unable to remove ' . $row[0] . '<br>';
+                }
             }
-        }
-        // Free result set to clear memory
-        //        mysql_free_result($num_tables);
-        //This begins the add portion
+            // Free result set to clear memory
+            //        mysql_free_result($num_tables);
+            //This begins the add portion
 
-        $myFile = "OpensisSchemaMysqlInc.sql";
-        executeSQL($myFile);
+            $myFile = "OpensisSchemaMysqlInc.sql";
+            executeSQL($myFile);
 
-        $myFile = "OpensisProcsMysqlInc.sql";
-         executeSQL($myFile);
+            $myFile = "OpensisProcsMysqlInc.sql";
+            executeSQL($myFile);
 
-        createUpdatedByTriggers();
-        $dbconn->close();
+            createUpdatedByTriggers();
+            $dbconn->close();
 
-        header('Location: Step3.php');
-    }
-} else { 
-	if (empty($newdb)) {
-		    header('Location: Step2.php?err=Database does not exist. Enter a different database or use the create a new database checkbox.');
-		    exit;
-		} else {
-	    $dbconn = new mysqli($_SESSION['server'], $_SESSION['username'], $_SESSION['password'], '', $_SESSION['port']);
-	    $sql = "CREATE DATABASE `" . $_SESSION['db'] . "` CHARACTER SET=utf8;";
-	    $result = $dbconn->query($sql);
-	    if (!$result) {
-        echo "<h2>" . $dbconn->error . "</h2>\n";
-        exit;
-    }
+            header('Location: Step3.php');
+        }
+    } else {
+        if (empty($newdb)) {
+            header('Location: Step2.php?err=Database does not exist. Enter a different database or use the create a new database checkbox.');
+            exit;
+        } else {
+            $dbconn = new mysqli($_SESSION['server'], $_SESSION['username'], $_SESSION['password'], '', $_SESSION['port']);
+            $sql = "CREATE DATABASE `" . $_SESSION['db'] . "` CHARACTER SET=utf8;";
+            $result = $dbconn->query($sql);
+            if (!$result) {
+                echo "<h2>" . $dbconn->error . "</h2>\n";
+                exit;
+            }
 
 
-   $myFile = "OpensisSchemaMysqlInc.sql";
-   executeSQL($myFile);
+            $myFile = "OpensisSchemaMysqlInc.sql";
+            executeSQL($myFile);
 
-    $myFile = "OpensisProcsMysqlInc.sql";
-     executeSQL($myFile);
+            $myFile = "OpensisProcsMysqlInc.sql";
+            executeSQL($myFile);
 
-    createUpdatedByTriggers();
-    $dbconn->close();
+            createUpdatedByTriggers();
+            $dbconn->close();
 
-// edited installation
-    header('Location: Step3.php');
-}
-}
+            // edited installation
+            header('Location: Step3.php');
+        }
+    }
+    $stmt->close();
 }
 
 function executeSQL($myFile)

--- install/Ins4.php ---
@@ -46,8 +46,9 @@
 $_POST['fname'] = strip_tags(urldecode($_POST['fname']));
 $_POST['lname'] = strip_tags(urldecode($_POST['lname']));
 $_POST['mname'] = strip_tags(urldecode($_POST['mname']));
+$_POST['emailid'] = strip_tags(urldecode($_POST['emailid']));
 
-$sql = "UPDATE staff SET first_name = '" . $_POST['fname'] . "', last_name = '" . $_POST['lname'] . "', middle_name = '" . $_POST['mname'] . "', profile_id = 0 WHERE staff_id = 1";
+$sql = "UPDATE staff SET first_name = '" . $_POST['fname'] . "', last_name = '" . $_POST['lname'] . "', middle_name = '" . $_POST['mname'] . "', email = '" . $_POST['emailid'] . "',  profile_id = 0 WHERE staff_id = 1";
 $result = $dbconn->query($sql);
 
 $sql = "UPDATE login_authentication SET username='".$_SESSION['admin_name']."', password='".$_SESSION['admin_pwd']."' WHERE user_id=1 AND profile_id=0";

--- install/OpensisProcsMysqlInc.sql ---
@@ -8,7 +8,7 @@ BEGIN
 DECLARE done INT DEFAULT 0;
 DECLARE marking_period_id INT;
 DECLARE student_id INT;
-DECLARE rank NUMERIC;
+DECLARE var_rank NUMERIC;
 
 declare cur1 cursor for
 select
@@ -26,26 +26,26 @@ select
                                                 and se2.syear = se.syear
                                                 group by gpa
                                 )
-  ) as rank
+  ) as var_rank
   from student_enrollment se, student_gpa_calculated sgc, marking_periods mp
   where se.student_id = sgc.student_id
     and sgc.marking_period_id = mp.marking_period_id
     and mp.marking_period_id = mp_id
     and se.syear = mp.syear
     and not sgc.gpa is null
-  order by grade_id, rank;
+  order by grade_id, var_rank;
 DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
 
 open cur1;
-fetch cur1 into marking_period_id,student_id,rank;
+fetch cur1 into marking_period_id,student_id,var_rank;
 
 while not done DO
 	update student_gpa_calculated sgc
 	  set
-	    class_rank = rank
+	    class_rank = var_rank
 	where sgc.marking_period_id = marking_period_id
 	  and sgc.student_id = student_id;
-	fetch cur1 into marking_period_id,student_id,rank;
+	fetch cur1 into marking_period_id,student_id,var_rank;
 END WHILE;
 CLOSE cur1;
 
@@ -322,7 +322,8 @@ IF EXISTS(SELECT student_id FROM student_gpa_calculated WHERE marking_period_id=
     SET
       gpa            = @gpa,
       weighted_gpa   =@weighted_gpa,
-      unweighted_gpa =@unweighted_gpa
+      unweighted_gpa =@unweighted_gpa,
+ 	   grade_level_short =@grade_level_short
 
     WHERE marking_period_id=mp_id AND student_id=s_id;
   ELSE
@@ -429,7 +430,8 @@ IF EXISTS(SELECT student_id FROM student_gpa_calculated WHERE marking_period_id=
     SET
       gpa            = @gpa,
       weighted_gpa   =@weighted_gpa,
-      unweighted_gpa =@unweighted_gpa
+      unweighted_gpa =@unweighted_gpa,
+ 	   grade_level_short =@grade_level_short
 
     WHERE marking_period_id=mp_id AND student_id=s_id;
   ELSE
@@ -655,6 +657,8 @@ WHILE inc < count_schools DO
 
     SET inc_miss_att = 0;
 
+    CREATE TABLE IF NOT EXISTS `temp_missing_attendance_delete`(`del_ma_staff_id` INT(11), `del_ma_school_date` DATE, `del_ma_period_id` INT(11));
+
     WHILE inc_miss_att < count_missing_attendance DO 
 
         SELECT PERIOD_ID, SCHOOL_DATE, TEACHER_ID, COURSE_PERIOD_ID INTO pr_id, sch_date, staff_id, c_id FROM missing_attendance WHERE syear = schoolyear LIMIT inc_miss_att,1;
@@ -663,8 +667,6 @@ WHILE inc < count_schools DO
 
         SELECT COUNT(DISTINCT(student_id)) INTO att_qr FROM attendance_period WHERE SCHOOL_DATE = sch_date AND PERIOD_ID = pr_id AND course_period_id = c_id;
 
-        CREATE TABLE IF NOT EXISTS `temp_missing_attendance_delete`(`del_ma_staff_id` INT(11), `del_ma_school_date` DATE, `del_ma_period_id` INT(11));
-
         IF sch_qr = att_qr THEN 
             INSERT INTO `temp_missing_attendance_delete` (`del_ma_staff_id`, `del_ma_school_date`, `del_ma_period_id`) VALUES (staff_id, sch_date, pr_id);
         END IF;
@@ -675,7 +677,7 @@ WHILE inc < count_schools DO
 
     DELETE FROM missing_attendance WHERE (TEACHER_ID, SCHOOL_DATE, PERIOD_ID) IN (SELECT `del_ma_staff_id` AS TEACHER_ID, `del_ma_school_date` AS SCHOOL_DATE, `del_ma_period_id` AS PERIOD_ID FROM `temp_missing_attendance_delete`);
 
-    DROP TABLE `temp_missing_attendance_delete`;
+    DROP TABLE IF EXISTS `temp_missing_attendance_delete`;
 
     --
     -- FOR Deleting Missing Attendance - END
@@ -706,7 +708,7 @@ WHILE inc < count_schools DO
                     AND sch.student_id IN(SELECT student_id FROM student_enrollment se WHERE sch.school_id=se.school_id AND sch.syear=se.syear AND start_date<=acc.school_date AND (end_date IS NULL OR end_date>=acc.school_date))
                     AND (cp.MARKING_PERIOD_ID IN (SELECT MARKING_PERIOD_ID FROM school_years WHERE SCHOOL_ID=acc.SCHOOL_ID AND acc.SCHOOL_DATE BETWEEN START_DATE AND END_DATE UNION SELECT MARKING_PERIOD_ID FROM school_semesters WHERE SCHOOL_ID=acc.SCHOOL_ID AND acc.SCHOOL_DATE BETWEEN START_DATE AND END_DATE UNION SELECT MARKING_PERIOD_ID FROM school_quarters WHERE SCHOOL_ID=acc.SCHOOL_ID AND acc.SCHOOL_DATE BETWEEN START_DATE AND END_DATE) or cp.MARKING_PERIOD_ID is NULL OR acc.school_date BETWEEN cp.begin_date AND cp.end_date)
                     AND sch.START_DATE<=acc.SCHOOL_DATE AND (sch.END_DATE IS NULL OR sch.END_DATE>=acc.SCHOOL_DATE ) AND cpv.DOES_ATTENDANCE='Y' AND acc.SCHOOL_DATE<=CURDATE() AND acc.SCHOOL_DATE > last_update AND acc.syear = schoolyear AND acc.SCHOOL_ID = userschool 
-                    AND NOT EXISTS (SELECT '' FROM  attendance_completed ac WHERE ac.SCHOOL_DATE=acc.SCHOOL_DATE AND ac.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND ac.PERIOD_ID=cpv.PERIOD_ID) 
+                    AND NOT EXISTS (SELECT '' FROM  attendance_completed ac WHERE ac.SCHOOL_DATE=acc.SCHOOL_DATE AND ac.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND ac.PERIOD_ID=cpv.PERIOD_ID) AND isDateInMarkingPeriodWorkingDates(cp.MARKING_PERIOD_ID, acc.SCHOOL_DATE) 
                     GROUP BY acc.SCHOOL_DATE,cp.COURSE_PERIOD_ID,cpv.PERIOD_ID;
 
                 UPDATE `program_config` SET VALUE=CURDATE() WHERE PROGRAM='MissingAttendance' AND SCHOOL_ID = userschool AND TITLE='LAST_UPDATE';
@@ -753,12 +755,12 @@ SELECT COUNT(*) INTO count_teacher_reassignment FROM teacher_reassignment WHERE
 
 SET inc_tech_reassn = 0;
 
+CREATE TABLE IF NOT EXISTS `temp_teacher_reassignment`(`ra_cp_id` INT(11));
+
 WHILE inc_tech_reassn < count_teacher_reassignment DO 
 
     SELECT COURSE_PERIOD_ID, TEACHER_ID, PRE_TEACHER_ID, ASSIGN_DATE INTO reassign_cp_value_course_period_id, reassign_cp_value_teacher_id, reassign_cp_value_pre_teacher_id, reassign_cp_value_assign_date FROM teacher_reassignment WHERE ASSIGN_DATE <= CURDATE() AND UPDATED = 'N' LIMIT inc_tech_reassn,1;
 
-    CREATE TABLE IF NOT EXISTS `temp_teacher_reassignment`(`ra_cp_id` INT(11));
-
     IF reassign_cp_value_assign_date <= CURDATE() THEN 
         SELECT CONCAT(IF(cp.marking_period_id!='',IF(cp.mp!='FY',CONCAT(mp.short_name),''),'Custom - '),cp.short_name,' - ',CONCAT_WS(' ',st.first_name,st.middle_name,st.last_name)) AS CP_NAME INTO get_pname_cp_name FROM course_periods cp,course_period_var cpv,school_periods sp,marking_periods mp,staff st WHERE cpv.period_id=sp.period_id and (cp.marking_period_id=mp.marking_period_id or cp.marking_period_id is NULL) and st.staff_id = reassign_cp_value_teacher_id  AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cp.COURSE_PERIOD_ID = reassign_cp_value_course_period_id LIMIT 1;
 
@@ -775,7 +777,7 @@ END WHILE;
 
 UPDATE teacher_reassignment SET UPDATED = 'Y', LAST_UPDATED = CURRENT_TIMESTAMP WHERE assign_date <= CURDATE() AND UPDATED = 'N' AND COURSE_PERIOD_ID IN(SELECT `ra_cp_id` AS COURSE_PERIOD_ID FROM `temp_teacher_reassignment`);
 
-DROP TABLE `temp_teacher_reassignment`;
+DROP TABLE IF EXISTS `temp_teacher_reassignment`;
 
 --
 -- FOR Teacher Reassignment - END
@@ -784,6 +786,13 @@ DROP TABLE `temp_teacher_reassignment`;
 END$$
 DELIMITER ;
 
+--
+-- EVENT: SET EVENT SCHEDULER ON TEMPORARILY. TO DO IT PERMANENTLY, YOU NEED TO SET THE MYSQL CONFIG
+--
+
+SET @@GLOBAL.event_scheduler = ON;
+SET GLOBAL log_bin_trust_function_creators = 1;
+
 --
 -- EVENT: ES_HANDLER_MISSING_ATTENDANCE
 --

--- install/OpensisSchemaMysqlInc.sql ---
@@ -925,7 +925,7 @@ CREATE TABLE IF NOT EXISTS `staff` (
 
 
 CREATE TABLE `staff_field_categories` (
- `id` int(8) NOT NULL DEFAULT '0',
+ `id` int(8) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `title` varchar(100) DEFAULT NULL,
  `sort_order` decimal(10,0) DEFAULT NULL,
  `include` varchar(100) DEFAULT NULL,
@@ -1276,10 +1276,12 @@ CREATE TABLE IF NOT EXISTS `mail_group` (
   `user_name` varchar(255) NOT NULL,
   `creation_date` datetime NOT NULL,
  `last_updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
+ `school_id` int(11) NOT NULL, 
  `updated_by` varchar(255) DEFAULT NULL,
   PRIMARY KEY (`group_id`)
 ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
 
+ALTER TABLE `mail_group` ADD INDEX `mail_group_ind` (`school_id`) USING BTREE;
 
 
 --
@@ -1291,13 +1293,14 @@ CREATE TABLE IF NOT EXISTS `mail_groupmembers` (
   `group_id` int(11) NOT NULL,
   `user_name` varchar(255) NOT NULL,
   `profile` varchar(255) NOT NULL,
+  `school_id` int(11) NOT NULL,
  `last_updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_by` varchar(255) DEFAULT NULL,
   PRIMARY KEY (`id`)
 ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;# MySQL returned an empty result set (i.e. zero rows).
 # MySQL returned an empty result set (i.e. zero rows).
 
-
+ALTER TABLE `mail_groupmembers` ADD INDEX `mail_groupmembers_ind` (`school_id`) USING BTREE;
 -- --------------------------------------------------------
 
 --
@@ -1800,7 +1803,6 @@ CREATE INDEX student_report_card_grades_ind4  USING btree ON student_report_card
 
 
 
-
 --CREATE INDEX students_join_people_ind1  USING btree ON students_join_people(student_id);
 
 

--- install/OpensisSchemaMysqlIncUpdate.sql ---
@@ -914,7 +914,7 @@ CREATE TABLE IF NOT EXISTS `staff` (
 
 
 CREATE TABLE `staff_field_categories` (
- `id` int(8) NOT NULL DEFAULT '0',
+ `id` int(8) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `title` varchar(100) DEFAULT NULL,
  `sort_order` decimal(10,0) DEFAULT NULL,
  `include` varchar(100) DEFAULT NULL,
@@ -1262,11 +1262,12 @@ CREATE TABLE IF NOT EXISTS `mail_group` (
   `user_name` varchar(255) NOT NULL,
   `creation_date` datetime NOT NULL,
  `last_updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
+ `school_id` int(11) NOT NULL,
  `updated_by` varchar(255) DEFAULT NULL,
   PRIMARY KEY (`group_id`)
 ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
 
-
+ALTER TABLE `mail_group` ADD INDEX `mail_group_ind` (`school_id`) USING BTREE;
 
 --
 -- Table structure for table `mail_groupmembers`
@@ -1277,12 +1278,13 @@ CREATE TABLE IF NOT EXISTS `mail_groupmembers` (
   `group_id` int(11) NOT NULL,
   `user_name` varchar(255) NOT NULL,
   `profile` varchar(255) NOT NULL,
+  `school_id` int(11) NOT NULL,
  `last_updated` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_by` varchar(255) DEFAULT NULL,
   PRIMARY KEY (`id`)
 ) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
 
-
+ALTER TABLE `mail_groupmembers` ADD INDEX `mail_groupmembers_ind` (`school_id`) USING BTREE;
 -- --------------------------------------------------------
 
 --

--- install/OpensisTriggerMysqlInc.sql ---
@@ -138,4 +138,95 @@ DROP TRIGGER IF EXISTS `ti_user_file_upload`;
 CREATE TRIGGER `ti_user_file_upload`
     BEFORE INSERT ON user_file_upload
     FOR EACH ROW
-        SET NEW.download_id = UUID();
\ No newline at end of file
+        SET NEW.download_id = UUID();
+DROP TRIGGER IF EXISTS `tu_login_authentication`;
+DELIMITER $$
+CREATE TRIGGER `tu_login_authentication` 
+    AFTER UPDATE ON `login_authentication`
+    FOR EACH ROW BEGIN
+
+        UPDATE `msg_inbox` SET `from_user` = REPLACE(`from_user`, OLD.username, NEW.username) WHERE `from_user` = OLD.username;
+
+
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, OLD.username, NEW.username) WHERE `to_user` = OLD.username;
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_user` LIKE CONCAT ('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_user` LIKE CONCAT(OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_user` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, OLD.username, NEW.username) WHERE `istrash` = OLD.username;
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `istrash` LIKE CONCAT ('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `istrash` LIKE CONCAT(OLD.username, ',%');
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `istrash` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users`, OLD.username, NEW.username) WHERE `to_multiple_users` = OLD.username;
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_multiple_users` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_multiple_users` LIKE CONCAT(OLD.username, ',%'); 
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users` , CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_multiple_users` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, OLD.username, NEW.username) WHERE  `to_cc` = OLD.username;
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_cc` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_cc` LIKE CONCAT (OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_cc` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, OLD.username, NEW.username) WHERE `to_cc_multiple` = OLD.username;
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_cc_multiple` LIKE CONCAT ('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_cc_multiple` LIKE CONCAT(OLD.username, ',%'); 
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_cc_multiple` LIKE CONCAT('%,', OLD.username);  
+
+
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, OLD.username, NEW.username) WHERE  `to_bcc` = OLD.username;
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT('%,', OLD.username,',%');
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_bcc` LIKE CONCAT ('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, OLD.username, NEW.username) WHERE `to_bcc_multiple` = OLD.username;
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_bcc_multiple` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_bcc_multiple` LIKE CONCAT(OLD.username, ',%'); 
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_bcc_multiple` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, OLD.username, NEW.username) WHERE `mail_read_unread` = OLD.username;
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `mail_read_unread` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `mail_read_unread` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `mail_read_unread` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_outbox` SET `from_user` = REPLACE (`from_user`, OLD.username, NEW.username) WHERE `from_user` = OLD.username;
+
+
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, OLD.username, NEW.username) WHERE `to_user` = OLD.username;
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_user` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_user` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_user` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, OLD.username, NEW.username) WHERE  `to_cc` = OLD.username;
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_cc` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_cc` LIKE CONCAT(OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_cc` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, OLD.username, NEW.username) WHERE `to_bcc` = OLD.username;
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_bcc` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `hacking_log` SET `username` = REPLACE(`username`, OLD.username, NEW.username) WHERE `username` = OLD.username;
+
+
+        UPDATE `login_records` SET `user_name` = REPLACE(`user_name`, OLD.username, NEW.username) WHERE `user_name` = OLD.username;
+
+
+        UPDATE `mail_group` SET `user_name` = REPLACE(`user_name`, OLD.username, NEW.username) WHERE `user_name` = OLD.username;
+
+
+        UPDATE `mail_groupmembers` SET `user_name` = REPLACE(`user_name`, OLD.username, NEW.username) WHERE `user_name` =OLD.username;
+
+END$$
+DELIMITER ;

--- install/OpensisUpdateProcsMysql.sql ---
@@ -8,7 +8,7 @@ BEGIN
 DECLARE done INT DEFAULT 0;
 DECLARE marking_period_id INT;
 DECLARE student_id INT;
-DECLARE rank NUMERIC;
+DECLARE var_rank NUMERIC;
 
 declare cur1 cursor for
 select
@@ -26,26 +26,26 @@ select
                                                 and se2.syear = se.syear
                                                 group by gpa
                                 )
-  ) as rank
+  ) as var_rank
   from student_enrollment se, student_gpa_calculated sgc, marking_periods mp
   where se.student_id = sgc.student_id
     and sgc.marking_period_id = mp.marking_period_id
     and mp.marking_period_id = mp_id
     and se.syear = mp.syear
     and not sgc.gpa is null
-  order by grade_id, rank;
+  order by grade_id, var_rank;
 DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
 
 open cur1;
-fetch cur1 into marking_period_id,student_id,rank;
+fetch cur1 into marking_period_id,student_id,var_rank;
 
 while not done DO
 	update student_gpa_calculated sgc
 	  set
-	    class_rank = rank
+	    class_rank = var_rank
 	where sgc.marking_period_id = marking_period_id
 	  and sgc.student_id = student_id;
-	fetch cur1 into marking_period_id,student_id,rank;
+	fetch cur1 into marking_period_id,student_id,var_rank;
 END WHILE;
 CLOSE cur1;
 
@@ -275,7 +275,8 @@ IF EXISTS(SELECT student_id FROM student_gpa_calculated WHERE marking_period_id=
     SET
       gpa            = @gpa,
       weighted_gpa   =@weighted_gpa,
-      unweighted_gpa =@unweighted_gpa
+      unweighted_gpa =@unweighted_gpa,
+ 	   grade_level_short =@grade_level_short
 
     WHERE marking_period_id=mp_id AND student_id=s_id;
   ELSE
@@ -365,7 +366,8 @@ IF EXISTS(SELECT student_id FROM student_gpa_calculated WHERE marking_period_id=
     SET
       gpa            = @gpa,
       weighted_gpa   =@weighted_gpa,
-      unweighted_gpa =@unweighted_gpa
+      unweighted_gpa =@unweighted_gpa,
+ 	   grade_level_short =@grade_level_short
 
     WHERE marking_period_id=mp_id AND student_id=s_id;
   ELSE
@@ -579,6 +581,8 @@ WHILE inc < count_schools DO
 
     SET inc_miss_att = 0;
 
+    CREATE TABLE IF NOT EXISTS `temp_missing_attendance_delete`(`del_ma_staff_id` INT(11), `del_ma_school_date` DATE, `del_ma_period_id` INT(11));
+
     WHILE inc_miss_att < count_missing_attendance DO 
 
         SELECT PERIOD_ID, SCHOOL_DATE, TEACHER_ID, COURSE_PERIOD_ID INTO pr_id, sch_date, staff_id, c_id FROM missing_attendance WHERE syear = schoolyear LIMIT inc_miss_att,1;
@@ -587,8 +591,6 @@ WHILE inc < count_schools DO
 
         SELECT COUNT(DISTINCT(student_id)) INTO att_qr FROM attendance_period WHERE SCHOOL_DATE = sch_date AND PERIOD_ID = pr_id AND course_period_id = c_id;
 
-        CREATE TABLE IF NOT EXISTS `temp_missing_attendance_delete`(`del_ma_staff_id` INT(11), `del_ma_school_date` DATE, `del_ma_period_id` INT(11));
-
         IF sch_qr = att_qr THEN 
             INSERT INTO `temp_missing_attendance_delete` (`del_ma_staff_id`, `del_ma_school_date`, `del_ma_period_id`) VALUES (staff_id, sch_date, pr_id);
         END IF;
@@ -599,7 +601,7 @@ WHILE inc < count_schools DO
 
     DELETE FROM missing_attendance WHERE (TEACHER_ID, SCHOOL_DATE, PERIOD_ID) IN (SELECT `del_ma_staff_id` AS TEACHER_ID, `del_ma_school_date` AS SCHOOL_DATE, `del_ma_period_id` AS PERIOD_ID FROM `temp_missing_attendance_delete`);
 
-    DROP TABLE `temp_missing_attendance_delete`;
+    DROP TABLE IF EXISTS `temp_missing_attendance_delete`;
 
     --
     -- FOR Deleting Missing Attendance - END
@@ -630,7 +632,7 @@ WHILE inc < count_schools DO
                     AND sch.student_id IN(SELECT student_id FROM student_enrollment se WHERE sch.school_id=se.school_id AND sch.syear=se.syear AND start_date<=acc.school_date AND (end_date IS NULL OR end_date>=acc.school_date))
                     AND (cp.MARKING_PERIOD_ID IN (SELECT MARKING_PERIOD_ID FROM school_years WHERE SCHOOL_ID=acc.SCHOOL_ID AND acc.SCHOOL_DATE BETWEEN START_DATE AND END_DATE UNION SELECT MARKING_PERIOD_ID FROM school_semesters WHERE SCHOOL_ID=acc.SCHOOL_ID AND acc.SCHOOL_DATE BETWEEN START_DATE AND END_DATE UNION SELECT MARKING_PERIOD_ID FROM school_quarters WHERE SCHOOL_ID=acc.SCHOOL_ID AND acc.SCHOOL_DATE BETWEEN START_DATE AND END_DATE) or cp.MARKING_PERIOD_ID is NULL OR acc.school_date BETWEEN cp.begin_date AND cp.end_date)
                     AND sch.START_DATE<=acc.SCHOOL_DATE AND (sch.END_DATE IS NULL OR sch.END_DATE>=acc.SCHOOL_DATE ) AND cpv.DOES_ATTENDANCE='Y' AND acc.SCHOOL_DATE<=CURDATE() AND acc.SCHOOL_DATE > last_update AND acc.syear = schoolyear AND acc.SCHOOL_ID = userschool 
-                    AND NOT EXISTS (SELECT '' FROM  attendance_completed ac WHERE ac.SCHOOL_DATE=acc.SCHOOL_DATE AND ac.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND ac.PERIOD_ID=cpv.PERIOD_ID) 
+                    AND NOT EXISTS (SELECT '' FROM  attendance_completed ac WHERE ac.SCHOOL_DATE=acc.SCHOOL_DATE AND ac.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND ac.PERIOD_ID=cpv.PERIOD_ID) AND isDateInMarkingPeriodWorkingDates(cp.MARKING_PERIOD_ID, acc.SCHOOL_DATE) 
                     GROUP BY acc.SCHOOL_DATE,cp.COURSE_PERIOD_ID,cpv.PERIOD_ID;
 
                 UPDATE `program_config` SET VALUE=CURDATE() WHERE PROGRAM='MissingAttendance' AND SCHOOL_ID = userschool AND TITLE='LAST_UPDATE';
@@ -677,12 +679,12 @@ SELECT COUNT(*) INTO count_teacher_reassignment FROM teacher_reassignment WHERE
 
 SET inc_tech_reassn = 0;
 
+CREATE TABLE IF NOT EXISTS `temp_teacher_reassignment`(`ra_cp_id` INT(11));
+
 WHILE inc_tech_reassn < count_teacher_reassignment DO 
 
     SELECT COURSE_PERIOD_ID, TEACHER_ID, PRE_TEACHER_ID, ASSIGN_DATE INTO reassign_cp_value_course_period_id, reassign_cp_value_teacher_id, reassign_cp_value_pre_teacher_id, reassign_cp_value_assign_date FROM teacher_reassignment WHERE ASSIGN_DATE <= CURDATE() AND UPDATED = 'N' LIMIT inc_tech_reassn,1;
 
-    CREATE TABLE IF NOT EXISTS `temp_teacher_reassignment`(`ra_cp_id` INT(11));
-
     IF reassign_cp_value_assign_date <= CURDATE() THEN 
         SELECT CONCAT(IF(cp.marking_period_id!='',IF(cp.mp!='FY',CONCAT(mp.short_name),''),'Custom - '),cp.short_name,' - ',CONCAT_WS(' ',st.first_name,st.middle_name,st.last_name)) AS CP_NAME INTO get_pname_cp_name FROM course_periods cp,course_period_var cpv,school_periods sp,marking_periods mp,staff st WHERE cpv.period_id=sp.period_id and (cp.marking_period_id=mp.marking_period_id or cp.marking_period_id is NULL) and st.staff_id = reassign_cp_value_teacher_id  AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cp.COURSE_PERIOD_ID = reassign_cp_value_course_period_id LIMIT 1;
 
@@ -699,7 +701,7 @@ END WHILE;
 
 UPDATE teacher_reassignment SET UPDATED = 'Y', LAST_UPDATED = CURRENT_TIMESTAMP WHERE assign_date <= CURDATE() AND UPDATED = 'N' AND COURSE_PERIOD_ID IN(SELECT `ra_cp_id` AS COURSE_PERIOD_ID FROM `temp_teacher_reassignment`);
 
-DROP TABLE `temp_teacher_reassignment`;
+DROP TABLE IF EXISTS `temp_teacher_reassignment`;
 
 --
 -- FOR Teacher Reassignment - END
@@ -708,6 +710,13 @@ DROP TABLE `temp_teacher_reassignment`;
 END$$
 DELIMITER ;
 
+--
+-- EVENT: SET EVENT SCHEDULER ON TEMPORARILY. TO DO IT PERMANENTLY, YOU NEED TO SET THE MYSQL CONFIG
+--
+
+SET @@GLOBAL.event_scheduler = ON;
+SET GLOBAL log_bin_trust_function_creators = 1;
+
 --
 -- EVENT: ES_HANDLER_MISSING_ATTENDANCE
 --

--- install/OpensisUpdateTriggerMysql.sql ---
@@ -74,4 +74,95 @@ DROP TRIGGER IF EXISTS `ti_user_file_upload`;
 CREATE TRIGGER `ti_user_file_upload`
     BEFORE INSERT ON user_file_upload
     FOR EACH ROW
-        SET NEW.download_id = UUID();
\ No newline at end of file
+        SET NEW.download_id = UUID();
+DROP TRIGGER IF EXISTS `tu_login_authentication`;
+DELIMITER $$
+CREATE TRIGGER `tu_login_authentication` 
+    AFTER UPDATE ON `login_authentication`
+    FOR EACH ROW BEGIN
+
+        UPDATE `msg_inbox` SET `from_user` = REPLACE(`from_user`, OLD.username, NEW.username) WHERE `from_user` = OLD.username;
+
+
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, OLD.username, NEW.username) WHERE `to_user` = OLD.username;
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_user` LIKE CONCAT ('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_user` LIKE CONCAT(OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_user` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, OLD.username, NEW.username) WHERE `istrash` = OLD.username;
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `istrash` LIKE CONCAT ('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `istrash` LIKE CONCAT(OLD.username, ',%');
+        UPDATE `msg_inbox` SET `istrash` = REPLACE (`istrash`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `istrash` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users`, OLD.username, NEW.username) WHERE `to_multiple_users` = OLD.username;
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_multiple_users` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_multiple_users` LIKE CONCAT(OLD.username, ',%'); 
+        UPDATE `msg_inbox` SET `to_multiple_users` = REPLACE(`to_multiple_users` , CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_multiple_users` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, OLD.username, NEW.username) WHERE  `to_cc` = OLD.username;
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_cc` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_cc` LIKE CONCAT (OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_cc` = REPLACE (`to_cc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_cc` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, OLD.username, NEW.username) WHERE `to_cc_multiple` = OLD.username;
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_cc_multiple` LIKE CONCAT ('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_cc_multiple` LIKE CONCAT(OLD.username, ',%'); 
+        UPDATE `msg_inbox` SET `to_cc_multiple` = REPLACE(`to_cc_multiple`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_cc_multiple` LIKE CONCAT('%,', OLD.username);  
+
+
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, OLD.username, NEW.username) WHERE  `to_bcc` = OLD.username;
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT('%,', OLD.username,',%');
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_inbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_bcc` LIKE CONCAT ('%,', OLD.username);
+
+
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, OLD.username, NEW.username) WHERE `to_bcc_multiple` = OLD.username;
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_bcc_multiple` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_bcc_multiple` LIKE CONCAT(OLD.username, ',%'); 
+        UPDATE `msg_inbox` SET `to_bcc_multiple` = REPLACE(`to_bcc_multiple`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_bcc_multiple` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, OLD.username, NEW.username) WHERE `mail_read_unread` = OLD.username;
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `mail_read_unread` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `mail_read_unread` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_inbox` SET `mail_read_unread`= REPLACE(`mail_read_unread`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `mail_read_unread` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_outbox` SET `from_user` = REPLACE (`from_user`, OLD.username, NEW.username) WHERE `from_user` = OLD.username;
+
+
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, OLD.username, NEW.username) WHERE `to_user` = OLD.username;
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_user` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_user` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_outbox` SET `to_user` = REPLACE(`to_user`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_user` LIKE CONCAT('%,', OLD.username);
+
+
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, OLD.username, NEW.username) WHERE  `to_cc` = OLD.username;
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_cc` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_cc` LIKE CONCAT(OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_cc` = REPLACE(`to_cc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_cc` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, OLD.username, NEW.username) WHERE `to_bcc` = OLD.username;
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username, ','), CONCAT(',', NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT('%,', OLD.username, ',%');
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(OLD.username, ','), CONCAT(NEW.username, ',')) WHERE `to_bcc` LIKE CONCAT(OLD.username, ',%');  
+        UPDATE `msg_outbox` SET `to_bcc` = REPLACE(`to_bcc`, CONCAT(',', OLD.username), CONCAT(',', NEW.username)) WHERE `to_bcc` LIKE CONCAT('%,', OLD.username);
+ 
+
+        UPDATE `hacking_log` SET `username` = REPLACE(`username`, OLD.username, NEW.username) WHERE `username` = OLD.username;
+
+
+        UPDATE `login_records` SET `user_name` = REPLACE(`user_name`, OLD.username, NEW.username) WHERE `user_name` = OLD.username;
+
+
+        UPDATE `mail_group` SET `user_name` = REPLACE(`user_name`, OLD.username, NEW.username) WHERE `user_name` = OLD.username;
+
+
+        UPDATE `mail_groupmembers` SET `user_name` = REPLACE(`user_name`, OLD.username, NEW.username) WHERE `user_name` =OLD.username;
+
+END$$
+DELIMITER ;

--- install/SqlForClientSchoolInc.php ---
@@ -32,532 +32,18 @@
 --
 
 INSERT INTO `app` (`name`, `value`) VALUES
-('version', '8.0'),
-('date', 'July 12, 2021'),
-('build', '20210712001'),
+('version', '9.0'),
+('date', 'December 30, 2022'),
+('build', '20221230001'),
 ('update', '0'),
-('last_updated', 'September 11, 2020');
+('last_updated', 'December 30, 2022');
 
 
 --
 -- Dumping data for table `profile_exceptions`
 --
 
-INSERT INTO `profile_exceptions` (`profile_id`, `modname`, `can_use`, `can_edit`, `last_updated`, `updated_by`) VALUES
-('2', 'students/Student.php&category_id=6', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/Student.php&category_id=7', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'students/Student.php&category_id=6', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'students/Student.php&category_id=6', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'users/User.php&category_id=5', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'schoolsetup/Schools.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'schoolsetup/Calendar.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'students/Student.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'students/Student.php&category_id=1', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'students/Student.php&category_id=3', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'students/ChangePassword.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'scheduling/ViewSchedule.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'scheduling/PrintSchedules.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'scheduling/Requests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('3', 'grades/StudentGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'grades/FinalGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'grades/ReportCards.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'grades/Transcripts.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'grades/GPARankList.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'attendance/StudentSummary.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'attendance/DailySummary.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'eligibility/Student.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'eligibility/StudentList.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'schoolsetup/Schools.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'schoolsetup/MarkingPeriods.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'schoolsetup/Calendar.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/Student.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/AddUsers.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/AdvancedReport.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/StudentLabels.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/Student.php&category_id=1', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/Student.php&category_id=3', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/Student.php&category_id=4', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'users/User.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/Rooms.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'grades/Grades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'users/Preferences.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'scheduling/Schedule.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'scheduling/PrintSchedules.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'scheduling/PrintClassLists.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'scheduling/PrintClassPictures.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/InputFinalGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/ReportCards.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/Grades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/Assignments.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/AnomalousGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/Configuration.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/ProgressReports.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/StudentGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/FinalGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/ReportCardGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'grades/ReportCardComments.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'attendance/TakeAttendance.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'attendance/DailySummary.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'attendance/StudentSummary.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'eligibility/EnterEligibility.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'scheduling/ViewSchedule.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'attendance/StudentSummary.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'attendance/DailySummary.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'eligibility/Student.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'eligibility/StudentList.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'schoolsetup/Schools.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'schoolsetup/Calendar.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'students/Student.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'students/Student.php&category_id=1', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'students/Student.php&category_id=3', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('4', 'users/User.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'users/User.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('4', 'users/Preferences.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'scheduling/ViewSchedule.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'scheduling/Requests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('4', 'grades/StudentGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'grades/FinalGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'grades/ReportCards.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'grades/Transcripts.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'grades/GPARankList.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'users/User.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('4', 'users/User.php&category_id=3', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'schoolsetup/Courses.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'schoolsetup/CourseCatalog.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'schoolsetup/PrintCatalog.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'schoolsetup/PrintAllCourses.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'students/Student.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('4', 'students/ChangePassword.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'scheduling/StudentScheduleReport.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'grades/ParentProgressReports.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'scheduling/StudentScheduleReport.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/PortalNotes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/MarkingPeriods.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/Calendar.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/Periods.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/GradeLevels.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/Schools.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/UploadLogo.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/Schools.php?new_school=true', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/CopySchool.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/SystemPreference.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/Courses.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/CourseCatalog.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/PrintCatalog.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/PrintCatalogGradeLevel.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/PrintAllCourses.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/TeacherReassignment.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'students/Student.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Student.php&include=GeneralInfoInc&student_id=new', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/AssignOtherInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/AddUsers.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/AdvancedReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/AddDrop.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Letters.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/MailingLabels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/StudentLabels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/PrintStudentInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/PrintStudentContactInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/GoalReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/StudentFields.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'students/EnrollmentCodes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Upload.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Upload.php?modfunc=edit', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Student.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Student.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Student.php&category_id=3', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Student.php&category_id=4', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/Student.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'users/User.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'users/User.php&staff_id=new', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/AddStudents.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/Preferences.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/Profiles.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/Exceptions.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/UserFields.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/TeacherPrograms.php?include=grades/InputFinalGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/TeacherPrograms.php?include=grades/Grades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/TeacherPrograms.php?include=grades/ProgressReports.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'users/TeacherPrograms.php?include=attendance/TakeAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'users/TeacherPrograms.php?include=attendance/Missing_Attendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'users/TeacherPrograms.php?include=eligibility/EnterEligibility.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'users/User.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'users/User.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/Schedule.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/ViewSchedule.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/Requests.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/MassSchedule.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/MassRequests.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/MassDrops.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/PrintSchedules.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/PrintClassLists.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/PrintClassPictures.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/PrintRequests.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/ScheduleReport.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/RequestsReport.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/UnfilledRequests.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/IncompleteSchedules.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/AddDrop.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'scheduling/Scheduler.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/ReportCards.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'grades/CalcGPA.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'grades/Transcripts.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'grades/TeacherCompletion.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/GradeBreakdown.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/FinalGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/GPARankList.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/AdminProgressReports.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/HonorRoll.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/ReportCardGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'grades/ReportCardComments.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'grades/HonorRollSetup.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'grades/FixGPA.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/EditReportCardGrades.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'grades/EditHistoryMarkingPeriods.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'attendance/Administration.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/AddAbsences.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/AttendanceData.php?list_by_day=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/Percent.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/Percent.php?list_by_day=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/DailySummary.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/StudentSummary.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/TeacherCompletion.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/FixDailyAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/DuplicateAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'attendance/AttendanceCodes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'eligibility/Student.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'eligibility/AddActivity.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'eligibility/StudentList.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'eligibility/TeacherCompletion.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'eligibility/Activities.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'eligibility/EntryTimes.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('5', 'tools/LogDetails.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'tools/DeleteLog.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'tools/Rollover.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'users/Staff.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/SchoolCustomFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&category_id=6', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&category_id=7', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/User.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/PortalNotes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/Schools.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/Schools.php?new_school=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/CopySchool.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/MarkingPeriods.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/Calendar.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/Periods.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/GradeLevels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/Rollover.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/Courses.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/CourseCatalog.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/PrintCatalog.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/PrintCatalogGradeLevel.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/PrintAllCourses.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/UploadLogo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/TeacherReassignment.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&include=GeneralInfoInc&student_id=new', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/AssignOtherInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/AddUsers.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/AdvancedReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/AddDrop.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Letters.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/MailingLabels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/StudentLabels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/PrintStudentInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/PrintStudentContactInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/GoalReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/StudentFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/AddressFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/PeopleFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/EnrollmentCodes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Upload.php?modfunc=edit', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Upload.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&category_id=3', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&category_id=4', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/StudentReenroll.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/EnrollmentReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/User.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/User.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/User.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/User.php&staff_id=new', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/AddStudents.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Preferences.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Profiles.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Exceptions.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/UserFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/TeacherPrograms.php?include=grades/InputFinalGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/TeacherPrograms.php?include=grades/Grades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/TeacherPrograms.php?include=attendance/TakeAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/TeacherPrograms.php?include=attendance/Missing_Attendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/TeacherPrograms.php?include=eligibility/EnterEligibility.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/UploadUserPhoto.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/UploadUserPhoto.php?modfunc=edit', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/UserAdvancedReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/UserAdvancedReportStaff.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/Schedule.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/Requests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/MassSchedule.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/MassRequests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/MassDrops.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/ScheduleReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/RequestsReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/UnfilledRequests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/IncompleteSchedules.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/AddDrop.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/PrintSchedules.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/PrintRequests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/PrintClassLists.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/PrintClassPictures.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/Courses.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/Scheduler.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'scheduling/ViewSchedule.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/ReportCards.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/CalcGPA.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/Transcripts.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/TeacherCompletion.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/GradeBreakdown.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/FinalGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/GPARankList.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/ReportCardGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/ReportCardComments.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/FixGPA.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/EditReportCardGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/EditHistoryMarkingPeriods.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/HistoricalReportCardGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/Administration.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/AddAbsences.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/AttendanceData.php?list_by_day=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/Percent.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/Percent.php?list_by_day=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/DailySummary.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/StudentSummary.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/TeacherCompletion.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/DuplicateAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/AttendanceCodes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'attendance/FixDailyAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'eligibility/Student.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'eligibility/AddActivity.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'eligibility/StudentList.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'eligibility/TeacherCompletion.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'eligibility/Activities.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'eligibility/EntryTimes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'tools/LogDetails.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'tools/DeleteLog.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'schoolsetup/SchoolCustomFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'tools/Rollover.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Upload.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Upload.php?modfunc=edit', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/SystemPreference.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'students/Student.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/HonorRoll.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/TeacherPrograms.php?include=grades/ProgressReports.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/User.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/HonorRollSetup.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'grades/AdminProgressReports.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php&staff_id=new', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Exceptions_staff.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/StaffFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php&category_id=3', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php&category_id=4', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php&category_id=6', 'Y', 'Y', '2019-07-28 19:26:33', NULL),
-('1', 'messaging/Inbox.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'messaging/Compose.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'messaging/SentMail.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'messaging/Trash.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'messaging/Group.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('4', 'messaging/Inbox.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'messaging/Compose.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'messaging/SentMail.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'messaging/Trash.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('4', 'messaging/Group.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'messaging/Inbox.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'messaging/Compose.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'messaging/SentMail.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'messaging/Trash.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'messaging/Group.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'messaging/Inbox.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'messaging/Compose.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'messaging/SentMail.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'messaging/Trash.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('3', 'messaging/Group.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&category_id=6', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&category_id=7', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/User.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/PortalNotes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Schools.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Schools.php?new_school=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/CopySchool.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/MarkingPeriods.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Calendar.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Periods.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/GradeLevels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Rollover.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Courses.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/CourseCatalog.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/PrintCatalog.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/PrintCatalogGradeLevel.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/PrintAllCourses.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/UploadLogo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/TeacherReassignment.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&include=GeneralInfoInc&student_id=new', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/AssignOtherInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/AddUsers.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/AdvancedReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/AddDrop.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Letters.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/MailingLabels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/StudentLabels.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/PrintStudentInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/PrintStudentContactInfo.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/GoalReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/StudentFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/AddressFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/PeopleFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/EnrollmentCodes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Upload.php?modfunc=edit', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Upload.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&category_id=3', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&category_id=4', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/StudentReenroll.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/EnrollmentReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/User.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/User.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/User.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/User.php&staff_id=new', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/AddStudents.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Preferences.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Profiles.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Exceptions.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/UserFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=grades/InputFinalGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=grades/Grades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=attendance/TakeAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=attendance/Missing_Attendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=eligibility/EnterEligibility.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/UploadUserPhoto.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/UploadUserPhoto.php?modfunc=edit', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/UserAdvancedReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/UserAdvancedReportStaff.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/Schedule.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/Requests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/MassSchedule.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/MassRequests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/MassDrops.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/ScheduleReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/RequestsReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/UnfilledRequests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/IncompleteSchedules.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/AddDrop.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/PrintSchedules.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/PrintRequests.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/PrintClassLists.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/PrintClassPictures.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/Courses.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/Scheduler.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'scheduling/ViewSchedule.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/ReportCards.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/CalcGPA.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/Transcripts.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/TeacherCompletion.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/GradeBreakdown.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/FinalGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/GPARankList.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/ReportCardGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/ReportCardComments.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/FixGPA.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/EditReportCardGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/EditHistoryMarkingPeriods.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/HistoricalReportCardGrades.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/Administration.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/AddAbsences.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/AttendanceData.php?list_by_day=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/Percent.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/Percent.php?list_by_day=true', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/DailySummary.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/StudentSummary.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/TeacherCompletion.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/DuplicateAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/AttendanceCodes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'attendance/FixDailyAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'eligibility/Student.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'eligibility/AddActivity.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'eligibility/StudentList.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'eligibility/TeacherCompletion.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'eligibility/Activities.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'eligibility/EntryTimes.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'tools/LogDetails.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'tools/DeleteLog.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'tools/Backup.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'tools/Rollover.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Upload.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Upload.php?modfunc=edit', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/SystemPreference.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'students/Student.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/HonorRoll.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=grades/ProgressReports.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/User.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/HonorRollSetup.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/AdminProgressReports.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php&staff_id=new', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Exceptions_staff.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/StaffFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php&category_id=3', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php&category_id=4', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php&category_id=6', 'Y', 'Y', '2019-07-28 19:26:33', NULL),
-('0', 'schoolsetup/SchoolCustomFields.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'messaging/Inbox.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'messaging/Compose.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'messaging/SentMail.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'messaging/Trash.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'messaging/Group.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Rooms.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/school_specific_standards.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=grades/AdminProgressReports.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'tools/Reports.php?func=Basic', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'tools/Reports.php?func=Ins_r', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'tools/Reports.php?func=Ins_cf', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/us_common_standards.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/EffortGradeLibrary.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'grades/EffortGradeSetup.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('4', 'scheduling/PrintSchedules.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('0', 'users/TeacherPrograms.php?include=attendance/MissingAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('0', 'users/Staff.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'schoolsetup/Rooms.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/TeacherPrograms.php?include=attendance/MissingAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('1', 'users/Staff.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'students/EnrollmentReport.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'users/TeacherPrograms.php?include=attendance/MissingAttendance.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'messaging/Inbox.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'messaging/Compose.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'messaging/SentMail.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'messaging/Trash.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('5', 'messaging/Group.php', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'users/Staff.php&category_id=1', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'users/Staff.php&category_id=2', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'users/Staff.php&category_id=3', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('2', 'users/Staff.php&category_id=4', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'users/Staff.php&category_id=5', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-('2', 'users/Staff.php&category_id=6', 'Y', 'Y', '2019-07-28 19:26:33', NULL),
-('4', 'grades/ParentProgressReports.php', 'Y', NULL, '2019-07-28 15:26:33', NULL),
-('0', 'schoolsetup/Sections.php', 'Y', 'Y', '2019-07-25 21:53:00', NULL),
-('1', 'schoolsetup/Sections.php', 'Y', 'Y', '2019-07-25 21:53:25', NULL),
-('0', 'tools/DataImport.php', 'Y', 'Y', '2019-07-25 21:53:25', NULL),
-('1', 'tools/DataImport.php', 'Y', 'Y', '2019-07-25 21:53:25', NULL),
-('0', 'tools/GenerateApi.php', 'Y', 'Y', '2020-11-03 00:34:02', NULL),
-('1', 'tools/GenerateApi.php', 'Y', 'Y', '2019-08-04 22:33:56', NULL);
-
+INSERT INTO `profile_exceptions` (`profile_id`, `modname`, `can_use`, `can_edit`, `last_updated`, `updated_by`) VALUES (2,'students/Student.php&category_id=6','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/Student.php&category_id=7','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'students/Student.php&category_id=6','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'students/Student.php&category_id=6','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'users/User.php&category_id=5','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'schoolsetup/Schools.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'schoolsetup/Calendar.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'students/Student.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'students/Student.php&category_id=1','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'students/Student.php&category_id=3','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'students/ChangePassword.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'scheduling/ViewSchedule.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'scheduling/PrintSchedules.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'scheduling/Requests.php','Y','Y','2019-07-28 19:26:33',NULL),(3,'grades/StudentGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'grades/FinalGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'grades/ReportCards.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'grades/Transcripts.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'grades/GPARankList.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'attendance/StudentSummary.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'attendance/DailySummary.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'eligibility/Student.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'eligibility/StudentList.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'schoolsetup/Schools.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'schoolsetup/MarkingPeriods.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'schoolsetup/Calendar.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/Student.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/AddUsers.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/AdvancedReport.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/StudentLabels.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/Student.php&category_id=1','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/Student.php&category_id=3','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/Student.php&category_id=4','Y','Y','2019-07-28 19:26:33',NULL),(2,'users/User.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/Rooms.php','Y','Y','2019-07-28 19:26:33',NULL),(2,'grades/Grades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'users/Preferences.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'scheduling/Schedule.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'scheduling/PrintSchedules.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'scheduling/PrintClassLists.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'scheduling/PrintClassPictures.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/InputFinalGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/ReportCards.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/Grades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/Assignments.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/AnomalousGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/Configuration.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/ProgressReports.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/StudentGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/FinalGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/ReportCardGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'grades/ReportCardComments.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'attendance/TakeAttendance.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'attendance/DailySummary.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'attendance/StudentSummary.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'eligibility/EnterEligibility.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'scheduling/ViewSchedule.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'attendance/StudentSummary.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'attendance/DailySummary.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'eligibility/Student.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'eligibility/StudentList.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'schoolsetup/Schools.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'schoolsetup/Calendar.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'students/Student.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'students/Student.php&category_id=1','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'students/Student.php&category_id=3','Y','Y','2019-07-28 19:26:33',NULL),(4,'users/User.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'users/User.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(4,'users/Preferences.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'scheduling/ViewSchedule.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'scheduling/Requests.php','Y','Y','2019-07-28 19:26:33',NULL),(4,'grades/StudentGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'grades/FinalGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'grades/ReportCards.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'grades/Transcripts.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'grades/GPARankList.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'users/User.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(4,'users/User.php&category_id=3','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'schoolsetup/Courses.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'schoolsetup/CourseCatalog.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'schoolsetup/PrintCatalog.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'schoolsetup/PrintAllCourses.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'students/Student.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(4,'students/ChangePassword.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'scheduling/StudentScheduleReport.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'grades/ParentProgressReports.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'scheduling/StudentScheduleReport.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/PortalNotes.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'schoolsetup/MarkingPeriods.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/Calendar.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'schoolsetup/Periods.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/GradeLevels.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/Schools.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/UploadLogo.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/Schools.php?new_school=true','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/CopySchool.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/SystemPreference.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/Courses.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/CourseCatalog.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/PrintCatalog.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/PrintCatalogGradeLevel.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/PrintAllCourses.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'schoolsetup/TeacherReassignment.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'students/Student.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Student.php&include=GeneralInfoInc&student_id=new','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/AssignOtherInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/AddUsers.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/AdvancedReport.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/AddDrop.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Letters.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/MailingLabels.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/StudentLabels.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/PrintStudentInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/PrintStudentContactInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/GoalReport.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/StudentFields.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'students/EnrollmentCodes.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Upload.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Upload.php?modfunc=edit','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Student.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Student.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Student.php&category_id=3','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Student.php&category_id=4','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/Student.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(5,'users/User.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'users/User.php&staff_id=new','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/AddStudents.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/Preferences.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/Profiles.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/Exceptions.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/UserFields.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/TeacherPrograms.php?include=grades/InputFinalGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/TeacherPrograms.php?include=grades/Grades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/TeacherPrograms.php?include=grades/ProgressReports.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'users/TeacherPrograms.php?include=attendance/TakeAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'users/TeacherPrograms.php?include=attendance/Missing_Attendance.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'users/TeacherPrograms.php?include=eligibility/EnterEligibility.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'users/User.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(5,'users/User.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(5,'scheduling/Schedule.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/ViewSchedule.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/Requests.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/MassSchedule.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/MassRequests.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/MassDrops.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/PrintSchedules.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'scheduling/PrintClassLists.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'scheduling/PrintClassPictures.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/PrintRequests.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/ScheduleReport.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/RequestsReport.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/UnfilledRequests.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/IncompleteSchedules.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/AddDrop.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'scheduling/Scheduler.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/ReportCards.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'grades/CalcGPA.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'grades/Transcripts.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'grades/TeacherCompletion.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/GradeBreakdown.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/FinalGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/GPARankList.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/AdminProgressReports.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/HonorRoll.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/ReportCardGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'grades/ReportCardComments.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'grades/HonorRollSetup.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'grades/FixGPA.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/EditReportCardGrades.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'grades/EditHistoryMarkingPeriods.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'attendance/Administration.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/AddAbsences.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/AttendanceData.php?list_by_day=true','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/Percent.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/Percent.php?list_by_day=true','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/DailySummary.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/StudentSummary.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/TeacherCompletion.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/FixDailyAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/DuplicateAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'attendance/AttendanceCodes.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'eligibility/Student.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'eligibility/AddActivity.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'eligibility/StudentList.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'eligibility/TeacherCompletion.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'eligibility/Activities.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'eligibility/EntryTimes.php','Y',NULL,'2019-07-28 19:26:33',NULL),(5,'tools/LogDetails.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'tools/DeleteLog.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'tools/Rollover.php','Y','Y','2019-07-28 19:26:33',NULL),(2,'users/Staff.php','Y',NULL,'2019-07-28 19:26:33',NULL),(1,'schoolsetup/SchoolCustomFields.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&category_id=6','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&category_id=7','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/User.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/PortalNotes.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/Schools.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/Schools.php?new_school=true','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/CopySchool.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/MarkingPeriods.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/Calendar.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/Periods.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/GradeLevels.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/Rollover.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/Courses.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/CourseCatalog.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/PrintCatalog.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/PrintCatalogGradeLevel.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/PrintAllCourses.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/UploadLogo.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/TeacherReassignment.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&include=GeneralInfoInc&student_id=new','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/AssignOtherInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/AddUsers.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/AdvancedReport.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/AddDrop.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Letters.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/MailingLabels.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/StudentLabels.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/PrintStudentInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/PrintStudentContactInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/GoalReport.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/StudentFields.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/AddressFields.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/PeopleFields.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/EnrollmentCodes.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Upload.php?modfunc=edit','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Upload.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&category_id=3','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&category_id=4','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/StudentReenroll.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/EnrollmentReport.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/User.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/User.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/User.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/User.php&staff_id=new','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/AddStudents.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Preferences.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Profiles.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Exceptions.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/UserFields.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/TeacherPrograms.php?include=grades/InputFinalGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/TeacherPrograms.php?include=grades/Grades.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/TeacherPrograms.php?include=attendance/TakeAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/TeacherPrograms.php?include=attendance/Missing_Attendance.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/TeacherPrograms.php?include=eligibility/EnterEligibility.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/UploadUserPhoto.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/UploadUserPhoto.php?modfunc=edit','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/UserAdvancedReport.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/UserAdvancedReportStaff.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/Schedule.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/Requests.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/MassSchedule.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/MassRequests.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/MassDrops.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/ScheduleReport.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/RequestsReport.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/UnfilledRequests.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/IncompleteSchedules.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/AddDrop.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/PrintSchedules.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/PrintRequests.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/PrintClassLists.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/PrintClassPictures.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/Courses.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/Scheduler.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'scheduling/ViewSchedule.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/ReportCards.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/CalcGPA.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/Transcripts.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/TeacherCompletion.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/GradeBreakdown.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/FinalGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/GPARankList.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/ReportCardGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/ReportCardComments.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/FixGPA.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/EditReportCardGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/EditHistoryMarkingPeriods.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/HistoricalReportCardGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/Administration.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/AddAbsences.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/AttendanceData.php?list_by_day=true','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/Percent.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/Percent.php?list_by_day=true','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/DailySummary.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/StudentSummary.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/TeacherCompletion.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/DuplicateAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/AttendanceCodes.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'attendance/FixDailyAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'eligibility/Student.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'eligibility/AddActivity.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'eligibility/StudentList.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'eligibility/TeacherCompletion.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'eligibility/Activities.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'eligibility/EntryTimes.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'tools/LogDetails.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'tools/DeleteLog.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'schoolsetup/SchoolCustomFields.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'tools/Rollover.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Upload.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Upload.php?modfunc=edit','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/SystemPreference.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'students/Student.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/HonorRoll.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/TeacherPrograms.php?include=grades/ProgressReports.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/User.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/HonorRollSetup.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'grades/AdminProgressReports.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php&staff_id=new','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Exceptions_staff.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/StaffFields.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php&category_id=3','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php&category_id=4','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php&category_id=6','Y','Y','2019-07-28 23:26:33',NULL),(1,'messaging/Inbox.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'messaging/Compose.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'messaging/SentMail.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'messaging/Trash.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'messaging/Group.php','Y','Y','2019-07-28 19:26:33',NULL),(4,'messaging/Inbox.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'messaging/Compose.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'messaging/SentMail.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'messaging/Trash.php','Y',NULL,'2019-07-28 19:26:33',NULL),(4,'messaging/Group.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'messaging/Inbox.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'messaging/Compose.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'messaging/SentMail.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'messaging/Trash.php','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'messaging/Group.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'messaging/Inbox.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'messaging/Compose.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'messaging/SentMail.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'messaging/Trash.php','Y',NULL,'2019-07-28 19:26:33',NULL),(3,'messaging/Group.php','Y',NULL,'2019-07-28 19:26:33',NULL),(0,'students/Student.php&category_id=6','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php&category_id=7','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/User.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/PortalNotes.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/Schools.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/Schools.php?new_school=true','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/CopySchool.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/MarkingPeriods.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/Calendar.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/Periods.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/GradeLevels.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/Rollover.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/Courses.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/CourseCatalog.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/PrintCatalog.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/PrintCatalogGradeLevel.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/PrintAllCourses.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/UploadLogo.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/TeacherReassignment.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php&include=GeneralInfoInc&student_id=new','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/AssignOtherInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/AddUsers.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/AdvancedReport.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/AddDrop.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Letters.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/MailingLabels.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/StudentLabels.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/PrintStudentInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/PrintStudentContactInfo.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/GoalReport.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/StudentFields.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/AddressFields.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/PeopleFields.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/EnrollmentCodes.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Upload.php?modfunc=edit','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Upload.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php&category_id=3','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php&category_id=4','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/StudentReenroll.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/EnrollmentReport.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/User.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/User.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/User.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/User.php&staff_id=new','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/AddStudents.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Preferences.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Profiles.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Exceptions.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/UserFields.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=grades/InputFinalGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=grades/Grades.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=attendance/TakeAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=attendance/Missing_Attendance.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=eligibility/EnterEligibility.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/UploadUserPhoto.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/UploadUserPhoto.php?modfunc=edit','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/UserAdvancedReport.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/UserAdvancedReportStaff.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/Schedule.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/Requests.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/MassSchedule.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/MassRequests.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/MassDrops.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/ScheduleReport.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/RequestsReport.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/UnfilledRequests.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/IncompleteSchedules.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/AddDrop.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/PrintSchedules.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/PrintRequests.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/PrintClassLists.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/PrintClassPictures.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/Courses.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/Scheduler.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'scheduling/ViewSchedule.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/ReportCards.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/CalcGPA.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/Transcripts.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/TeacherCompletion.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/GradeBreakdown.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/FinalGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/GPARankList.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/ReportCardGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/ReportCardComments.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/FixGPA.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/EditReportCardGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/EditHistoryMarkingPeriods.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/HistoricalReportCardGrades.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/Administration.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/AddAbsences.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/AttendanceData.php?list_by_day=true','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/Percent.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/Percent.php?list_by_day=true','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/DailySummary.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/StudentSummary.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/TeacherCompletion.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/DuplicateAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/AttendanceCodes.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'attendance/FixDailyAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'eligibility/Student.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'eligibility/AddActivity.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'eligibility/StudentList.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'eligibility/TeacherCompletion.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'eligibility/Activities.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'eligibility/EntryTimes.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'tools/LogDetails.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'tools/DeleteLog.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'tools/Backup.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'tools/Rollover.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Upload.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Upload.php?modfunc=edit','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/SystemPreference.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'students/Student.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/HonorRoll.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=grades/ProgressReports.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/User.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/HonorRollSetup.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/AdminProgressReports.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php&staff_id=new','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Exceptions_staff.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/StaffFields.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php&category_id=3','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php&category_id=4','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php&category_id=6','Y','Y','2019-07-28 23:26:33',NULL),(0,'schoolsetup/SchoolCustomFields.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'messaging/Inbox.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'messaging/Compose.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'messaging/SentMail.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'messaging/Trash.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'messaging/Group.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/Rooms.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/school_specific_standards.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=grades/AdminProgressReports.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'tools/Reports.php?func=Basic','Y','Y','2019-07-28 19:26:33',NULL),(0,'tools/Reports.php?func=Ins_r','Y','Y','2019-07-28 19:26:33',NULL),(0,'tools/Reports.php?func=Ins_cf','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/us_common_standards.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'schoolsetup/EffortGradeLibrary.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'grades/EffortGradeSetup.php','Y','Y','2019-07-28 19:26:33',NULL),(4,'scheduling/PrintSchedules.php','Y',NULL,'2019-07-28 19:26:33',NULL),(0,'users/TeacherPrograms.php?include=attendance/MissingAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(0,'users/Staff.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(1,'schoolsetup/Rooms.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/TeacherPrograms.php?include=attendance/MissingAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(1,'users/Staff.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(5,'students/EnrollmentReport.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'users/TeacherPrograms.php?include=attendance/MissingAttendance.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'messaging/Inbox.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'messaging/Compose.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'messaging/SentMail.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'messaging/Trash.php','Y','Y','2019-07-28 19:26:33',NULL),(5,'messaging/Group.php','Y','Y','2019-07-28 19:26:33',NULL),(2,'users/Staff.php&category_id=1','Y','Y','2019-07-28 19:26:33',NULL),(2,'users/Staff.php&category_id=2','Y','Y','2019-07-28 19:26:33',NULL),(2,'users/Staff.php&category_id=3','Y',NULL,'2019-07-28 19:26:33',NULL),(2,'users/Staff.php&category_id=4','Y','Y','2019-07-28 19:26:33',NULL),(2,'users/Staff.php&category_id=5','Y','Y','2019-07-28 19:26:33',NULL),(2,'users/Staff.php&category_id=6','Y','Y','2019-07-28 23:26:33',NULL),(4,'grades/ParentProgressReports.php','Y',NULL,'2019-07-28 19:26:33',NULL),(0,'schoolsetup/Sections.php','Y','Y','2019-07-26 01:53:00',NULL),(1,'schoolsetup/Sections.php','Y','Y','2019-07-26 01:53:25',NULL),(0,'tools/DataImport.php','Y','Y','2019-07-26 01:53:25',NULL),(1,'tools/DataImport.php','Y','Y','2019-07-26 01:53:25',NULL),(0,'tools/GenerateApi.php','Y','Y','2020-11-03 05:34:02',NULL),(1,'tools/GenerateApi.php','Y','Y','2019-08-05 02:33:56',NULL),(0,'scheduling/SchoolwideScheduleReport.php','Y','Y','2022-09-27 13:54:07',NULL),(1,'scheduling/SchoolwideScheduleReport.php','Y','Y','2022-09-27 13:54:07',NULL);
 
 --
 -- Dumping data for table `program_config`
@@ -609,103 +95,7 @@
 -- Dumping data for table `program_user_config`
 --
 
-INSERT INTO `program_user_config` (`user_id`, `school_id`, `program`, `title`, `value`, `last_updated`, `updated_by`) VALUES
-('1', NULL, 'Preferences', 'THEME', 'blue', '2019-07-28 09:56:33', NULL),
-('1', NULL, 'Preferences', 'MONTH', 'M', '2019-07-28 09:56:33', NULL),
-('1', NULL, 'Preferences', 'DAY', 'j', '2019-07-28 09:56:33', NULL),
-('1', NULL, 'Preferences', 'YEAR', 'Y', '2019-07-28 09:56:33', NULL),
-('1', NULL, 'Preferences', 'HIDDEN', 'Y', '2019-07-28 09:56:33', NULL),
-('1', NULL, 'Preferences', 'CURRENCY', '1', '2019-07-28 09:56:33', NULL),
-('1', NULL, 'Preferences', 'HIDE_ALERTS', 'N', '2019-07-28 09:56:33', NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 13:58:51',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 13:58:51',NULL),
-(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 13:58:51',NULL),
-(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 13:58:51',NULL),
-(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 13:58:51',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 14:27:03',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 14:27:03',NULL),
-(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 14:27:03',NULL),
-(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 14:27:03',NULL),
-(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 14:27:03',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_1','2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','ANOMALOUS_MAX','100_1','2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','LATENCY','0_1','2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','Q-14',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','Q-15',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','Q-16',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','Q-17',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 14:27:21',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','WEIGHT','Y_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','ANOMALOUS_MAX','100_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','LATENCY','0_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','Q-14','100_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','Q-15','100_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','Q-16','100_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','Q-17','100_2','2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 14:28:25',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','WEIGHT','Y_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','ANOMALOUS_MAX','100_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','LATENCY','0_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','Q-14','100_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','Q-15','100_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','Q-16','100_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','Q-17','100_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','SEM-14','40_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','SEM-15','40_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','SEM-E12','20_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','SEM-16','40_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','SEM-17','40_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','SEM-E13','20_18','2020-08-11 17:51:28',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','WEIGHT','Y_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','ANOMALOUS_MAX','100_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','LATENCY','0_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','Q-14','100_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','Q-15','100_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','Q-16','100_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','Q-17','100_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','SEM-14','40_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','SEM-15','40_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','SEM-E12','20_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','SEM-16','40_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','SEM-17','40_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','SEM-E13','20_19','2020-08-12 08:08:43',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2021-08-07 17:16:52',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2021-08-07 17:16:52',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2021-08-07 17:17:17',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2021-08-07 17:17:17',NULL),
-(2,1,'Gradebook','ROUNDING',NULL,'2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','WEIGHT','Y_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','DEFAULT_ASSIGNED','Y_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','ANOMALOUS_MAX','100_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','LATENCY','0_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','COMMENT_A',NULL,'2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','Q-21','100_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','Q-22','100_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','Q-23','100_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','Q-24','100_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','SEM-21','40_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','SEM-22','40_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','SEM-E19','20_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','SEM-23','40_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','SEM-24','40_28','2021-08-07 17:17:31',NULL),
-(2,1,'Gradebook','SEM-E20','20_28','2021-08-07 17:17:31',NULL);
-
+INSERT INTO `program_user_config` (`user_id`, `school_id`, `program`, `title`, `value`, `last_updated`, `updated_by`) VALUES (1,NULL,'Preferences','THEME','blue','2019-07-28 13:56:33',NULL),(1,NULL,'Preferences','MONTH','M','2019-07-28 13:56:33',NULL),(1,NULL,'Preferences','DAY','j','2019-07-28 13:56:33',NULL),(1,NULL,'Preferences','YEAR','Y','2019-07-28 13:56:33',NULL),(1,NULL,'Preferences','HIDDEN','Y','2019-07-28 13:56:33',NULL),(1,NULL,'Preferences','CURRENCY','1','2019-07-28 13:56:33',NULL),(1,NULL,'Preferences','HIDE_ALERTS','N','2019-07-28 13:56:33',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 17:58:51',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 17:58:51',NULL),(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 17:58:51',NULL),(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 17:58:51',NULL),(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 17:58:51',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 18:27:03',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 18:27:03',NULL),(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 18:27:03',NULL),(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 18:27:03',NULL),(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 18:27:03',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_1','2020-08-11 18:27:21',NULL),(2,1,'Gradebook','ANOMALOUS_MAX','100_1','2020-08-11 18:27:21',NULL),(2,1,'Gradebook','LATENCY','0_1','2020-08-11 18:27:21',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','Q-14',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','Q-15',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','Q-16',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','Q-17',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 18:27:21',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 18:28:25',NULL),(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','WEIGHT','Y_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','ANOMALOUS_MAX','100_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','LATENCY','0_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 18:28:25',NULL),(2,1,'Gradebook','Q-14','100_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','Q-15','100_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','Q-16','100_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','Q-17','100_2','2020-08-11 18:28:25',NULL),(2,1,'Gradebook','SEM-16',NULL,'2020-08-11 18:28:25',NULL),(2,1,'Gradebook','SEM-17',NULL,'2020-08-11 18:28:25',NULL),(2,1,'Gradebook','SEM-E13',NULL,'2020-08-11 18:28:25',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2020-08-11 21:51:28',NULL),(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','WEIGHT','Y_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','ANOMALOUS_MAX','100_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','LATENCY','0_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-11 21:51:28',NULL),(2,1,'Gradebook','Q-14','100_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','Q-15','100_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','Q-16','100_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','Q-17','100_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','SEM-14','40_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','SEM-15','40_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','SEM-E12','20_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','SEM-16','40_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','SEM-17','40_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','SEM-E13','20_18','2020-08-11 21:51:28',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2020-08-12 12:08:43',NULL),(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','WEIGHT','Y_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','ANOMALOUS_MAX','100_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','LATENCY','0_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2020-08-12 12:08:43',NULL),(2,1,'Gradebook','Q-14','100_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','Q-15','100_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','Q-16','100_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','Q-17','100_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','SEM-14','40_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','SEM-15','40_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','SEM-E12','20_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','SEM-16','40_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','SEM-17','40_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','SEM-E13','20_19','2020-08-12 12:08:43',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2021-08-07 21:16:52',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2021-08-07 21:16:52',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2021-08-07 21:17:17',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2021-08-07 21:17:17',NULL),(2,1,'Gradebook','ROUNDING',NULL,'2021-08-07 21:17:31',NULL),(2,1,'Gradebook','ASSIGNMENT_SORTING','ASSIGNMENT_ID_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','WEIGHT','Y_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','DEFAULT_ASSIGNED','Y_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','ANOMALOUS_MAX','100_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','LATENCY','0_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','COMMENT_A',NULL,'2021-08-07 21:17:31',NULL),(2,1,'Gradebook','Q-21','100_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','Q-22','100_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','Q-23','100_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','Q-24','100_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','SEM-21','40_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','SEM-22','40_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','SEM-E19','20_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','SEM-23','40_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','SEM-24','40_28','2021-08-07 21:17:31',NULL),(2,1,'Gradebook','SEM-E20','20_28','2021-08-07 21:17:31',NULL);
 
 --
 -- Dumping data for table `schools`
@@ -720,17 +110,13 @@
 -- Dumping data for table `system_preference`
 --
 
-
-INSERT INTO `system_preference` (`id`, `school_id`, `full_day_minute`, `half_day_minute`, `last_updated`, `updated_by`) VALUES
-(1, 1, 5, 2, '2019-07-28 15:26:33', NULL);
-
+INSERT INTO `system_preference` (`id`, `school_id`, `full_day_minute`, `half_day_minute`, `last_updated`, `updated_by`) VALUES (1,1,5,2,'2019-07-28 19:26:33',NULL);
 
 --
 -- Dumping data for table `login_message`
 --
 
-INSERT INTO `login_message` (`id`, `message`, `display`) VALUES
-(1, 'This is a restricted network. Use of this network, its equipment, and resources is monitored at all times and requires explicit permission from the network administrator. If you do not have this permission in writing, you are violating the regulations of this network and can and will be prosecuted to the fullest extent of law. By continuing into this system, you are acknowledging that you are aware of and agree to these terms.', 'Y');
+INSERT INTO `login_message` (`id`, `message`, `display`) VALUES (1,'This is a restricted network. Use of this network, its equipment, and resources is monitored at all times and requires explicit permission from the network administrator. If you do not have this permission in writing, you are violating the regulations of this network and can and will be prosecuted to the fullest extent of law. By continuing into this system, you are acknowledging that you are aware of and agree to these terms.','Y');
 
 
 
@@ -751,7 +137,7 @@
 --
 
 INSERT INTO `staff` (`staff_id`, `current_school_id`, `title`, `first_name`, `last_name`, `middle_name`, `phone`, `email`, `profile`, `homeroom`, `profile_id`, `primary_language_id`, `gender`, `ethnicity_id`, `birthdate`, `alternate_id`, `name_suffix`, `second_language_id`, `third_language_id`, `is_disable`, `physical_disability`, `disability_desc`, `img_name`, `img_content`, `last_updated`, `updated_by`) VALUES
-(1, '1', NULL, 'Joe', 'Administrator', '', NULL, 'joe@pshs.edu', 'admin', NULL, '0', 1, 'Male', 1, NULL, NULL, NULL, 5, NULL, 'N', 'N', NULL, NULL,NULL, '2015-07-28 09:56:33', NULL);
+(1, '1', NULL, 'OS4Ed', 'Administrator', '', NULL, 'info@os4ed.com', 'admin', NULL, '0', 1, 'Male', 1, NULL, NULL, NULL, 5, NULL, 'N', 'N', NULL, NULL,NULL, '2015-07-28 09:56:33', NULL);
 
 
 --
@@ -773,71 +159,30 @@
 -- Dumping data for table `people_field_categories`
 --
 
-INSERT INTO `people_field_categories` (`id`, `title`, `sort_order`, `include`, `admin`, `teacher`, `parent`, `none`, `last_updated`, `updated_by`) VALUES
-(1, 'General Info', '1', NULL, 'Y', 'Y', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-(2, 'Address Info', '2', NULL, 'Y', 'Y', 'Y', 'Y', '2019-07-28 15:26:33', NULL);
+INSERT INTO `people_field_categories` (`id`, `title`, `sort_order`, `include`, `admin`, `teacher`, `parent`, `none`, `last_updated`, `updated_by`) VALUES (1,'General Info',1,NULL,'Y','Y','Y','Y','2019-07-28 19:26:33',NULL),(2,'Address Info',2,NULL,'Y','Y','Y','Y','2019-07-28 19:26:33',NULL);
+
 --
 -- Dumping data for table `staff_field_categories`
 --
 
-INSERT INTO `staff_field_categories` (`id`, `title`, `sort_order`, `include`, `admin`, `teacher`, `parent`, `none`, `last_updated`, `updated_by`) VALUES
-(1, 'Demographic Info', '1', NULL, 'Y', 'Y', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-(2, 'Addresses & Contacts', '2', NULL, 'Y', 'Y', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-(3, 'School Information', '3', NULL, 'Y', 'Y', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-(4, 'Certification Information', '4', NULL, 'Y', 'Y', 'Y', 'Y', '2019-07-28 15:26:33', NULL),
-(5, 'Schedule', '5', NULL, 'Y', 'Y', NULL, NULL, '2019-07-28 15:26:33', NULL),
-(6, 'Files', '6', NULL, 'Y', 'Y', NULL, NULL, '2019-07-28 19:26:33', NULL);
-
-
+INSERT INTO `staff_field_categories` (`id`, `title`, `sort_order`, `include`, `admin`, `teacher`, `parent`, `none`, `last_updated`, `updated_by`) VALUES (1,'Demographic Info',1,NULL,'Y','Y','Y','Y','2019-07-28 19:26:33',NULL),(2,'Addresses & Contacts',2,NULL,'Y','Y','Y','Y','2019-07-28 19:26:33',NULL),(3,'School Information',3,NULL,'Y','Y','Y','Y','2019-07-28 19:26:33',NULL),(4,'Certification Information',4,NULL,'Y','Y','Y','Y','2019-07-28 19:26:33',NULL),(5,'Schedule',5,NULL,'Y','Y',NULL,NULL,'2019-07-28 19:26:33',NULL),(6,'Files',6,NULL,'Y','Y',NULL,NULL,'2019-07-28 23:26:33',NULL);
 
 --
 -- Dumping data for table `ethnicity`
 --
 
-INSERT INTO `ethnicity` (`ethnicity_id`, `ethnicity_name`, `sort_order`, `last_updated`, `updated_by`) VALUES
-(1, 'White, Non-Hispanic', 1, '0000-00-00 00:00:00', NULL),
-(2, 'Black, Non-Hispanic', 2, '0000-00-00 00:00:00', NULL),
-(3, 'Hispanic', 3, '0000-00-00 00:00:00', NULL),
-(4, 'American Indian or Native Alaskan', 4, '0000-00-00 00:00:00', NULL),
-(5, 'Pacific Islander', 5, '0000-00-00 00:00:00', NULL),
-(6, 'Asian', 6, '0000-00-00 00:00:00', NULL),
-(7, 'Indian', 7, '0000-00-00 00:00:00', NULL),
-(8, 'Middle Eastern', 8, '0000-00-00 00:00:00', NULL),
-(9, 'African', 9, '0000-00-00 00:00:00', NULL),
-(10, 'Mixed Race', 10, '0000-00-00 00:00:00', NULL),
-(11, 'Other', 11, '0000-00-00 00:00:00', NULL);
-
+INSERT INTO `ethnicity` (`ethnicity_id`, `ethnicity_name`, `sort_order`, `last_updated`, `updated_by`) VALUES (1,'White, Non-Hispanic',1,'0000-00-00 00:00:00',NULL),(2,'Black, Non-Hispanic',2,'0000-00-00 00:00:00',NULL),(3,'Hispanic',3,'0000-00-00 00:00:00',NULL),(4,'American Indian or Native Alaskan',4,'0000-00-00 00:00:00',NULL),(5,'Pacific Islander',5,'0000-00-00 00:00:00',NULL),(6,'Asian',6,'0000-00-00 00:00:00',NULL),(7,'Indian',7,'0000-00-00 00:00:00',NULL),(8,'Middle Eastern',8,'0000-00-00 00:00:00',NULL),(9,'African',9,'0000-00-00 00:00:00',NULL),(10,'Mixed Race',10,'0000-00-00 00:00:00',NULL),(11,'Other',11,'0000-00-00 00:00:00',NULL);
 
 --
 -- Dumping data for table `language`
 --
 
-INSERT INTO `language` (`language_id`, `language_name`, `sort_order`, `last_updated`, `updated_by`) VALUES
-(1, 'English', 1, '2019-07-28 15:26:33', NULL),
-(2, 'Arabic', 2, '2019-07-28 15:26:33', NULL),
-(3, 'Bengali', 3, '2019-07-28 15:26:33', NULL),
-(4, 'Chinese', 4, '2019-07-28 15:26:33', NULL),
-(5, 'French', 5, '2019-07-28 15:26:33', NULL),
-(6, 'German', 6, '2019-07-28 15:26:33', NULL),
-(7, 'Haitian Creole', 7, '2019-07-28 15:26:33', NULL),
-(8, 'Hindi', 8, '2019-07-28 15:26:33', NULL),
-(9, 'Italian', 9, '2019-07-28 15:26:33', NULL),
-(10, 'Japanese', 10, '2019-07-28 15:26:33', NULL),
-(11, 'Korean', 11, '2019-07-28 15:26:33', NULL),
-(12, 'Malay', 12, '2019-07-28 15:26:33', NULL),
-(13, 'Polish', 13, '2019-07-28 15:26:33', NULL),
-(14, 'Portuguese', 14, '2019-07-28 15:26:33', NULL),
-(15, 'Russian', 15, '2019-07-28 15:26:33', NULL),
-(16, 'Spanish', 16, '2019-07-28 15:26:33', NULL),
-(17, 'Thai', 17, '2019-07-28 15:26:33', NULL),
-(18, 'Turkish', 18, '2019-07-28 15:26:33', NULL),
-(19, 'Urdu', 19, '2019-07-28 15:26:33', NULL),
-(20, 'Vietnamese', 20, '2019-07-28 15:26:33', NULL);
-
+INSERT INTO `language` (`language_id`, `language_name`, `sort_order`, `last_updated`, `updated_by`) VALUES (1,'English',1,'2019-07-28 19:26:33',NULL),(2,'Arabic',2,'2019-07-28 19:26:33',NULL),(3,'Bengali',3,'2019-07-28 19:26:33',NULL),(4,'Chinese',4,'2019-07-28 19:26:33',NULL),(5,'French',5,'2019-07-28 19:26:33',NULL),(6,'German',6,'2019-07-28 19:26:33',NULL),(7,'Haitian Creole',7,'2019-07-28 19:26:33',NULL),(8,'Hindi',8,'2019-07-28 19:26:33',NULL),(9,'Italian',9,'2019-07-28 19:26:33',NULL),(10,'Japanese',10,'2019-07-28 19:26:33',NULL),(11,'Korean',11,'2019-07-28 19:26:33',NULL),(12,'Malay',12,'2019-07-28 19:26:33',NULL),(13,'Polish',13,'2019-07-28 19:26:33',NULL),(14,'Portuguese',14,'2019-07-28 19:26:33',NULL),(15,'Russian',15,'2019-07-28 19:26:33',NULL),(16,'Spanish',16,'2019-07-28 19:26:33',NULL),(17,'Thai',17,'2019-07-28 19:26:33',NULL),(18,'Turkish',18,'2019-07-28 19:26:33',NULL),(19,'Urdu',19,'2019-07-28 19:26:33',NULL),(20,'Vietnamese',20,'2019-07-28 19:26:33',NULL);
 
 --
 -- Dumping data for table `student_enrollment_codes`
 --
+
 INSERT INTO `student_enrollment_codes` (`syear`, `title`, `short_name`, `type`, `last_updated`, `updated_by`) VALUES
 (".$_SESSION['syear'].",  'Transferred Out', 'TRAN', 'TrnD', '2019-07-28 05:56:33', NULL),
 (".$_SESSION['syear'].",  'Transferred In', 'TRAN', 'TrnE', '2019-07-28 05:56:33', NULL),
@@ -849,15 +194,7 @@
 -- Dumping data for table `student_field_categories`
 --
 
-INSERT INTO `student_field_categories` (`id`, `title`, `sort_order`, `include`, `last_updated`, `updated_by`) VALUES
-(1, 'General Info', '1', NULL, '2019-07-28 15:26:33', NULL),
-(2, 'Medical', '3', NULL, '2019-07-28 15:26:33', NULL),
-(3, 'Addresses & Contacts', '2', NULL, '2019-07-28 15:26:33', NULL),
-(4, 'Comments', '4', NULL, '2019-07-28 15:26:33', NULL),
-(5, 'Goals', '5', NULL, '2019-07-28 15:26:33', NULL),
-(6, 'Enrollment Info', '6', NULL, '2019-07-28 15:26:33', NULL),
-(7, 'Files', '7', NULL, '2019-07-28 15:26:33', NULL);
-
+INSERT INTO `student_field_categories` (`id`, `title`, `sort_order`, `include`, `last_updated`, `updated_by`) VALUES (1,'General Info',1,NULL,'2019-07-28 19:26:33',NULL),(2,'Medical',3,NULL,'2019-07-28 19:26:33',NULL),(3,'Addresses & Contacts',2,NULL,'2019-07-28 19:26:33',NULL),(4,'Comments',4,NULL,'2019-07-28 19:26:33',NULL),(5,'Goals',5,NULL,'2019-07-28 19:26:33',NULL),(6,'Enrollment Info',6,NULL,'2019-07-28 19:26:33',NULL),(7,'Files',7,NULL,'2019-07-28 19:26:33',NULL);
 
 --
 -- Adding Schoolwide Schedule Report to `profile_exceptions`
@@ -867,8 +204,6 @@
 ('0', 'scheduling/SchoolwideScheduleReport.php', 'Y', 'Y'),
 ('1', 'scheduling/SchoolwideScheduleReport.php', 'Y', 'Y');
 
-
-
 --
 -- Dumping data for table `user_profiles`
 --
@@ -878,30 +213,25 @@
 UPDATE  `user_profiles` SET  `id` =  '0' ;
 ALTER TABLE  `user_profiles` AUTO_INCREMENT=1;
 
-INSERT INTO `user_profiles` (`id`, `profile`, `title`, `last_updated`, `updated_by`) VALUES
-(1, 'admin', 'Administrator', '2019-07-28 04:26:33', NULL),
-(2, 'teacher', 'Teacher', '2019-07-28 04:26:33', NULL),
-(3, 'student', 'Student', '2019-07-28 04:26:33', NULL),
-(4, 'parent', 'Parent', '2019-07-28 04:26:33', NULL),
-(5, 'admin', 'Admin Asst', '2019-07-28 04:26:33', NULL);";
-
-	$dbconn = new mysqli($_SESSION['host'],$_SESSION['username'],$_SESSION['password'],$_SESSION['db'],$_SESSION['port']);
-	$sqllines = par_spt("/[\n]/",$text);
-	$cmd = '';
-	foreach($sqllines as $l)
+INSERT INTO `user_profiles` (`id`, `profile`, `title`, `last_updated`, `updated_by`) VALUES (1,'admin','Administrator','2019-07-28 08:26:33',NULL),(2,'teacher','Teacher','2019-07-28 08:26:33',NULL),(3,'student','Student','2019-07-28 08:26:33',NULL),(4,'parent','Parent','2019-07-28 08:26:33',NULL),(5,'admin','Admin Asst','2019-07-28 08:26:33',NULL);";
+
+$dbconn = new mysqli($_SESSION['host'],$_SESSION['username'],$_SESSION['password'],$_SESSION['db'],$_SESSION['port']);
+$sqllines = par_spt("/[\n]/",$text);
+$cmd = '';
+foreach($sqllines as $l)
+{
+	if(par_rep_mt('/^\s*--/',$l) == 0)
 	{
-		if(par_rep_mt('/^\s*--/',$l) == 0)
+		$cmd .= ' ' . $l . "\n";
+		if(par_rep_mt('/.+;/',$l) != 0)
 		{
-			$cmd .= ' ' . $l . "\n";
-			if(par_rep_mt('/.+;/',$l) != 0)
-			{
-				$result = $dbconn->query($cmd) or die($dbconn->error);
-				$cmd = '';
-			}
+			$result = $dbconn->query($cmd) or die($dbconn->error);
+			$cmd = '';
 		}
 	}
+}
 
-$dbconn->query('INSERT INTO `login_authentication` (`id`, `user_id`, `profile_id`, `username`, `password`, `last_login`, `failed_login`, `last_updated`, `updated_by`) VALUES
-(1, 1, 0, "os4ed", "$2y$10$yR8cf7lao0ed9HAyzsD1wuxerYtxXAuhPGrp5nHXI8lFoWh.ZaxJC", "2019-08-19 23:59:43", 0, "2019-07-28 09:56:33", NULL);');
+$dbconn->query("INSERT INTO `login_authentication` (`id`, `user_id`, `profile_id`, `username`, `password`, `last_login`, `failed_login`, `last_updated`, `updated_by`) VALUES
+(1, 1, 0, 'os4ed', '$2y$10$yR8cf7lao0ed9HAyzsD1wuxerYtxXAuhPGrp5nHXI8lFoWh.ZaxJC', '2019-08-19 23:59:43', 0, '2019-07-28 09:56:33', NULL);");
 
 ?>

--- install/Step0.1.php ---
@@ -25,7 +25,7 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
-error_reporting(E_ALL);
+error_reporting(0);
 session_start();
 session_destroy();
 echo '<script type="text/javascript">

--- install/Step0.php ---
@@ -84,7 +84,7 @@
                                             echo '</tr><tr>';
                                             echo '<td valign="middle" align="center"><a href="Step0.1.php?mod=upgrade"><img src="assets/images/icon-upgrade.png" alt="Upgrade OpenSIS" /><br/><h5 class="text-black"><b>Upgrade</b><br/><small>(From ver 4.7 thru 6.0)</small></h5></a></td>';
                                         } else {
-                                            echo '<td valign="middle" align="center"><a href="SystemCheck.php"><img src="assets/images/icon-package.png" alt="New Installation" /><br/><h5 class="text-black"><b>New Installation</b><br/><small>(Ver 8.0)</small></h5></a></td>';
+                                            echo '<td valign="middle" align="center"><a href="SystemCheck.php"><img src="assets/images/icon-package.png" alt="New Installation" /><br/><h5 class="text-black"><b>New Installation</b><br/><small>(Ver 9.0)</small></h5></a></td>';
                                             echo '<td valign="middle" align="center"><a href="Step0.1.php?mod=upgrade"><img src="assets/images/icon-upgrade.png" alt="Upgrade OpenSIS"/><br/><h5 class="text-black"><b>Upgrade</b><br/><small>(From ver 7.1 onwards)</small></h5></a></td>';
                                         }
                                         ?>

--- install/Step4.php ---
@@ -85,22 +85,30 @@
                                 <form name='step4' id='step4' method="post" action="Ins4.php">
                                     <input type="hidden" id="auname_flag" value="2"/>
                                     <div class="row">
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
                                             <div class="form-group">
                                                 <label class="control-label">First Name</label>
                                                 <input type="text" name="fname" id="fname" size="20" tabindex="1" class="form-control" />
                                             </div>
                                         </div>
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
+                                            <div class="form-group">
+                                                <label class="control-label">Last Name</label>
+                                                <input type="text" name="lname" id="lname" size="20" tabindex="2" class="form-control" />
+                                            </div>
+                                        </div>
+                                    </div>
+                                    <div class="row">
+                                        <div class="col-md-6">
                                             <div class="form-group">
                                                 <label class="control-label">Middle Name</label>
                                                 <input type="text" id="mname" name="mname" size="20" tabindex="3" class="form-control" />
                                             </div>
                                         </div>
-                                        <div class="col-md-4">
+                                        <div class="col-md-6">
                                             <div class="form-group">
-                                                <label class="control-label">Last Name</label>
-                                                <input type="text" name="lname" id="lname" size="20" tabindex="2" class="form-control" />
+                                                <label class="control-label">Email ID</label>
+                                                <input type="text" name="emailid" id="emailid" size="20" tabindex="2" class="form-control" />
                                             </div>
                                         </div>
                                     </div>
@@ -222,6 +230,7 @@ function pass_check()
                 var fname = document.getElementById("fname");
                 var lname = document.getElementById("lname");
                 var mname = document.getElementById("mname");
+                var emailid = document.getElementById("emailid");
                 var auname = document.getElementById("auname");
                 var apassword = document.getElementById("apassword");
                 var capassword = document.getElementById("capassword");
@@ -261,6 +270,44 @@ function pass_check()
                     }
                 }
 
+                if (emailid.value == '')
+                {
+                    document.getElementById("error").innerHTML = '<span class="text-danger">Email ID cannot be blank.</span>';
+
+                    emailid.focus();
+                    return false;
+                }
+                else
+                {
+                    if (emailid.value.length > 100)
+                    {
+                        document.getElementById('error').innerHTML = '<span class="text-danger">Max length for Email ID is 100 characters.</span>';
+                        emailid.focus();
+                        return false;
+                    }
+
+                    var atSymbol = emailid.value.indexOf("@");
+                    var dot = emailid.value.indexOf(".");
+
+                    if (atSymbol < 1) {
+                        document.getElementById('error').innerHTML = '<span class="text-danger">Please enter a valid email ID.</span>';
+                        emailid.focus();
+                        return false;
+                    }
+
+                    if (dot <= atSymbol + 2) {
+                        document.getElementById('error').innerHTML = '<span class="text-danger">Please enter a valid email ID.</span>';
+                        emailid.focus();
+                        return false;
+                    }
+
+                    if (dot === emailid.value.length - 1) {
+                        document.getElementById('error').innerHTML = '<span class="text-danger">Please enter a valid email ID.</span>';
+                        emailid.focus();
+                        return false;
+                    }
+                }
+
                 if (mname.value.length > 50)
                 {
                     document.getElementById('error').innerHTML = '<span class="text-danger">Max length for Middle name is 50 characters.</span>';

--- install/Step5.php ---
@@ -55,7 +55,7 @@
     }
 
     fclose($fh);
-    $display_text = 'Your system has been successfully upgraded to version 8.0. Please click the button below<br/> to proceed to login with your existing login credentials.
+    $display_text = 'Your system has been successfully upgraded to version 9.0. Please click the button below<br/> to proceed to login with your existing login credentials.
 ';
     echo '<!DOCTYPE html>
         <html lang="en">

--- install/Upgrade6.php ---
@@ -284,7 +284,7 @@
 
 
 $qr_staff_field_qr = "CREATE TABLE IF NOT EXISTS `staff_field_categories_new` (
- `id` int(8) NOT NULL DEFAULT '0',
+ `id` int(8) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `title` varchar(100) DEFAULT NULL,
  `sort_order` decimal(10,0) DEFAULT NULL,
  `include` varchar(100) DEFAULT NULL,

--- js/Ajax.js ---
@@ -73,13 +73,13 @@ function load_link_group(the_content, stat) {
         if (stat == '1')
         {
 
-            document.getElementById('divErr').innerHTML = "Member added successfuly.";
+document.getElementById('divErr').innerHTML ="<div class='alert alert-success alert-styled-left'><button type='button' class='close' data-dismiss='alert'><span>�</span><span class='sr-only'>Close</span></button>Member added successfully.</div>";
 
         }
         else if (stat == '2')
         {
 
-            document.getElementById('divErr').innerHTML = "<font style='color:red'>Member deleted successfuly.</font>";
+            document.getElementById('divErr').innerHTML = "<div class='alert alert-danger alert-styled-left'><button type='button' class='close' data-dismiss='alert'><span>�</span><span class='sr-only'>Close</span></button>Member deleted successfully.</div>";
 
         }
 

--- js/Ajaxload.js ---
@@ -78,7 +78,7 @@ function ajax_call(url, callback_function, error_function) {
 }
 // --------------------------------------------------- USER ----------------------------------------------------------------------------------- //
 
-function usercheck_init(i) {
+function usercheck_init(i, userid , profileid) {
     var obj = document.getElementById('ajax_output');
     obj.innerHTML = '';
 
@@ -108,8 +108,7 @@ function usercheck_init(i) {
 
     var pqr = i.value;
 
-
-    ajax_call('Validator.php?u=' + i.value + 'user', usercheck_callback, usercheck_error);
+    ajax_call('Validator.php?u=' + i.value + 'user' + '&userid=' + userid + '&profileid=' + profileid, usercheck_callback, usercheck_error);
 }
 
 function usercheck_callback(data) {
@@ -292,7 +291,7 @@ function grab_GradeLevel_error()
     alert('Not working');
 }
 // ------------------------------------------------------ USER ---------------------------------------------------------------------------------- //
-function usercheck_init_staff(i) {
+function usercheck_init_staff(i, userid, profileid) {
 
     var obj = document.getElementById('ajax_output_st');
     obj.innerHTML = '';
@@ -321,7 +320,7 @@ function usercheck_init_staff(i) {
     window.$("#staff_username_flag").val("1");
     window.$("#mod_staff_btn").attr("disabled", false);
 
-    ajax_call('Validator.php?u=' + i.value + 'stud', usercheck_callback_staff);
+    ajax_call('Validator.php?u=' + i.value + 'user'+'&userid='+ userid+'&profileid='+ profileid, usercheck_callback_staff);
 }
 
 function usercheck_init_staff_2(i) {
@@ -368,7 +367,7 @@ function usercheck_callback_staff(data) {
 }
 // ------------------------------------------------------ Student ------------------------------------------------------------------------------ //
 
-function usercheck_init_student(i) {
+function usercheck_init_student(i, userid = '', profileid) {
     var obj = document.getElementById('ajax_output_st');
     obj.innerHTML = '';
 
@@ -394,7 +393,7 @@ function usercheck_init_student(i) {
     }
     window.$("#stu_username_flag").val("1");
     window.$("#mod_student_btn").attr("disabled", false);
-    ajax_call('Validator.php?u=' + i.value + 'stud', usercheck_callback_student, usercheck_error_student);
+    ajax_call('Validator.php?u=' + i.value + 'stud' + '&userid=' + userid + '&profileid=' + profileid, usercheck_callback_student, usercheck_error_student);
 }
 
 function usercheck_callback_student(data) {
@@ -410,20 +409,37 @@ function usercheck_error_student(err) {
 }
 
 
-function usercheck_init_student_Mod(i) {
-    ajax_call('Validator.php?u=' + i.value + 'stud', usercheck_callback_student_Mod, usercheck_error_student_Mod);
+function usercheck_init_student_Mod(i, userid = '', profileid) {
+    ajax_call('Validator.php?u=' + i.value + 'stud&userid=' + userid + '&profileid=' + profileid, usercheck_callback_student_Mod, usercheck_error_student_Mod);
 }
 
 function usercheck_callback_student_Mod(data) {
     var response = data;
     document.getElementById('ajax_output_st').innerHTML = '';
     if (response != 1)
-    {
-        document.getElementById('students[USERNAME]').value = '';
-        document.getElementById('students[PASSWORD]').value = '';
+    { 
+        if (document.getElementById('students[USERNAME]')) {
+            document.getElementById('students[USERNAME]').value = '';
+        }
+        else if (document.getElementById('inputstudents[USERNAME]')) {
+            document.getElementById('inputstudents[USERNAME]').value = '';
+        }
+
+        if (document.getElementById('students[PASSWORD]')) {
+            document.getElementById('students[PASSWORD]').value = '';
+        }
+        else if (document.getElementById('inputstudents[PASSWORD]')) {
+            document.getElementById('inputstudents[PASSWORD]').value = '';
+        }
+    }
+
+    if (document.getElementById("students[USERNAME]")){
+        var student_username = document.getElementById("students[USERNAME]").value;
+    }
+    else if (document.getElementById("inputstudents[USERNAME]")){
+        var student_username = document.getElementById("inputstudents[USERNAME]").value;
     }
 
-    var student_username = document.getElementById("students[USERNAME]").value;
     var student_username_flag = document.getElementById("stu_username_flag").value;
 
     if(student_username != '' && student_username_flag == '0')
@@ -3317,6 +3333,19 @@ function loadDataTablePaginationCallback(check_return)
     window.$("#loading-image").hide();
 
     window.$("#tabs_resp").html(check_return);
+    window.$("#hidden_checkboxes > input").each(function() {
+        let checkboxId = $(this).data('checkbox-hidden-id')
+        window.$("[value= "+checkboxId + "]").each(function() {
+            $(this).attr('checked', true)
+        })
+        window.$("[id= "+checkboxId + "]").each(function() {
+            $(this).attr('checked', true)
+        })
+    })
+
+    if(document.getElementById('checked_all') && document.getElementById('checked_all').value == 'true'){
+        window.$('input[type=checkbox][name=controller]').attr('checked', true)
+    }
 }
 
 function loadDataTablePaginationErrors(exceptions)

--- js/DataImport.js ---
@@ -231,11 +231,11 @@ function valid_mapping_student(option, this_DET)
     {
         if (error != '')
         {
-            error = error + ', START DATE';
+            error = error + ', STUDENT ENROLLMENT DATE';
         }
         else
         {
-            error = 'START DATE';
+            error = 'STUDENT ENROLLMENT DATE';
         }
     }
 

--- js/DivControl.js ---
@@ -1,17 +1,14 @@
 
-function show_div(name, mp_id)
-{
-    if (document.getElementById(name).checked)
-    {
+function show_div(name, mp_id) {
+    if (document.getElementById(name).checked) {
 
         document.getElementById("grade_div").style.display = "block";
         if (document.getElementById('divtables[' + mp_id + '][DOES_EXAM]'))
             document.getElementById('divtables[' + mp_id + '][DOES_EXAM]').innerHTML = '<input type=checkbox name=tables[' + mp_id + '][DOES_EXAM] id=tables[' + mp_id + '][DOES_EXAM]  value=Y>';
 
         document.getElementById('tables[' + mp_id + '][DOES_EXAM]').disabled = false;
     }
-    if (document.getElementById(name).checked == false)
-    {
+    if (document.getElementById(name).checked == false) {
         if (document.getElementById('divtables[' + mp_id + '][DOES_EXAM]'))
             document.getElementById('divtables[' + mp_id + '][DOES_EXAM]').innerHTML = '<input type=checkbox name=tables[' + mp_id + '][DOES_EXAM] id=tables[' + mp_id + '][DOES_EXAM]>';
         document.getElementById('tables[' + mp_id + '][DOES_EXAM]').checked = false;
@@ -37,163 +34,141 @@ function show_div(name, mp_id)
 }
 
 function selectFile(input) {
-    
-   
-    if(input.files[0].type!='' && (input.files[0].type=='image/png' || input.files[0].type=='image/jpeg'   || input.files[0].type=='image/jpg' || input.files[0].type=='image/tiff' || input.files[0].type=='image/bmp')){
-      if (input.files && input.files[0]) {
-
-  var reader = new FileReader();
-
-  reader.onload = function (e) {
-       document.getElementById('div_img').innerHTML='<img src="" alt="" class="cropper" id="demo-cropper-image">';
-   document.getElementById('demo-cropper-image').src = e.target.result;
-   $('#modal_crop_image').modal('show');
-        $('#modal_crop_image').on('shown.bs.modal', function () {
-            // Define variables
-            var $cropper = $(".cropper"),
-                    $image = $('#demo-cropper-image'),
-                    $download = $('#download'),
-                    $dataX = $('#dataX'),
-                    $dataY = $('#dataY'),
-                    $dataHeight = $('#dataHeight'),
-                    $dataWidth = $('#dataWidth'),
-                    $dataScaleX = $('#dataScaleX'),
-                    $dataScaleY = $('#dataScaleY'),
-                    options = {
-                        aspectRatio: 1,
-                        preview: '.preview',
-                        crop: function (e) {
-                            $dataX.val(Math.round(e.x));
-                            $dataY.val(Math.round(e.y));
-                            $dataHeight.val(Math.round(e.height));
-                            $dataWidth.val(Math.round(e.width));
-                            $dataScaleX.val(e.scaleX);
-                            $dataScaleY.val(e.scaleY);
-
-var dataURL =$cropper.cropper('getCroppedCanvas',{ width: 300, height: 300 }).toDataURL();
-var imgblob=dataURL.split(',');
-$('#imgblob').val(imgblob[1].trim());
-                           
-                        }
-                    };
-
-            // Initialize cropper with options
-            $cropper.cropper(options);
-           
-            
-        });
-  }
-
-  reader.readAsDataURL(input.files[0]);
-  
-        
-    }
-}
-else
-    document.getElementById('divErr').innerHTML='<div class="alert alert-danger alert-styled-left alert-bordered">Unsupported file format, use common image file like - jpeg, png, tiff, bmp etc.</div>';
-//    if (selectedFile.match(/fakepath/)) {
-//        // update the file-path text using case-insensitive regex
-//        selectedFile = selectedFile.replace(/C:\\fakepath\\/i, '');
-//        
-//    }
-//    document.getElementById("uploadFile").innerHTML = selectedFile;
-}
-
-function hide_search_div()
-{
+
+
+    if (input.files[0].type != '' && (input.files[0].type == 'image/png' || input.files[0].type == 'image/jpeg' || input.files[0].type == 'image/jpg' || input.files[0].type == 'image/tiff' || input.files[0].type == 'image/bmp')) {
+        if (input.files && input.files[0]) {
+
+            var reader = new FileReader();
+
+            reader.onload = function (e) {
+                document.getElementById('div_img').innerHTML = '<img src="" alt="" class="cropper" id="demo-cropper-image">';
+                document.getElementById('demo-cropper-image').src = e.target.result;
+                $('#modal_crop_image').modal('show');
+                $('#modal_crop_image').on('shown.bs.modal', function () {
+                    // Define variables
+                    var $cropper = $(".cropper"),
+                        $image = $('#demo-cropper-image'),
+                        $download = $('#download'),
+                        $dataX = $('#dataX'),
+                        $dataY = $('#dataY'),
+                        $dataHeight = $('#dataHeight'),
+                        $dataWidth = $('#dataWidth'),
+                        $dataScaleX = $('#dataScaleX'),
+                        $dataScaleY = $('#dataScaleY'),
+                        options = {
+                            aspectRatio: 1,
+                            preview: '.preview',
+                            crop: function (e) {
+                                $dataX.val(Math.round(e.x));
+                                $dataY.val(Math.round(e.y));
+                                $dataHeight.val(Math.round(e.height));
+                                $dataWidth.val(Math.round(e.width));
+                                $dataScaleX.val(e.scaleX);
+                                $dataScaleY.val(e.scaleY);
+
+                                var dataURL = $cropper.cropper('getCroppedCanvas', { width: 300, height: 300 }).toDataURL();
+                                var imgblob = dataURL.split(',');
+                                $('#imgblob').val(imgblob[1].trim());
+
+                            }
+                        };
+
+                    // Initialize cropper with options
+                    $cropper.cropper(options);
+
+
+                });
+            }
+
+            reader.readAsDataURL(input.files[0]);
+
+
+        }
+    }
+    else
+        document.getElementById('divErr').innerHTML = '<div class="alert alert-danger alert-styled-left alert-bordered">Unsupported file format, use common image file like - jpeg, png, tiff, bmp etc.</div>';
+    //    if (selectedFile.match(/fakepath/)) {
+    //        // update the file-path text using case-insensitive regex
+    //        selectedFile = selectedFile.replace(/C:\\fakepath\\/i, '');
+    //        
+    //    }
+    //    document.getElementById("uploadFile").innerHTML = selectedFile;
+}
+
+function hide_search_div() {
     $("#searchdiv").hide();
-    $("#advancedSearchForStudentDiv, #advancedSearchDivForStudents, #attendanceAdvancedSearchDivForStudents").css({'display': 'inline-block'});
+    $("#advancedSearchForStudentDiv, #advancedSearchDivForStudents, #attendanceAdvancedSearchDivForStudents").css({ 'display': 'inline-block' });
 }
 
-function hide_search_div1()
-{
+function hide_search_div1() {
     $("#searchdiv1").hide();
-    $("#advancedSearchDivForStudentsFilters, #advancedFilterDivForStudents").css({'display': 'inline-block'});
+    $("#advancedSearchDivForStudentsFilters, #advancedFilterDivForStudents").css({ 'display': 'inline-block' });
 }
 
-function show_search_div()
-{
+function show_search_div() {
     $("#searchdiv").show();
     $("#advancedSearchForStudentDiv, #advancedSearchDivForStudents, #attendanceAdvancedSearchDivForStudents").hide();
 }
 
-function show_search_div1()
-{
+function show_search_div1() {
     $("#searchdiv1").show();
     $("#advancedSearchDivForStudentsFilters, #advancedFilterDivForStudents").hide();
 }
 
-function hidediv()
-{
-    if (document.getElementById)
-    {
+function hidediv() {
+    if (document.getElementById) {
         document.getElementById("hideShow").style.display = "none";
     }
 }
 
-function showdiv()
-{
-    if (document.getElementById)
-    {
+function showdiv() {
+    if (document.getElementById) {
         document.getElementById("hideShow").style.display = "block";
     }
 }
 
-function prim_hidediv()
-{
-    if (document.getElementById)
-    {
+function prim_hidediv() {
+    if (document.getElementById) {
         document.getElementById("prim_hideShow").style.display = "none";
     }
 }
 
-function prim_showdiv()
-{
-    if (document.getElementById)
-    {
+function prim_showdiv() {
+    if (document.getElementById) {
         document.getElementById("prim_hideShow").style.display = "block";
     }
 }
 
-function sec_hidediv()
-{
-    if (document.getElementById)
-    {
+function sec_hidediv() {
+    if (document.getElementById) {
         document.getElementById("sec_hideShow").style.display = "none";
     }
 }
 
-function sec_showdiv()
-{
-    if (document.getElementById)
-    {
+function sec_showdiv() {
+    if (document.getElementById) {
         document.getElementById("sec_hideShow").style.display = "block";
     }
 }
 
-function addn_hidediv()
-{
-    if (document.getElementById)
-    {
+function addn_hidediv() {
+    if (document.getElementById) {
         document.getElementById("addn_hideShow").style.display = "none";
     }
 }
 
-function addn_showdiv()
-{
-    if (document.getElementById)
-    {
+function addn_showdiv() {
+    if (document.getElementById) {
         document.getElementById("addn_hideShow").style.display = "block";
     }
 }
 function confirmAction() {
     chk = 'n';
     var option = "";
-    if (document.run_schedule.test_mode.checked == false)
-    {
+    if (document.run_schedule.test_mode.checked == false) {
 
-        if (document.run_schedule.delete_mode.checked == false)
-        {
+        if (document.run_schedule.delete_mode.checked == false) {
 
             chk = 'y';
         }
@@ -202,26 +177,22 @@ function confirmAction() {
     }
     else
         var option = "run the scheduler to schedule unscheduled requests? ";
-    if (chk == 'y')
-    {
+    if (chk == 'y') {
         var d = $('divErr');
         var err = "Please select one options.";
         d.innerHTML = "<b><font color=red>" + err + "</font></b>";
         return false;
     }
-    else
-    {
+    else {
         if (confirm("Do you really want to " + option) == true)
             return true;
         else
             return false;
     }
 }
 
-function showhidediv(it, box)
-{
-    if (document.getElementById)
-    {
+function showhidediv(it, box) {
+    if (document.getElementById) {
 
 
 
@@ -231,20 +202,16 @@ function showhidediv(it, box)
     }
 }
 
-function system_wide(val)
-{
+function system_wide(val) {
     var check_id = 'all_day_' + val;
-    if (document.getElementById(check_id).checked == false)
-    {
+    if (document.getElementById(check_id).checked == false) {
         document.getElementById('syswide_holi_' + val).style.display = "block";
     }
-    else
-    {
+    else {
         document.getElementById('syswide_holi_' + val).style.display = "none";
     }
 }
-function show_this_msg(tag_id, msg_id, option)
-{
+function show_this_msg(tag_id, msg_id, option) {
     document.getElementById(tag_id).disabled = true;
 
     if (option == "calendar")
@@ -253,14 +220,11 @@ function show_this_msg(tag_id, msg_id, option)
         option = "the grade scale";
     document.getElementById(msg_id).innerHTML = '<font style="color:red"><b>Cannot change ' + option + ' as this course period has association</b></font>';
 }
-function show_home_error()
-{
+function show_home_error() {
     document.getElementById('divErr').innerHTML = "<b><font color=red>Please provide home address first.</font></b>";
 }
-function set_check_value(val, name)
-{
-    if (val.checked == false)
-    {
+function set_check_value(val, name) {
+    if (val.checked == false) {
 
         document.getElementById(name).value = 'N';
         document.getElementById('IS_EMERGENCY_HIDDEN').value = "N";
@@ -269,65 +233,55 @@ function set_check_value(val, name)
         document.getElementById('IS_EMERGENCY_HIDDEN').value = "Y";
 
 }
-function portal_toggle(id)
-{
+function portal_toggle(id) {
 
-    if (document.getElementById('portal_' + id).checked == true)
-    {
+    if (document.getElementById('portal_' + id).checked == true) {
         document.getElementById('portal_div_' + id).style.display = "block";
         document.getElementById('portal_hidden_div_' + id).innerHTML = '';
     }
-    if (document.getElementById('portal_' + id).checked == false)
-    {
+    if (document.getElementById('portal_' + id).checked == false) {
         document.getElementById('portal_div_' + id).style.display = "none";
         if (id == '1')
             document.getElementById('portal_hidden_div_' + id).innerHTML = '<input type=hidden name="values[student_contacts][PRIMARY][USER_NAME]" value=""/><input type=hidden name="values[student_contacts][PRIMARY][PASSWORD]" value=""/>';
         if (id == '2')
             document.getElementById('portal_hidden_div_' + id).innerHTML = '<input type=hidden name="values[student_contacts][SECONDARY][USER_NAME]" value=""/><input type=hidden name="values[student_contacts][SECONDARY][PASSWORD]" value=""/>';
     }
 }
-function show_span(id, val)
-{
+function show_span(id, val) {
     if (val == 'Y')
         document.getElementById(id).style.display = "block";
     if (val == 'N')
         document.getElementById(id).style.display = "none";
 }
-function show_cc()
-{
+function show_cc() {
     if (document.getElementById('cc').style.display == 'none')
         document.getElementById('cc').style.display = 'block';
     else
         document.getElementById('cc').style.display = 'none'
 
 }
-function show_bcc()
-{
+function show_bcc() {
     if (document.getElementById('bcc').style.display == 'none')
         document.getElementById('bcc').style.display = 'block';
     else
         document.getElementById('bcc').style.display = 'none'
 
 }
-function attachfile(this_val)
-{
+function attachfile(this_val) {
 
     document.getElementById('del' + this_val).style.display = 'block';
     if (this_val == 1)
         document.getElementById('attach1').style.display = 'block';
 }
-function appendFile()
-{
+function appendFile() {
     var counter = document.getElementById('counter').value;
     var counter_split = counter.split(',');
 
-    if (counter_split.length == 1)
-    {
+    if (counter_split.length == 1) {
         document.getElementById('counter').value = '1,2';
         var count_id = 2;
     }
-    if (counter_split.length == 2)
-    {
+    if (counter_split.length == 2) {
         if (counter_split[0] == 1 && counter_split[1] == 2)
             var count_id = 3;
 
@@ -352,8 +306,7 @@ function appendFile()
 
 
 }
-function clearfile(this_id)
-{
+function clearfile(this_id) {
     var oFiles = document.getElementById("up" + this_id);
 
     oFiles.value = "";
@@ -362,35 +315,29 @@ function clearfile(this_id)
     var counter = document.getElementById('counter').value;
     var counter_split = counter.split(',');
 
-    if (counter_split.length == 1)
-    {
+    if (counter_split.length == 1) {
         document.getElementById('counter').value = this_id;
     }
-    if (counter_split.length == 2)
-    {
+    if (counter_split.length == 2) {
         if (counter_split[0] != this_id)
             document.getElementById('counter').value = counter_split[0];
 
         if (counter_split[1] != this_id)
             document.getElementById('counter').value = counter_split[1];
 
     }
-    if (counter_split.length == 3)
-    {
+    if (counter_split.length == 3) {
         var counter_val = new Array();
         var i = 0;
-        if (counter_split[0] != this_id)
-        {
+        if (counter_split[0] != this_id) {
             counter_val[i] = counter_split[0];
             i++;
         }
-        if (counter_split[1] != this_id)
-        {
+        if (counter_split[1] != this_id) {
             counter_val[i] = counter_split[1];
             i++;
         }
-        if (counter_split[2] != this_id)
-        {
+        if (counter_split[2] != this_id) {
             counter_val[i] = counter_split[2];
             i++;
         }
@@ -400,25 +347,20 @@ function clearfile(this_id)
     var counter = document.getElementById('counter').value;
     var row = document.getElementById('div' + this_id);
     row.parentNode.removeChild(row);
-    if (this_id == 1)
-    {
-        if (counter == '1')
-        {
+    if (this_id == 1) {
+        if (counter == '1') {
             var newtr = document.createElement('div');
             newtr.id = 'div1';
             newtr.innerHTML = '<div class="form-group clearfix"><div class="col-md-4"><input type="file" name="f[]" id="up1" onchange="attachfile(1);" multiple/></div><div id="del1" style="display:none;" class="col-md-8"><input type="button" value="Clear" class="btn btn-danger btn-xs" onclick="clearfile(1)" /></div></div>';
             document.getElementById('append_tab').appendChild(newtr);
             document.getElementById('attach1').style.display = 'none';
         }
-        else
-        {
+        else {
             document.getElementById('attach1').style.display = 'block';
         }
     }
-    if (this_id == 2)
-    {
-        if (counter == '2')
-        {
+    if (this_id == 2) {
+        if (counter == '2') {
             var newtr = document.createElement('div');
             newtr.id = 'div1';
             newtr.innerHTML = '<div class="form-group clearfix"><div class="col-md-4"><input type="file" name="f[]" id="up1" onchange="attachfile(1);" multiple/></div><div id="del1" style="display:none;" class="col-md-8"><input type="button" value="Clear" class="btn btn-danger btn-xs" onclick="clearfile(1)" /></div></div>';
@@ -428,10 +370,8 @@ function clearfile(this_id)
         else
             document.getElementById('attach1').style.display = 'block';
     }
-    if (this_id == 3)
-    {
-        if (counter == '3')
-        {
+    if (this_id == 3) {
+        if (counter == '3') {
             var newtr = document.createElement('div');
             newtr.id = 'div1';
             newtr.innerHTML = '<div class="form-group clearfix"><div class="col-md-4"><input type="file" name="f[]" id="up1" onchange="attachfile(1);" multiple/></div><div id="del1" style="display:none;" class="col-md-8"><input type="button" value="Clear" class="btn btn-danger btn-xs" onclick="clearfile(1)" /></div></div>';
@@ -443,18 +383,15 @@ function clearfile(this_id)
     }
 }
 
-function cp_toggle(chk)
-{
-    if (chk.checked == true)
-    {
+function cp_toggle(chk) {
+    if (chk.checked == true) {
         document.getElementById(chk.id + '_period').disabled = false;
 
         document.getElementById(chk.id + '_room').disabled = false;
         document.getElementById(chk.id + '_does_attendance').disabled = false;
 
     }
-    else
-    {
+    else {
         document.getElementById(chk.id + '_period').value = '';
         document.getElementById(chk.id + '_period').disabled = true;
         document.getElementById(chk.id + '_period_time').innerHTML = '';
@@ -465,34 +402,29 @@ function cp_toggle(chk)
     }
 }
 
-function mp_range_toggle(rad)
-{
-    if (rad.checked == true && rad.id == 'preset')
-    {
+function mp_range_toggle(rad) {
+    if (rad.checked == true && rad.id == 'preset') {
         document.getElementById("mp_range").style.display = 'block';
         document.getElementById("date_range").style.display = 'none';
         document.getElementById("select_range").style.display = 'block';
         document.getElementById("select_mp").style.display = 'none';
     }
-    else
-    {
+    else {
         document.getElementById("mp_range").style.display = 'none';
         document.getElementById("date_range").style.display = 'block';
         document.getElementById("select_range").style.display = 'none';
         document.getElementById("select_mp").style.display = 'block';
     }
 }
 
-function reset_schedule()
-{
+function reset_schedule() {
     document.getElementById("meeting_days").innerHTML = '';
     document.getElementById("fixed_schedule").checked = false;
     document.getElementById("variable_schedule").checked = false;
     document.getElementById("blocked_schedule").checked = false;
 
 }
-function show_this_msg(tag_id, msg_id, option)
-{
+function show_this_msg(tag_id, msg_id, option) {
     document.getElementById(tag_id).disabled = true;
 
     if (option == "calendar")
@@ -502,54 +434,44 @@ function show_this_msg(tag_id, msg_id, option)
     document.getElementById(msg_id).innerHTML = '<font style="color:red"><b>Cannot change ' + option + ' as this course period has association</b></font>';
 }
 
-function showDiv()
-{
-    if (document.getElementById)
-    {
+function showDiv() {
+    if (document.getElementById) {
         document.getElementById("attach").style.display = "block";
     }
 }
-function showDiv1()
-{
-    if (document.getElementById)
-    {
+function showDiv1() {
+    if (document.getElementById) {
         document.getElementById("attach1").style.display = "block";
     }
 }
-function show_this_msg(msg)
-{
+function show_this_msg(msg) {
     document.getElementById('divErr').innerHTML = "<font style='color:red'>" + msg + "</font>";
 }
-function toggle_div_visibility(param, val, json_field)
-{
+function toggle_div_visibility(param, val, json_field) {
 
     var field_ids = document.getElementById(json_field).value;
     field_ids = JSON.parse(field_ids);
 
 
     if (val.checked == true) {
-        $('#'+param).css({'display':'inline-block'});
+        $('#' + param).css({ 'display': 'inline-block' });
     } else {
         for (var i = 0; i < field_ids.length; i++)
             document.getElementById(field_ids[i]).checked = false;
         document.getElementById(param).style.display = "none";
 
     }
 }
-function toggle_div_visibility_mod(param, field_id)
-{
+function toggle_div_visibility_mod(param, field_id) {
     if (param.checked == true)
         document.getElementById(field_id).style.display = "block";
     else
         document.getElementById(field_id).style.display = "none";
 }
-function toggle_course_weight(param, cp_id)
-{
+function toggle_course_weight(param, cp_id) {
 
-    if (param.value != '')
-    {
-        if (cp_id != 0)
-        {
+    if (param.value != '') {
+        if (cp_id != 0) {
             var child = document.getElementById("divtables[course_periods][" + cp_id + "][COURSE_WEIGHT]").children[0];
             var clickEvent = new MouseEvent("click");
             child.dispatchEvent(clickEvent);
@@ -562,10 +484,8 @@ function toggle_course_weight(param, cp_id)
         document.getElementById("course_weight_id").disabled = false;
         document.getElementById("course_breakoff_id").disabled = false;
     }
-    else
-    {
-        if (cp_id != 0)
-        {
+    else {
+        if (cp_id != 0) {
             var child = document.getElementById("divtables[course_periods][" + cp_id + "][COURSE_WEIGHT]").children[0];
             var clickEvent = new MouseEvent("click");
             child.dispatchEvent(clickEvent);
@@ -579,146 +499,225 @@ function toggle_course_weight(param, cp_id)
         document.getElementById("course_breakoff_id").disabled = true;
     }
 }
-function ListOutputJS()
-{
+function ListOutputJS() {
     var location = document.getElementById("search_path").value;
     var lo_search = document.getElementById("LO_search").value;
     document.location.href = location + '&LO_search=' + encodeURIComponent(lo_search).replace(/%20/g, '+');
 }
-function cleanModal(id)
-{
+function cleanModal(id) {
     var obj = document.getElementById(id);
     obj.innerHTML = '';
-    
-    if(document.getElementById('conf_div1')){
-       document.getElementById('conf_div1').innerHTML = ''; 
+
+    if (document.getElementById('conf_div1')) {
+        document.getElementById('conf_div1').innerHTML = '';
     }
 }
-function cpPasteField(title,course_period_id)
-{ 
-   
+function cpPasteField(title, course_period_id) {
+
     var obj = document.getElementById('course_div');
-    var field = title+'<INPUT type=hidden name=w_course_period_id value='+course_period_id+'>';
-//    var obj_hidden = document.getElementById('hidden_tag_cp_id');
-    obj.innerHTML =field ;
-   $('#modal_default').modal('hide');
-   $('.modal-backdrop').remove();
-}
-function requestPasteField(title,course_id)
-{
+    var field = title + '<INPUT type=hidden name=w_course_period_id value=' + course_period_id + '>';
+    //    var obj_hidden = document.getElementById('hidden_tag_cp_id');
+    obj.innerHTML = field;
+    $('#modal_default').modal('hide');
+    $('.modal-backdrop').remove();
+}
+function requestPasteField(title, course_id) {
     var obj = document.getElementById('request_div');
-    var field = title+'<INPUT type=hidden name=request_course_id value='+course_id+'>';
+    var field = title + '<INPUT type=hidden name=request_course_id value=' + course_id + '>';
     // var obj_hidden = document.getElementById('hidden_tag_cp_id');
-    obj.innerHTML =field ;
+    obj.innerHTML = field;
     $('#course_div').text(title);
     $('#modal_default_request').modal('hide');
     $('.modal-backdrop').remove();
 }
-function checkChecked(id1,id2)
-{
-    if(document.getElementById(id2).checked==false)
-        document.getElementById(id1).checked=false;
+function checkChecked(id1, id2) {
+    if (document.getElementById(id2).checked == false)
+        document.getElementById(id1).checked = false;
 }
-function turnCheckOff(id1,id2)
-{
-    if(document.getElementById(id2).checked==false)
-        document.getElementById(id1).checked=false;
+function turnCheckOff(id1, id2) {
+    if (document.getElementById(id2).checked == false)
+        document.getElementById(id1).checked = false;
 }
 
-function setHiddenCheckbox(name,elem,unique_id)
-{
-//    alert(name+' '+elem.checked+' '+unique_id);
-    if(elem.checked==true)
-    $('#hidden_checkboxes').append("<input type=hidden name='"+name+"' value='Y' data-checkbox-hidden-id='"+unique_id+"' />");
+function setHiddenCheckbox(name, elem, unique_id) {
+    //    alert(name+' '+elem.checked+' '+unique_id);
+    if (elem.checked == true)
+        $('#hidden_checkboxes').append("<input type=hidden name='" + name + "' value='Y' data-checkbox-hidden-id='" + unique_id + "' />");
     else
-    $('[data-checkbox-hidden-id='+unique_id+']').remove();    
+        $('[data-checkbox-hidden-id=' + unique_id + ']').remove();
 }
 
-function setHiddenCheckboxStudents(name,elem,unique_id)
-{
-   
-    if(elem.checked==true)
-    $('#hidden_checkboxes').append("<input type=hidden name='"+name+"' value='"+unique_id+"' data-checkbox-hidden-id='"+unique_id+"' />");
+function setHiddenCheckboxStudents(name, elem, unique_id, value = undefined) {
+    if (value === undefined) value = unique_id;
+    if (elem.checked == true)
+        $('#hidden_checkboxes').append("<input type=hidden name='" + name + "' value='" + value + "' data-checkbox-hidden-id='" + unique_id + "' />");
     else
-    $('[data-checkbox-hidden-id='+unique_id+']').remove();    
-}
-
-function checkAllDtMod(elem,name)
-{
-    var res_length=document.getElementById('res_length').value;
-    var res_len=document.getElementById('res_len').value;
-    var unique_id=res_len.split(',');
-//    alert(name+' '+elem.checked+' '+unique_id);
-    for(var i=0;i<res_length;i++){
-        if(elem.checked==true){
-            if(document.getElementById(unique_id[i])){
-            $('#hidden_checkboxes').append("<input type=hidden name='"+name+"["+unique_id[i]+"]' value='"+unique_id[i]+"' data-checkbox-hidden-id='"+unique_id[i]+"' />");
-            document.getElementById(unique_id[i]).checked=true;
+        $('[data-checkbox-hidden-id=' + unique_id + ']').remove();
+}
+
+function checkAllDtMod(elem, name, staticValue = undefined) {
+    var value = staticValue;
+    if (document.getElementById('checked_all')) {
+        if (elem.checked == true) {
+            document.getElementById('checked_all').value = 'true';
+        } else {
+            document.getElementById('checked_all').value = 'false';
+        }
+    }
+    var res_length = document.getElementById('res_length').value;
+    var res_len = document.getElementById('res_len').value;
+    var unique_id = res_len.split(',');
+    //    alert(name+' '+elem.checked+' '+unique_id);
+
+    if (document.getElementById('all_stu_res')) {
+        var all_stu_res = document.getElementById('all_stu_res').value;
+        var all_stu_ids = all_stu_res.split(',');
+        for (var i = 0; i < all_stu_ids.length; i++) {
+            if (elem.checked == true) {
+                if (staticValue === undefined) value = all_stu_ids[i];
+                $('#hidden_checkboxes').append("<input type=hidden name='" + name + "[" + all_stu_ids[i] + "]' value='" + value + "' data-checkbox-hidden-id='" + all_stu_ids[i] + "' />");
+                if (document.getElementById(all_stu_ids[i])) {
+                    document.getElementById(all_stu_ids[i]).checked = true;
+                }
+            } else {
+                $('[data-checkbox-hidden-id=' + all_stu_ids[i] + ']').remove();
+                if (document.getElementById(all_stu_ids[i])) {
+                    document.getElementById(all_stu_ids[i]).checked = false;
+                }
             }
-        }else{
-            if(document.getElementById(unique_id[i])){
-            $('[data-checkbox-hidden-id='+unique_id[i]+']').remove();   
-             document.getElementById(unique_id[i]).checked=false;
+        }
+    } else {
+        for (var i = 0; i < res_length; i++) {
+            if (elem.checked == true) {
+                if (document.getElementById(unique_id[i])) {
+                    if (staticValue === undefined) value = unique_id[i];
+                    $('#hidden_checkboxes').append("<input type=hidden name='" + name + "[" + unique_id[i] + "]' value='" + value + "' data-checkbox-hidden-id='" + unique_id[i] + "' />");
+                    document.getElementById(unique_id[i]).checked = true;
+                }
+            } else {
+                if (document.getElementById(unique_id[i])) {
+                    $('[data-checkbox-hidden-id=' + unique_id[i] + ']').remove();
+                    document.getElementById(unique_id[i]).checked = false;
+                }
             }
         }
     }
 }
 
-function checkAllDtMod2(elem,name)
-{
-    var res_length=document.getElementById('res_length').value;
-    var res_len=document.getElementById('res_len').value;
-    var unique_id=res_len.split(',');
-    
-    for(var i=0;i<res_length;i++){
-        if(elem.checked==true){
-            if(document.getElementById(unique_id[i])){
-                $('#hidden_checkboxes').append("<input type=hidden name='"+name+"["+unique_id[i]+"]' value='"+unique_id[i]+"' data-checkbox-hidden-id='"+unique_id[i]+"' />");
-                // document.getElementById(unique_id[i]).checked=true;
-                // window.$('#'+unique_id[i]).attr("checked",true);
-                $(".student_label_cbx").prop('checked', true);
-                // alert(unique_id[i]);
+function checkAllDtModAddDrop(elem, name, staticValue = undefined) {
+    var value = staticValue;
+    if (document.getElementById('checked_all')) {
+        if (elem.checked == true) {
+            document.getElementById('checked_all').value = 'true';
+        } else {
+            document.getElementById('checked_all').value = 'false';
+        }
+    }
+
+    if (document.getElementById('all_stu_res')) {
+        var all_stu_res = document.getElementById('all_stu_res').value;
+        var all_stu_ids = all_stu_res.split(',');
+        for (var i = 0; i < all_stu_ids.length; i++) {
+            if (elem.checked == true) {
+                if (staticValue === undefined) value = all_stu_ids[i];
+                $('#hidden_checkboxes').append("<input type=hidden name='" + name + "[" + all_stu_ids[i] + "]' value='" + value + "' data-checkbox-hidden-id='" + all_stu_ids[i] + "' />");
+                if (document.getElementById(all_stu_ids[i])) {
+                    document.getElementById(all_stu_ids[i]).checked = true;
+                }
+            } else {
+                $('[data-checkbox-hidden-id=' + all_stu_ids[i] + ']').remove();
+                if (document.getElementById(all_stu_ids[i])) {
+                    document.getElementById(all_stu_ids[i]).checked = false;
+                }
             }
-        }else{
-            if(document.getElementById(unique_id[i])){
-                $('[data-checkbox-hidden-id='+unique_id[i]+']').remove();   
-                // document.getElementById(unique_id[i]).checked=false;
-                $(".student_label_cbx").prop('checked', false);
+        }
+    }
+}
+
+function checkAllDtMod2(elem, name, staticValue = undefined) {
+    var value = staticValue;
+    if (document.getElementById('checked_all')) {
+        if (elem.checked == true) {
+            document.getElementById('checked_all').value = 'true';
+        } else {
+            document.getElementById('checked_all').value = 'false';
+        }
+    }
+    var res_length = document.getElementById('res_length').value;
+    var res_len = document.getElementById('res_len').value;
+    var unique_id = res_len.split(',');
+
+    if (document.getElementById('all_stu_res')) {
+        console.log('all_stu_res found');
+        var all_stu_res = document.getElementById('all_stu_res').value;
+        var all_stu_ids = all_stu_res.split(',');
+        for (var i = 0; i < all_stu_ids.length; i++) {
+            if (elem.checked == true) {
+                if (staticValue === undefined) value = all_stu_ids[i];
+                $('#hidden_checkboxes').append("<input type=hidden name='" + name + "[" + all_stu_ids[i] + "]' value='" + value + "' data-checkbox-hidden-id='" + all_stu_ids[i] + "' />");
+                if (document.getElementById(all_stu_ids[i])) {
+                    // document.getElementById(all_stu_ids[i]).checked=true;
+                    // window.$('#'+all_stu_ids[i]).attr("checked",true);
+                    $(".student_label_cbx").prop('checked', true);
+                    // alert(all_stu_ids[i]);
+                }
+            } else {
+                $('[data-checkbox-hidden-id=' + all_stu_ids[i] + ']').remove();
+                if (document.getElementById(all_stu_ids[i])) {
+                    // document.getElementById(all_stu_ids[i]).checked=false;
+                    $(".student_label_cbx").prop('checked', false);
+                }
+            }
+        }
+    } else {
+        for (var i = 0; i < res_length; i++) {
+            if (elem.checked == true) {
+                if (document.getElementById(unique_id[i])) {
+                    if (staticValue === undefined) value = unique_id[i];
+                    $('#hidden_checkboxes').append("<input type=hidden name='" + name + "[" + unique_id[i] + "]' value='" + value + "' data-checkbox-hidden-id='" + unique_id[i] + "' />");
+                    // document.getElementById(unique_id[i]).checked=true;
+                    // window.$('#'+unique_id[i]).attr("checked",true);
+                    $(".student_label_cbx").prop('checked', true);
+                    // alert(unique_id[i]);
+                }
+            } else {
+                if (document.getElementById(unique_id[i])) {
+                    $('[data-checkbox-hidden-id=' + unique_id[i] + ']').remove();
+                    // document.getElementById(unique_id[i]).checked=false;
+                    $(".student_label_cbx").prop('checked', false);
+                }
             }
         }
     }
 }
 
-function addseccheck_button(){
-    if (document.getElementById('values[people][SECONDARY][RELATIONSHIP]').value != ''){
-        document.getElementById('rss').checked=true;
-    }else{
-       document.getElementById('rss').checked=false; 
+function addseccheck_button() {
+    if (document.getElementById('values[people][SECONDARY][RELATIONSHIP]').value != '') {
+        document.getElementById('rss').checked = true;
+    } else {
+        document.getElementById('rss').checked = false;
     }
 
 }
 
-function hide_filter_modal()
-{
+function hide_filter_modal() {
     window.$('#modal_filter_edit').modal('toggle');
 }
 
-function closeThisModal(modal_ID = false)
-{
-    if(modal_ID != '')
-    {
-        window.$('#'+modal_ID).modal('toggle');
+function closeThisModal(modal_ID = false) {
+    if (modal_ID != '') {
+        window.$('#' + modal_ID).modal('toggle');
     }
 }
 
-function clickOnFileInput () {
+function clickOnFileInput() {
     document.getElementById("upfile").click();
 }
 
 function selectedFilesRail(inputFileID) {
 
     var fileobj = [];
-    if(inputFileID && inputFileID != '') {
+    if (inputFileID && inputFileID != '') {
         setFilesRail(document.getElementById(inputFileID).files);
     }
 }
@@ -731,7 +730,7 @@ function setFilesRail(files) {
 
 function printFilesRail() {
     var fileListElement = document.querySelector("#areaFileRail ul");
-    
+
     var fileList = '';
     var storeFiles = '';
     var fileCounter = 0;
@@ -746,7 +745,7 @@ function printFilesRail() {
 
     fileListElement.innerHTML = fileList;
 
-    if(fileCounter > 0) {
+    if (fileCounter > 0) {
         $("#nofiles").hide();
     } else {
         $("#nofiles").show();
@@ -759,3 +758,73 @@ function removeFromFilesRail(index) {
 
     printFilesRail();
 }
+
+function printViewSchedule(exportFileName, viewMode) {
+    var printableTable = '';
+
+    if (viewMode == 'week_view')
+        printableTable = 'results';
+    else
+        printableTable = 'export_res_table';
+
+    var doc = new jsPDF('l', 'pt', 'a3');
+
+    var PDFWidth = doc.internal.pageSize.getWidth();
+    var PDFWidthMod = Math.round((PDFWidth / 6.0));
+
+    var lineSeparator = '';
+
+    for (var lS = 1; lS < PDFWidthMod; lS++)
+        lineSeparator += '_';
+
+    doc.setProperties({ title: exportFileName + '.pdf' });
+    doc.setFont("roboto", "regular");
+
+    doc.autoTable({
+        html: '#_pdf_header',
+        theme: "plain",
+        margin: {
+            top: 13,
+            right: 11,
+            left: 11
+        }
+    });
+
+    doc.text(lineSeparator, 14, 50);
+
+    doc.autoTable({
+        html: '#_pdf_header2',
+        theme: "plain",
+        margin: {
+            left: 11
+        },
+        startY: 60,
+    });
+
+    doc.autoTable({
+        html: '#' + printableTable,
+        margin: {
+            right: 14,
+            left: 14
+        },
+        startY: doc.lastAutoTable.finalY + 10,
+        headStyles: {
+            lineWidth: 0.20,
+            lineColor: [0, 0, 0],
+            textColor: [0, 0, 0],
+            fillColor: [211, 211, 211]
+        },
+        bodyStyles: {
+            lineWidth: 0.20,
+            lineColor: [0, 0, 0],
+            textColor: [0, 0, 0],
+            cellWidth: 'auto'
+        }
+    });
+
+    // doc.save(exportFileName + '.pdf');
+    doc.output('dataurlnewwindow');
+    // let dataSrc = doc.output("datauristring");
+    // let win = window.open("", "myWindow");
+    // win.document.write('<html><head><title>openSIS Student Information System</title><link rel="shortcut icon" href="../favicon.ico"></head><body><iframe src="' + dataSrc + '" style="min-height:100vh;width:100%" frameborder="0"></iframe></body></html>');
+}
\ No newline at end of file

--- js/Validation.js ---
@@ -56,6 +56,23 @@ function formcheck_school_setup_school(this_DET) {
   );
 
   //frmvalidator.addValidation("values[E_MAIL]", "email", "Please enter email in proper format");
+  
+
+  var school_custom_req_ids = document.getElementById("custom_sch_field_ids").value;
+  console.log(school_custom_req_ids);
+  if (school_custom_req_ids != "") {
+    var req_field_ids = school_custom_req_ids.split(","); 
+    var school_custom_req_titles = document.getElementById("custom_sch_field_titles").value;
+    var req_field_titles = school_custom_req_titles.split(",");
+    for (var rt_i = 0; rt_i < req_field_ids.length ; rt_i++) {
+      frmvalidator.addValidation(
+        req_field_ids[rt_i],
+        "req",
+        "Please enter the " + req_field_titles[rt_i]
+      );
+    }
+  }
+
 
   var school_id = document.getElementById("h1").value;
 
@@ -4114,17 +4131,17 @@ function formcheck_add_staff(staff_school_chkbox_id, this_DET) {
   frmvalidator.addValidation(
     "month_values[JOINING_DATE]",
     "req",
-    "Please select the joining date"
+    "Please select the joining date's month"
   );
   frmvalidator.addValidation(
     "day_values[JOINING_DATE]",
     "req",
-    "Please select the joining date"
+    "Please select the joining date's date"
   );
   frmvalidator.addValidation(
     "year_values[JOINING_DATE]",
     "req",
-    "Please select the joining date"
+    "Please select the joining date's year"
   );
 
   var end_date = document.getElementById("end_date_school").value;
@@ -4891,15 +4908,26 @@ function forgotusername() {
   }
 }
 
-function check_update_seat(course_period_id) {
-  var frmvalidator = new Validator("update_seats");
-  //    alert(2);
-  frmvalidator.addValidation(
-    "tables[course_periods][" + course_period_id + "][TOTAL_SEATS]",
-    "req",
-    "Please enter a number"
-  );
-  //    alert(3);
+function check_update_seat(cp_seats,course_period_id,student_count)
+{
+    updated_seats = document.getElementById("tables[course_periods][" + course_period_id + "][TOTAL_SEATS]");
+    if (updated_seats != null)
+    {
+        if (updated_seats.value.trim() == '' || updated_seats.value.trim() == '0')
+        {
+            document.getElementById('err_message').innerHTML = '<div class="alert alert-danger no-border"><i class="fa fa-info-circle"></i> New number of seats cannot be blank/zero.</div>';
+            return false;
+        } else if (updated_seats.value < cp_seats)
+        {
+            document.getElementById('err_message').innerHTML = '<div class="alert alert-danger no-border"><i class="fa fa-info-circle"></i> New number of seats cannot be lesser than '+cp_seats+'.</div>';
+            return false;
+        } else if (updated_seats.value < (cp_seats+student_count))
+        {
+            document.getElementById('err_message').innerHTML = `<div class="alert alert-danger no-border"><i class="fa fa-info-circle"></i> New number of seats cannot be lesser than ${cp_seats + student_count} because we have ${student_count} students left to schedule.</div>`;
+            return false;
+        } else
+            return true;
+    }
 }
 
 function formcheck_ada_dates() {

--- js/Validator.js ---
@@ -192,7 +192,7 @@ function V2validateData(strValidateStr, objValue, strError) {
     }
     case "req":
     case "required": {
-      objValue.value = objValue.value.replace(/\s+/g,' ').trim();
+      objValue.value = objValue.value.trim();
       if (eval(objValue.value.length) == 0) {
         if (!strError || strError.length == 0) {
           strError = objValue.name + " : Required Field";

--- lang/lang_ar.php ---
@@ -78,6 +78,7 @@
 define("_searchable", "قابل للبحث");
 define("_expandedView", "عرض موسع");
 define("_medical", "طبي");
+define("_contacts", "جهات الاتصال");
 define("_contactInformation", "معلومات الاتصال");
 define("_contactInfoRollover", "تدوير معلومات الاتصال");
 define("_homePhoneNumber", "رقم الهاتف المنزلي");
@@ -109,10 +110,14 @@
 define("_administrator", "مدير");
 define("_teacher", "معلم");
 define("_student", "طالب");
+define("_studentContact", "الاتصال بالطالب");
+define("_studentContacts", "اتصالات الطلاب");
 define("_parent", "الأبوين");
 define("_adminAsst", "مساعد المشرف");
 define("_markingPeriods", "فترات الوسم");
 define("_shortName", "اسم قصير");
+define("_hospitalName", "Hospital Name");
+define("_physicianName", "Physician Name");
 define("_comments", "تعليقات");
 define("_graded", "متدرج");
 define("_exam", "امتحان");
@@ -872,6 +877,7 @@
 define("_unsupportedFileFormatCannotUploadFile", "تنسيق ملف غير مدعوم ، لا يمكن تحميل الملف");
 define("_FileExceedsTheAllowableSizeTryAgainWithAFileLessThen10Mb","الملف يتجاوز الحجم المسموح به. حاول مرة أخرى بملف أقل من 10 ميغا بايت");
 define("_studentStartDateCannotBeBeforeStudentsLastSchoolsDropDate", "لا يمكن أن يكون تاريخ بدء الطالب قبل آخر موعد لترك المدرسة");
+define("_startDateCannotBeBeforeStudentsPreviousSchoolDropDate", "لا يمكن أن يكون تاريخ البدء قبل تاريخ ترك المدرسة السابق للطلاب");
 define("_studentDropDateCannotBeBeforeStudentEnrollmentDate", "لا يمكن أن يكون تاريخ إسقاط الطالب قبل تاريخ تسجيل الطالب");
 define("_gradeCannotBeBlank", "لا يمكن أن يكون التقدير فارغًا");
 define("_pleaseProvideAllDetailsToTransferInNewSchool", "يرجى تقديم جميع التفاصيل للنقل في المدرسة الجديدة.");
@@ -991,6 +997,7 @@
 define("_primaryCertificationIndicator", "مؤشر الشهادة الأساسي");
 define("_parentInfo", "معلومات الوالدين");
 define("_associatedStudents", "الطلاب المنتسبون");
+define("_associated", "مرتبط");
 define("_relationship", "صلة");
 define("_staff", "العاملين");
 define("_staffInfo", "معلومات الموظفين");
@@ -1108,7 +1115,7 @@
 define("_youCannotScheduleAStudentIntoChatCourseDuringTheMarkingPeriodThatYouChoseThisCourseMeetsOn", "لا يمكنك جدولة طالب في تلك الدورة التدريبية خلال فترة التصحيح التي اخترتها. تجتمع هذه الدورة على");
 define("_cannotScheduleStudentsBeforeSchoolStartDate", "لا يمكن جدولة الطلاب قبل تاريخ بدء المدرسة");
 define("_studentsScheduleDateShouldBeBetweenCourseStartDateAndEndDate", "يجب أن يكون تاريخ جدول الطلاب بين تاريخ بدء الدورة وتاريخ الانتهاء");
-define("_thereAreNoAvailableSeatsInThisPeriod", "لا توجد مقاعد شاغرة في هذه الفترة");
+define("_thereIsNoAvailableSeatsInThisPeriod", "لا توجد مقاعد متاحة في هذه الفترة.");
 define("_manualOverride", "تجاوز يدوي");
 define("_incompleteCoursePeriodCourses", "دورات مدة الدورة غير مكتملة");
 define("_courseToAdd", "بالطبع للإضافة");
@@ -1387,6 +1394,7 @@
 define("_messageDeletedSucessfully", "تم حذف الرسالة بنجاح");
 define("_pleaseSelectAtleastOneMessageToDelete", "يرجى تحديد رسالة واحدة على الأقل لحذفها");
 define("_attachment", "مرفق");
+define("_attachments", "المرفقات");
 define("_dateTime", "التاريخ / الوقت");
 define("_yourMessageHasBeenSent", "تم ارسال رسالتك");
 define("_fileNotFoundOrInaccessible", "الملف غير موجود أو لا يمكن الوصول إليه");
@@ -1406,6 +1414,7 @@
 define("_messageNotSent", "لم يتم إرسال الرسالة");
 define("_asTheyDonTExist", "لأنها غير موجودة");
 define("_doesnTExist", "غير موجود");
+define("_groupIsSuccessfullyDeleted", "تم حذف المجموعة بنجاح");
 //TOOLS
 define("_savingDatabaseForBackupBeforeRolloverPleaseDonotClickAnywhere", "حفظ قاعدة البيانات للنسخ الاحتياطي قبل التمديد ، من فضلك لا تنقر في أي مكان");
 define("_customFieldType", "نوع الحقل المخصص");
@@ -1438,6 +1447,7 @@
 define("_afterSelectingClickUpload", "بعد التحديد ، انقر فوق تحميل");
 define("_clickHereToSelectAFile", "انقر هنا لتحديد ملف");
 define("_supportedFileTypesXlsXlsx", "أنواع الملفات المدعومة: xls ، xlsx");
+define("_theFirstRowMustContainColumnNames", "يجب أن يحتوي الصف الأول على أسماء الأعمدة.");
 define("_nameSuffix", "لاحقة الاسم");
 define("_socialSecurity", "الضمان الاجتماعي");
 define("_estimatedGraduationDate", "تاريخ التخرج المقدر");
@@ -1599,6 +1609,8 @@
 define("_selectGroup", "اختر مجموعة");
 define("_cc", "نسخة");
 define("_bcc", "نسخة مخفية الوجهة");
+define("_messageMyClass", 'مراسلة صفي');
+define("_back", "عودة");
 define("_attachFile", "أرفق ملف");
 define("_attachAnotherFile", "إرفاق ملف آخر");
 define("_clear", "صافي");
@@ -1623,6 +1635,7 @@
 define("_loginRecordWasFound", "تم العثور على سجل تسجيل الدخول");
 define("_loginRecordsWereFound", "تم العثور على سجلات تسجيل الدخول");
 define("_loginTime", "وقت تسجيل الدخول");
+define("_loginRecord", "سجل تسجيل الدخول");
 define("_loginRecords", "سجلات تسجيل الدخول");
 define("_failureCount", "عدد الفشل");
 define("_status", "حالة");
@@ -1782,6 +1795,7 @@
 define("_confirm", "يتأكد");
 define("_historyMarkingPeriod", "فترة تأشير التاريخ");
 define("_historyMarkingPeriods", "فترات تأشير التاريخ");
+define("_schoolMarkingPeriods", "فترات تعليم المدرسة");
 define("_thisMarkingPeriodsHasBeenUpdated", "تم تحديث فترات التأشير هذه");
 define("_addAnotherMarkingPeriod", "أضف فترة تعليم أخرى");
 define("_creditCategory", "فئة الائتمان");
@@ -1812,6 +1826,7 @@
 define("_startDateOrEndDateCannotBeBlank", "لا يمكن أن يكون تاريخ البدء أو تاريخ الانتهاء فارغين");
 define("_scoreBreakoffPointsSetupIsIncompletePleaseSetScoreBreakoffPointsFromConfiguration", "إعداد نقاط كسر النقاط غير مكتمل ، يرجى تعيين نقاط كسر النقاط من التكوين");
 define("_gradeReportingDateHasNotSetForThisMarkingPeriod", "لم يتم تحديد تاريخ تقرير التقدير لفترة التصحيح هذه");
+define("_coursePeriodIsConfiguredAsWeightedButNoWeightsAreAssignedToTheAssignmentTypes", "يتم تكوين فترة الدورة التدريبية على أنها مرجحة ولكن لم يتم تعيين أوزان لأنواع الواجب.");
 define("_messageBodyCannotBeEmpty", "لا يمكن ترك نص الرسالة فارغًا");
 define("_messageNotSentAsNoUsersWereFound", "لم يتم إرسال الرسالة حيث لم يتم العثور على مستخدمين");
 define("_unableToDeleteGoalPleaseDeleteProgressesFirst", "تعذر حذف الهدف. الرجاء حذف التقدم أولا.");
@@ -1955,4 +1970,5 @@
 define("_cannotGeneratePagination", "لا يمكن توليد ترقيم الصفحات!");
 define("_outOf", "بعيدا عن المكان");
 define("_entries", "إدخالات");
+define("_cannotDeleteBecauseReportCardCommentsAreAssociated", "لا يمكن الحذف لأن تعليقات بطاقة التقرير مرتبطة");
 ?>

--- lang/lang_en.php ---
@@ -9,7 +9,6 @@
 define("_displayClassRank", "Display Class Rank");
 define("_displayNotifications", "Display Notifications");
 define("_save", "Save");
-
 // translate
 define("_enterUsername", "Enter Username");
 define("_enterPassword", "Enter Password");
@@ -48,7 +47,7 @@
 define("_upcomingEventWasFound", "Upcoming Event was found");
 define("_upcomingEventsWereFound", "Upcoming Events were found");
 define("_date", "Date");
-define("_event", "event");
+define("_event", "Event");
 define("_description", "Description");
 define("_teachersHaveMissingAttendance", "Teachers have missing attendance");
 define("_go_To", "Go to");
@@ -78,6 +77,7 @@
 define("_searchable", "Searchable");
 define("_expandedView", "Expanded View");
 define("_medical", "Medical");
+define("_contacts", "Contacts");
 define("_contactInformation", "Contact Information");
 define("_contactInfoRollover", "Contact Info Rollover");
 define("_homePhoneNumber", "Home Phone Number");
@@ -109,11 +109,15 @@
 define("_administrator", "Administrator");
 define("_teacher", "Teacher");
 define("_student", "Student");
+define("_studentContact", "Student contact");
+define("_studentContacts", "Student contacts");
 define("_parent", "Parent");
 define("_adminAsst", "Admin Asst");
 define("_markingPeriods", "Marking Periods");
 define("_shortName", "Short Name");
 define("_comments", "Comments");
+define("_hospitalName", "Hospital Name");
+define("_physicianName", "Physician Name");
 define("_graded", "Graded");
 define("_exam", "Exam");
 define("_begins", "Begins");
@@ -198,7 +202,7 @@
 define("_fullDayMinutes", "FULL DAY MINUTES");
 define("_halfDayMinutes", "HALF DAY MINUTES");
 define("_loginFailureAllowance", "LOGIN FAILURE ALLOWANCE");
-define("_noOfLoginFailuresAllowedBeforeAccountIsDisabled", "NO OF LOGIN FAILURES ALLOWED BEFORE ACCOUNT IS DISABLED");
+define("_noOfLoginFailuresAllowedBeforeAccountIsDisabled", "NO. OF LOGIN FAILURES ALLOWED BEFORE ACCOUNT IS DISABLED");
 define("_userInactivityDays", "USER INACTIVITY DAYS");
 define("_maximumInactiveDaysAllowedBeforeAccountIsDisabled", "MAXIMUM INACTIVE DAYS ALLOWED BEFORE ACCOUNT IS DISABLED");
 define("_putTheSystemInMaintenanceMode", "Put the system in maintenance mode");
@@ -283,8 +287,6 @@
 define("_print", "Print");
 define("_selectMarkingPeriod", "SELECT MARKING PERIOD");
 define("_all", "All");
-define("_selectSubject", "SELECT SUBJECT");
-define("_selectCourse", "SELECT COURSE");
 define("_time", "Time");
 define("_days", "Days");
 define("_location", "Location");
@@ -524,10 +526,8 @@
 define("_goal", "goal");
 define("_progress", "Progress");
 define("_progresses", "Progresses");
-define("_tokens", "Tokens");
 define("_fieldsToAssign", "Fields to assign");
 define("_youMustChooseAtLeastOneFieldAndOneStudent", "You must choose at least one field and one student");
-define("_didNotRecieve", "Did Not Recieve");
 define("_students", "Students");
 define("_studentInfo", "Student Info");
 define("_findAStudent", "FIND A STUDENT");
@@ -870,8 +870,9 @@
 define("_toAssociateWithThisStudent", "to associate with this student.");
 define("_unableToSaveDataBecauseDuplicateAlternateIdFound", "Unable to save data, because duplicate Alternate ID found.");
 define("_unsupportedFileFormatCannotUploadFile", "Unsupported File Format, Cannot Upload File");
-define("_FileExceedsTheAllowableSizeTryAgainWithAFileLessThen10Mb","File Exceeds The Allowable Size. Try Again With A File Less Then 10 Mb");
+define("_FileExceedsTheAllowableSizeTryAgainWithAFileLessThen10Mb", "File Exceeds The Allowable Size. Try Again With A File Less Then 10 Mb");
 define("_studentStartDateCannotBeBeforeStudentsLastSchoolsDropDate", "Student start date cannot be before students last schools drop date");
+define("_startDateCannotBeBeforeStudentsPreviousSchoolDropDate", "Start date cannot be before students previous school drop date");
 define("_studentDropDateCannotBeBeforeStudentEnrollmentDate", "Student drop date cannot be before student enrollment date");
 define("_gradeCannotBeBlank", "Grade cannot be blank");
 define("_pleaseProvideAllDetailsToTransferInNewSchool", "Please provide all details to transfer in new school.");
@@ -932,7 +933,6 @@
 define("_schoolRecords", "School Records");
 define("_userFields", "User Fields");
 define("_officePhone", "Office Phone");
-define("_first", "First");
 define("_users", "Users");
 define("_no", "No");
 define("_yes", "Yes");
@@ -991,6 +991,7 @@
 define("_primaryCertificationIndicator", "Primary Certification Indicator");
 define("_parentInfo", "Parent Info");
 define("_associatedStudents", "Associated Students");
+define("_associated", "Associated");
 define("_relationship", "Relationship");
 define("_staff", "Staff");
 define("_staffInfo", "Staff Info");
@@ -1108,7 +1109,7 @@
 define("_youCannotScheduleAStudentIntoChatCourseDuringTheMarkingPeriodThatYouChoseThisCourseMeetsOn", "You cannot schedule a student into that course during the marking period that you chose.  This course meets on");
 define("_cannotScheduleStudentsBeforeSchoolStartDate", "Cannot schedule students before school start date");
 define("_studentsScheduleDateShouldBeBetweenCourseStartDateAndEndDate", "students schedule date should be between course start date and end date");
-define("_thereAreNoAvailableSeatsInThisPeriod", "There are no available seats in this period.");
+define("_thereIsNoAvailableSeatsInThisPeriod", "There is no available seats in this period.");
 define("_manualOverride", "Manual Override");
 define("_incompleteCoursePeriodCourses", "Incomplete course period Courses ");
 define("_courseToAdd", "Course to Add");
@@ -1177,7 +1178,6 @@
 define("_studentClassPictures", "Student Class Pictures");
 define("_includeTeacher", "Include Teacher");
 define("_legalSizePaper", "Legal Size Paper");
-define("_useLastYearsIfMissing", "Use Last Year\'s if Missing");
 define("_printClassPicturesForSelectedCoursePeriods", "Print Class Pictures for Selected Course Periods");
 define("_inPeriod", "In Period");
 define("_notWithTeacher", "Not with Teacher");
@@ -1245,7 +1245,6 @@
 define("_youAreNotCurrentlyInAMarkingPeriod", "You are not currently in a marking period");
 define("_thereIsAConflict", "There is a conflict");
 define("_youCannotAddThisCoursePeriod", "You cannot add this course period");
-define("_officialInformation", "Official Information");
 define("_useLastYearsIfMissing", "Use Last Years If Missing");
 define("_allTheGradesWithRespectToThisAssignmentWillBeDeleted", "All the grades with respect to this Assignment will be deleted");
 define("_doYouStillWishToDeleteTheAssignment", "Do you still wish to delete the assignment");
@@ -1258,7 +1257,6 @@
 define("_member", "Member");
 define("_selectSubject", "Select Subject");
 define("_selectCourse", "Select Course");
-define("_noRecordsWereFound", "No Records were found");
 define("_present", "Present");
 define("_adminOfficeComment", "Admin & Office Comment");
 define("_teacherComment", "Teacher Comment");
@@ -1267,9 +1265,7 @@
 define("_thisIsAnEmergencyContact", "This Is An Emergency Contact");
 define("_addNewContact", "Add New Contact");
 define("_cannotDeleteBecauseAttendanceCodesAreAssociated", "Cannot delete because attendance codes are associated");
-define("_studentsList", "students list");
 define("_absenceRecordsWereAddedForTheSelectedStudents", "Absence records were added for the selected students.");
-define("_youMustChooseAtLeastOnePeriodAndOneStudent", "You must choose at least one period and one student.");
 define("_attendanceRecords", "Attendance records");
 define("_attendanceRecord", "Attendance record");
 define("_avgAttendance", "Avg Attendance");
@@ -1388,6 +1384,7 @@
 define("_messageDeletedSucessfully", "Message deleted sucessfully");
 define("_pleaseSelectAtleastOneMessageToDelete", "Please select atleast one message to delete");
 define("_attachment", "Attachment");
+define("_attachments", "Attachments");
 define("_dateTime", "DATE/TIME");
 define("_yourMessageHasBeenSent", "Your message has been sent");
 define("_fileNotFoundOrInaccessible", "File not found or inaccessible");
@@ -1407,14 +1404,14 @@
 define("_messageNotSent", "Message not sent");
 define("_asTheyDonTExist", "as they don't exist");
 define("_doesnTExist", "doesn't exist");
+define("_groupIsSuccessfullyDeleted", "Group is successfully deleted");
 //TOOLS
 define("_savingDatabaseForBackupBeforeRolloverPleaseDonotClickAnywhere", "Saving database for backup before rollover, please donot click anywhere");
 define("_customFieldType", "Custom Field Type");
 define("_customFieldName", "Custom Field Name");
 define("_options", "Options");
 define("_systemField", "System Field");
 define("_requiredField", "Required Field");
-define("_customFields", "Custom Fields");
 define("_staffFieldCategory", "Staff Field Category");
 define("_staffFieldCategories", "Staff Field Categories");
 define("_userFieldCategories", "User Field Categories");
@@ -1439,6 +1436,7 @@
 define("_afterSelectingClickUpload", "After selecting, click Upload");
 define("_clickHereToSelectAFile", "Click here to select a file");
 define("_supportedFileTypesXlsXlsx", "Supported file types: xls, xlsx");
+define("_theFirstRowMustContainColumnNames", "The first row must contain column names.");
 define("_nameSuffix", "Name Suffix");
 define("_socialSecurity", "Social Security");
 define("_estimatedGraduationDate", "Estimated Graduation Date");
@@ -1600,6 +1598,8 @@
 define("_selectGroup", "Select Group");
 define("_cc", "CC");
 define("_bcc", "BCC");
+define("_messageMyClass", "Message My Class");
+define("_back", "Back");
 define("_attachFile", "Attach File");
 define("_attachAnotherFile", "Attach another file");
 define("_clear", "CLEAR");
@@ -1624,6 +1624,7 @@
 define("_loginRecordWasFound", "login record was found");
 define("_loginRecordsWereFound", "login records were found");
 define("_loginTime", "Login Time");
+define("_loginRecord", "Login record");
 define("_loginRecords", "Login records");
 define("_failureCount", "Failure Count");
 define("_status", "Status");
@@ -1665,7 +1666,7 @@
 define("_homeroom", "Homeroom");
 define("_secondaryLanguage", "Secondary Language");
 //----------------------------------------------------------------------------------------------------------
-define("_first", "première");
+define("_first", "First");
 define("_disableUser", "Disable User");
 define("_includeDisabledUser", "Include Disabled User");
 define("_thisStaffIsNotScheduledToAnyCoursePeriodAndThereforeNoScheduleDataIsAvailable", "This staff is not scheduled to any course period and therefore no schedule data is available");
@@ -1675,7 +1676,7 @@
 define("_emergencyContactInformation", "Emergency Contact Information");
 define("_homeAddress", "Home Address");
 define("_access", "Access");
-define("_officialInformation", "Informations officielles");
+define("_officialInformation", "Official Information");
 define("_openSisAccessInformation", "openSIS Access Information");
 define("_updateStaffSPhoto", "Update Staff's Photo");
 define("_physicalDisability", "Physical Disability");
@@ -1783,6 +1784,7 @@
 define("_confirm", "Confirm");
 define("_historyMarkingPeriod", "History Marking Period");
 define("_historyMarkingPeriods", "History Marking Periods");
+define("_schoolMarkingPeriods", "School Marking Periods");
 define("_thisMarkingPeriodsHasBeenUpdated", "This Marking Periods has been updated");
 define("_addAnotherMarkingPeriod", "Add another marking period");
 define("_creditCategory", "Credit Category");
@@ -1813,6 +1815,7 @@
 define("_startDateOrEndDateCannotBeBlank", "Start date or End date cannot be blank");
 define("_scoreBreakoffPointsSetupIsIncompletePleaseSetScoreBreakoffPointsFromConfiguration", "Score Breakoff Points setup is incomplete,Please set Score Breakoff Points from configuration");
 define("_gradeReportingDateHasNotSetForThisMarkingPeriod", "Grade reporting date has not set for this marking period");
+define("_coursePeriodIsConfiguredAsWeightedButNoWeightsAreAssignedToTheAssignmentTypes", "Course Period is configured as weighted but no weights are assigned to the Assignment Types.");
 define("_messageBodyCannotBeEmpty", "Message body cannot be empty");
 define("_messageNotSentAsNoUsersWereFound", "Message not sent as no users were found");
 define("_unableToDeleteGoalPleaseDeleteProgressesFirst", "Unable to delete Goal. Please delete Progresses first.");
@@ -1956,4 +1959,31 @@
 define("_cannotGeneratePagination", "Cannot generate pagination!");
 define("_outOf", "out of");
 define("_entries", "entries");
-?>
+define("_cannotDeleteBecauseReportCardCommentsAreAssociated", "Can not delete because Report Card Comments are associated");
+
+// some constant are not define so it give a fatal error
+define('ID', 'ID');
+define('TITLE', 'TITLE');
+define('modname', 'modname');
+define('MARKING_PERIOD_ID', 'MARKING_PERIOD_ID');
+define('marking_period_id', 'marking_period_id');
+// define('FIRST_NAME','First Name');
+// define('MIDDLE_NAME','Middle Name');
+// define('LAST_NAME','Last Name');
+// define('GENDER','Gender');
+// define('gender','Gender');
+// define('ETHNICITY', 'ETHNICITY');
+// define('ethnicity','ethnicity');
+// define('COMMON_NAME', 'COMMON_NAME');
+// define('common_name','common_name');
+// define('LANGUAGE','LANGUAGE');
+// define('language','language');
+// define('EMAIL','EMAIL');
+// define('email','email');
+// define('PHONE','PHONE');
+define('_admin', 'Admin');
+define('_gpscall', 'Gp Scall');
+define('link','link');
+define("ROOM_ID","ROOM_ID");
+define("generalInfo","generalInfo");
+define('students','Students');
\ No newline at end of file

--- lang/lang_es.php ---
@@ -78,6 +78,7 @@
 define("_searchable", "Buscable");
 define("_expandedView", "Vista expandida");
 define("_medical", "Médico");
+define("_contacts", "Contactos");
 define("_contactInformation", "Información del contacto");
 define("_contactInfoRollover", "Información de contacto Rollover");
 define("_homePhoneNumber", "Número de teléfono de casa");
@@ -109,10 +110,14 @@
 define("_administrator", "Administrador");
 define("_teacher", "Profesor");
 define("_student", "Alumno");
+define("_studentContact", "Contacto del estudiante");
+define("_studentContacts", "Contactos de estudiantes");
 define("_parent", "Padre");
 define("_adminAsst", "Asistente de administración");
 define("_markingPeriods", "Periodos de marcado");
 define("_shortName", "Nombre corto");
+define("_hospitalName", "Nombre del hospital");
+define("_physicianName", "Nombre del médico");
 define("_comments", "Comentarios");
 define("_graded", "Calificado");
 define("_exam", "Examen");
@@ -198,7 +203,7 @@
 define("_fullDayMinutes", "MINUTOS DE DÍA COMPLETO");
 define("_halfDayMinutes", "MEDIO DÍA MINUTOS");
 define("_loginFailureAllowance", "PERMITIDO DE INICIAR SESIÓN");
-define("_noOfLoginFailuresAllowedBeforeAccountIsDisabled", "NO OF LOGIN FAILURES ALLOWED BEFORE ACCOUNT IS DISABLED");
+define("_noOfLoginFailuresAllowedBeforeAccountIsDisabled", "NO. OF LOGIN FAILURES ALLOWED BEFORE ACCOUNT IS DISABLED");
 define("_userInactivityDays", "DÍAS DE INACTIVIDAD DEL USUARIO");
 define("_maximumInactiveDaysAllowedBeforeAccountIsDisabled", "DÍAS MÁXIMOS INACTIVOS PERMITIDOS ANTES DE DESACTIVAR LA CUENTA");
 define("_putTheSystemInMaintenanceMode", "Ponga el sistema en modo de mantenimiento");
@@ -872,6 +877,7 @@
 define("_unsupportedFileFormatCannotUploadFile", "Formato de archivo no compatible, no se puede cargar el archivo");
 define("_FileExceedsTheAllowableSizeTryAgainWithAFileLessThen10Mb","el formato de archivo no admitido no puede cargar el archivo");
 define("_studentStartDateCannotBeBeforeStudentsLastSchoolsDropDate", "La fecha de inicio del estudiante no puede ser anterior a la última fecha de baja de la escuela.");
+define("_startDateCannotBeBeforeStudentsPreviousSchoolDropDate", "La fecha de inicio no puede ser anterior a la fecha de abandono escolar anterior del estudiante");
 define("_studentDropDateCannotBeBeforeStudentEnrollmentDate", "La fecha de baja del estudiante no puede ser anterior a la fecha de inscripción del estudiante");
 define("_gradeCannotBeBlank", "La calificación no puede estar en blanco");
 define("_pleaseProvideAllDetailsToTransferInNewSchool", "Proporcione todos los detalles para la transferencia a la nueva escuela.");
@@ -991,6 +997,7 @@
 define("_primaryCertificationIndicator", "Indicador de certificación principal");
 define("_parentInfo", "Información para padres");
 define("_associatedStudents", "Estudiantes Asociados");
+define("_associated", "Asociado");
 define("_relationship", "Relación");
 define("_staff", "Personal");
 define("_staffInfo", "Información del personal");
@@ -1108,7 +1115,7 @@
 define("_youCannotScheduleAStudentIntoChatCourseDuringTheMarkingPeriodThatYouChoseThisCourseMeetsOn", "No puede programar a un estudiante en ese curso durante el período de calificaciones que eligió. Este curso se reúne en");
 define("_cannotScheduleStudentsBeforeSchoolStartDate", "No se puede programar a los estudiantes antes de la fecha de inicio de clases");
 define("_studentsScheduleDateShouldBeBetweenCourseStartDateAndEndDate", "la fecha de programación de los estudiantes debe estar entre la fecha de inicio y la fecha de finalización del curso");
-define("_thereAreNoAvailableSeatsInThisPeriod", "No hay asientos disponibles en este período.");
+define("_thereIsNoAvailableSeatsInThisPeriod", "No hay asientos disponibles en este período.");
 define("_manualOverride", "Accionamiento manual");
 define("_incompleteCoursePeriodCourses", "Periodo de curso incompleto Cursos ");
 define("_courseToAdd", "Curso para agregar");
@@ -1391,6 +1398,7 @@
 define("_messageDeletedSucessfully", "Mensaje eliminado correctamente");
 define("_pleaseSelectAtleastOneMessageToDelete", "Seleccione al menos un mensaje para eliminar");
 define("_attachment", "Adjunto archivo");
+define("_attachments", "Archivos adjuntos");
 define("_dateTime", "FECHA Y HORA");
 define("_yourMessageHasBeenSent", "Tu mensaje ha sido enviado");
 define("_fileNotFoundOrInaccessible", "Archivo no encontrado o inaccesible");
@@ -1410,6 +1418,7 @@
 define("_messageNotSent", "Mensaje no enviado");
 define("_asTheyDonTExist", "Como ellos no existen");
 define("_doesnTExist", "no existe");
+define("_groupIsSuccessfullyDeleted", "El grupo se eliminó correctamente");
 //TOOLS
 define("_savingDatabaseForBackupBeforeRolloverPleaseDonotClickAnywhere", "Ahorro de la base de datos de copia de seguridad antes de vuelco, por favor haga clic en cualquier DONOT");
 define("_customFieldType", "Tipo de campo personalizado");
@@ -1442,6 +1451,7 @@
 define("_afterSelectingClickUpload", "Después de seleccionar, haga clic en Cargar");
 define("_clickHereToSelectAFile", "Haga clic aquí para seleccionar un archivo");
 define("_supportedFileTypesXlsXlsx", "Tipos de archivos admitidos: xls, xlsx");
+define("_theFirstRowMustContainColumnNames", "La primera fila debe contener nombres de columnas.");
 define("_nameSuffix", "Sufijo de nombre");
 define("_socialSecurity", "Seguridad Social");
 define("_estimatedGraduationDate", "Fecha estimada de graduación");
@@ -1602,6 +1612,8 @@
 define("_selectGroup", "Selecciona grupo");
 define("_cc", "CC");
 define("_bcc", "BCC");
+define("_messageMyClass", "Mensaje a mi clase");
+define("_back", "atrás");
 define("_attachFile", "Adjuntar archivo");
 define("_attachAnotherFile", "Adjuntar otro archivo");
 define("_clear", "CLARO");
@@ -1626,6 +1638,7 @@
 define("_loginRecordWasFound", "se encontró el registro de inicio de sesión");
 define("_loginRecordsWereFound", "se encontraron registros de inicio de sesión");
 define("_loginTime", "Hora de inicio de sesión");
+define("_loginRecord", "Registro de inicio de sesión");
 define("_loginRecords", "Registros de inicio de sesión");
 define("_failureCount", "Recuento de fallas");
 define("_status", "Estado");
@@ -1783,6 +1796,7 @@
 define("_confirm", "Confirmar");
 define("_historyMarkingPeriod", "Período de calificación de la historia");
 define("_historyMarkingPeriods", "Periodos de marcado de historial");
+define("_schoolMarkingPeriods", "Periodos de marcado escolar");
 define("_thisMarkingPeriodsHasBeenUpdated", "Estos períodos de calificación se han actualizado");
 define("_addAnotherMarkingPeriod", "Agregar otro período de calificación");
 define("_creditCategory", "Categoría de crédito");
@@ -1813,6 +1827,7 @@
 define("_startDateOrEndDateCannotBeBlank", "La fecha de inicio o la fecha de finalización no pueden estar en blanco");
 define("_scoreBreakoffPointsSetupIsIncompletePleaseSetScoreBreakoffPointsFromConfiguration", "La configuración de los puntos de interrupción de la puntuación está incompleta, establezca los puntos de interrupción de la puntuación desde la configuración");
 define("_gradeReportingDateHasNotSetForThisMarkingPeriod", "La fecha del informe de calificaciones no se ha establecido para este período de calificaciones");
+define("_coursePeriodIsConfiguredAsWeightedButNoWeightsAreAssignedToTheAssignmentTypes", "El período del curso está configurado como ponderado, pero no se asignan pesos a los tipos de tareas.");
 define("_messageBodyCannotBeEmpty", "El cuerpo del mensaje no puede estar vacío");
 define("_messageNotSentAsNoUsersWereFound", "Mensaje no enviado porque no se encontraron usuarios");
 define("_unableToDeleteGoalPleaseDeleteProgressesFirst", "No se puede eliminar el objetivo. Por favor, elimine los progresos primero.");
@@ -1957,4 +1972,5 @@
 define("_cannotGeneratePagination", "No se puede generar la paginación!");
 define("_outOf", "fuera de");
 define("_entries", "entradas");
-?>
+define("_cannotDeleteBecauseReportCardCommentsAreAssociated", "No se puede eliminar porque los comentarios de la boleta de calificaciones están asociados");
+?>
\ No newline at end of file

--- lang/lang_fr.php ---
@@ -78,6 +78,7 @@
 define("_searchable", "Interrogeable");
 define("_expandedView", "Voir élargie");
 define("_medical", "Médical");
+define("_contacts", "Contacts");
 define("_contactInformation", "Informations de contact");
 define("_contactInfoRollover", "Coordonnées Rollover");
 define("_homePhoneNumber", "Numéro de téléphone résidentiel");
@@ -109,10 +110,14 @@
 define("_administrator", "Administrateur");
 define("_teacher", "Prof");
 define("_student", "Étudiant");
+define("_studentContact", "Contact étudiant");
+define("_studentContacts", "Contacts étudiants");
 define("_parent", "Parent");
 define("_adminAsst", "Administrateur Asst");
 define("_markingPeriods", "Périodes de marquage");
 define("_shortName", "Nom court");
+define("_hospitalName", "Nom de l'hôpital");
+define("_physicianName", "Nom du médecin");
 define("_comments", "Commentaires");
 define("_graded", "Graded");
 define("_exam", "Examen");
@@ -871,6 +876,7 @@
 define("_unsupportedFileFormatCannotUploadFile", "le format de fichier non pris en charge ne peut pas télécharger le fichier");
 define("_FileExceedsTheAllowableSizeTryAgainWithAFileLessThen10Mb","el formato de archivo no admitido no puede cargar el archivo");
 define("_studentStartDateCannotBeBeforeStudentsLastSchoolsDropDate", "date de début de l'étudiant ne peut pas être avant que les élèves des écoles dernières date de baisse");
+define("_startDateCannotBeBeforeStudentsPreviousSchoolDropDate", "La date de début ne peut pas être antérieure à la date d'abandon scolaire précédente des élèves");
 define("_studentDropDateCannotBeBeforeStudentEnrollmentDate", "Date de dépôt étudiant ne peut pas être avant la date d'inscription des étudiants");
 define("_gradeCannotBeBlank", "Qualité ne peut pas être vide");
 define("_pleaseProvideAllDetailsToTransferInNewSchool", "S'il vous plaît fournir tous les détails au transfert dans la nouvelle école.");
@@ -990,6 +996,7 @@
 define("_primaryCertificationIndicator", "Indicateur de certification primaire");
 define("_parentInfo", "Infos Parent");
 define("_associatedStudents", "Les étudiants associés");
+define("_associated", "Associé");
 define("_relationship", "Relation");
 define("_staff", "Personnel");
 define("_staffInfo", "Infos du personnel");
@@ -1107,7 +1114,7 @@
 define("_youCannotScheduleAStudentIntoThatCourseDuringTheMarkingPeriodThatYouChoseThisCourseMeetsOn", "Vous ne pouvez pas planifier un étudiant dans ce cours pendant la période de notation que vous avez choisi. Ce cours se réunit");
 define("_cannotScheduleStudentsBeforeSchoolStartDate", "Impossible de planifier les étudiants avant la date de début de l'école");
 define("_studentsScheduleDateShouldBeBetweenCourseStartDateAndEndDate", "les étudiants date de calendrier devrait être entre la date de début du cours et la date de fin");
-define("_thereAreNoAvailableSeatsInThisPeriod", "Il n'y a pas de places disponibles pour cette période.");
+define("_thereIsNoAvailableSeatsInThisPeriod", "Il n'y a pas de sièges disponibles sur cette période.");
 define("_manualOverride", "Contrôle manuel");
 define("_incompleteCoursePeriodCourses", "Cours période de cours incomplet");
 define("_courseToAdd", "Cours à Ajouter");
@@ -1387,6 +1394,7 @@
 define("_messageDeletedSucessfully", "Un message supprimé sucessfully");
 define("_pleaseSelectAtleastOneMessageToDelete", "S'il vous plaît sélectionner au moins un message à supprimer");
 define("_attachment", "Attachement");
+define("_attachments", "Pièces jointes");
 define("_dateTime", "DATE / HEURE");
 define("_yourMessageHasBeenSent", "Votre message a été envoyé");
 define("_fileNotFoundOrInaccessible", "Fichier introuvable ou inaccessible");
@@ -1406,6 +1414,7 @@
 define("_messageNotSent", "Message non envoyé");
 define("_asTheyDonTExist", "car ils n'existent pas");
 define("_doesnTExist", "n'existe pas");
+define("_groupIsSuccessfullyDeleted", "Le groupe a été supprimé avec succès");
 //TOOLS
 define("_savingDatabaseForBackupBeforeRolloverPleaseDonotClickAnywhere", "base de données pour l'enregistrement de sauvegarde avant de survol, s'il vous plaît DONOT Cliquez avec le bouton");
 define("_customFieldType", "Type de champ personnalisé");
@@ -1438,6 +1447,7 @@
 define("_afterSelectingClickUpload", "Après avoir sélectionné, cliquez sur Télécharger");
 define("_clickHereToSelectAFile", "Cliquez ici pour sélectionner un fichier");
 define("_supportedFileTypesXlsXlsx", "Types de fichiers xls, xlsx");
+define("_theFirstRowMustContainColumnNames", "La première ligne doit contenir des noms de colonnes.");
 define("_nameSuffix", "Suffixe de nom");
 define("_socialSecurity", "Sécurité sociale");
 define("_estimatedGraduationDate", "Graduation Date approximative");
@@ -1597,6 +1607,8 @@
 define("_selectGroup", "Sélectionner le groupe");
 define("_cc", "CC");
 define("_bcc", "BCC");
+define("_messageMyClass", "Message ma classe");
+define("_back", "Retour");
 define("_attachFile", "Pièce jointe");
 define("_attachAnotherFile", "Joindre un autre fichier");
 define("_clear", "CLAIR");
@@ -1621,6 +1633,7 @@
 define("_loginRecordWasFound", "Enregistrement de connexion a été trouvé.");
 define("_loginRecordsWereFound", "Les enregistrements de connexion ont été trouvés.");
 define("_loginTime", "Durée de connexion");
+define("_loginRecord", "Enregistrement de connexion");
 define("_loginRecords", "Connexion Enregistrements");
 define("_failureCount", "Le défaut comte");
 define("_status", "Statut");
@@ -1701,7 +1714,7 @@
 define("_wereFound", "Ont été trouvés");
 define("_gradebook", "Bulletin de notes");
 define("_wasFound", "a été trouvé");
-define("_assignmentType", "Type d'affectation");
+define("_assignmentType", "Type d\'affectation");
 define("_assignment", "Affectation");
 define("_weight", "Poids");
 define("_points", "Points");
@@ -1778,6 +1791,7 @@
 define("_confirm", "Confirmer");
 define("_historyMarkingPeriod", "Période de marquage Histoire");
 define("_historyMarkingPeriods", "Périodes de marquage Histoire");
+define("_schoolMarkingPeriods", "Périodes scolaires");
 define("_thisMarkingPeriodsHasBeenUpdated", "Cette périodes a été mis à jour le marquage");
 define("_addAnotherMarkingPeriod", "Ajouter une autre période de marquage");
 define("_creditCategory", "Catégorie de crédit");
@@ -1808,6 +1822,7 @@
 define("_startDateOrEndDateCannotBeBlank", "Date de début ou de fin ne peut pas être vide");
 define("_scoreBreakoffPointsSetupIsIncompletePleaseSetScoreBreakoffPointsFromConfiguration", "Score Breakoff Points configuration est incomplète, RÉGLER Points Score cassage de configuration");
 define("_gradeReportingDateHasNotSetForThisMarkingPeriod", "date de clôture de qualité n'a pas fixé pour cette période de notation");
+define("_coursePeriodIsConfiguredAsWeightedButNoWeightsAreAssignedToTheAssignmentTypes", "La période de cours est configurée comme pondérée, mais aucune pondération n'est attribuée aux types de devoirs.");
 define("_messageBodyCannotBeEmpty", "Le corps du message ne peut pas être vide");
 define("_messageNotSentAsNoUsersWereFound", "Message non envoyé comme aucun utilisateur n'a été trouvé");
 define("_unableToDeleteGoalPleaseDeleteProgressesFirst", "Impossible de supprimer l'objectif. S'il vous plaît supprimer Progresse premier.");
@@ -1950,4 +1965,5 @@
 define("_cannotGeneratePagination", "Impossible de générer la pagination!");
 define("_outOf", "hors de");
 define("_entries", "entrées");
-?>
+define("_cannotDeleteBecauseReportCardCommentsAreAssociated", "Impossible de supprimer car les commentaires de la fiche de rapport sont associés");
+?>
\ No newline at end of file

--- lang/language.php ---
@@ -1,8 +1,5 @@
 <?php
-
 error_reporting(0);
-
-
 if($_REQUEST['modfunc'] != 'logout'){
     
 include('lang/supportedLanguages.php');

--- libraries/htmlpurifier/smoketests/common.php ---
@@ -7,7 +7,6 @@
 } else {
     require_once '../library/HTMLPurifier.standalone.php';
 }
-error_reporting(E_ALL);
 
 function escapeHTML($string)
 {

--- modules/attendance/AddAbsences.php ---
@@ -29,8 +29,7 @@
 include('../../RedirectModulesInc.php');
 include('lang/language.php');
 
-if(isset($_SESSION['student_id']) && $_SESSION['student_id'] != '')
-{
+if (isset($_SESSION['student_id']) && $_SESSION['student_id'] != '') {
     $_REQUEST['search_modfunc'] = 'list';
 }
 
@@ -49,7 +48,7 @@
 
     $_REQUEST['student'] = sqlSecurityFilter($_REQUEST['student']);
 
-    if (count($_REQUEST['period']) && count($_REQUEST['student']) && count($_REQUEST['dates'])) {
+    if (!empty($_REQUEST['period']) && !empty($_REQUEST['student']) && !empty($_REQUEST['dates'])) {
         $not_taken_arr = array();
         $taken_arr = array();
         foreach ($_REQUEST['period'] as $period_id => $yes)
@@ -60,7 +59,7 @@
             $students_list .= ",'" . $student_id . "'";
         $students_list = '(' . substr($students_list, 1) . ')';
 
-        $current_RET = DBGet(DBQuery('SELECT STUDENT_ID,PERIOD_ID,COURSE_PERIOD_ID,SCHOOL_DATE,ATTENDANCE_CODE FROM attendance_period WHERE EXTRACT(MONTH FROM SCHOOL_DATE)=\'' . ($_REQUEST['month'] * 1) . '\' AND EXTRACT(YEAR FROM SCHOOL_DATE)=\'' . $_REQUEST[year] . '\' AND PERIOD_ID IN ' . $periods_list . ' AND STUDENT_ID IN ' . $students_list . ''), array(), array('STUDENT_ID', 'SCHOOL_DATE', 'PERIOD_ID', 'COURSE_PERIOD_ID'));
+        $current_RET = DBGet(DBQuery('SELECT STUDENT_ID,PERIOD_ID,COURSE_PERIOD_ID,SCHOOL_DATE,ATTENDANCE_CODE FROM attendance_period WHERE EXTRACT(MONTH FROM SCHOOL_DATE)=\'' . ($_REQUEST['month'] * 1) . '\' AND EXTRACT(YEAR FROM SCHOOL_DATE)=\'' . $_REQUEST['year'] . '\' AND PERIOD_ID IN ' . $periods_list . ' AND STUDENT_ID IN ' . $students_list . ''), array(), array('STUDENT_ID', 'SCHOOL_DATE', 'PERIOD_ID', 'COURSE_PERIOD_ID'));
 
         $cp_arr = array();
         foreach ($_REQUEST['student'] as $student_id => $yes) {
@@ -79,34 +78,30 @@
                 $period_key = array_keys($_REQUEST['period']);
                 $c = 0;
                 foreach ($course_periods_RET as $course_periods_RET) {
-//                                    	
+                    //                                    	
                     // foreach ($_REQUEST['period'] as $period_id => $yes) {
-                    if(in_array($course_periods_RET['PERIOD_ID'], $period_key))
-                    {
+                    if (in_array($course_periods_RET['PERIOD_ID'], $period_key)) {
                         $period_id = $course_periods_RET['PERIOD_ID'];
                         $course_period_id = $course_periods_RET['COURSE_PERIOD_ID'];
-//                               
+                        //                               
                         $cp_arr[$course_periods_RET['CPV_ID']] = $course_period_id;
                         if (!$current_RET[$student_id][$date][$period_id][$course_period_id]) {
 
                             if ($course_period_id) {
                                 $att_dup = DBQuery('delete from attendance_period where student_id=' . $student_id . ' and school_date=' . $date . ' and period_id=' . $period_id . '');
-                                
-                                $check_dup_continues=DBGet(DBQuery('SELECT COUNT(*) as REC_EX FROM attendance_period WHERE STUDENT_ID='.$student_id.' AND SCHOOL_DATE=\''.$date.'\' AND PERIOD_ID=\''.$period_id.'\' AND MARKING_PERIOD_ID=\''.$current_mp.'\''));
-                                if($check_dup_continues[1]['REC_EX']==0)
-                                {
-                                $absence_reason=optional_param('absence_reason', '', PARAM_SPCL);
-                                $absence_reason= singleQuoteReplace("","",$absence_reason);
-                                $sql = 'INSERT INTO attendance_period (STUDENT_ID,SCHOOL_DATE,PERIOD_ID,MARKING_PERIOD_ID,COURSE_PERIOD_ID,ATTENDANCE_CODE,ATTENDANCE_TEACHER_CODE,ATTENDANCE_REASON,ADMIN)values(\'' . $student_id . '\',\'' . $date . '\',\'' . $period_id . '\',\'' . $current_mp . '\',\'' . $course_period_id . '\',\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',\'' .$absence_reason. '\',\'Y\')';                               
-                                }
-                                else
-                                {
-                                $absence_reason=optional_param('absence_reason', '', PARAM_SPCL);
-                                $absence_reason= singleQuoteReplace("","",$absence_reason);
-                                  $sql = 'UPDATE attendance_period SET ATTENDANCE_CODE=\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',ATTENDANCE_TEACHER_CODE=\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',ATTENDANCE_REASON=\'' . $absence_reason . '\',ADMIN=\'Y\',COURSE_PERIOD_ID=\'' . $course_period_id . '\'
-								WHERE STUDENT_ID=\'' . $student_id . '\' AND SCHOOL_DATE=\'' . $date . '\' AND PERIOD_ID=\'' . $period_id . '\'';   
+
+                                $check_dup_continues = DBGet(DBQuery('SELECT COUNT(*) as REC_EX FROM attendance_period WHERE STUDENT_ID=' . $student_id . ' AND SCHOOL_DATE=\'' . $date . '\' AND PERIOD_ID=\'' . $period_id . '\' AND MARKING_PERIOD_ID=\'' . $current_mp . '\''));
+                                if ($check_dup_continues[1]['REC_EX'] == 0) {
+                                    $absence_reason = optional_param('absence_reason', '', PARAM_SPCL);
+                                    $absence_reason = singleQuoteReplace("", "", $absence_reason);
+                                    $sql = 'INSERT INTO attendance_period (STUDENT_ID,SCHOOL_DATE,PERIOD_ID,MARKING_PERIOD_ID,COURSE_PERIOD_ID,ATTENDANCE_CODE,ATTENDANCE_TEACHER_CODE,ATTENDANCE_REASON,ADMIN)values(\'' . $student_id . '\',\'' . $date . '\',\'' . $period_id . '\',\'' . $current_mp . '\',\'' . $course_period_id . '\',\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',\'' . $absence_reason . '\',\'Y\')';
+                                } else {
+                                    $absence_reason = optional_param('absence_reason', '', PARAM_SPCL);
+                                    $absence_reason = singleQuoteReplace("", "", $absence_reason);
+                                    $sql = 'UPDATE attendance_period SET ATTENDANCE_CODE=\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',ATTENDANCE_TEACHER_CODE=\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\',ATTENDANCE_REASON=\'' . $absence_reason . '\',ADMIN=\'Y\',COURSE_PERIOD_ID=\'' . $course_period_id . '\'
+								WHERE STUDENT_ID=\'' . $student_id . '\' AND SCHOOL_DATE=\'' . $date . '\' AND PERIOD_ID=\'' . $period_id . '\'';
                                 }
-                                 DBQuery($sql);
+                                DBQuery($sql);
                                 $taken_arr[$student_id] = $student_id;
                             } else {
                                 $not_taken_arr[$student_id] = $student_id;
@@ -130,7 +125,7 @@
         //-----------------------For update attendance_completed----------------------------------------
 
         foreach ($cp_arr as $cpv_id => $cp_id) {
-            $current_RET = DBGet(DBQuery('SELECT STUDENT_ID,PERIOD_ID,SCHOOL_DATE,ATTENDANCE_CODE FROM attendance_period WHERE course_period_id=' . $cp_id . ' AND EXTRACT(MONTH FROM SCHOOL_DATE)=\'' . ($_REQUEST['month'] * 1) . '\' AND EXTRACT(YEAR FROM SCHOOL_DATE)=\'' . $_REQUEST[year] . '\''), array(), array('SCHOOL_DATE', 'PERIOD_ID'));
+            $current_RET = DBGet(DBQuery('SELECT STUDENT_ID,PERIOD_ID,SCHOOL_DATE,ATTENDANCE_CODE FROM attendance_period WHERE course_period_id=' . $cp_id . ' AND EXTRACT(MONTH FROM SCHOOL_DATE)=\'' . ($_REQUEST['month'] * 1) . '\' AND EXTRACT(YEAR FROM SCHOOL_DATE)=\'' . $_REQUEST['year'] . '\''), array(), array('SCHOOL_DATE', 'PERIOD_ID'));
             foreach ($_REQUEST['dates'] as $date => $yes) {
 
                 $course_periods_RET = DBGet(DBQuery('SELECT s.COURSE_PERIOD_ID,cpv.PERIOD_ID,cp.TEACHER_ID FROM schedule s,course_periods cp,course_period_var cpv,attendance_calendar ac,school_periods sp WHERE sp.PERIOD_ID=cpv.PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND ac.SCHOOL_DATE=\'' . date('Y-m-d', strtotime($date)) . '\' AND ac.CALENDAR_ID=cp.CALENDAR_ID AND (ac.BLOCK=sp.BLOCK OR sp.BLOCK IS NULL) AND s.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND cp.COURSE_PERIOD_ID=' . $cp_id . ' AND cpv.DOES_ATTENDANCE=\'Y\' AND (ac.SCHOOL_DATE BETWEEN s.START_DATE AND s.END_DATE OR (s.END_DATE IS NULL AND ac.SCHOOL_DATE>=s.START_DATE)) AND position(substring(\'UMTWHFS\' FROM DAYOFWEEK(ac.SCHOOL_DATE)  FOR 1) IN cpv.DAYS)>0 AND cp.MARKING_PERIOD_ID IN (' . $all_mp . ') AND s.MARKING_PERIOD_ID IN (' . $all_mp . ') AND NOT (cp.HALF_DAY=\'Y\' AND (SELECT STATE_CODE FROM attendance_codes WHERE ID=\'' . optional_param('absence_code', '', PARAM_NUMBER) . '\')=\'H\')'), array(), array('PERIOD_ID'));
@@ -182,16 +177,15 @@
 
 
 if (!$_REQUEST['modfunc']) {
-    $extra['link'] = array('FULL_NAME' =>false);
+    $extra['link'] = array('FULL_NAME' => false);
     $extra['SELECT'] = ",NULL AS CHECKBOX";
-    if(isset($_SESSION['student_id']) && $_SESSION['student_id'] != '')
-    {
+    if (isset($_SESSION['student_id']) && $_SESSION['student_id'] != '') {
         $extra['WHERE'] .= ' AND s.STUDENT_ID=' . $_SESSION['student_id'];
     }
     // if (optional_param('search_modfunc', '', PARAM_NOTAGS) == 'list') {
     if ($_REQUEST['search_modfunc'] == 'list') {
         if ($note)
-            echo "<div class='alert alert-success alert-dismissible'><a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;&nbsp;&nbsp;</a>".$note."</div>";
+            echo "<div class='alert alert-success alert-dismissible'><a href='#' class='close' data-dismiss='alert' aria-label='close'>&times;&nbsp;&nbsp;</a>" . $note . "</div>";
         echo "<FORM class=\"form-horizontal\" action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save  METHOD=POST name=addAbsences>";
 
         //PopTable_wo_header('header');
@@ -201,7 +195,7 @@
         echo '<div class="col-lg-12">';
 
         echo '<div class="form-group">';
-        echo '<label class="control-label col-lg-2">'._addAbsenceToPeriods.'</label>';
+        echo '<label class="control-label col-lg-2">' . _addAbsenceToPeriods . '</label>';
         echo '<div class="col-lg-10">';
 
         $periods_RET = DBGet(DBQuery('SELECT SHORT_NAME,PERIOD_ID FROM school_periods WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND EXISTS (SELECT * FROM course_periods cp,course_period_var cpv WHERE cpv.PERIOD_ID=school_periods.PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cpv.DOES_ATTENDANCE=\'' . 'Y' . '\') ORDER BY SORT_ORDER'));
@@ -213,7 +207,7 @@
         echo '<div class="row">';
         echo '<div class="col-lg-6">';
         echo '<div class="form-group">';
-        echo '<label class="control-label col-lg-3">'._absenceCode.'</label>';
+        echo '<label class="control-label col-lg-3">' . _absenceCode . '</label>';
         echo '<div class="col-lg-9">';
         echo '<SELECT class="form-control" name=absence_code>';
         $codes_RET = DBGet(DBQuery('SELECT TITLE,ID FROM attendance_codes WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND TABLE_NAME=0'));
@@ -226,7 +220,7 @@
 
         echo '<div class="col-lg-6">';
         echo '<div class="form-group">';
-        echo '<label class="control-label col-lg-3">'._absenceReason.'</label>';
+        echo '<label class="control-label col-lg-3">' . _absenceReason . '</label>';
         echo '<div class="col-lg-9">';
         echo '<INPUT type=text name=absence_reason class="form-control">';
         echo '</div>'; //.col-lg-8
@@ -242,56 +236,54 @@
 
         echo '<div class="panel-body">';
 
-        $months=array("01"=>'January',"02"=>'February',"03"=>'March',"04"=>'April',"05"=>'May',"06"=>'June',"07"=>'July',"08"=>'August',"09"=>'September',"10"=>'October',"11"=>'November',"12"=>'December');
+        $months = array("01" => 'January', "02" => 'February', "03" => 'March', "04" => 'April', "05" => 'May', "06" => 'June', "07" => 'July', "08" => 'August', "09" => 'September', "10" => 'October', "11" => 'November', "12" => 'December');
         $time = mktime(0, 0, 0, $_REQUEST['month'] * 1, 1, substr($_REQUEST['year'], 2));
-//        echo '<div class="clearfix"><div class="col-md-12"><div class="form-inline">' . PrepareDate(strtoupper(date("d-M-y", $time)), '', false, array('M' => 1, 'Y' => 1, 'submit' =>true)) . '</div></div></div>';
-        
-        
-        $date = $_REQUEST['year'].'-'.$_REQUEST['month'].'-1';
+        //        echo '<div class="clearfix"><div class="col-md-12"><div class="form-inline">' . PrepareDate(strtoupper(date("d-M-y", $time)), '', false, array('M' => 1, 'Y' => 1, 'submit' =>true)) . '</div></div></div>';
+
+
+        $date = $_REQUEST['year'] . '-' . $_REQUEST['month'] . '-1';
         $prev_month = date('m', strtotime('-1 month', strtotime($date)));
         $prev_year = date('Y', strtotime('-1 month', strtotime($date)));
         $next_month = date('m', strtotime('+1 month', strtotime($date)));
         $next_year = date('Y', strtotime('+1 month', strtotime($date)));
-        
+
         echo '<div class="row m-b-15">';
         echo '<div class="col-xs-2 col-md-4 text-left">';
-        echo '<a class="btn" href="'.PreparePHP_SELF($_REQUEST).'&month='.$prev_month.'&year='.$prev_year.'"><i class="icon-arrow-left8 position-left"></i> <span class="hidden-xs">'._prevMonth.'</span></a>';
+        echo '<a class="btn" href="' . PreparePHP_SELF($_REQUEST) . '&month=' . $prev_month . '&year=' . $prev_year . '"><i class="icon-arrow-left8 position-left"></i> <span class="hidden-xs">' . _prevMonth . '</span></a>';
         echo '</div>';
         echo '<div class="col-xs-8 col-md-4 text-center">';
         echo '<div class="form-inline">';
-        echo "<SELECT class=\"form-control inline-block m-r-10\" NAME=month id=monthSelect  onchange='document.location.href=\"" . PreparePHP_SELF($_REQUEST)."&month=\"+this.form.monthSelect.value;'>";
-        foreach($months as $mi=>$md){
-            if($_REQUEST['month']==$mi)
-            echo "<OPTION value=".$mi." SELECTED >$md</OPTION>";
+        echo "<SELECT class=\"form-control inline-block m-r-10\" NAME=month id=monthSelect  onchange='document.location.href=\"" . PreparePHP_SELF($_REQUEST) . "&month=\"+this.form.monthSelect.value;'>";
+        foreach ($months as $mi => $md) {
+            if ($_REQUEST['month'] == $mi)
+                echo "<OPTION value=" . $mi . " SELECTED >$md</OPTION>";
             else
-            echo "<OPTION value=".$mi." >$md</OPTION>";
-            
+                echo "<OPTION value=" . $mi . " >$md</OPTION>";
         }
         echo '</SELECT>';
-        echo "<SELECT class=\"form-control inline-block\" NAME=year id=yearSelect  onchange='document.location.href=\"" . PreparePHP_SELF($_REQUEST)."&year=\"+this.form.yearSelect.value;'>";
-        for($years=1959;$years<=date('Y')+30;$years++){
-            if($_REQUEST['year']==$years)
-            echo "<OPTION value=".$years." SELECTED >$years</OPTION>";
+        echo "<SELECT class=\"form-control inline-block\" NAME=year id=yearSelect  onchange='document.location.href=\"" . PreparePHP_SELF($_REQUEST) . "&year=\"+this.form.yearSelect.value;'>";
+        for ($years = 1959; $years <= date('Y') + 30; $years++) {
+            if ($_REQUEST['year'] == $years)
+                echo "<OPTION value=" . $years . " SELECTED >$years</OPTION>";
             else
-            echo "<OPTION value=".$years." >$years</OPTION>";
-            
+                echo "<OPTION value=" . $years . " >$years</OPTION>";
         }
         echo '</SELECT>';
         echo '</div>'; //.form-inline
         echo '</div>'; //.col-md-4
         echo '<div class="col-xs-2 col-md-4 text-right">';
-        echo '<a class="btn" href="'.PreparePHP_SELF($_REQUEST).'&month='.$next_month.'&year='.$next_year.'"><span class="hidden-xs">'._nextMonth.'</span> <i class="icon-arrow-right8 position-right"></i></a>';
+        echo '<a class="btn" href="' . PreparePHP_SELF($_REQUEST) . '&month=' . $next_month . '&year=' . $next_year . '"><span class="hidden-xs">' . _nextMonth . '</span> <i class="icon-arrow-right8 position-right"></i></a>';
         echo '</div>'; //.col-md-4
         echo '</div>'; //.row
-        
-        
+
+
         $skip = date("w", $time);
         $last = 31;
         while (!checkdate($_REQUEST['month'] * 1, $last, substr($_REQUEST['year'], 2)))
             $last--;
-        
+
         echo '<div class="table-responsive"><table class="table table-bordered table-condensed" width="100%"><thead><tr>';
-        echo '<th>'._sun.'</th><th>'._mon.'</th><th>'._tue.'</th><th>'._wed.'</th><th>'._thu.'</th><th>'._fri.'</th><th>'._sat.'</th></tr></thead><tbody><tr>';
+        echo '<th>' . _sun . '</th><th>' . _mon . '</th><th>' . _tue . '</th><th>' . _wed . '</th><th>' . _thu . '</th><th>' . _fri . '</th><th>' . _sat . '</th></tr></thead><tbody><tr>';
         $calendar_RET = DBGet(DBQuery('SELECT SCHOOL_DATE FROM attendance_calendar WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND MINUTES!=0 AND EXTRACT(MONTH FROM SCHOOL_DATE)=\'' . ($_REQUEST['month'] * 1) . '\''), array(), array('SCHOOL_DATE'));
         for ($i = 1; $i <= $skip; $i++)
             echo '<td class="alpha-grey"></td>';
@@ -322,7 +314,7 @@
         }
         echo '</tr></tbody></table>';
         echo '</div>'; //.table-responsive
-        
+
         echo '</div>'; //.panel-body
         echo '</div>'; //.panel
     } elseif ($note)
@@ -351,12 +343,13 @@
     $extra['search'] .= '</div>'; //.row
 
     $extra['functions'] = array('CHECKBOX' => '_makeChooseCheckbox');
-    $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAll(this.form,this.form.controller.checked,\'student\');"><A>');
+    // $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAll(this.form,this.form.controller.checked,\'student\');"><A>');
+    $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod(this,\'student\',\'Y\');"><A>');
     $extra['new'] = true;
-    
+
     // if (optional_param('search_modfunc', '', PARAM_ALPHA) == 'list')
-    if ($_REQUEST['search_modfunc'] == 'list')   
-        $extra['footer'] = '<div class="panel-footer text-right p-r-20">'.SubmitButton(_save, '', 'class="btn btn-primary" onclick="self_disable(this);"') . '</div>';
+    if ($_REQUEST['search_modfunc'] == 'list')
+        $extra['footer'] = '<div class="panel-footer text-right p-r-20">' . SubmitButton(_save, '', 'class="btn btn-primary" onclick="self_disable(this);"') . '</div>';
 
     Search('student_id', $extra);
 
@@ -370,7 +363,7 @@
     echo '<div class="modal-content">';
     echo '<div class="modal-header">';
     echo '<button type="button" class="close" data-dismiss="modal">×</button>';
-    echo '<h4 class="modal-title">'._chooseCourse.'</h4>';
+    echo '<h4 class="modal-title">' . _chooseCourse . '</h4>';
     echo '</div>';
 
     echo '<div class="modal-body">';
@@ -381,7 +374,7 @@
     $QI = DBQuery($sql);
     $subjects_RET = DBGet($QI);
 
-    echo '<h6>' . count($subjects_RET) . ((count($subjects_RET) == 1) ? ' '._subjectWas : ' '._subjectsWere) . ' found.</h6>';
+    echo '<h6>' . count($subjects_RET) . ((count($subjects_RET) == 1) ? ' ' . _subjectWas : ' ' . _subjectsWere) . ' found.</h6>';
     if (count($subjects_RET) > 0) {
         echo '<table class="table table-bordered"><thead><tr class="alpha-grey"><th>Subject</th></tr></thead>';
         foreach ($subjects_RET as $val) {
@@ -399,10 +392,16 @@
     echo '</div>'; //.modal
 }
 
-function _makeChooseCheckbox($value, $title) {
+function _makeChooseCheckbox($value, $title)
+{
     global $THIS_RET;
+    // return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
 
-    return "<INPUT type=checkbox name=student[" . $THIS_RET['STUDENT_ID'] . "] value=Y>";
+    return "<input name=unused[$THIS_RET[STUDENT_ID]] value=Y  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"student[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID], \"Y\");' />";
 }
+// function _makeChooseCheckbox($value, $title)
+// {
+//     global $THIS_RET;
 
-?>
+//     return "<INPUT type=checkbox name=student[" . $THIS_RET['STUDENT_ID'] . "] value=Y>";
+// }

--- modules/attendance/Administration.php ---
@@ -42,8 +42,10 @@
 } else {
     $date = DBDate('mysql');
     $_REQUEST['day_date'] = date('d');
-    $_REQUEST['month_date'] = strtoupper(date('M'));
-    $_REQUEST['year_date'] = date('y');
+    // $_REQUEST['month_date'] = strtoupper(date('M'));
+    // $_REQUEST['year_date'] = date('y');
+    $_REQUEST['month_date'] = date('m');
+    $_REQUEST['year_date'] = date('Y');
 }
 if (!$_REQUEST['table'])
     $_REQUEST['table'] = '0';
@@ -53,7 +55,7 @@
     $extra_sql = '';
 } else {
     $table = 'lunch_period';
-    $extra_sql = ' AND TABLE_NAME=\'' . $_REQUEST[table] . '\'';
+    $extra_sql = ' AND TABLE_NAME=\'' . $_REQUEST['table'] . '\'';
 }
 $_SESSION['Administration.php']['date'] = $date;
 $current_RET = DBGet(DBQuery('SELECT ATTENDANCE_TEACHER_CODE,ATTENDANCE_CODE,ATTENDANCE_REASON,STUDENT_ID,ADMIN,COURSE_PERIOD_ID,PERIOD_ID FROM ' . $table . ' WHERE SCHOOL_DATE=\'' . $date . '\'' . $extra_sql), array(), array('STUDENT_ID', 'COURSE_PERIOD_ID'));
@@ -130,7 +132,7 @@
     unset($_SESSION['_REQUEST_vars']['attendance']);
     unset($_SESSION['_REQUEST_vars']['attendance_day']);
 }
-if (count($_REQUEST['attendance_day'])) {
+if (!empty($_REQUEST['attendance_day'])) {
     foreach ($_REQUEST['attendance_day'] as $student_id => $comment) {
 
         $val = $comment['COMMENT'];
@@ -140,7 +142,7 @@
     unset($_REQUEST['attendance_day']);
 }
 
-$codes_RET = DBGet(DBQuery('SELECT ID,SHORT_NAME,TITLE,STATE_CODE FROM attendance_codes WHERE SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\' AND TABLE_NAME=\'' . $_REQUEST[table] . '\''));
+$codes_RET = DBGet(DBQuery('SELECT ID,SHORT_NAME,TITLE,STATE_CODE FROM attendance_codes WHERE SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\' AND TABLE_NAME=\'' . $_REQUEST['table'] . '\''));
 $periods_RET = DBGet(DBQuery('SELECT PERIOD_ID,SHORT_NAME,TITLE FROM school_periods WHERE SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\' AND EXISTS (SELECT * FROM course_periods cp,course_period_var cpv WHERE cpv.PERIOD_ID=school_periods.PERIOD_ID AND cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND cpv.DOES_ATTENDANCE=\'Y\') ORDER BY SORT_ORDER'));
 if (isset($_REQUEST['student_id']) && optional_param('student_id', '', PARAM_ALPHANUM) != 'new') {
 
@@ -176,13 +178,13 @@
         if ($count_student_RET[1]['NUM'] > 1) {
             #-----------------------------------------------------newly added attendance code and the date in back to list
           echo '<div class="panel panel-default">';
-            DrawHeader(''._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'], '<span class="heading-text"><A HREF=Modules.php?modname=' . $_REQUEST['modname'] . '&search_modfunc=list&next_modname=students/Student.php&codes[]=' . $_SESSION[code][0] . '&ajax=true&bottom_back=true&month_date=' . $_REQUEST[month_date] . '&day_date=' . $_REQUEST[day_date] . '&year_date=' . $_REQUEST[year_date] . ' target=body><i class="icon-square-left"></i> '._backToStudentList.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div>');
+            DrawHeader(''._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'], '<span class="heading-text"><A HREF=Modules.php?modname=' . $_REQUEST['modname'] . '&search_modfunc=list&next_modname=students/Student.php&codes[]=' . $_SESSION['code'][0] . '&ajax=true&bottom_back=true&month_date=' . $_REQUEST['month_date'] . '&day_date=' . $_REQUEST['day_date'] . '&year_date=' . $_REQUEST['year_date'] . ' target=body><i class="icon-square-left"></i> '._backToStudentList.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div>');
             echo '</div>';
             #-----------------------------------------------------newly added attendance code and the date in back to list
         }
     }
     echo '<div class="panel panel-default">';
-    ListOutput($schedule_RET, $columns, _course, _courses);
+    ListOutputWithStudentInfo($schedule_RET, $columns, _course, _courses);
     echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton(_update, '', 'class="btn btn-primary heading-btn pull-right" onclick="self_disable(this);"') . '</div></div>';
     echo '</div>';
     echo '</FORM>';
@@ -221,7 +223,7 @@
             $extra['WHERE'] = substr($extra['WHERE'], 0, -1) . ')';
     }
     elseif ($abs) {
-        $RET = DBGet(DBQuery('SELECT ID FROM attendance_codes WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND (DEFAULT_CODE!=\'' . 'Y' . '\' OR DEFAULT_CODE IS NULL) AND TABLE_NAME=\'' . $_REQUEST[table] . '\''));
+        $RET = DBGet(DBQuery('SELECT ID FROM attendance_codes WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND (DEFAULT_CODE!=\'' . 'Y' . '\' OR DEFAULT_CODE IS NULL) AND TABLE_NAME=\'' . $_REQUEST['table'] . '\''));
         if (count($RET)) {
             $extra['WHERE'] .= 'AND ac.ID IN (';
             foreach ($RET as $code)
@@ -387,7 +389,7 @@
 
 function _makePhone($value, $column) {
     global $THIS_RET, $contacts_RET;
-
+    $tipmessage='';
     if (count($contacts_RET[$THIS_RET['STUDENT_ID']])) {
         foreach ($contacts_RET[$THIS_RET['STUDENT_ID']] as $person) {
             if ($person[1]['FIRST_NAME'] || $person[1]['LAST_NAME'])
@@ -465,7 +467,7 @@ function _makeCode($value, $title) {
 }
 
 function _makeReasonInput($value, $title) {
-    global $THIS_RET, $codes_RET, $current_RET;
+    global $THIS_RET, $codes_RET, $current_RET,$options;
 
     $val = $current_RET[$THIS_RET['STUDENT_ID']][$THIS_RET['COURSE_PERIOD_ID']][1]['ATTENDANCE_REASON'];
 
@@ -508,4 +510,4 @@ function _makeStateValue($value, $name) {
         return TextInput($value[1]['COMMENT'], 'attendance_day[' . $THIS_RET['STUDENT_ID'] . '][COMMENT]');
 }
 
-?>
+?>
\ No newline at end of file

--- modules/attendance/AttendanceCodes.php ---
@@ -151,7 +151,7 @@
             }
         } elseif ($_REQUEST['table']) {
             if (DeletePromptCommon('category')) {
-                DBQuery('DELETE FROM attendance_code_categories WHERE ID=\'' . $_REQUEST[table] . '\'');
+                DBQuery('DELETE FROM attendance_code_categories WHERE ID=\'' . $_REQUEST['table'] . '\'');
 
                 unset($_REQUEST['modfunc']);
                 $_REQUEST['table'] = '0';
@@ -188,7 +188,7 @@
     $link['remove']['link'] = "Modules.php?modname=$_REQUEST[modname]&modfunc=remove";
     $link['remove']['variables'] = array('id' => 'ID', 'table' => 'TABLE_NAME');
 
-    echo "<FORM class=\"form-horizontal\" name=F1 id=F1 action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&table=" . strip_tags(trim($_REQUEST[table])) . " method=POST>";
+    echo "<FORM class=\"form-horizontal\" name=F1 id=F1 action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&table=" . strip_tags(trim($_REQUEST['table'])) . " method=POST>";
 
     echo '<input type="hidden" name="h1" id="h1" value="' . $attandance_id . '">';
 
@@ -204,7 +204,7 @@
         $tabs[] = array('title' => button('add'), 'link' => "Modules.php?modname=$_REQUEST[modname]&table=new");
 
     $max_id = DBGet(DBQuery("select max(ID) maxid from attendance_codes"));
-    $max_id = $max_id[1][MAXID];
+    $max_id = $max_id[1]['MAXID'];
     echo "<input type=hidden value=" . $max_id . " id=count >";
     if ($_REQUEST['table'] !== 'new' && $_REQUEST['modfunc'] != 'edit') {
         if (count($attendance_codes_RET) == 0) {

--- modules/attendance/AttendanceData.php ---
@@ -44,7 +44,7 @@
     $end_date = ProperDateMAvr();
 }
 if ($_REQUEST['modfunc'] == 'search') {
-    echo "<FORM class=form-horizontal name=percentform action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST[list_by_day])) . "&day_start=" . strip_tags(trim($_REQUEST[day_start])) . "&day_end=" . strip_tags(trim($_REQUEST[day_end])) . "&month_start=" . strip_tags(trim($_REQUEST[month_start])) . "&month_end=" . strip_tags(trim($_REQUEST[month_end])) . "&year_start=" . strip_tags(trim($_REQUEST[year_start])) . "&year_end=" . strip_tags(trim($_REQUEST[year_end])) . " method=POST>";
+    echo "<FORM class=form-horizontal name=percentform action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST['list_by_day'])) . "&day_start=" . strip_tags(trim($_REQUEST['day_start'])) . "&day_end=" . strip_tags(trim($_REQUEST['day_end'])) . "&month_start=" . strip_tags(trim($_REQUEST['month_start'])) . "&month_end=" . strip_tags(trim($_REQUEST['month_end'])) . "&year_start=" . strip_tags(trim($_REQUEST['year_start'])) . "&year_end=" . strip_tags(trim($_REQUEST['year_end'])) . " method=POST>";
     PopTable('header', _advanced);
     Search('general_info', $extra['grades']);
     if (!isset($extra))
@@ -56,7 +56,7 @@
     if (User('PROFILE') == 'admin'){
         echo '<div class="text-center m-15"><div class="text-left display-inline-block"><label class="checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=_search_all_schools value=Y' . (Preferences('DEFAULT_ALL_SCHOOLS') == 'Y' ? ' CHECKED' : '') . '><span></span>'._searchAllSchools.'</label></div></div>';
     }
-    $btn = '<div class="p-l-20">' . Buttons(submit,'','onclick="self_disable(this);"') . '</div>';
+    $btn = '<div class="p-l-20">' . Buttons(_submit,'','onclick="self_disable(this);"') . '</div>';
     PopTable('footer', $btn);
     echo '</FORM>';
 }
@@ -71,7 +71,7 @@
 
     echo '<div class="panel panel-default">';
     echo '<div class="panel-heading">';
-    echo "<FORM class=\"form-horizontal clearfix m-b-0\" action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST[list_by_day])) . " method=POST>";
+    echo "<FORM class=\"form-horizontal clearfix m-b-0\" action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST['list_by_day'])) . " method=POST>";
 
     $advanced_link = "<A class=text-pink HREF=Modules.php?modname=$_REQUEST[modname]&modfunc=search&list_by_day=$_REQUEST[list_by_day]&day_start=$_REQUEST[day_start]&day_end=$_REQUEST[day_end]&month_start=$_REQUEST[month_start]&month_end=$_REQUEST[month_end]&year_start=$_REQUEST[year_start]&year_end=$_REQUEST[year_end]><i class=\"icon-cog\"></i> "._advanced."</A>";
     ///////////////////////Old Date Picker///////////////////////////////
@@ -109,15 +109,15 @@
 
 
         if ($sch_count == 1) {
-            $student_days_possible = DBGet(DBQuery('SELECT ap.SCHOOL_DATE, CONCAT(s.FIRST_NAME, \' \', s.LAST_NAME,\' \') as STUDENTS, sg.TITLE as GRADE, sp.TITLE as PERIOD, ac.TITLE as STATUS from attendance_period ap, students s, school_gradelevels sg, attendance_codes ac, student_enrollment ssm, school_periods sp where ssm.syear=\'' . UserSyear() . '\' and ap.attendance_code=ac.id and ssm.grade_id=sg.id and ap.period_id=sp.period_id and ap.student_id=s.student_id and ssm.student_id=ap.student_id AND ssm.school_id in (' . $in_schools . ') AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\' ' . $extra['WHERE'] . ''), array('SCHOOL_DATE' => 'ProperDate', 'GRADE' => 'GRADE', 'STUDENTS' => 'STUDENTS', 'PRESENT' => '_makeByDay', 'ABSENT' => '_makeByDay', 'ADA' => '_makeByDay'));
+            $student_days_possible = DBGet(DBQuery('SELECT ap.SCHOOL_DATE, CONCAT(s.FIRST_NAME, \' \', s.LAST_NAME,\' \') as STUDENTS, sg.TITLE as GRADE, sp.TITLE as PERIOD, ac.TITLE as STATUS from attendance_period ap, students s, school_gradelevels sg, attendance_codes ac, student_enrollment ssm, school_periods sp where ssm.syear=\'' . UserSyear() . '\' and ap.attendance_code=ac.id and ssm.grade_id=sg.id and ap.period_id=sp.period_id and ap.student_id=s.student_id and ssm.student_id=ap.student_id AND ssm.school_id in (' . $in_schools . ') AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\' ' . $extra['WHERE'] . ' and ssm.id in (select max(id) from student_enrollment where syear=\'' . UserSyear() . '\' group by student_id)'), array('SCHOOL_DATE' => 'ProperDate', 'GRADE' => 'GRADE', 'STUDENTS' => 'STUDENTS', 'PRESENT' => '_makeByDay', 'ABSENT' => '_makeByDay', 'ADA' => '_makeByDay'));
 
             $columns = array('SCHOOL_DATE' => _date, 'STUDENTS' => ''._studentName.'', 'GRADE' => _grade, 'PERIOD' => _periodName, 'STATUS' => _attendanceStatus);
         } else {
 
             if ($_REQUEST['all_school'] == 'Y') {
-                $student_days_possible = DBGet(DBQuery('SELECT ap.SCHOOL_DATE, CONCAT(s.FIRST_NAME, \' \', s.LAST_NAME,\' \') as STUDENTS, sg.TITLE as GRADE, sp.TITLE as PERIOD, ac.TITLE as STATUS, sc.TITLE AS SCHOOL from attendance_period ap, students s, school_gradelevels sg, attendance_codes ac, student_enrollment ssm, school_periods sp, schools sc where ssm.syear=\'' . UserSyear() . '\' and ap.attendance_code=ac.id and ssm.grade_id=sg.id and ap.period_id=sp.period_id and ap.student_id=s.student_id and ssm.student_id=ap.student_id AND sc.id=ssm.school_id AND ssm.school_id in (' . $in_schools . ') AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\' ' . $extra['WHERE'] . ' '), array('SCHOOL_DATE' => 'ProperDate', 'GRADE' => 'GRADE', 'STUDENTS' => 'STUDENTS', 'PRESENT' => '_makeByDay', 'ABSENT' => '_makeByDay', 'ADA' => '_makeByDay'));
+                $student_days_possible = DBGet(DBQuery('SELECT ap.SCHOOL_DATE, CONCAT(s.FIRST_NAME, \' \', s.LAST_NAME,\' \') as STUDENTS, sg.TITLE as GRADE, sp.TITLE as PERIOD, ac.TITLE as STATUS, sc.TITLE AS SCHOOL from attendance_period ap, students s, school_gradelevels sg, attendance_codes ac, student_enrollment ssm, school_periods sp, schools sc where ssm.syear=\'' . UserSyear() . '\' and ap.attendance_code=ac.id and ssm.grade_id=sg.id and ap.period_id=sp.period_id and ap.student_id=s.student_id and ssm.student_id=ap.student_id AND sc.id=ssm.school_id AND ssm.school_id in (' . $in_schools . ') AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\' ' . $extra['WHERE'] . ' and ssm.id in (select max(id) from student_enrollment where syear=\'' . UserSyear() . '\' group by student_id)'), array('SCHOOL_DATE' => 'ProperDate', 'GRADE' => 'GRADE', 'STUDENTS' => 'STUDENTS', 'PRESENT' => '_makeByDay', 'ABSENT' => '_makeByDay', 'ADA' => '_makeByDay'));
             } else {
-                $student_days_possible = DBGet(DBQuery('SELECT ap.SCHOOL_DATE, CONCAT(s.FIRST_NAME, \' \', s.LAST_NAME,\' \') as STUDENTS, sg.TITLE as GRADE, sp.TITLE as PERIOD, ac.TITLE as STATUS, sc.TITLE AS SCHOOL from attendance_period ap, students s, school_gradelevels sg, attendance_codes ac, student_enrollment ssm, school_periods sp, schools sc where ssm.syear=\'' . UserSyear() . '\' and sc.id=\'' . UserSchool() . '\' and ap.attendance_code=ac.id and ssm.grade_id=sg.id and ap.period_id=sp.period_id and ap.student_id=s.student_id and ssm.student_id=ap.student_id AND sc.id=ssm.school_id AND ssm.school_id in (' . $in_schools . ') AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\' ' . $extra['WHERE'] . ' '), array('SCHOOL_DATE' => 'ProperDate', 'GRADE' => 'GRADE', 'STUDENTS' => 'STUDENTS', 'PRESENT' => '_makeByDay', 'ABSENT' => '_makeByDay', 'ADA' => '_makeByDay'));
+                $student_days_possible = DBGet(DBQuery('SELECT ap.SCHOOL_DATE, CONCAT(s.FIRST_NAME, \' \', s.LAST_NAME,\' \') as STUDENTS, sg.TITLE as GRADE, sp.TITLE as PERIOD, ac.TITLE as STATUS, sc.TITLE AS SCHOOL from attendance_period ap, students s, school_gradelevels sg, attendance_codes ac, student_enrollment ssm, school_periods sp, schools sc where ssm.syear=\'' . UserSyear() . '\' and sc.id=\'' . UserSchool() . '\' and ap.attendance_code=ac.id and ssm.grade_id=sg.id and ap.period_id=sp.period_id and ap.student_id=s.student_id and ssm.student_id=ap.student_id AND sc.id=ssm.school_id AND ssm.school_id in (' . $in_schools . ') AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\' ' . $extra['WHERE'] . ' and ssm.id in (select max(id) from student_enrollment where syear=\'' . UserSyear() . '\' group by student_id)'), array('SCHOOL_DATE' => 'ProperDate', 'GRADE' => 'GRADE', 'STUDENTS' => 'STUDENTS', 'PRESENT' => '_makeByDay', 'ABSENT' => '_makeByDay', 'ADA' => '_makeByDay'));
             }
 
             $columns = array('SCHOOL_DATE' => _date, 'STUDENTS' => ''._studentName.'', 'GRADE' => _grade, 'PERIOD' => _periodName, 'STATUS' => _attendanceStatus, 'SCHOOL' => _school);

--- modules/attendance/DailySummary.php ---
@@ -43,13 +43,14 @@
 }
 DrawBC(""._attendance." > " . ProgramTitle());
 ####################
-if (isset($_REQUEST['student_id'])) {
-    $RET = DBGet(DBQuery('SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX,SCHOOL_ID FROM students,student_enrollment WHERE students.STUDENT_ID=\'' . $_REQUEST['student_id'] . '\' AND student_enrollment.STUDENT_ID = students.STUDENT_ID '));
+$selectedStudentId = isset($_REQUEST['student_id']) ? $_REQUEST['student_id'] : UserStudentID();
+if (isset($_REQUEST['student_id']) || UserStudentID()) {
+    $RET = DBGet(DBQuery('SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX,SCHOOL_ID FROM students,student_enrollment WHERE students.STUDENT_ID=\'' . $selectedStudentId . '\' AND student_enrollment.STUDENT_ID = students.STUDENT_ID '));
     $count_student_RET = DBGet(DBQuery('SELECT COUNT(*) AS NUM FROM students'));
     if ($count_student_RET[1]['NUM'] > 1) {
-        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"><A HREF=Modules.php?modname=' . $_REQUEST['modname'] . '&search_modfunc=list&next_modname=' . $_REQUEST['modname'] . '&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> '._selectedStudent.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._selectedStudent.'</A></div></div></div></div>');
+        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"><A HREF=Modules.php?modname=' . $_REQUEST['modname'] . '&search_modfunc=list&next_modname=' . $_REQUEST['modname'] . '&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> '._backToStudentList.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div></div>');
     } else if ($count_student_RET[1]['NUM'] == 1) {
-        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._selectedStudent.'</A></div></div></div>');
+        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div>');
     }
 }
 ####################
@@ -104,7 +105,7 @@
 
     $period_select .= '</SELECT>';
     if (User('PROFILE') == 'teacher') {
-        $myclasses = '<SELECT name="myclasses" onchange="this.form.submit();">';
+        $myclasses = '<SELECT class="form-control" name="myclasses" onchange="this.form.submit();">';
         $myclasses .='<OPTION value=""' . ($_REQUEST['myclasses'] == '' ? ' SELECTED' : '') . '>All course periods</OPTION>';
         $myclasses .='<OPTION value="my_classes"' . ($_REQUEST['myclasses'] == 'my_classes' ? ' SELECTED' : '') . '>All my course periods</OPTION>';
         $myclasses .='<OPTION value="selected_class"' . ($_REQUEST['myclasses'] == 'selected_class' ? ' SELECTED' : '') . '>Selected course period</OPTION>';
@@ -144,7 +145,6 @@
                 AND s.SYEAR = c.SYEAR AND (cp.MARKING_PERIOD_ID IN (' . GetAllMP($MP_TYPE, UserMP()) . ') OR cp.MARKING_PERIOD_ID IS NULL)
                 AND s.STUDENT_ID=\'' . UserStudentID() . '\' AND s.SYEAR=\'' . UserSyear() . '\'
                 ' . (($_REQUEST['myclasses'] != '') ? 'AND ' . (($_REQUEST['myclasses'] == 'my_classes') ? "(cp.TEACHER_ID='" . User('STAFF_ID') . "' OR cp.SECONDARY_TEACHER_ID='" . User('STAFF_ID') . "')" : "cp.COURSE_PERIOD_ID='" . UserCoursePeriod() . "'") : '') . '
-                AND (\'' . date('Y-m-d', strtotime(DBDate())) . '\' BETWEEN s.START_DATE AND s.END_DATE OR s.END_DATE IS NULL)
              group by cp.course_period_id,sp.period_id ORDER BY sp.SORT_ORDER
             ';
 
@@ -185,7 +185,7 @@
 
     echo '<div class="panel-body p-0">';
     //echo '<div class="table-responsive">';
-    ListOutput($student_RET, $columns, _course, _courses);
+    ListOutputWithStudentInfo($student_RET, $columns, _course, _courses);
     //echo '</div>';
     echo '</div>';
     echo '</div>'; //.panel

--- modules/attendance/DuplicateAttendance.php ---
@@ -29,7 +29,7 @@
 include('../../RedirectModulesInc.php');
 include('lang/language.php');
 
-if (count($_REQUEST['mp_arr'])) {
+if (is_countable($_REQUEST['mp_arr']) && count($_REQUEST['mp_arr'])) {
     foreach ($_REQUEST['mp_arr'] as $mp)
         $mp_list .= ",'$mp'";
     $mp_list = substr($mp_list, 1);

--- modules/attendance/MissingAttendance.php ---
@@ -68,7 +68,7 @@
     DrawHeader(''._selectedUser.': ' . $RET_Users[1]['FIRST_NAME'] . '&nbsp;' . $RET_Users[1]['LAST_NAME'], '<span class="heading-text"><A HREF=Side.php?modname=' . $_REQUEST['modname'] . '&staff_id=new&From=' . $From . '&to=' . $to . ' ><i class="icon-square-left"></i> '._selectedUser.'</A></span>');
 }
 
-if (count($RET)) {
+if (is_countable($RET) && count($RET)) {
     echo '<div class="panel-body p-b-0"><div class="alert alert-warning alert-styled-left m-b-0"><b>'._warning.'!!</b> - '._teachersHaveMissingAttendanceData.'.</div></div>';
 
     $modname = "users/TeacherPrograms.php?include=attendance/TakeAttendance.php&miss_attn=1&From=$From&to=$to";

--- modules/attendance/MissingAttendanceProcess.php ---
@@ -27,6 +27,7 @@
 #
 #***************************************************************************************
 error_reporting(0);
+
 include('../../RedirectRootInc.php');
 include('../../Warehouse.php');
 $syear = $_SESSION['UserSyear'];

--- modules/attendance/Percent.php ---
@@ -60,7 +60,7 @@
 }
 
 if ($_REQUEST['modfunc'] == 'search') {
-    echo "<FORM class=form-horizontal name=percentform action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST[list_by_day])) . "&day_start=" . strip_tags(trim($_REQUEST[day_start])) . "&day_end=" . strip_tags(trim($_REQUEST[day_end])) . "&month_start=" . strip_tags(trim($_REQUEST[month_start])) . "&month_end=" . strip_tags(trim($_REQUEST[month_end])) . "&year_start=" . strip_tags(trim($_REQUEST[year_start])) . "&year_end=" . strip_tags(trim($_REQUEST[year_end])) . " method=POST>";
+    echo "<FORM class=form-horizontal name=percentform action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST['list_by_day'])) . "&day_start=" . strip_tags(trim($_REQUEST['day_start'])) . "&day_end=" . strip_tags(trim($_REQUEST['day_end'])) . "&month_start=" . strip_tags(trim($_REQUEST['month_start'])) . "&month_end=" . strip_tags(trim($_REQUEST['month_end'])) . "&year_start=" . strip_tags(trim($_REQUEST['year_start'])) . "&year_end=" . strip_tags(trim($_REQUEST['year_end'])) . " method=POST>";
     PopTable('header', _advanced);
     Search('general_info', $extra['grades']);
     if (!isset($extra))
@@ -72,7 +72,7 @@
     if (User('PROFILE') == 'admin'){
         echo '<div class="text-center m-15"><div class="text-left display-inline-block"><label class="checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=_search_all_schools value=Y' . (Preferences('DEFAULT_ALL_SCHOOLS') == 'Y' ? ' CHECKED' : '') . '><span></span>'._searchAllSchools.'</label></div></div>';
     }
-    $btn = '<div class="p-l-20">' . Buttons(submit) . '</div>';
+    $btn = '<div class="p-l-20">' . Buttons(_submit) . '</div>';
     PopTable('footer', $btn);
     echo '</FORM>';
 }
@@ -89,7 +89,7 @@
 
     echo '<div class="panel panel-default">';
     echo '<div class="panel-heading clearfix">';
-    echo "<FORM  name=ada_from id=ada_from onSubmit='return formcheck_ada_dates();' action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST[list_by_day])) . " method=POST>";
+    echo "<FORM  name=ada_from id=ada_from onSubmit='return formcheck_ada_dates();' action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&list_by_day=" . strip_tags(trim($_REQUEST['list_by_day'])) . " method=POST>";
     $advanced_link = " <A class=\"text-pink\" HREF=Modules.php?modname=$_REQUEST[modname]&modfunc=search&list_by_day=$_REQUEST[list_by_day]&day_start=$_REQUEST[day_start]&day_end=$_REQUEST[day_end]&month_start=$_REQUEST[month_start]&month_end=$_REQUEST[month_end]&year_start=$_REQUEST[year_start]&year_end=$_REQUEST[year_end]><i class=\"icon-cog\"></i> "._advanced."</A>";
 
     echo '<div class="form-inline"><div class="col-md-12"><div class="inline-block">' . DateInputAY($start_date, 'start', 1) . '</div> &nbsp; &nbsp; - &nbsp; &nbsp; <div class="inline-block">' . DateInputAY($end_date, 'end', 2) . '</div> &nbsp; <INPUT type=submit value='._go.'  class="btn btn-primary"> &nbsp; ' . $advanced_link . '</div></div>';

--- modules/attendance/SearchInc.php ---
@@ -64,7 +64,7 @@
             }
             PopTable('header', _findAStudent);
             if ($extra['pdf'] != true)
-                echo "<FORM class='form-horizontal m-b-0' name=search id=search action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=" . strip_tags(trim($_REQUEST[modfunc])) . "&search_modfunc=list&next_modname=$_REQUEST[next_modname]" . $extra['action'] . " method=POST>";
+                echo "<FORM class='form-horizontal m-b-0' name=search id=search action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=" . strip_tags(trim($_REQUEST['modfunc'])) . "&search_modfunc=list&next_modname=$_REQUEST[next_modname]" . $extra['action'] . " method=POST>";
             else
                 echo "<FORM class='form-horizontal m-b-0' name=search id=search action=ForExport.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=" . strip_tags(trim($_REQUEST[modfunc])) . "&search_modfunc=list&next_modname=$_REQUEST[next_modname]" . $extra['action'] . " method=POST target=_blank>";
 

--- modules/attendance/StudentSummary.php ---
@@ -41,13 +41,14 @@
 else
     $end_date = DBDate('mysql');
 ####################
-if (isset($_REQUEST['student_id'])) {
-    $RET = DBGet(DBQuery('SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX,SCHOOL_ID FROM students,student_enrollment WHERE students.STUDENT_ID=\'' . $_REQUEST['student_id'] . '\' AND student_enrollment.STUDENT_ID = students.STUDENT_ID '));
+$selectedStudentId = isset($_REQUEST['student_id']) ? $_REQUEST['student_id'] : UserStudentID();
+if (isset($_REQUEST['student_id']) || UserStudentID()) {
+    $RET = DBGet(DBQuery('SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX,SCHOOL_ID FROM students,student_enrollment WHERE students.STUDENT_ID=\'' . $selectedStudentId . '\' AND student_enrollment.STUDENT_ID = students.STUDENT_ID '));
     $count_student_RET = DBGet(DBQuery("SELECT COUNT(*) AS NUM FROM students"));
     if ($count_student_RET[1]['NUM'] > 1) {
-        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"><A HREF=Modules.php?modname=' . $_REQUEST['modname'] . '&search_modfunc=list&next_modname=' . $_REQUEST['modname'] . '&ajax=true&bottom_back=true&return_session=true&&day_start=' . $_REQUEST[day_start] . '&&month_start=' . $_REQUEST[month_start] . '&&year_start=' . $_REQUEST[year_start] . '&&period_id=' . $_REQUEST[period_id] . '&&myclasses=' . $_REQUEST[myclasses] . '&&chk=1 target=body><i class="icon-square-left"></i> '._selectedStudent.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._selectedStudent.'</A></div></div></div></div>');
+        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"><A HREF=Modules.php?modname=' . $_REQUEST['modname'] . '&search_modfunc=list&next_modname=' . $_REQUEST['modname'] . '&ajax=true&bottom_back=true&return_session=true&&day_start=' . $_REQUEST['day_start'] . '&&month_start=' . $_REQUEST['month_start'] . '&&year_start=' . $_REQUEST['year_start'] . '&&period_id=' . $_REQUEST['period_id'] . '&&myclasses=' . $_REQUEST['myclasses'] . '&&chk=1 target=body><i class="icon-square-left"></i> '._backToStudentList.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div></div>');
     } else if ($count_student_RET[1]['NUM'] == 1) {
-        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._selectedStudent.'</A></div></div></div>');
+        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><A HREF=Side.php?student_id=new&modcat=' . $_REQUEST['modcat'] . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div>');
     }
 }
 ####################
@@ -86,19 +87,19 @@
 if ($_REQUEST['period_id']) {
     $extra['SELECT'] .= ',(SELECT count(*) FROM attendance_period ap,attendance_codes ac
                         WHERE ac.ID=ap.ATTENDANCE_CODE AND (ac.STATE_CODE=\'A\' OR ac.STATE_CODE=\'H\') AND ap.STUDENT_ID=ssm.STUDENT_ID
-                        AND ap.PERIOD_ID=\'' . $_REQUEST[period_id] . '\'
+                        AND ap.PERIOD_ID=\'' . $_REQUEST['period_id'] . '\'
                         AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\') AS STATE_ABS';
     $codes_RET = DBGet(DBQuery('SELECT ID,TITLE FROM attendance_codes WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND TABLE_NAME=\'0\' AND (DEFAULT_CODE!=\'Y\' OR DEFAULT_CODE IS NULL)'));
     if (count($codes_RET) > 1) {
         foreach ($codes_RET as $code) {
             if ($_REQUEST['myclasses'] != '') {
                 $extra['SELECT'] .= ',(SELECT count(*) FROM attendance_period ap,attendance_codes ac,course_periods cp
-                        WHERE ac.ID=ap.ATTENDANCE_CODE AND ac.ID=\'' . $code[ID] . '\' AND ap.PERIOD_ID=\'' . $_REQUEST[period_id] . '\' AND ap.STUDENT_ID=ssm.STUDENT_ID
+                        WHERE ac.ID=ap.ATTENDANCE_CODE AND ac.ID=\'' . $code[ID] . '\' AND ap.PERIOD_ID=\'' . $_REQUEST['period_id'] . '\' AND ap.STUDENT_ID=ssm.STUDENT_ID
                         AND ap.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND ' . (($_REQUEST['myclasses'] == 'my_classes') ? '(cp.TEACHER_ID=\'' . User('STAFF_ID') . '\' OR cp.SECONDARY_TEACHER_ID=\'' . User('STAFF_ID') . '\')' : 'cp.COURSE_PERIOD_ID=\'' . UserCoursePeriod() . '\'') . '
                         AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\') AS ABS_' . $code[ID];
             } else {
                 $extra['SELECT'] .= ',(SELECT count(*) FROM attendance_period ap,attendance_codes ac
-                        WHERE ac.ID=ap.ATTENDANCE_CODE AND ac.ID=\'' . $code[ID] . '\' AND ap.PERIOD_ID=\'' . $_REQUEST[period_id] . '\' AND ap.STUDENT_ID=ssm.STUDENT_ID
+                        WHERE ac.ID=ap.ATTENDANCE_CODE AND ac.ID=\'' . $code[ID] . '\' AND ap.PERIOD_ID=\'' . $_REQUEST['period_id'] . '\' AND ap.STUDENT_ID=ssm.STUDENT_ID
                         AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\') AS ABS_' . $code[ID];
             }
 
@@ -108,7 +109,7 @@
 } else {
     $extra['SELECT'] .= ',(SELECT count(*) FROM attendance_period ap,attendance_codes ac
                         WHERE ac.ID=ap.ATTENDANCE_CODE AND (ac.STATE_CODE=\'A\' OR ac.STATE_CODE=\'H\') AND ap.STUDENT_ID=ssm.STUDENT_ID
-                        AND ap.PERIOD_ID=\'' . $_REQUEST[period_id] . '\'
+                        AND ap.PERIOD_ID=\'' . $_REQUEST['period_id'] . '\'
                         AND ap.SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\') AS STATE_ABS';
     $codes_RET = DBGet(DBQuery('SELECT ID,TITLE FROM attendance_codes WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND TABLE_NAME=\'0\' AND (DEFAULT_CODE!=\'Y\' OR DEFAULT_CODE IS NULL)'));
     if (count($codes_RET) > 1) {
@@ -226,7 +227,7 @@
 
     //echo '<div class="panel panel-default">';
     PopTable('header', $name_RET[1]['FULL_NAME']);
-    ListOutput($days_RET, $columns, _day, _days);
+    ListOutputWithStudentInfo($days_RET, $columns, _day, _days);
     PopTable('footer');
     //echo '</div>'; //.panel.panel-default
 }

--- modules/attendance/TakeAttendance.php ---
@@ -270,7 +270,7 @@ function con_date($date) {
     $codes_RET_count = DBGet(DBQuery('SELECT COUNT(*) AS CODES FROM attendance_codes WHERE SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\'  AND TYPE=\'teacher\' AND TABLE_NAME=\'' . $_REQUEST['table'] . '\'' . ($course_RET[1]['HALF_DAY'] ? ' AND STATE_CODE!=\'H\'' : '') . ' ORDER BY SORT_ORDER'));
 
 $codes_RET = DBGet(DBQuery('SELECT ID,TITLE,DEFAULT_CODE,STATE_CODE FROM attendance_codes WHERE SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\'  AND TABLE_NAME=\'' . $_REQUEST['table'] . '\'' . ($course_RET[1]['HALF_DAY'] ? ' AND STATE_CODE!=\'H\'' : '') . ' ORDER BY SORT_ORDER'));
-if (count($codes_RET)) {
+if (is_countable($codes_RET) && count($codes_RET)) {
     foreach ($codes_RET as $code) {
         $extra['SELECT'] .= ",'$code[STATE_CODE]' AS CODE_" . $code['ID'];
         if ($code['DEFAULT_CODE'] == 'Y')
@@ -364,9 +364,9 @@ function con_date($date) {
 //DrawHeaderHome('<A HREF="Modules.php?modname=miscellaneous/Portal.php">Back to Missing Attendance List</A>');
 //}
 if (isset($_REQUEST['cp_id_miss_attn']))
-    echo "<FORM ACTION=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&table=" . strip_tags(trim($_REQUEST[table])) . "&username=" . strip_tags(trim($_REQUEST[username])) . "&From=$From&to=$to&cp_id_miss_attn=" . $_REQUEST['cp_id_miss_attn'] . "&attn=" . strip_tags(trim($_REQUEST[attn])) . " method=POST>";
+    echo "<FORM ACTION=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&table=" . strip_tags(trim($_REQUEST['table'])) . "&username=" . strip_tags(trim($_REQUEST['username'])) . "&From=$From&to=$to&cp_id_miss_attn=" . $_REQUEST['cp_id_miss_attn'] . "&attn=" . strip_tags(trim($_REQUEST['attn'])) . " method=POST>";
 else
-    echo "<FORM ACTION=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&table=" . strip_tags(trim($_REQUEST[table])) . "&username=" . strip_tags(trim($_REQUEST[username])) . "&From=$From&to=$to&attn=" . strip_tags(trim($_REQUEST[attn])) . " method=POST>";
+    echo "<FORM ACTION=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&table=" . strip_tags(trim($_REQUEST['table'])) . "&username=" . strip_tags(trim($_REQUEST['username'])) . "&From=$From&to=$to&attn=" . strip_tags(trim($_REQUEST['attn'])) . " method=POST>";
 
 echo '<div class="panel panel-default">';
 
@@ -426,14 +426,14 @@ function con_date($date) {
 
 $btnGo = '';
 if (isset($_REQUEST['cp_id_miss_attn'])) {
-    $btnGo = "<input type='button' value='"._go."' class='btn btn-primary m-l-10 m-r-10' onClick='document.location.href=\"Modules.php?modname=users/TeacherPrograms.php?include=attendance/TakeAttendance.php&amp;period=" . strip_tags(trim($_REQUEST[cpv_id_miss_attn])) . "&amp;include=attendance/TakeAttendance.php&amp;day_date=\"+this.form.day_date.value+\"&amp;year_date=\"+this.form.year_date.value+\"&amp;table=0&amp;month_date=\"+this.form.month_date.value;' />";
+    $btnGo = "<input type='button' value='"._go."' class='btn btn-primary m-l-10 m-r-10' onClick='document.location.href=\"Modules.php?modname=users/TeacherPrograms.php?include=attendance/TakeAttendance.php&amp;period=" . strip_tags(trim($_REQUEST['cpv_id_miss_attn'])) . "&amp;include=attendance/TakeAttendance.php&amp;day_date=\"+this.form.day_date.value+\"&amp;year_date=\"+this.form.year_date.value+\"&amp;table=0&amp;month_date=\"+this.form.month_date.value;' />";
 } else
-    $btnGo = "<input type='button' value='"._go."' class='btn btn-primary m-l-10 m-r-10' onClick='document.location.href=\"Modules.php?modname=users/TeacherPrograms.php?include=attendance/TakeAttendance.php&amp;period=" . strip_tags(trim($_REQUEST[period])) . "&amp;include=attendance/TakeAttendance.php&amp;day_date=\"+this.form.day_date.value+\"&amp;year_date=\"+this.form.year_date.value+\"&amp;table=0&amp;month_date=\"+this.form.month_date.value;' />";
+    $btnGo = "<input type='button' value='"._go."' class='btn btn-primary m-l-10 m-r-10' onClick='document.location.href=\"Modules.php?modname=users/TeacherPrograms.php?include=attendance/TakeAttendance.php&amp;period=" . strip_tags(trim($_REQUEST['period'])) . "&amp;include=attendance/TakeAttendance.php&amp;day_date=\"+this.form.day_date.value+\"&amp;year_date=\"+this.form.year_date.value+\"&amp;table=0&amp;month_date=\"+this.form.month_date.value;' />";
 
 
 if ($profile_check == 'admin') {
 
-    if (count($stu_RET) != 0 && count($course_RET) != 0) {
+    if ((is_countable($stu_RET) && count($stu_RET) != 0) && (is_countable($course_RET) && count($course_RET) != 0)) {
 
         DrawHeader(SubmitButton(_save, '', 'class="btn btn-primary pull-right" onclick="self_disable(this);"') . '<div class="form-inline"><div class="inline-block">' . DateInputAY($date, 'date', 1) . '</div>' . $btnGo . $date_note . '</div>');
     } else {
@@ -446,7 +446,7 @@ function con_date($date) {
     }
 } else {
 
-    if (count($stu_RET) != 0 && count($course_RET) != 0) {
+    if ((is_countable($stu_RET) && count($stu_RET) != 0) && (is_countable($course_RET) && count($course_RET) != 0)) {
 
         DrawHeader(SubmitButton(_save, '', 'class="btn btn-primary pull-right" onclick="self_disable(this);"') . '<div class="form-inline"><div class="inline-block">' . DateInputAY($date, 'date', 3) . '</div>' . $btnGo . $date_note . '</div>');
     } else {
@@ -473,8 +473,8 @@ function con_date($date) {
     $tabs[] = array('title' => $category['TITLE'], 'link' => "Modules.php?modname=$_REQUEST[modname]&table=$category[ID]&month_date=$_REQUEST[month_date]&day_date=$_REQUEST[day_date]&year_date=$_REQUEST[year_date]");
 
 
-if (count($categories_RET)) {
-    if (count($course_RET) != 0)
+if (is_countable($categories_RET) && count($categories_RET)) {
+    if (is_countable($course_RET) && count($course_RET) != 0)
         echo '<CENTER>' . WrapTabs($tabs, "Modules.php?modname=$_REQUEST[modname]&table=$_REQUEST[table]&month_date=$_REQUEST[month_date]&day_date=$_REQUEST[day_date]&year_date=$_REQUEST[year_date]") . '</CENTER>';
     $extra = array('download' =>true, 'search' =>true);
     $singular = _student;
@@ -488,7 +488,7 @@ function con_date($date) {
 if (!$mp_id) {
     echo '<div class="panel-body p-t-0 p-b-0"><div class="alert alert-danger alert-bordered">'._theSelectedDateIsNotInASchoolQuarter.'.</div></div>';
 } else {
-    if (count($course_RET) != 0) {
+    if (is_countable($course_RET) && count($course_RET) != 0) {
         $posted_date2 = ucfirst(strtolower($_REQUEST['month_date'])) . '-' . $_REQUEST['day_date'] . '-' . $_REQUEST['year_date'];
         if ($_REQUEST['month_date'] && $_REQUEST['day_date'] && $_REQUEST['year_date']) {
             $cur_date = date('Y-m-d', strtotime($posted_date2));
@@ -500,7 +500,7 @@ function con_date($date) {
         //echo '</br>';
         echo '<div class="panel-footer">';
         echo '<div class="heading-elements text-right p-r-20">';
-        if (count($stu_RET) > 0 && count($course_RET) > 0) {
+        if ((is_countable($stu_RET) && count($stu_RET) > 0) && (is_countable($course_RET) && count($course_RET) > 0)) {
             echo SubmitButton(_save, '', 'class="btn btn-primary" onclick="self_disable(this);"');
         }
         echo '</div>'; //.heading-elements

--- modules/eligibility/Activities.php ---
@@ -26,6 +26,7 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+error_reporting(E_ALL ^ E_WARNING);
 include('../../RedirectModulesInc.php');
 if ($_REQUEST['month_values'] && ($_POST['month_values'] || $_REQUEST['ajax'])) {
     foreach ($_REQUEST['month_values'] as $id => $columns) {
@@ -182,13 +183,13 @@
 
 
 if (optional_param('modfunc', '', PARAM_NOTAGS) == 'remove') {
-    $has_assigned_RET = DBGet(DBQuery('SELECT COUNT(*) AS TOTAL_ASSIGNED FROM student_eligibility_activities WHERE ACTIVITY_ID=\'' . $_REQUEST[id] . '\''));
+    $has_assigned_RET = DBGet(DBQuery('SELECT COUNT(*) AS TOTAL_ASSIGNED FROM student_eligibility_activities WHERE ACTIVITY_ID=\'' . $_REQUEST['id'] . '\''));
     $has_assigned = $has_assigned_RET[1]['TOTAL_ASSIGNED'];
     if ($has_assigned > 0) {
         UnableDeletePrompt(_cannotDeleteBecauseEligibilityActivitiesAreAssociated);
     } else {
         if (DeletePrompt_activity('activity')) {
-            DBQuery('DELETE FROM eligibility_activities WHERE ID=\'' . $_REQUEST[id] . '\'');
+            DBQuery('DELETE FROM eligibility_activities WHERE ID=\'' . $_REQUEST['id'] . '\'');
             unset($_REQUEST['modfunc']);
         }
     }
@@ -221,7 +222,7 @@
     foreach ($activities_RET as $ci => $cd) {
         $id_arr[$cd['ID']] = $cd['ID'];
     }
-    if (count($id_arr) > 0)
+    if (is_countable($id_arr) && count($id_arr) > 0)
         $id_arr = implode(',', $id_arr);
     else
         $id_arr = 0;

--- modules/eligibility/AddActivity.php ---
@@ -94,7 +94,8 @@
     $extra['link'] = array('FULL_NAME' =>false);
     $extra['SELECT'] = ",NULL AS CHECKBOX";
     $extra['functions'] = array('CHECKBOX' => '_makeChooseCheckbox');
-    $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAll(this.form,this.form.controller.checked,\'student\');"><A>');
+    // $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAll(this.form,this.form.controller.checked,\'student\');"><A>');
+    $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod(this,\'student\',\'Y\');"><A>');
     $extra['new'] = true;
 }
 
@@ -150,8 +151,14 @@
 
 function _makeChooseCheckbox($value, $title) {
     global $THIS_RET;
-
-    return "<INPUT type=checkbox name=student[" . $THIS_RET['STUDENT_ID'] . "] value=Y>";
+    // return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
+    
+    return "<input name=unused[$THIS_RET[STUDENT_ID]] value=$THIS_RET[STUDENT_ID]  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"student[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID], \"Y\");' />";
 }
+// function _makeChooseCheckbox($value, $title) {
+//     global $THIS_RET;
+
+//     return "<INPUT type=checkbox name=student[" . $THIS_RET['STUDENT_ID'] . "] value=Y>";
+// }
 
 ?>

--- modules/eligibility/EnterEligibility.php ---
@@ -27,11 +27,14 @@
 #
 #***************************************************************************************
 include('../../RedirectModulesInc.php');
+
+DrawBC(_extracurricular . " > " . ProgramTitle());
+
 echo '<div class="panel">';
 echo '<div class="panel-default">';
-echo '<div class="panel-body">';
+echo '<div class="">';
 $start_end_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_config WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND PROGRAM=\'eligibility\''));
-if (count($start_end_RET)) {
+if (is_countable($start_end_RET) && count($start_end_RET)) {
     foreach ($start_end_RET as $value) {
         if ($value['TITLE'] == 'START_DAY')
             $START_DAY = $value['VALUE'];
@@ -80,13 +83,13 @@
     $START_MINUTE = '0' . $START_MINUTE;
 if (strlen($END_MINUTE) == 1)
     $END_MINUTE = '0' . $END_MINUTE;
-$start_date = strtoupper(date('d-M-y', mktime() - ($today - $START_DAY) * 60 * 60 * 24));
-$end_date = strtoupper(date('d-M-y', mktime() + ($END_DAY - $today) * 60 * 60 * 24));
+$start_date = strtoupper(date('d-M-y', mktime(0) - ($today - $START_DAY) * 60 * 60 * 24));
+$end_date = strtoupper(date('d-M-y', mktime(0) + ($END_DAY - $today) * 60 * 60 * 24));
 $current_RET = DBGet(DBQuery('SELECT ELIGIBILITY_CODE,STUDENT_ID FROM eligibility WHERE SCHOOL_DATE BETWEEN \'' . $start_date . '\' AND \'' . $end_date . '\' AND COURSE_PERIOD_ID=\'' . UserCoursePeriod() . '\''), array(), array('STUDENT_ID'));
 if (optional_param('modfunc', '', PARAM_NOTAGS) == 'gradebook') {
 
     $config_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=\'' . User('STAFF_ID') . '\' AND PROGRAM=\'Gradebook\' AND VALUE LIKE \'%_' . UserCoursePeriod() . '\''), array(), array('TITLE'));
-    if (count($config_RET))
+    if (is_countable($config_RET) && count($config_RET))
         foreach ($config_RET as $title => $value)
             $programconfig[User('STAFF_ID')][$title] = rtrim($value[1]['VALUE'], '_' . UserCoursePeriod());
     else
@@ -105,7 +108,7 @@
     else
         $points_RET = DBGet(DBQuery('SELECT s.STUDENT_ID,\'' . '-1' . '\' AS ASSIGNMENT_TYPE_ID,sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'gg.POINTS')) . ') AS PARTIAL_POINTS,sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'ga.POINTS')) . ') AS PARTIAL_TOTAL,\'' . '1' . '\' AS FINAL_GRADE_PERCENT FROM students s JOIN schedule ss ON (ss.STUDENT_ID=s.STUDENT_ID AND ss.COURSE_PERIOD_ID=\'' . $course_period_id . '\') JOIN gradebook_assignments ga ON ((ga.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID OR ga.COURSE_ID=\'' . $course_id . '\' AND ga.STAFF_ID=\'' . User('STAFF_ID') . '\') AND ga.MARKING_PERIOD_ID' . ($programconfig[User('STAFF_ID')]['ELIGIBILITY_CUMULITIVE'] == 'Y' && $has_quarters[1]['REC_EX'] > 0 ? ' IN (' . GetChildrenMP('SEM', UserMP()) . ')' : '=\'' . UserMP() . '\'') . ') LEFT OUTER JOIN gradebook_grades gg ON (gg.STUDENT_ID=s.STUDENT_ID AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID) WHERE ((ga.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=ga.ASSIGNED_DATE) AND (ga.DUE_DATE IS NULL OR CURRENT_DATE>=ga.DUE_DATE) OR gg.POINTS IS NOT NULL) GROUP BY s.STUDENT_ID,ss.START_DATE'), array(), array('STUDENT_ID'));
 
-    if (count($points_RET)) {
+    if (is_countable($points_RET) && count($points_RET)) {
         foreach ($points_RET as $student_id => $student) {
             $total = $total_percent = 0;
             foreach ($student as $partial_points)
@@ -197,13 +200,15 @@
 }
 else {
     if (count($stu_RET) != 0) {
+        echo '<div class="panel-heading">';
         echo '<div class="row">';
         echo '<div class="col-md-6">';
-        echo '<h5 class="m-t-5">' . ProgramTitle() . '</h5>';
+        echo '<h5 class="text-pink m-b-0">' . ProgramTitle() . '</h5>';
+        echo '</div>';
+        echo '<div class="col-md-6 text-right"><A class="btn btn-default" href="Modules.php?modname=' . $_REQUEST[modname] . '&modfunc=gradebook">'._useGradebookGrades.'</A> &nbsp; <INPUT type=submit class="btn btn-primary" value='._save.' onclick="self_disable(this);"></div>';
         echo '</div>';
-        echo '<div class="col-md-6 text-right"><A class="btn btn-primary" href="Modules.php?modname=' . $_REQUEST[modname] . '&modfunc=gradebook">'._useGradebookGrades.'</A> &nbsp; <INPUT type=submit class="btn btn-primary" value='._save.' onclick="self_disable(this);"></div>';
         echo '</div>';
-        echo '<hr class="m-t-15 m-b-0" />';
+        echo '<hr class="no-margin" />';
     }
 
     $LO_columns = array('FULL_NAME' =>_student,
@@ -212,7 +217,7 @@
      ) + $columns;
     ListOutput($stu_RET, $LO_columns, _student, _students);
     if (count($stu_RET) != 0)
-        echo '<br><CENTER><INPUT type=submit class="btn btn-primary" value='._save.' onclick="self_disable(this);"></CENTER>';
+        echo '<div class="panel-footer text-center"><INPUT type=submit class="btn btn-primary" value='._save.' onclick="self_disable(this);"></div>';
 }
 echo "</FORM>";
 echo '</div>'; //.panel-body

--- modules/eligibility/EntryTimes.php ---
@@ -26,6 +26,7 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+error_reporting(E_ALL ^ E_WARNING);
 // GET ALL THE config ITEMS FOR eligibility
 include('../../RedirectModulesInc.php');
 $start_end_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_config WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND PROGRAM=\'eligibility\''));
@@ -59,14 +60,22 @@
 
     $start = $_REQUEST['values']['START_DAY'] . $_REQUEST['values']['START_HOUR'] . $_REQUEST['values']['START_MINUTE'];
     $end = $_REQUEST['values']['END_DAY'] . $_REQUEST['values']['END_HOUR'] . $_REQUEST['values']['END_MINUTE'];
-    foreach (sqlSecurityFilter($_REQUEST['values']) as $key => $value) {
+
+    $this_REQUEST = $_REQUEST['values'];
+
+    $this_REQUEST['START_HOUR'] = (string)$this_REQUEST['START_HOUR'];
+    $this_REQUEST['END_HOUR'] = (string)$this_REQUEST['END_HOUR'];
+
+    $new_REQUEST = sqlSecurityFilter($this_REQUEST);
+
+    foreach ($new_REQUEST as $key => $value) {
         if($key!='START_TIME' && $key!='END_TIME')
         {
-        if (isset($$key)) {
-            DBQuery('UPDATE program_config SET VALUE=\'' . $value . '\' WHERE PROGRAM=\'eligibility\' AND TITLE=\'' . $key . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\'');
-        } else {
-            DBQuery('INSERT INTO program_config (SYEAR,SCHOOL_ID,PROGRAM,TITLE,VALUE) values(\'' . UserSyear() . '\',\'' . UserSchool() . '\',\'eligibility\',\'' . $key . '\',\'' . $value . '\')');
-        }
+            if (isset($$key)) {
+                DBQuery('UPDATE program_config SET VALUE=\'' . $value . '\' WHERE PROGRAM=\'eligibility\' AND TITLE=\'' . $key . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND SYEAR=\'' . UserSyear() . '\'');
+            } else {
+                DBQuery('INSERT INTO program_config (SYEAR,SCHOOL_ID,PROGRAM,TITLE,VALUE) values(\'' . UserSyear() . '\',\'' . UserSchool() . '\',\'eligibility\',\'' . $key . '\',\'' . $value . '\')');
+            }
         }
     }
 
@@ -92,15 +101,16 @@
     $minute_options[$i] = $i;
 
 $m_options = array('AM' => 'AM', 'PM' => 'PM');
-$START_HOUR = $arr['START_HOUR'];
+$START_HOUR = intval($arr['START_HOUR']);
 if ($arr['START_HOUR'] > 12) {
     $START_HOUR-=12;
     $START_M = 'PM';
 }
 else
     $START_M = 'AM';
 
-$END_HOUR = $arr['END_HOUR'];
+
+$END_HOUR = intval($arr['END_HOUR']);
 if ($arr['END_HOUR'] > 12) {
     $END_HOUR-=12;
     $END_M = 'PM';

--- modules/eligibility/Student.php ---
@@ -26,8 +26,9 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+error_reporting(E_ALL ^ E_WARNING);
 include('../../RedirectModulesInc.php');
-DrawBC(""._extracurricular." > " . ProgramTitle());
+DrawBC("" . _extracurricular . " > " . ProgramTitle());
 
 $extra['search'] .= '<div class="row">';
 $extra['search'] .= '<div class="col-md-6">';
@@ -44,67 +45,74 @@
 $extra['search'] .= '</div>'; //.col-md-6
 $extra['search'] .= '</div>'; //.row
 Search('student_id', $extra);
-if($_REQUEST['search_modfunc']!='list')
-{
-echo '<div id="modal_default" class="modal fade">
+if ($_REQUEST['search_modfunc'] != 'list') {
+    echo '<div id="modal_default" class="modal fade">
 <div class="modal-dialog">
 <div class="modal-content">
 <div class="modal-header">
     <button type="button" class="close" data-dismiss="modal">×</button>
-    <h5 class="modal-title">'._chooseCourse.'</h5>
+    <h5 class="modal-title">' . _chooseCourse . '</h5>
 </div>
 
 <div class="modal-body">';
-echo '<center><div id="conf_div"></div></center>';
-echo'<table id="resp_table"><tr><td valign="top">';
-echo '<div>';
-   $sql = "SELECT SUBJECT_ID,TITLE FROM course_subjects WHERE SCHOOL_ID='".UserSchool()."' AND SYEAR='".UserSyear()."' ORDER BY TITLE";
-$QI = DBQuery($sql);
-$subjects_RET = DBGet($QI);
+    echo '<center><div id="conf_div"></div></center>';
+    echo '<table id="resp_table"><tr><td valign="top">';
+    echo '<div>';
+    $sql = "SELECT SUBJECT_ID,TITLE FROM course_subjects WHERE SCHOOL_ID='" . UserSchool() . "' AND SYEAR='" . UserSyear() . "' ORDER BY TITLE";
+    $QI = DBQuery($sql);
+    $subjects_RET = DBGet($QI);
 
-echo count($subjects_RET). ((count($subjects_RET)==1)?' '._subjectWas.'':' '._subjectsWere.'').' '._found.'.<br>';
-if(count($subjects_RET)>0)
-{
-echo '<table class="table table-bordered"><tr class="bg-grey-200"><th>'._subject.'</th></tr>'; 
-foreach($subjects_RET as $val)
-{
-echo '<tr><td><a href=javascript:void(0); onclick="chooseCpModalSearch('.$val['SUBJECT_ID'].',\'courses\')">'.$val['TITLE'].'</a></td></tr>';
-}
-echo '</table>';
-}
-echo '</div></td>';
-echo '<td valign="top"><div id="course_modal"></div></td>';
-echo '<td valign="top"><div id="cp_modal"></div></td>';
-echo '</tr></table>';
-//         echo '<div id="coursem"><div id="cpem"></div></div>';
-echo' </div>
+    echo count($subjects_RET) . ((count($subjects_RET) == 1) ? ' ' . _subjectWas . '' : ' ' . _subjectsWere . '') . ' ' . _found . '.<br>';
+    if (count($subjects_RET) > 0) {
+        echo '<table class="table table-bordered"><tr class="bg-grey-200"><th>' . _subject . '</th></tr>';
+        foreach ($subjects_RET as $val) {
+            echo '<tr><td><a href=javascript:void(0); onclick="chooseCpModalSearch(' . $val['SUBJECT_ID'] . ',\'courses\')">' . $val['TITLE'] . '</a></td></tr>';
+        }
+        echo '</table>';
+    }
+    echo '</div></td>';
+    echo '<td valign="top"><div id="course_modal"></div></td>';
+    echo '<td valign="top"><div id="cp_modal"></div></td>';
+    echo '</tr></table>';
+    //         echo '<div id="coursem"><div id="cpem"></div></div>';
+    echo ' </div>
 </div>
 </div>
 </div>';
 }
 if ($_REQUEST['modfunc'] == 'add' || $_REQUEST['student_id']) {
-    if ($_REQUEST['student_id'])
-        $RET = DBGet(DBQuery('SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID=\'' . $_REQUEST['student_id'] . '\''));
-    else
+    if ($_REQUEST['student_id']){
+        $student_id=sqlSecurityFilter($_REQUEST['student_id']);
+        $RET = DBGet(DBQuery('SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID=\'' . $student_id . '\''));
+    }else
         $RET = DBGet(DBQuery('SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID=\'' . UserStudentID() . '\''));
     $count_student_RET = DBGet(DBQuery('SELECT COUNT(*) AS NUM FROM students'));
     if ($count_student_RET[1]['NUM'] > 1) {
-        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"><A HREF=Modules.php?modname=' . clean_param($_REQUEST['modname'], PARAM_NOTAGS) . '&search_modfunc=list&next_modname=Students/Student.php&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> '._backToStudentList.'</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . ' class="btn btn-danger btn-xs">'.deselect.'</A></div></div></div></div>');
+        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">' . _selectedStudent . ' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"><A HREF=Modules.php?modname=' . clean_param($_REQUEST['modname'], PARAM_NOTAGS) . '&search_modfunc=list&next_modname=Students/Student.php&ajax=true&bottom_back=true&return_session=true target=body><i class="icon-square-left"></i> ' . _backToStudentList . '</A></span><div class="btn-group heading-btn"><A HREF=Side.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . ' class="btn btn-danger btn-xs">' . _deselect . '</A></div></div></div></div>');
     } else if ($count_student_RET[1]['NUM'] == 1) {
-        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">'._selectedStudent.' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"></span><A HREF=Side.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . ' class="btn btn-danger btn-xs">'._deselect.'</A></div></div></div>');
+        DrawHeaderHome('<div class="panel"><div class="panel-heading"><h6 class="panel-title">' . _selectedStudent . ' : ' . $RET[1]['FIRST_NAME'] . '&nbsp;' . ($RET[1]['MIDDLE_NAME'] ? $RET[1]['MIDDLE_NAME'] . ' ' : '') . $RET[1]['LAST_NAME'] . '&nbsp;' . $RET[1]['NAME_SUFFIX'] . '</h6> <div class="heading-elements"><span class="heading-text"></span><A HREF=Side.php?student_id=new&modcat=' . clean_param($_REQUEST['modcat'], PARAM_NOTAGS) . ' class="btn btn-danger btn-xs">' . _deselect . '</A></div></div></div>');
     }
 }
 if ($_REQUEST['modfunc'] == 'add' && AllowEdit()) {
     $stu_act_record = DBGet(DBQuery('SELECT ACTIVITY_ID FROM student_eligibility_activities WHERE STUDENT_ID=' . UserStudentID() . ' AND SYEAR=' . UserSyear()));
-    foreach ($stu_act_record as $rec_k => $rec_v)
-        foreach ($rec_v as $recr_k => $recr_v)
-            $ret[] = $recr_v;
+    if (!empty($stu_act_record)) {
+        $ret = array();
+        foreach ($stu_act_record as $rec_k => $rec_v)
+            foreach ($rec_v as $recr_k => $recr_v)
+                $ret[] = $recr_v;
 
-    if (in_array($_REQUEST['new_activity'], $ret)) {
-        echo'<p style=color:red>'._duplicateEntryOfActivityIsNotPermissible.'</p>';
-        unset($_REQUEST['modfunc']);
+        if (in_array($_REQUEST['new_activity'], $ret)) {
+            echo '<p style=color:red>' . _duplicateEntryOfActivityIsNotPermissible . '</p>';
+            unset($_REQUEST['modfunc']);
+        } else {
+            if ($_REQUEST['new_activity'] != '') {
+                DBQuery('INSERT INTO student_eligibility_activities (STUDENT_ID,ACTIVITY_ID,SYEAR) values(\'' . UserStudentID() . '\',\'' . $_REQUEST['new_activity'] . '\',\'' . UserSyear() . '\')');
+                echo '<div class="alert bg-success alert-styled-left">' . _theActivityHasBeenAdded . '</div>';
+            }
+            unset($_REQUEST['modfunc']);
+        }
     } else {
-        if($_REQUEST['new_activity'] != ''){
+        if ($_REQUEST['new_activity'] != '') {
             DBQuery('INSERT INTO student_eligibility_activities (STUDENT_ID,ACTIVITY_ID,SYEAR) values(\'' . UserStudentID() . '\',\'' . $_REQUEST['new_activity'] . '\',\'' . UserSyear() . '\')');
             echo '<div class="alert bg-success alert-styled-left">' . _theActivityHasBeenAdded . '</div>';
         }
@@ -149,16 +157,14 @@
     }
 
     $start = time() - ($today - $START_DAY) * 60 * 60 * 24;
-//    $end = time();
+    //    $end = time();
 
     if (!$_REQUEST['start_date']) {
         $start_time = $start;
         $start_date = strtoupper(date('d-M-y', $start_time));
-        if(isset($end))
-        {
+        if (isset($end)) {
             $end_date = strtoupper(date('d-M-y', $end));
-        }
-        else{
+        } else {
             $end_date = strtoupper(date('d-M-y', $start_time + 60 * 60 * 24 * 6));
         }
     } else {
@@ -172,11 +178,11 @@
     $end_year = DBGet(DBQuery($sql));
     $end_year = $end_year[1]['END_DATE'];
 
-//    $date_select = "<OPTION value=$start>" . date('M d, Y', $start) . ' - ' . date('M d, Y', $end) . '</OPTION>';
+    //    $date_select = "<OPTION value=$start>" . date('M d, Y', $start) . ' - ' . date('M d, Y', $end) . '</OPTION>';
 
     if ($end_year != "" || !$end_year) {
-        
-        for ($i = $start; $i <= $end_year; $i+=(60 * 60 * 24 * 7)) {
+
+        for ($i = $start; $i <= $end_year; $i += (60 * 60 * 24 * 7)) {
             $date_select .= "<OPTION value='" . $i . "'" . (($i + 86400 >= $start_time && $i - 86400 <= $start_time) ? ' SELECTED' : '') . ">" . date('M d, Y', $i) . ' - ' . date('M d, Y', ($i + (60 * 60 * 24 * 6))) . '</OPTION>';
         }
     }
@@ -186,33 +192,32 @@
     echo "<FORM class=no-margin name=elig_stud id=elig_stud action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . " method=POST>";
     echo '<div class="row">';
     echo '<div class="col-md-4">';
-    echo '<div class="input-group"><SELECT name=start_date class=form-control>' . $date_select . '</SELECT><span class="input-group-btn"><INPUT type=submit value='._go.' class="btn btn-primary" onclick=\'formload_ajax("elig_stud");self_disable(this);\' ></span></div>';
+    echo '<div class="input-group"><SELECT name=start_date class=form-control>' . $date_select . '</SELECT><span class="input-group-btn"><INPUT type=submit value=' . _go . ' class="btn btn-primary" onclick=\'formload_ajax("elig_stud");self_disable(this);\' ></span></div>';
     echo '</div>'; //.col-md-4
     echo '</div>'; //.row
     echo '</FORM>';
     echo '</div>'; //.panel-heading
-    
+
     echo '<div class="row">';
     echo '<div class="col-md-6">';
-    
+
     $qr = 'SELECT em.STUDENT_ID,em.ACTIVITY_ID,ea.TITLE,ea.START_DATE,ea.END_DATE FROM eligibility_activities ea,student_eligibility_activities em WHERE  em.STUDENT_ID=' . UserStudentID() . ' AND em.SYEAR=\'' . UserSyear() . '\'';
     if ($_REQUEST['start_date']) {
         $dates = explode('-', $_REQUEST['start_date']);
         $st_date = date('Y-m-d', $dates[0]);
-        $end_date = date('Y-m-d', $dates[0]+(86400*6));
+        $end_date = date('Y-m-d', $dates[0] + (86400 * 6));
 
         if ($dates[1] != '') {
-            $qr.= ' AND ((\'' . $st_date . '\' BETWEEN ea.start_date AND ea.end_date) OR (\'' . date('Y-m-d', $dates[1]) . '\' BETWEEN ea.start_date AND ea.end_date))';
+            $qr .= ' AND ((\'' . $st_date . '\' BETWEEN ea.start_date AND ea.end_date) OR (\'' . date('Y-m-d', $dates[1]) . '\' BETWEEN ea.start_date AND ea.end_date))';
         } else
-            $qr.= ' AND ((\'' . $st_date . '\' <= ea.start_date AND ea.end_date) AND (\'' . $end_date . '\' >= ea.start_date AND ea.end_date))';
-            // $qr.= ' AND \'' . $st_date . '\' BETWEEN ea.start_date AND ea.end_date';
-    }
-    else {
+            $qr .= ' AND ((\'' . $st_date . '\' <= ea.start_date AND ea.end_date) AND (\'' . $end_date . '\' >= ea.start_date AND ea.end_date))';
+        // $qr.= ' AND \'' . $st_date . '\' BETWEEN ea.start_date AND ea.end_date';
+    } else {
 
         $st_date = date('Y-m-d');
-        $qr.= ' AND \'' . $st_date . '\' BETWEEN ea.start_date AND ea.end_date';
+        $qr .= ' AND \'' . $st_date . '\' BETWEEN ea.start_date AND ea.end_date';
     }
-    $qr.= '  AND em.SYEAR=ea.SYEAR AND em.ACTIVITY_ID=ea.ID ORDER BY ea.START_DATE';
+    $qr .= '  AND em.SYEAR=ea.SYEAR AND em.ACTIVITY_ID=ea.ID ORDER BY ea.START_DATE';
 
     $RET = DBGet(DBQuery($qr), array('START_DATE' => 'ProperDate', 'END_DATE' => 'ProperDate'));
 
@@ -229,31 +234,32 @@
     $link['add']['html']['TITLE'] = '<TABLE border=0 cellpadding=0 cellspacing=0><TR><TD>' . SelectInput('', 'new_activity', '', $activities) . ' </TD><TD>&nbsp;<INPUT type=submit value=Add class="btn btn-primary" onclick=\'formload_ajax("elig_stud");self_disable(this);\'></TD></TR></TABLE>';
     $link['add']['html']['remove'] = button('add');
 
-    echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=add&start_date=" . strip_tags(trim($_REQUEST[start_date])) . " method=POST>";
-    $columns = array('TITLE' =>_activity,
-     'START_DATE' =>_starts,
-     'END_DATE' =>_ends,
+    echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=add&start_date=" . strip_tags(trim($_REQUEST['start_date'])) . " method=POST>";
+    $columns = array(
+        'TITLE' => _activity,
+        'START_DATE' => _starts,
+        'END_DATE' => _ends,
     );
-    ListOutput($RET, $columns,  _activity, _activities, $link);
+    ListOutputWithStudentInfo($RET, $columns,  _activity, _activities, $link);
 
     echo '</FORM>';
 
     echo '</div><div class="col-md-6">';
-   $RET = DBGet(DBQuery('SELECT e.ELIGIBILITY_CODE,c.TITLE as COURSE_TITLE FROM eligibility e,courses c,course_periods cp WHERE e.STUDENT_ID=\'' . UserStudentID() . '\' AND e.SYEAR=\'' . UserSyear() . '\' AND e.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND cp.COURSE_ID=c.COURSE_ID AND e.SCHOOL_DATE BETWEEN \'' . date('Y-m-d', strtotime($start_date)) . '\' AND \'' . date('Y-m-d', strtotime($end_date)) . '\''), array('ELIGIBILITY_CODE' => '_makeLower'));
-    $columns = array('COURSE_TITLE' =>_course,
-     'ELIGIBILITY_CODE' =>_grade,
+    $RET = DBGet(DBQuery('SELECT e.ELIGIBILITY_CODE,c.TITLE as COURSE_TITLE FROM eligibility e,courses c,course_periods cp WHERE e.STUDENT_ID=\'' . UserStudentID() . '\' AND e.SYEAR=\'' . UserSyear() . '\' AND e.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND cp.COURSE_ID=c.COURSE_ID AND e.SCHOOL_DATE BETWEEN \'' . date('Y-m-d', strtotime($start_date)) . '\' AND \'' . date('Y-m-d', strtotime($end_date)) . '\''), array('ELIGIBILITY_CODE' => '_makeLower'));
+    $columns = array(
+        'COURSE_TITLE' => _course,
+        'ELIGIBILITY_CODE' => _grade,
     );
     ListOutputNew_mod($RET, $columns, _course, _courses);
 
 
     echo '</div>'; //.col-md-6
     echo '</div>'; //.row
-    
+
     echo '</div>'; //.panel
 }
 
-function _makeLower($word) {
+function _makeLower($word)
+{
     return ucwords(strtolower($word));
 }
-
-?>

--- modules/eligibility/StudentList.php ---
@@ -26,6 +26,7 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+error_reporting(E_ALL ^ E_WARNING);
 include('../../RedirectModulesInc.php');
 $start_end_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_config WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND PROGRAM=\'eligibility\' AND TITLE IN (\'' . 'START_DAY' . '\',\'' . 'END_DAY' . '\')'));
 if (count($start_end_RET)) {
@@ -115,8 +116,6 @@
 $extra['search'] .= '</div>'; //.col-md-6
 $extra['search'] .= '</div>'; //.row
 
-
-
 if (!$_REQUEST['search_modfunc'] && User('PROFILE') != 'parent' && User('PROFILE') != 'student') {
     $extra['new'] = true;
     Search('student_id', $extra);

--- modules/eligibility/TeacherCompletion.php ---
@@ -26,6 +26,7 @@
 #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #
 #***************************************************************************************
+error_reporting(E_ALL ^ E_WARNING);
 include('../../RedirectModulesInc.php');
 $start_end_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_config WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND PROGRAM=\'eligibility\' AND TITLE IN (\'' . 'START_DAY' . '\',\'' . 'END_DAY' . '\')'));
 if (count($start_end_RET)) {
@@ -95,7 +96,7 @@
 echo '</div>'; //.row
 echo '</div>'; //.panel-heading
 echo '</FORM>';
-+
+//+
 $mp = GetAllMP('QTR', UserMP());
 
 if (!isset($mp))

--- modules/grades/AdminProgressReports.php ---
@@ -132,7 +132,7 @@
                     $courselist_ret = DBGet(DBQuery('SELECT s.TITLE AS COURSE, s.COURSE_ID, cp.COURSE_PERIOD_ID,cp.TEACHER_ID 
                                                     FROM gradebook_grades g, courses s, course_periods cp, gradebook_assignments ga, schedule sc
                                                         WHERE cp.COURSE_PERIOD_ID = ga.COURSE_PERIOD_ID AND sc.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND sc.STUDENT_ID=g.STUDENT_ID 
-                                                    AND s.COURSE_ID = cp.COURSE_ID AND ga.assignment_id = g.assignment_id AND (ga.MARKING_PERIOD_ID=\''.UserMP().'\' OR ga.MARKING_PERIOD_ID=\''.$fy_mp_id.'\') and  g.STUDENT_ID=\''.$student[STUDENT_ID].'\' and s.syear=\''.UserSyear().'\' group by cp.COURSE_PERIOD_ID'));
+                                                    AND s.COURSE_ID = cp.COURSE_ID AND ga.assignment_id = g.assignment_id AND (ga.MARKING_PERIOD_ID=\''.UserMP().'\' OR ga.MARKING_PERIOD_ID=\''.$fy_mp_id.'\') and  g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' and s.syear=\''.UserSyear().'\' group by cp.COURSE_PERIOD_ID'));
                     
                     if(!empty($courselist_ret[1])){
                     foreach($courselist_ret as $courselist=>$course)
@@ -162,33 +162,45 @@
 	else
 		$program_config[$course['TEACHER_ID']][$course_period_id] = true;
             
-                             $course_period_title=DBGet(DBQuery('SELECT TITLE FROM course_periods WHERE COURSE_PERIOD_ID=\''.$course_period_id.'\' '));
-                      echo '<table border=0 style=\"font-size:12px;\">';
-                      echo "<tr><td>"._course.":</td><td>".$course_title ."</td></tr>";
-                      echo "<tr><td>"._coursePeriod.":</td><td>".$course_period_title[1]['TITLE']."</td></tr>";
+        $course_period_title=DBGet(DBQuery('SELECT TITLE FROM course_periods WHERE COURSE_PERIOD_ID=\''.$course_period_id.'\' '));
+        echo '<table border=0 style=\"font-size:12px;\">';
+        echo "<tr><td>"._course.":</td><td>".$course_title ."</td></tr>";
+        echo "<tr><td>"._coursePeriod.":</td><td>".$course_period_title[1]['TITLE']."</td></tr>";
                       
-			if($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'){
-                                $course_periods = DBGet(DBQuery('select marking_period_id from course_periods where course_period_id='.$course_period_id));
-                                if($course_periods[1]['MARKING_PERIOD_ID']==NULL){
-                                    $assignment_type_ids = DBGet(DBQuery('SELECT group_concat(distinct(assignment_type_id)) AS assignment_type_ids FROM gradebook_assignments a JOIN gradebook_grades g ON (a.ASSIGNMENT_ID = g.ASSIGNMENT_ID AND g.STUDENT_ID=\'' . $student['STUDENT_ID'] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\') WHERE (a.COURSE_PERIOD_ID=\'' . $course_period_id . '\' OR a.COURSE_ID=\'' . $course_id . '\') AND (a.MARKING_PERIOD_ID=\'' . UserMP() . '\' OR a.MARKING_PERIOD_ID=\'' . $fy_mp_id . '\')'));
+		if($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'){
+            $course_periods = DBGet(DBQuery('select marking_period_id from course_periods where course_period_id='.$course_period_id));
+            if($course_periods[1]['MARKING_PERIOD_ID']==NULL){
+                $assignment_type_ids = DBGet(DBQuery('SELECT group_concat(distinct(assignment_type_id)) AS assignment_type_ids FROM gradebook_assignments a JOIN gradebook_grades g ON (a.ASSIGNMENT_ID = g.ASSIGNMENT_ID AND g.STUDENT_ID=\'' . $student['STUDENT_ID'] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\') WHERE (a.COURSE_PERIOD_ID=\'' . $course_period_id . '\' OR a.COURSE_ID=\'' . $course_id . '\') AND (a.MARKING_PERIOD_ID=\'' . UserMP() . '\' OR a.MARKING_PERIOD_ID=\'' . $fy_mp_id . '\')'));
 
-                                    $assignment_type_weight = DBGet(DBQuery('SELECT SUM(FINAL_GRADE_PERCENT) AS FINAL_GRADE_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id IN (' . $assignment_type_ids[1]['ASSIGNMENT_TYPE_IDS'] . ')'));
-                                    $assignment_type_weight = $assignment_type_weight[1]['FINAL_GRADE_PERCENT'];
+                $assignment_type_list = "'";
+                if ($assignment_type_ids[1]['ASSIGNMENT_TYPE_IDS'] != '')
+                    $assignment_type_list .= str_replace(",", "','", $assignment_type_ids[1]['ASSIGNMENT_TYPE_IDS']);
+                $assignment_type_list .= "'";
 
-                                    $school_years = DBGet(DBQuery('select marking_period_id from  school_years where  syear='.UserSyear().' and school_id='.UserSchool()));
-                                    $fy_mp_id = $school_years[1]['MARKING_PERIOD_ID'];
-                                    // $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE,      t.ASSIGNMENT_TYPE_ID, (t.FINAL_GRADE_PERCENT / (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE COURSE_ID = \''.$course_id.'\')) as FINAL_GRADE_PERCENT,(t.FINAL_GRADE_PERCENT / (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE COURSE_ID = \''.$course_id.'\')) as ASSIGN_TYP_WG,t.FINAL_GRADE_PERCENT AS WEIGHT_GRADE  ,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM gradebook_assignment_types t,gradebook_assignments a 
-                                    //     LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' AND g.COURSE_PERIOD_ID=\''.$course_period_id.'\') 
-                                    //          WHERE   a.ASSIGNMENT_TYPE_ID=t.ASSIGNMENT_TYPE_ID AND (a.COURSE_PERIOD_ID=\''.$course_period_id.'\' OR a.COURSE_ID=\''.$course_id.'\' ) AND t.COURSE_ID=\''.$course_id.'\' AND (a.MARKING_PERIOD_ID=\''.UserMP().'\' OR a.MARKING_PERIOD_ID=\''.$fy_mp_id.'\')';
+                $assignment_type_weight = DBGet(DBQuery('SELECT SUM(FINAL_GRADE_PERCENT) AS FINAL_GRADE_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id IN (' . $assignment_type_list . ')'));
+                $assignment_type_weight = $assignment_type_weight[1]['FINAL_GRADE_PERCENT'];
+
+                $school_years = DBGet(DBQuery('select marking_period_id from  school_years where  syear='.UserSyear().' and school_id='.UserSchool()));
+                $fy_mp_id = $school_years[1]['MARKING_PERIOD_ID'];
+                // $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE,      t.ASSIGNMENT_TYPE_ID, (t.FINAL_GRADE_PERCENT / (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE COURSE_ID = \''.$course_id.'\')) as FINAL_GRADE_PERCENT,(t.FINAL_GRADE_PERCENT / (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE COURSE_ID = \''.$course_id.'\')) as ASSIGN_TYP_WG,t.FINAL_GRADE_PERCENT AS WEIGHT_GRADE  ,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM gradebook_assignment_types t,gradebook_assignments a 
+                //     LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' AND g.COURSE_PERIOD_ID=\''.$course_period_id.'\') 
+                //          WHERE   a.ASSIGNMENT_TYPE_ID=t.ASSIGNMENT_TYPE_ID AND (a.COURSE_PERIOD_ID=\''.$course_period_id.'\' OR a.COURSE_ID=\''.$course_id.'\' ) AND t.COURSE_ID=\''.$course_id.'\' AND (a.MARKING_PERIOD_ID=\''.UserMP().'\' OR a.MARKING_PERIOD_ID=\''.$fy_mp_id.'\')';
                                     
-                                    $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE, t.ASSIGNMENT_TYPE_ID, (t.FINAL_GRADE_PERCENT / '.$assignment_type_weight.') as FINAL_GRADE_PERCENT,t.FINAL_GRADE_PERCENT as ASSIGN_TYP_WG,t.FINAL_GRADE_PERCENT AS WEIGHT_GRADE  ,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM gradebook_assignment_types t,gradebook_assignments a LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' AND g.COURSE_PERIOD_ID=\''.$course_period_id.'\') WHERE   a.ASSIGNMENT_TYPE_ID=t.ASSIGNMENT_TYPE_ID AND (a.COURSE_PERIOD_ID=\''.$course_period_id.'\' OR a.COURSE_ID=\''.$course_id.'\' ) AND t.COURSE_ID=\''.$course_id.'\' AND (a.MARKING_PERIOD_ID=\''.UserMP().'\' OR a.MARKING_PERIOD_ID=\''.$fy_mp_id.'\')';
+                $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE, t.ASSIGNMENT_TYPE_ID, (t.FINAL_GRADE_PERCENT / '.$assignment_type_weight.') as FINAL_GRADE_PERCENT,t.FINAL_GRADE_PERCENT as ASSIGN_TYP_WG,t.FINAL_GRADE_PERCENT AS WEIGHT_GRADE  ,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM gradebook_assignment_types t,gradebook_assignments a LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' AND g.COURSE_PERIOD_ID=\''.$course_period_id.'\') WHERE   a.ASSIGNMENT_TYPE_ID=t.ASSIGNMENT_TYPE_ID AND (a.COURSE_PERIOD_ID=\''.$course_period_id.'\' OR a.COURSE_ID=\''.$course_id.'\' ) AND t.COURSE_ID=\''.$course_id.'\' AND (a.MARKING_PERIOD_ID=\''.UserMP().'\' OR a.MARKING_PERIOD_ID=\''.$fy_mp_id.'\')';
+
+            }
+            else{
+                $assignment_type_ids = DBGet(DBQuery('SELECT group_concat(distinct(assignment_type_id)) AS assignment_type_ids FROM gradebook_assignments a JOIN gradebook_grades g ON (a.ASSIGNMENT_ID = g.ASSIGNMENT_ID AND g.STUDENT_ID=\'' . $student['STUDENT_ID'] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\') WHERE (a.COURSE_PERIOD_ID=\'' . $course_period_id . '\' OR a.COURSE_ID=\'' . $course_id . '\') AND (a.MARKING_PERIOD_ID=\'' . UserMP() . '\')'));
 
-                                    }
-                            else{
-                                $assignment_type_ids = DBGet(DBQuery('SELECT group_concat(distinct(assignment_type_id)) AS assignment_type_ids FROM gradebook_assignments a JOIN gradebook_grades g ON (a.ASSIGNMENT_ID = g.ASSIGNMENT_ID AND g.STUDENT_ID=\'' . $student['STUDENT_ID'] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\') WHERE (a.COURSE_PERIOD_ID=\'' . $course_period_id . '\' OR a.COURSE_ID=\'' . $course_id . '\') AND (a.MARKING_PERIOD_ID=\'' . UserMP() . '\')'));
+                $assignment_type_list = "'";
+                if ($assignment_type_ids[1]['ASSIGNMENT_TYPE_IDS'] != '')
+                    $assignment_type_list .= str_replace(",", "','", $assignment_type_ids[1]['ASSIGNMENT_TYPE_IDS']);
+                $assignment_type_list .= "'";
                     
-                            $assignment_type_weight = DBGet(DBQuery('SELECT SUM(FINAL_GRADE_PERCENT) AS FINAL_GRADE_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id IN ('.$assignment_type_ids[1]['ASSIGNMENT_TYPE_IDS'].')'));
-                            $assignment_type_weight = $assignment_type_weight[1]['FINAL_GRADE_PERCENT'];
+                $assignment_type_weight = DBGet(DBQuery('SELECT SUM(FINAL_GRADE_PERCENT) AS FINAL_GRADE_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id IN ('.$assignment_type_list.')'));
+
+                // $assignment_type_weight = DBGet(DBQuery('SELECT SUM(FINAL_GRADE_PERCENT) AS FINAL_GRADE_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id IN ('.$assignment_type_ids[1]['ASSIGNMENT_TYPE_IDS'].')'));
+                $assignment_type_weight = $assignment_type_weight[1]['FINAL_GRADE_PERCENT'];
 
 				// $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE,      t.ASSIGNMENT_TYPE_ID, (t.FINAL_GRADE_PERCENT / (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE COURSE_ID = \''.$course_id.'\')) as  FINAL_GRADE_PERCENT,(t.FINAL_GRADE_PERCENT / (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE COURSE_ID = \''.$course_id.'\')) as ASSIGN_TYP_WG,t.FINAL_GRADE_PERCENT AS WEIGHT_GRADE  ,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM gradebook_assignment_types t,gradebook_assignments a 
                 //                         LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' AND g.COURSE_PERIOD_ID=\''.$course_period_id.'\') 
@@ -204,17 +216,17 @@
                                     $school_years = DBGet(DBQuery('select marking_period_id from  school_years where  syear='.UserSyear().' and school_id='.UserSchool()));
                                     $fy_mp_id = $school_years[1]['MARKING_PERIOD_ID'];
                                     
-                                    $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE,\'-1\' AS ASSIGNMENT_TYPE_ID,\'1\' AS FINAL_GRADE_PERCENT,\'N/A\' as ASSIGN_TYP_WG,\'N/A\' as WEIGHT_GRADE,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM    gradebook_assignment_types t,gradebook_assignments a
+                $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE,\'-1\' AS ASSIGNMENT_TYPE_ID,\'1\' AS FINAL_GRADE_PERCENT,\'N/A\' as ASSIGN_TYP_WG,\'N/A\' as WEIGHT_GRADE,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM    gradebook_assignment_types t,gradebook_assignments a
                                         LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' AND g.COURSE_PERIOD_ID=\''.$course_period_id.'\')
                                              WHERE     a.ASSIGNMENT_TYPE_ID=t.ASSIGNMENT_TYPE_ID AND   (a.COURSE_PERIOD_ID=\''.$course_period_id.'\' OR a.COURSE_ID=\''.$course_id.'\')  AND t.COURSE_ID=\''.$course_id.'\' AND (a.MARKING_PERIOD_ID=\''.UserMP().'\' OR a.MARKING_PERIOD_ID=\''.$fy_mp_id.'\')';
                                     
-                                    }
-                            else{
-                                $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE,\'-1\' AS ASSIGNMENT_TYPE_ID,\'1\' AS FINAL_GRADE_PERCENT,\'N/A\' as ASSIGN_TYP_WG,\'N/A\' as WEIGHT_GRADE,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM    gradebook_assignment_types t,gradebook_assignments a
+            }
+            else{
+                $sql = 'SELECT '.$course_period_id.' as COURSE_PERIOD_ID,a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE,\'-1\' AS ASSIGNMENT_TYPE_ID,\'1\' AS FINAL_GRADE_PERCENT,\'N/A\' as ASSIGN_TYP_WG,\'N/A\' as WEIGHT_GRADE,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,'.$course['TEACHER_ID'].' AS CP_TEACHER_ID,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM    gradebook_assignment_types t,gradebook_assignments a
                                         LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\''.$student['STUDENT_ID'].'\' AND g.COURSE_PERIOD_ID=\''.$course_period_id.'\')
                                              WHERE       a.ASSIGNMENT_TYPE_ID=t.ASSIGNMENT_TYPE_ID AND  (a.COURSE_PERIOD_ID=\''.$course_period_id.'\' OR a.COURSE_ID=\''.$course_id.'\')  AND t.COURSE_ID=\''.$course_id.'\' AND a.MARKING_PERIOD_ID=\''.UserMP().'\'';
-                            }	
-                        }
+            }
+        }
                         if($_REQUEST['exclude_notdue']=='Y')
 				$sql .= ' AND ((a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=DUE_DATE) OR g.POINTS IS NOT NULL)';
 			if($_REQUEST['exclude_ec']=='Y')
@@ -223,7 +235,7 @@
 			$grades_RET = DBGet(DBQuery($sql),array('ASSIGNED_DATE'=>'_removeSpaces','ASSIGN_TYP_WG'=>'_makeAssnWG','DUE_DATE'=>'_removeSpaces','TITLE'=>'_removeSpaces','POINTS'=>'_makeExtra','LETTER_GRADE'=>'_makeExtra','WEIGHT_GRADE'=>'_makeWtg'));
                         
 //			$sum_points = $sum_percent = 0;
-                        if(count($percent_weights))
+                        if(is_countable($percent_weights) && count($percent_weights))
                         {
                          
 			foreach($percent_weights as $assignment_type_id=>$percent)
@@ -241,7 +253,7 @@
                         if( $program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y')
                        {
                            $assign_typ_wg=array();
-                           $tot_weight_grade='';
+                           $tot_weight_grade=0;
 //                           $sum_points=0;
 
                            if(count($grades_RET))
@@ -267,17 +279,19 @@
                                foreach($assignment_type_count as $assign_key=>$value)
                                {
                                    $total_weightage=$total_weightage+$assign_typ_wg[$assign_key];
-                                   if($tot_weight_grade=='')
+                                   if($tot_weight_grade==0)
                                         $tot_weight_grade=round((round(($tot_weighted_percent[$assign_key]/$value),2)*$assign_typ_wg[$assign_key])/100,2);
                                    else
                                        $tot_weight_grade=$tot_weight_grade+(round((round(($tot_weighted_percent[$assign_key]/$value),2)*$assign_typ_wg[$assign_key])/100,2));
                                }
                                $tot_weight_grade=$tot_weight_grade/100;
                            }
                        }
-                            $tot_weight_grade=($tot_weight_grade/$total_weightage)*100;
-//                            $link['add']['html'] = array('TITLE'=>'<B>Total</B>','LETTER_GRADE'=>'( '.$total_stpoints.' / '.$total_asgnpoints.' ) '._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID'],"%").'%&nbsp;'._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID']),'WEIGHT_GRADE'=>$programconfig[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'?_makeLetterGrade($tot_weight_grade,"",$course['TEACHER_ID'],'%').'%&nbsp;'._makeLetterGrade($tot_weight_grade,$course_period_id,$course['TEACHER_ID']):'N/A');
-                            $link['add']['html'] = array('TITLE'=>'<font style="font-size:13;font-weight:bold;"><B>Total</B></font>','POINTS'=>'<font style="font-size:13;font-weight:bold;">'.$total_stpoints.' / '.$total_asgnpoints.'</font>','LETTER_GRADE'=>'<font style="font-size:13;font-weight:bold;">'._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID'],"%").'%&nbsp;'._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID']).'</font>','WEIGHT_GRADE'=>'<font style="font-size:13;font-weight:bold;">'.($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'?_makeLetterGrade($tot_weight_grade,"",$course['TEACHER_ID'],'%').'%&nbsp;'._makeLetterGrade($tot_weight_grade,$course_period_id,$course['TEACHER_ID']):'N/A').'</font>');
+                            //$tot_weight_grade=($tot_weight_grade/$total_weightage)*100;
+                            $tot_weight_grade=($total_weightage == 0 ? 0 : ($tot_weight_grade/$total_weightage)*100);
+                            // $link['add']['html'] = array('TITLE'=>'<B>Total</B>','LETTER_GRADE'=>'( '.$total_stpoints.' / '.$total_asgnpoints.' ) '._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID'],"%").'%&nbsp;'._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID']),'WEIGHT_GRADE'=>$programconfig[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'?_makeLetterGrade($tot_weight_grade,"",$course['TEACHER_ID'],'%').'%&nbsp;'._makeLetterGrade($tot_weight_grade,$course_period_id,$course['TEACHER_ID']):'N/A');
+                            $total_st_div_agn_points = ($total_asgnpoints == 0 ? 0 : $total_stpoints/$total_asgnpoints);
+                            $link['add']['html'] = array('TITLE'=>'<font style="font-size:13;font-weight:bold;"><B>Total</B></font>','POINTS'=>'<font style="font-size:13;font-weight:bold;">'.($total_stpoints == '' ? "0" : $total_stpoints).' / '.($total_asgnpoints == '' ? "0" : $total_asgnpoints).'</font>','LETTER_GRADE'=>'<font style="font-size:13;font-weight:bold;">'._makeLetterGrade($total_st_div_agn_points,$course_period_id,  $course['TEACHER_ID'],"%").'%&nbsp;'._makeLetterGrade($total_st_div_agn_points,$course_period_id,  $course['TEACHER_ID']).'</font>','WEIGHT_GRADE'=>'<font style="font-size:13;font-weight:bold;">'.($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'?_makeLetterGrade($tot_weight_grade,"",$course['TEACHER_ID'],'%').'%&nbsp;'._makeLetterGrade($tot_weight_grade,$course_period_id,$course['TEACHER_ID']):'N/A').'</font>');
                         
                         
                       
@@ -288,7 +302,7 @@
                          if($_REQUEST['list_type']=='total')
 			{
 			  echo '<table border=0  style=\"font-size:12px;\" >';
-                          echo '<tr><td> '._total.':</td><td>'._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,$course['TEACHER_ID'],"%").'%&nbsp;'._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,$course['TEACHER_ID']).'</td> </tr>';
+                          echo '<tr><td> '._total.':</td><td>'._makeLetterGrade($total_st_div_agn_points,$course_period_id,$course['TEACHER_ID'],"%").'%&nbsp;'._makeLetterGrade($total_st_div_agn_points,$course_period_id,$course['TEACHER_ID']).'</td> </tr>';
                           echo '<tr><td> '._totalWeightedGrade.':</td><td>'.($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'?_makeLetterGrade($tot_weight_grade,"",$course['TEACHER_ID'],'%').'%&nbsp;'._makeLetterGrade($tot_weight_grade,$course_period_id,$course['TEACHER_ID']):'N/A').'</td> </tr>';
                           echo '<tr><td></td></tr>';
                           echo '</table>';
@@ -324,16 +338,16 @@
         }
 	if($_REQUEST['search_modfunc']=='list') 
 	{
-		echo "<FORM id=F1 action=ForExport.php?modname=".strip_tags(trim($_REQUEST[modname]))."&modfunc=save&include_inactive=".strip_tags(trim($_REQUEST[include_inactive]))."&_openSIS_PDF=true method=POST target=_blank>";
+		echo "<FORM id=F1 action=ForExport.php?modname=".strip_tags(trim($_REQUEST[modname]))."&modfunc=save&include_inactive=".strip_tags(trim($_REQUEST['include_inactive']))."&_openSIS_PDF=true method=POST target=_blank>";
 		
 		$extra['extra_header_left'] = '<div class="checkbox">';
-		$extra['extra_header_left'] .= '<label class="checkbox-inline"><INPUT type=checkbox value=Y name=assigned_date>'._assignedDate.'</label>';
+		$extra['extra_header_left'] .= '<label class="checkbox-inline"><INPUT type=checkbox value=Y name=assigned_date id=assigned_date>'._assignedDate.'</label>';
 		$extra['extra_header_left'] .= '<label class="checkbox-inline"><INPUT type=checkbox value=Y name=exclude_ec checked>'._excludeUngradedECAssignments.'</label>';
-		$extra['extra_header_left'] .= '<label class="checkbox-inline"><INPUT type=checkbox value=Y name=due_date checked>'._dueDate.'</label>';
+		$extra['extra_header_left'] .= '<label class="checkbox-inline"><INPUT type=checkbox value=Y name=due_date id=due_date checked>'._dueDate.'</label>';
 		$extra['extra_header_left'] .= '<label class="checkbox-inline"><INPUT type=checkbox value=Y name=exclude_notdue>'._excludeUngradedAssignmentsNotDue.'</label>';
                 $extra['extra_header_left'] .= '</div><div class="radio">';
-                $extra['extra_header_left'] .= '<label class="radio-inline"><INPUT type=radio value=detail name=list_type checked=true>'._withAssignmentDetails.'</label>';
-                $extra['extra_header_left'] .= '<label class="radio-inline"><INPUT type=radio value=total name=list_type>'._totalsOnly.'</label>';
+                $extra['extra_header_left'] .= '<label class="radio-inline"><INPUT type=radio value=detail name=list_type onclick="assignmentDetails()" checked=true>'._withAssignmentDetails.'</label>';
+                $extra['extra_header_left'] .= '<label class="radio-inline"><INPUT type=radio value=total name=list_type onclick="totalsOnly()">'._totalsOnly.'</label>';
 		$extra['extra_header_left'] .= '</div>';
                 $extra['extra_header_left'] .= $extra['search'];
 		$extra['search'] = '';
@@ -377,14 +391,17 @@ function _makeExtra($value,$column)
 					$total_points[$THIS_RET['ASSIGNMENT_TYPE_ID']] += $THIS_RET['TOTAL_POINTS'];
 					$percent_weights[$THIS_RET['ASSIGNMENT_TYPE_ID']] = $THIS_RET['FINAL_GRADE_PERCENT'];
 				}
-				return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>'.(rtrim(rtrim($value,'0'),'.')+0).'</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>'.$THIS_RET['TOTAL_POINTS'].'</font></TD></TR></TABLE>';
+				//return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>'.(rtrim(rtrim($value,'0'),'.')+0).'</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>'.$THIS_RET['TOTAL_POINTS'].'</font></TD></TR></TABLE>';
+                $outputval = rtrim(rtrim($value,'0'),'.');
+                return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>'.($outputval == '' ? 0 : $outputval).'</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>'.$THIS_RET['TOTAL_POINTS'].'</font></TD></TR></TABLE>';
 			}
 			else
 				return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>Excluded</font></TD><TD></TD><TD></TD></TR></TABLE>';
 		else
 		{
 			$student_points[$THIS_RET['ASSIGNMENT_TYPE_ID']] += $value;
-			return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>'.(rtrim(rtrim($value,'0'),'.')+0).'</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>'.$THIS_RET['TOTAL_POINTS'].'</font></TD></TR></TABLE>';
+			//return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>'.(rtrim(rtrim($value,'0'),'.')+0).'</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>'.$THIS_RET['TOTAL_POINTS'].'</font></TD></TR></TABLE>';
+            return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>'.rtrim(rtrim($value,'0'),'.').'</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>'.$THIS_RET['TOTAL_POINTS'].'</font></TD></TR></TABLE>';
 		}
 	}
 	elseif($column=='LETTER_GRADE')
@@ -422,7 +439,7 @@ function _makeChooseCheckbox($value,$title)
         global $THIS_RET;
 //	return '<INPUT type=checkbox name=st_arr[] value='.$value.' checked>';
         
-        return "<input  class=fd name=unused_var[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . " type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID]);' />";
+        return "<input  class=fd name=unused_var[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET['STUDENT_ID'] . " type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID]);' />";
 
 
 }
@@ -439,4 +456,28 @@ function _makeWtg($value,$column)
 
 }
 
+
 ?>
+<script>
+    
+    function totalsOnly(){
+   var assigned_date = document.getElementById("assigned_date");
+   document.getElementById("assigned_date").disabled = true;
+   document.getElementById("due_date").disabled = true;
+   if(assigned_date.checked){
+document.getElementById("assigned_date").checked = false;
+   }
+   var due_date = document.getElementById("due_date");
+   if(due_date.checked){
+document.getElementById("due_date").checked = false;
+   }
+    }
+    
+    function assignmentDetails(){
+        document.getElementById("due_date").checked = true;
+        document.getElementById("due_date").disabled = false;
+        document.getElementById("assigned_date").disabled = false;
+        
+    }
+   </script>
+   

--- modules/grades/AnomalousGrades.php ---
@@ -29,20 +29,27 @@
 include('../../RedirectModulesInc.php');
 $tmp_REQUEST = $_REQUEST;
 unset($tmp_REQUEST['include_inactive']);
-echo "<FORM action=Modules.php?modname=".strip_tags(trim($_REQUEST[modname]))." method=POST>";
-DrawHeaderHome('<INPUT type=checkbox name=include_inactive value=Y'.($_REQUEST['include_inactive']=='Y'?" CHECKED onclick='document.location.href=\"".PreparePHP_SELF($tmp_REQUEST)."&include_inactive=\";'":" onclick='document.location.href=\"".PreparePHP_SELF($tmp_REQUEST)."&include_inactive=Y\";'").'>'._includeInactiveStudents.':');
+echo '<div class="panel panl-default">';
+echo '<div class="panel-heading clearfix">';
+echo "<FORM action=Modules.php?modname=".strip_tags(trim($_REQUEST[modname]))." method=POST class='m-t-10 m-b-0'>";
+DrawHeaderHome('<label class="checkbox-inline">&nbsp;<INPUT class=styled type=checkbox name=include_inactive value=Y'.($_REQUEST['include_inactive']=='Y'?" CHECKED onclick='document.location.href=\"".PreparePHP_SELF($tmp_REQUEST)."&include_inactive=\";'":" onclick='document.location.href=\"".PreparePHP_SELF($tmp_REQUEST)."&include_inactive=Y\";'").'>'._includeInactiveStudents.'</label>');
 echo '</FORM>';
+echo '</div>';
+echo '<hr class="no-margin">';
 $course_period_id = UserCoursePeriod();
 $course_id = DBGet(DBQuery('SELECT COURSE_ID FROM course_periods WHERE COURSE_PERIOD_ID=\''.$course_period_id.'\''));
 $course_id = $course_id[1]['COURSE_ID'];
 $max_allowed = Preferences('ANOMALOUS_MAX','Gradebook')/100;
 $full_year_mp=DBGet(DBQuery('SELECT MARKING_PERIOD_ID FROM school_years WHERE SCHOOL_ID='.UserSchool().' AND SYEAR='.UserSyear()));
 $full_year_mp=$full_year_mp[1]['MARKING_PERIOD_ID'];
 $extra['SELECT'] = ',ga.ASSIGNMENT_ID,gt.TITLE AS TYPE_TITLE,ga.TITLE,ga.POINTS AS TOTAL_POINTS,\'\' AS LETTER_GRADE';
-$extra['SELECT'] .= ',(SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID) AS POINTS';
-$extra['SELECT'] .= ',(SELECT COMMENT FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID) AS COMMENT';
+// $extra['SELECT'] .= ',(SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID) AS POINTS';
+// $extra['SELECT'] .= ',(SELECT COMMENT FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID) AS COMMENT';
+$extra['SELECT'] .= ',(SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND COURSE_PERIOD_ID=ga.COURSE_PERIOD_ID) AS POINTS';
+$extra['SELECT'] .= ',(SELECT COMMENT FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND COURSE_PERIOD_ID=ga.COURSE_PERIOD_ID) AS COMMENT';
 $extra['FROM'] = ',gradebook_assignments ga,gradebook_assignment_types gt';
-$extra['WHERE'] = 'AND ((SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID) IS NULL AND (ga.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=ga.ASSIGNED_DATE) AND (ga.DUE_DATE IS NULL OR CURRENT_DATE>=ga.DUE_DATE) OR (SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID)<0 OR (SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID)>ga.POINTS*'.$max_allowed.') AND ((ga.COURSE_ID=\''.$course_id.'\' AND ga.STAFF_ID=\''.User('STAFF_ID').'\') OR ga.COURSE_PERIOD_ID=\''.$course_period_id.'\') AND (ga.MARKING_PERIOD_ID=\''.UserMP().'\' OR ga.MARKING_PERIOD_ID=\''.$full_year_mp.'\') AND ga.COURSE_PERIOD_ID=\''.$course_period_id.'\' AND gt.ASSIGNMENT_TYPE_ID=ga.ASSIGNMENT_TYPE_ID';
+// $extra['WHERE'] = 'AND ((SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID) IS NULL AND (ga.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=ga.ASSIGNED_DATE) AND (ga.DUE_DATE IS NULL OR CURRENT_DATE>=ga.DUE_DATE) OR (SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID)<0 OR (SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID)>ga.POINTS*'.$max_allowed.') AND ((ga.COURSE_ID=\''.$course_id.'\' AND ga.STAFF_ID=\''.User('STAFF_ID').'\') OR ga.COURSE_PERIOD_ID=\''.$course_period_id.'\') AND (ga.MARKING_PERIOD_ID=\''.UserMP().'\' OR ga.MARKING_PERIOD_ID=\''.$full_year_mp.'\') AND ga.COURSE_PERIOD_ID=\''.$course_period_id.'\' AND gt.ASSIGNMENT_TYPE_ID=ga.ASSIGNMENT_TYPE_ID';
+$extra['WHERE'] = 'AND ((SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND COURSE_PERIOD_ID=ga.COURSE_PERIOD_ID) IS NULL AND (ga.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=ga.ASSIGNED_DATE) AND (ga.DUE_DATE IS NULL OR CURRENT_DATE>=ga.DUE_DATE) OR (SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND COURSE_PERIOD_ID=ga.COURSE_PERIOD_ID)<0 OR (SELECT POINTS FROM gradebook_grades WHERE STUDENT_ID=s.STUDENT_ID AND ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND COURSE_PERIOD_ID=ga.COURSE_PERIOD_ID)>ga.POINTS*'.$max_allowed.') AND ((ga.COURSE_ID=\''.$course_id.'\' AND ga.STAFF_ID=\''.User('STAFF_ID').'\') OR ga.COURSE_PERIOD_ID=\''.$course_period_id.'\') AND (ga.MARKING_PERIOD_ID=\''.UserMP().'\' OR ga.MARKING_PERIOD_ID=\''.$full_year_mp.'\') AND ga.COURSE_PERIOD_ID=\''.$course_period_id.'\' AND gt.ASSIGNMENT_TYPE_ID=ga.ASSIGNMENT_TYPE_ID';
 
 $extra['functions'] = array('POINTS'=>'_makePoints');
 $students_RET = GetStuList($extra);
@@ -56,19 +63,21 @@
 'TITLE'=>_assignment,
 'COMMENT'=>_comment,
 );
+
 ListOutput($students_RET,$columns,_anomalousGrade,_anomalousGrades,$link,array(),array('center'=>false,'save'=>false,'search'=>false));
+echo '</div>';
 
 function _makePoints($value,$column)
 {	global $THIS_RET;
 
 	if($value=='')
-		return '<FONT class=red>'._missing.'</FONT>';
+		return '<span class=text-danger>'._missing.'</span>';
 	elseif($value=='-1')
-		return '<FONT color=#00a000>'._excused.'</FONT>';
+		return '<span style="color:#00a000">'._excused.'</span>';
 	elseif($value<0)
-		return '<FONT class=red>'._negative.'!</FONT>';
+		return '<span class=text-danger>'._negative.'!</span>';
 	elseif($THIS_RET['TOTAL_POINTS']==0)
-		return '<FONT color=#0000ff>'._extraCredit.'</FONT>';
+		return '<span style="color:#0000ff">'._extraCredit.'</span>';
 	
         $rounding=DBGet(DBQuery('SELECT VALUE AS ROUNDING FROM program_user_config WHERE USER_ID=\''.User('STAFF_ID').'\' AND TITLE=\'ROUNDING\' AND PROGRAM=\'Gradebook\' AND VALUE LIKE \'%_'.UserCoursePeriod().'\''));
                         $points_r=($value/$THIS_RET['TOTAL_POINTS'])*100;

--- modules/grades/Assignments.php ---
@@ -26,548 +26,438 @@
 #
 #***************************************************************************************
 include('../../RedirectModulesInc.php');
-include_once("fckeditor/fckeditor.php") ;
-if($_REQUEST['assignment_type_id']=='new' && isset($_REQUEST['tables'])){
-    if(empty($_REQUEST['tables']['new']['TITLE'])){
-        echo '<div class="alert alert-danger">'._titleCannotBeBlank.'</div>';
+include_once("fckeditor/fckeditor.php");
+if ($_REQUEST['assignment_type_id'] == 'new' && isset($_REQUEST['tables'])) {
+    if (empty($_REQUEST['tables']['new']['TITLE'])) {
+        echo '<div class="alert alert-danger">' . _titleCannotBeBlank . '</div>';
     }
-
 }
-if(isset($_REQUEST['tables']['new']) && $_REQUEST['tables']['new']['TITLE']=='' && $_REQUEST['table']=='gradebook_assignment_types')
-{
+if (isset($_REQUEST['tables']['new']) && $_REQUEST['tables']['new']['TITLE'] == '' && $_REQUEST['table'] == 'gradebook_assignment_types') {
     unset($_REQUEST);
-    $_REQUEST['modname']='grades/Assignments.php';
-    $_REQUEST['assignment_type_id']='new';
-    
+    $_REQUEST['modname'] = 'grades/Assignments.php';
+    $_REQUEST['assignment_type_id'] = 'new';
 }
 $course_period_id = UserCoursePeriod();
-$course_id = DBGet(DBQuery('SELECT COURSE_ID FROM course_periods WHERE COURSE_PERIOD_ID=\''.UserCoursePeriod().'\''));
+$course_id = DBGet(DBQuery('SELECT COURSE_ID FROM course_periods WHERE COURSE_PERIOD_ID=\'' . UserCoursePeriod() . '\''));
 $course_id = $course_id[1]['COURSE_ID'];
 $_openSIS['allow_edit'] = true;
 unset($_SESSION['_REQUEST_vars']['assignment_type_id']);
 unset($_SESSION['_REQUEST_vars']['assignment_id']);
 
-$config_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=\''.User('STAFF_ID').'\' AND school_id=\''.UserSchool().'\' AND PROGRAM=\'Gradebook\' AND value like "%_'.UserCoursePeriod().'%"'),array(),array('TITLE'));
-if(count($config_RET))
-{
-	foreach($config_RET as $title=>$value)
-		 if(substr($title,0,3)=='SEM' || substr($title,0,2)=='FY' || substr($title,0,1)=='Q')
-            {
-                $value1= explode("_",$value[1]['VALUE']);
+$config_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=\'' . User('STAFF_ID') . '\' AND school_id=\'' . UserSchool() . '\' AND PROGRAM=\'Gradebook\' AND value like "%_' . UserCoursePeriod() . '%"'), array(), array('TITLE'));
+if (count($config_RET)) {
+    foreach ($config_RET as $title => $value)
+        if (substr($title, 0, 3) == 'SEM' || substr($title, 0, 2) == 'FY' || substr($title, 0, 1) == 'Q') {
+            $value1 = explode("_", $value[1]['VALUE']);
+            $programconfig[$title] = $value1[0];
+        } else {
+            $value1 = explode("_" . UserCoursePeriod(), $value[1]['VALUE']);
+            if (count($value1) > 1)
                 $programconfig[$title] = $value1[0];
-            }
- else {
-     $value1= explode("_".UserCoursePeriod(),$value[1]['VALUE']);
-     if(count($value1)>1)
-      $programconfig[$title] = $value1[0];
-     else
-        $programconfig[$title] = $value[1]['VALUE'];
-}
+            else
+                $programconfig[$title] = $value[1]['VALUE'];
+        }
 }
-if(clean_param($_REQUEST['day_tables'],PARAM_NOTAGS) && ($_POST['day_tables'] || $_REQUEST['ajax']))
-{
-	foreach($_REQUEST['day_tables'] as $id=>$values)
-	{
-		if($_REQUEST['day_tables'][$id]['DUE_DATE'] && $_REQUEST['month_tables'][$id]['DUE_DATE'] && $_REQUEST['year_tables'][$id]['DUE_DATE'])
-			$_REQUEST['tables'][$id]['DUE_DATE'] =date("Y-m-d",strtotime($_REQUEST['day_tables'][$id]['DUE_DATE'].'-'.$_REQUEST['month_tables'][$id]['DUE_DATE'].'-'.$_REQUEST['year_tables'][$id]['DUE_DATE']));
-		if($_REQUEST['day_tables'][$id]['ASSIGNED_DATE'] && $_REQUEST['month_tables'][$id]['ASSIGNED_DATE'] && $_REQUEST['year_tables'][$id]['ASSIGNED_DATE'])
-			$_REQUEST['tables'][$id]['ASSIGNED_DATE'] = date("Y-m-d",strtotime($_REQUEST['day_tables'][$id]['ASSIGNED_DATE'].'-'.$_REQUEST['month_tables'][$id]['ASSIGNED_DATE'].'-'.$_REQUEST['year_tables'][$id]['ASSIGNED_DATE']));
+if (clean_param($_REQUEST['day_tables'], PARAM_NOTAGS) && ($_POST['day_tables'] || $_REQUEST['ajax'])) {
+    foreach ($_REQUEST['day_tables'] as $id => $values) {
+        if ($_REQUEST['day_tables'][$id]['DUE_DATE'] && $_REQUEST['month_tables'][$id]['DUE_DATE'] && $_REQUEST['year_tables'][$id]['DUE_DATE'])
+            $_REQUEST['tables'][$id]['DUE_DATE'] = date("Y-m-d", strtotime($_REQUEST['day_tables'][$id]['DUE_DATE'] . '-' . $_REQUEST['month_tables'][$id]['DUE_DATE'] . '-' . $_REQUEST['year_tables'][$id]['DUE_DATE']));
+        if ($_REQUEST['day_tables'][$id]['ASSIGNED_DATE'] && $_REQUEST['month_tables'][$id]['ASSIGNED_DATE'] && $_REQUEST['year_tables'][$id]['ASSIGNED_DATE'])
+            $_REQUEST['tables'][$id]['ASSIGNED_DATE'] = date("Y-m-d", strtotime($_REQUEST['day_tables'][$id]['ASSIGNED_DATE'] . '-' . $_REQUEST['month_tables'][$id]['ASSIGNED_DATE'] . '-' . $_REQUEST['year_tables'][$id]['ASSIGNED_DATE']));
     }
     $_POST['tables'] = $_REQUEST['tables'];
 }
-if(clean_param($_REQUEST['tables'],PARAM_NOTAGS) && ($_POST['tables'] || $_REQUEST['ajax']))
-{
-        $redirect_now='n';
+if (clean_param($_REQUEST['tables'], PARAM_NOTAGS) && ($_POST['tables'] || $_REQUEST['ajax'])) {
+    $redirect_now = 'n';
     $table = trim($_REQUEST['table']);
-        $err= false;
-        $f=0;
+    $err = false;
+    $f = 0;
 
-	foreach($_REQUEST['tables'] as $id=>$columns)
-	{
-		if($table=='gradebook_assignment_types' && substr($programconfig['WEIGHT'],0,1)=='Y' && $columns['FINAL_GRADE_PERCENT']!='')
-        		$columns['FINAL_GRADE_PERCENT'] = par_rep('/[^0-9.]/','',clean_param($columns['FINAL_GRADE_PERCENT'],PARAM_PERCENT)) / 100;
+    foreach ($_REQUEST['tables'] as $id => $columns) {
+        if ($table == 'gradebook_assignment_types' && substr($programconfig['WEIGHT'], 0, 1) == 'Y' && $columns['FINAL_GRADE_PERCENT'] != '')
+            $columns['FINAL_GRADE_PERCENT'] = par_rep('/[^0-9.]/', '', clean_param($columns['FINAL_GRADE_PERCENT'], PARAM_PERCENT)) / 100;
 
-		if($id!='new')
-		{
+        if ($id != 'new') {
 
-                    $get_custom_ass=DBGet(DBQuery('SELECT ASSIGNMENT_TYPE_ID FROM gradebook_assignments WHERE assignment_id ='.$id));
+            $get_custom_ass = DBGet(DBQuery('SELECT ASSIGNMENT_TYPE_ID FROM gradebook_assignments WHERE assignment_id =' . $id));
 
-                    if($get_custom_ass[1]['ASSIGNMENT_TYPE_ID'])
-                    {
-                    $get_custom_cp=DBGet(DBQuery('SELECT COURSE_PERIOD_ID FROM gradebook_assignment_types WHERE assignment_type_id='.$get_custom_ass[1]['ASSIGNMENT_TYPE_ID']));
+            if ($get_custom_ass[1]['ASSIGNMENT_TYPE_ID']) {
+                $get_custom_cp = DBGet(DBQuery('SELECT COURSE_PERIOD_ID FROM gradebook_assignment_types WHERE assignment_type_id=' . $get_custom_ass[1]['ASSIGNMENT_TYPE_ID']));
 
-                    $get_custom_date=DBGet(DBQuery('SELECT BEGIN_DATE,END_DATE,MARKING_PERIOD_ID FROM course_details WHERE COURSE_PERIOD_ID=\''.$get_custom_cp[1]['COURSE_PERIOD_ID'].'\' '));
-                    $cud_sd=strtotime($get_custom_date[1]['BEGIN_DATE']);
-                    $cud_ed=strtotime($get_custom_date[1]['END_DATE']);
-                    
+                $get_custom_date = DBGet(DBQuery('SELECT BEGIN_DATE,END_DATE,MARKING_PERIOD_ID FROM course_details WHERE COURSE_PERIOD_ID=\'' . $get_custom_cp[1]['COURSE_PERIOD_ID'] . '\' '));
+                $cud_sd = strtotime($get_custom_date[1]['BEGIN_DATE']);
+                $cud_ed = strtotime($get_custom_date[1]['END_DATE']);
             }
-                    if(trim($columns['TITLE'])!="" || !isset($columns['TITLE']))
-                    {
-			if($columns['ASSIGNMENT_TYPE_ID'] && $columns['ASSIGNMENT_TYPE_ID']!=$_REQUEST['assignment_type_id'])
+            if (trim($columns['TITLE']) != "" || !isset($columns['TITLE'])) {
+                if ($columns['ASSIGNMENT_TYPE_ID'] && $columns['ASSIGNMENT_TYPE_ID'] != $_REQUEST['assignment_type_id'])
                     $_REQUEST['assignment_type_id'] = $columns['ASSIGNMENT_TYPE_ID'];
 
-			$sql = 'UPDATE '.$table.' SET ';
-			if(isset($_REQUEST['tables'][$id]['COURSE_ID']) && $_REQUEST['tables'][$id]['COURSE_ID']=='' && $table=='gradebook_assignments')
+                $sql = 'UPDATE ' . $table . ' SET ';
+                if (isset($_REQUEST['tables'][$id]['COURSE_ID']) && $_REQUEST['tables'][$id]['COURSE_ID'] == '' && $table == 'gradebook_assignments')
                     $columns['COURSE_ID'] = 'N';
-                        $err_ck=0;
-			foreach($columns as $column=>$value)
-			{
-                                if($column=='DUE_DATE' || $column=='ASSIGNED_DATE')
-                                {
-
-                                    $due_date_sql = DBGet(DBQuery('SELECT ASSIGNED_DATE,DUE_DATE FROM gradebook_assignments WHERE ASSIGNMENT_ID=\''.$_REQUEST[assignment_id].'\''));
-                                    if($columns['DUE_DATE'] && $columns['ASSIGNED_DATE'])
-                                    {   
-                                       if($get_custom_date[1]['MARKING_PERIOD_ID']==NULL) 
-                                               {
-                                                 if(strtotime($columns['DUE_DATE'])<$cud_sd || strtotime($columns['DUE_DATE'])>$cud_ed )
-                                                 {
-                                                     $msg='<Font color=red> '._dueDateMustBeWithinTheCurrentMarkingPeriodsStartDateAndEndDate.'.</FONT>';
-                                                     $err= true;
-                                                     $err_ck=1;
-                                                       break ;
-                                                 }
-                                                else if(strtotime($columns['DUE_DATE'])<strtotime($due_date_sql[1]['ASSIGNED_DATE']) && $due_date_sql[1]['ASSIGNED_DATE']!='')
-                                                    {
-                                                      $err= true;
+                $err_ck = 0;
+                foreach ($columns as $column => $value) {
+                    if ($column == 'DUE_DATE' || $column == 'ASSIGNED_DATE') {
+
+                        $due_date_sql = DBGet(DBQuery('SELECT ASSIGNED_DATE,DUE_DATE FROM gradebook_assignments WHERE ASSIGNMENT_ID=\'' . $_REQUEST['assignment_id'] . '\''));
+                        if ($columns['DUE_DATE'] && $columns['ASSIGNED_DATE']) {
+                            if ($get_custom_date[1]['MARKING_PERIOD_ID'] == NULL) {
+                                if (strtotime($columns['DUE_DATE']) < $cud_sd || strtotime($columns['DUE_DATE']) > $cud_ed) {
+                                    $msg = '<Font color=red> ' . _dueDateMustBeWithinTheCurrentMarkingPeriodsStartDateAndEndDate . '.</FONT>';
+                                    $err = true;
+                                    $err_ck = 1;
+                                    break;
+                                } else if (strtotime($columns['DUE_DATE']) < strtotime($due_date_sql[1]['ASSIGNED_DATE']) && $due_date_sql[1]['ASSIGNED_DATE'] != '') {
+                                    $err = true;
                                     continue;
-                                                    }
-                                                    elseif(strtotime($columns['DUE_DATE'])<strtotime($columns['ASSIGNED_DATE']))
-                                                     {
-                                                        $err= true;
+                                } elseif (strtotime($columns['DUE_DATE']) < strtotime($columns['ASSIGNED_DATE'])) {
+                                    $err = true;
                                     continue;
                                 }
-                                               }
-
-                                        else
-                                        { 
-                                        if(strtotime($columns['DUE_DATE'])<strtotime($due_date_sql[1]['ASSIGNED_DATE']) && $due_date_sql[1]['ASSIGNED_DATE']!='')
-                                        {
-                                            $err= true;
-                                            
+                            } else {
+                                if (strtotime($columns['DUE_DATE']) < strtotime($due_date_sql[1]['ASSIGNED_DATE']) && $due_date_sql[1]['ASSIGNED_DATE'] != '') {
+                                    $err = true;
+
                                     continue;
                                 }
 
-                                       if(strtotime($columns['DUE_DATE'])<strtotime($columns['ASSIGNED_DATE']))
-                                                     {
-                                                        $err= true;
+                                if (strtotime($columns['DUE_DATE']) < strtotime($columns['ASSIGNED_DATE'])) {
+                                    $err = true;
                                     continue;
                                 }
                             }
                         }
-                                    if($columns['DUE_DATE'] && $columns['ASSIGNED_DATE'])
-                                    {   
-
-
-                                        if($get_custom_date[1]['MARKING_PERIOD_ID']==NULL) 
-                                               {
-                                                 if(strtotime($columns['ASSIGNED_DATE'])<$cud_sd || strtotime($columns['ASSIGNED_DATE'])>$cud_ed )
-                                                 {
-                                                     $msg='<Font color=red> '._assignedDateMustBeWithinTheCurrentMarkingPeriodsStartDateAndEndDate.'.</FONT>';
-                                                     $err= true;
-                                                     $err_ck=1;
-                                                    break ;
-                                                 }
-                                                else  if(strtotime($due_date_sql[1]['DUE_DATE'])<strtotime($columns['ASSIGNED_DATE']) && $due_date_sql[1]['DUE_DATE']!='')
-                                                      {
-                                                        $err= true;
+                        if ($columns['DUE_DATE'] && $columns['ASSIGNED_DATE']) {
+
+
+                            if ($get_custom_date[1]['MARKING_PERIOD_ID'] == NULL) {
+                                if (strtotime($columns['ASSIGNED_DATE']) < $cud_sd || strtotime($columns['ASSIGNED_DATE']) > $cud_ed) {
+                                    $msg = '<Font color=red> ' . _assignedDateMustBeWithinTheCurrentMarkingPeriodsStartDateAndEndDate . '.</FONT>';
+                                    $err = true;
+                                    $err_ck = 1;
+                                    break;
+                                } else  if (strtotime($due_date_sql[1]['DUE_DATE']) < strtotime($columns['ASSIGNED_DATE']) && $due_date_sql[1]['DUE_DATE'] != '') {
+                                    $err = true;
                                     continue;
-                                                      }
-                                                     elseif(strtotime($columns['DUE_DATE'])<strtotime($columns['ASSIGNED_DATE']))
-                                                     {
-                                                        $err= true;
+                                } elseif (strtotime($columns['DUE_DATE']) < strtotime($columns['ASSIGNED_DATE'])) {
+                                    $err = true;
                                     continue;
                                 }
-                                               }
-                                        
-                                        else
-                                        { 
-                                        if(strtotime($due_date_sql[1]['DUE_DATE'])<strtotime($columns['ASSIGNED_DATE']) && $due_date_sql[1]['DUE_DATE']!='')
-                                        {
-                                            $err= true;
+                            } else {
+                                if (strtotime($due_date_sql[1]['DUE_DATE']) < strtotime($columns['ASSIGNED_DATE']) && $due_date_sql[1]['DUE_DATE'] != '') {
+                                    $err = true;
                                     continue;
-                                        }
-                                        elseif(strtotime($columns['DUE_DATE'])<strtotime($columns['ASSIGNED_DATE']))
-                                                     {
-                                                        $err= true;
+                                } elseif (strtotime($columns['DUE_DATE']) < strtotime($columns['ASSIGNED_DATE'])) {
+                                    $err = true;
                                     continue;
                                 }
                             }
                         }
                     }
 
-                    if((($column=='ASSIGNED_DATE'&& $value!='' && $due_date_sql[1]['ASSIGNED_DATE']!=$value) ||($column=='DUE_DATE'&& $value!='' && $due_date_sql[1]['DUE_DATE']!=$value) ) && $table=='gradebook_assignments')
-                    {
+                    if ((($column == 'ASSIGNED_DATE' && $value != '' && $due_date_sql[1]['ASSIGNED_DATE'] != $value) || ($column == 'DUE_DATE' && $value != '' && $due_date_sql[1]['DUE_DATE'] != $value)) && $table == 'gradebook_assignments') {
 
                         // $grade_assign_qr = DBGet(DBQuery('SELECT COUNT(STUDENT_ID) AS TOT FROM   student_report_card_grades WHERE  COURSE_PERIOD_ID='.$course_period_id.' and marking_period_id='.UserMP().''));
-                        $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   gradebook_grades WHERE ASSIGNMENT_ID = '".$_REQUEST['assignment_id']."'"));
-                        if($grade_assign_qr[1]['TOT']>0)
-                        {
-                            $f=1;
-                            ShowErrPhp(''._cannotModifyTheEndDateOrStartDateBecauseGradeHasBeenAssignedToTheStudentForThisAssignment.'.');
+                        $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   gradebook_grades WHERE ASSIGNMENT_ID = '" . $_REQUEST['assignment_id'] . "'"));
+                        if ($grade_assign_qr[1]['TOT'] > 0) {
+                            $f = 1;
+                            ShowErrPhp('' . _cannotModifyTheEndDateOrStartDateBecauseGradeHasBeenAssignedToTheStudentForThisAssignment . '.');
                         }
                     }
 
 
-                    if($column=='POINTS' && $value!='' && $table=='gradebook_assignments')
-                    {
+                    if ($column == 'POINTS' && $value != '' && $table == 'gradebook_assignments') {
 
                         // $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   student_report_card_grades WHERE COURSE_PERIOD_ID='$course_period_id'"));
-                        $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   gradebook_grades WHERE ASSIGNMENT_ID = '".$_REQUEST['assignment_id']."'"));
-                        if($grade_assign_qr[1]['TOT']>0)
-                        {
-                            $f=1;
-                            ShowErrPhp(''._cannotModifyThePointsBecauseGradeHasBeenAssignedToTheStudentForThisAssignment.'.');
+                        $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   gradebook_grades WHERE ASSIGNMENT_ID = '" . $_REQUEST['assignment_id'] . "'"));
+                        if ($grade_assign_qr[1]['TOT'] > 0) {
+                            $f = 1;
+                            ShowErrPhp('' . _cannotModifyThePointsBecauseGradeHasBeenAssignedToTheStudentForThisAssignment . '.');
                         }
                     }
-                                if($column=='DESCRIPTION' && $value!='' && $table=='gradebook_assignments')
-                                {
-                                    $value=htmlspecialchars($_SESSION['ASSIGNMENT_DESCRIPTION']);
-                                }
-                             
-                        else
-                                if($column=='COURSE_ID'  && $value=='Y' && $table=='gradebook_assignments')
-				{
+                    if ($column == 'DESCRIPTION' && $value != '' && $table == 'gradebook_assignments') {
+                        $value = htmlspecialchars($_SESSION['ASSIGNMENT_DESCRIPTION']);
+                    } else
+                                if ($column == 'COURSE_ID'  && $value == 'Y' && $table == 'gradebook_assignments') {
                         $value = $course_id;
                         $sql .= 'COURSE_PERIOD_ID=NULL,';
-				}
-				elseif($column=='COURSE_ID' && $table=='gradebook_assignments')
-				{
+                    } elseif ($column == 'COURSE_ID' && $table == 'gradebook_assignments') {
                         $column = 'COURSE_PERIOD_ID';
-                                        $get_assignment_course_period=DBGet(DBQuery('SELECT gat.COURSE_PERIOD_ID FROM gradebook_assignment_types gat,gradebook_assignments ga WHERE ga.ASSIGNMENT_TYPE_ID=gat.ASSIGNMENT_TYPE_ID AND ga.ASSIGNMENT_ID='.$id));
-                                        $value = ($get_assignment_course_period[1]['COURSE_PERIOD_ID']!=''?$get_assignment_course_period[1]['COURSE_PERIOD_ID']:$course_period_id);
+                        $get_assignment_course_period = DBGet(DBQuery('SELECT gat.COURSE_PERIOD_ID FROM gradebook_assignment_types gat,gradebook_assignments ga WHERE ga.ASSIGNMENT_TYPE_ID=gat.ASSIGNMENT_TYPE_ID AND ga.ASSIGNMENT_ID=' . $id));
+                        $value = ($get_assignment_course_period[1]['COURSE_PERIOD_ID'] != '' ? $get_assignment_course_period[1]['COURSE_PERIOD_ID'] : $course_period_id);
                         $sql .= 'COURSE_ID=NULL,';
-                                        if($get_assignment_course_period[1]['COURSE_PERIOD_ID']!=$course_period_id)
-                                        $redirect_now='y';
-                                        
+                        if ($get_assignment_course_period[1]['COURSE_PERIOD_ID'] != $course_period_id)
+                            $redirect_now = 'y';
                     }
-                                if($column!='DESCRIPTION' && $table=='gradebook_assignments')
-                                {
-                                 $value= paramlib_validation($column,$value);
+                    if ($column != 'DESCRIPTION' && $table == 'gradebook_assignments') {
+                        $value = paramlib_validation($column, $value);
                     }
 
-                                                $value=singleQuoteReplace('','',$value);
-				$sql .= $column.'=\''.$value.'\',';
+                    $value = singleQuoteReplace('', '', $value);
+                    $sql .= $column . '=\'' . $value . '\',';
                 }
-			$sql = substr($sql,0,-1) . ' WHERE '.substr($table,10,-1).'_ID=\''.$id.'\'';
+                $sql = substr($sql, 0, -1) . ' WHERE ' . substr($table, 10, -1) . '_ID=\'' . $id . '\'';
 
                 $go = true;
-		}
-		else
-		{
-                ShowErrPhp(''._titleCannotBeBlank.'');
+            } else {
+                ShowErrPhp('' . _titleCannotBeBlank . '');
             }
-		}
-		else
-		{
-			$sql = 'INSERT INTO '.$table.' ';
-
-			if($table=='gradebook_assignments')
-			{
-				if($columns['ASSIGNMENT_TYPE_ID'])
-				{
+        } else {
+            $sql = 'INSERT INTO ' . $table . ' ';
+
+            if ($table == 'gradebook_assignments') {
+                if ($columns['ASSIGNMENT_TYPE_ID']) {
                     $_REQUEST['assignment_type_id'] = $columns['ASSIGNMENT_TYPE_ID'];
                     unset($columns['ASSIGNMENT_TYPE_ID']);
                 }
 
 
-                $id = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'gradebook_assignments\''));
-                                $id[1]['ID']= $id[1]['AUTO_INCREMENT'];
-                $id = $id[1]['ID'];
+                // $id = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'gradebook_assignments\''));
+                // $id[1]['ID'] = $id[1]['AUTO_INCREMENT'];
+                // $id = $id[1]['ID'];
 
 
-                $_REQUEST['assignment_id'] = $id;
+                // $_REQUEST['assignment_id'] = $id;
 
-                                $check_cp_type=DBGet(DBQuery('SELECT MARKING_PERIOD_ID FROM course_periods WHERE COURSE_PERIOD_ID='.$course_period_id));
-                                if($check_cp_type[1]['MARKING_PERIOD_ID']!='')
-                                {
+                $check_cp_type = DBGet(DBQuery('SELECT MARKING_PERIOD_ID FROM course_periods WHERE COURSE_PERIOD_ID=' . $course_period_id));
+                if ($check_cp_type[1]['MARKING_PERIOD_ID'] != '') {
                     $fields = 'ASSIGNMENT_TYPE_ID,STAFF_ID,MARKING_PERIOD_ID,';
-				$values = "'".$_REQUEST['assignment_type_id']."','".User('STAFF_ID')."','".UserMP()."',";
-                                }
-                                else
-                                {
-                                $full_year_mp=DBGet(DBQuery('SELECT MARKING_PERIOD_ID FROM school_years WHERE SCHOOL_ID='.UserSchool().' AND SYEAR='.UserSyear()));
-                                $full_year_mp=$full_year_mp[1]['MARKING_PERIOD_ID'];
+                    $values = "'" . $_REQUEST['assignment_type_id'] . "','" . User('STAFF_ID') . "','" . UserMP() . "',";
+                } else {
+                    $full_year_mp = DBGet(DBQuery('SELECT MARKING_PERIOD_ID FROM school_years WHERE SCHOOL_ID=' . UserSchool() . ' AND SYEAR=' . UserSyear()));
+                    $full_year_mp = $full_year_mp[1]['MARKING_PERIOD_ID'];
                     $fields = 'ASSIGNMENT_TYPE_ID,STAFF_ID,MARKING_PERIOD_ID,';
-				$values = "'".$_REQUEST['assignment_type_id']."','".User('STAFF_ID')."','".$full_year_mp."',";
+                    $values = "'" . $_REQUEST['assignment_type_id'] . "','" . User('STAFF_ID') . "','" . $full_year_mp . "',";
                 }
-			}
-			elseif($table=='gradebook_assignment_types')
-			{
+            } elseif ($table == 'gradebook_assignment_types') {
 
-                $id = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'gradebook_assignment_types\''));
-                                $id[1]['ID']= $id[1]['AUTO_INCREMENT'];
-                $id = $id[1]['ID'];
+                // $id = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'gradebook_assignment_types\''));
+                // $id[1]['ID'] = $id[1]['AUTO_INCREMENT'];
+                // $id = $id[1]['ID'];
                 $fields = 'STAFF_ID,COURSE_ID,COURSE_PERIOD_ID,';
-				$values = '\''.User('STAFF_ID').'\',\''.$course_id.'\',\''.$course_period_id.'\',';
-                $_REQUEST['assignment_type_id'] = $id;
+                $values = '\'' . User('STAFF_ID') . '\',\'' . $course_id . '\',\'' . $course_period_id . '\',';
+                // $_REQUEST['assignment_type_id'] = $id;
             }
 
             $go = false;
 
-			if(!$columns['COURSE_ID'] && $_REQUEST['table']=='gradebook_assignments')
+            if (!$columns['COURSE_ID'] && $_REQUEST['table'] == 'gradebook_assignments')
                 $columns['COURSE_ID'] = 'N';
 
-			foreach($columns as $column=>$value)
-			{
+            foreach ($columns as $column => $value) {
 
-                                if($columns['DUE_DATE'] && $columns['ASSIGNED_DATE'])
-                                {   
-                                    if(strtotime($columns['DUE_DATE'])<strtotime($columns['ASSIGNED_DATE']))
-                                    {
-                                        $err= true;
+                if ($columns['DUE_DATE'] && $columns['ASSIGNED_DATE']) {
+                    if (strtotime($columns['DUE_DATE']) < strtotime($columns['ASSIGNED_DATE'])) {
+                        $err = true;
                         break 2;
                     }
                 }
-				if($column=='COURSE_ID')
-				{
+                if ($column == 'COURSE_ID') {
                     $column = 'COURSE_PERIOD_ID';
                     $value = $course_period_id;
                 }
-                                if($column=='DESCRIPTION' && $value!='')
-                                {
-                                    $value=htmlspecialchars($_SESSION['ASSIGNMENT_DESCRIPTION']);
+                if ($column == 'DESCRIPTION' && $value != '') {
+                    $value = htmlspecialchars($_SESSION['ASSIGNMENT_DESCRIPTION']);
                 }
 
-				if($value!='')
-				{
-                                    if($column!='DESCRIPTION' && $table=='gradebook_assignments')
-                                    {
-                                        $value= paramlib_validation($column,$value);
+                if ($value != '') {
+                    if ($column != 'DESCRIPTION' && $table == 'gradebook_assignments') {
+                        $value = paramlib_validation($column, $value);
                     }
-					$fields .= $column.',';
+                    $fields .= $column . ',';
+
+                    $values .= '\'' . singleQuoteReplace("'", "''", $value) . '\',';
 
-					$values .= '\''.singleQuoteReplace("'","''",$value).'\',';
-                        
                     $go = true;
                 }
             }
-			$sql .= '(' . substr($fields,0,-1) . ') values(' . substr($values,0,-1) . ')';
+            $sql .= '(' . substr($fields, 0, -1) . ') values(' . substr($values, 0, -1) . ')';
         }
 
 
-                if((isset($columns['DUE_DATE']) || isset($columns['ASSIGNED_DATE'])) && $err==false)
-                {
-                    $get_custom_cp=DBGet(DBQuery('SELECT COURSE_PERIOD_ID FROM gradebook_assignment_types WHERE assignment_type_id='.$_REQUEST['assignment_type_id']));
+        if ((isset($columns['DUE_DATE']) || isset($columns['ASSIGNED_DATE'])) && $err == false) {
+            $get_custom_cp = DBGet(DBQuery('SELECT COURSE_PERIOD_ID FROM gradebook_assignment_types WHERE assignment_type_id=' . $_REQUEST['assignment_type_id']));
 
-                    $get_custom_date=DBGet(DBQuery('SELECT BEGIN_DATE,END_DATE,MARKING_PERIOD_ID FROM course_details WHERE COURSE_PERIOD_ID=\''.$get_custom_cp[1]['COURSE_PERIOD_ID'].'\' '));
-                    $cud_sd=strtotime($get_custom_date[1]['BEGIN_DATE']);
-                    $cud_ed=strtotime($get_custom_date[1]['END_DATE']);
+            $get_custom_date = DBGet(DBQuery('SELECT BEGIN_DATE,END_DATE,MARKING_PERIOD_ID FROM course_details WHERE COURSE_PERIOD_ID=\'' . $get_custom_cp[1]['COURSE_PERIOD_ID'] . '\' '));
+            $cud_sd = strtotime($get_custom_date[1]['BEGIN_DATE']);
+            $cud_ed = strtotime($get_custom_date[1]['END_DATE']);
 
-                    $get_dates=DBGet(DBQuery('SELECT START_DATE,END_DATE FROM marking_periods WHERE marking_period_id=\''.UserMP().'\' '));
-                    $s_d=strtotime($get_dates[1]['START_DATE']);
-                    $e_d=strtotime($get_dates[1]['END_DATE']);
+            $get_dates = DBGet(DBQuery('SELECT START_DATE,END_DATE FROM marking_periods WHERE marking_period_id=\'' . UserMP() . '\' '));
+            $s_d = strtotime($get_dates[1]['START_DATE']);
+            $e_d = strtotime($get_dates[1]['END_DATE']);
 
-                    if(isset($columns['DUE_DATE']) && isset($columns['ASSIGNED_DATE']))
-                    {
+            if (isset($columns['DUE_DATE']) && isset($columns['ASSIGNED_DATE'])) {
 
-                       if($get_custom_date[1]['MARKING_PERIOD_ID']==NULL) 
-                       {
+                if ($get_custom_date[1]['MARKING_PERIOD_ID'] == NULL) {
 
 
-                         if(strtotime($columns['DUE_DATE'])>$cud_sd && strtotime($columns['DUE_DATE'])<=$cud_ed && strtotime($columns['ASSIGNED_DATE'])>=$cud_sd && strtotime($columns['ASSIGNED_DATE'])<$cud_ed)
-                            $go= true;
-                        else
-                        {
-                            $msg='<Font color=red>'._assignedDateAndDueDateMustBeWithinCoursePeriodsStartDateAndEndDate.'.</FONT>';
-                            $go= false;
+                    if (strtotime($columns['DUE_DATE']) > $cud_sd && strtotime($columns['DUE_DATE']) <= $cud_ed && strtotime($columns['ASSIGNED_DATE']) >= $cud_sd && strtotime($columns['ASSIGNED_DATE']) < $cud_ed)
+                        $go = true;
+                    else {
+                        $msg = '<Font color=red>' . _assignedDateAndDueDateMustBeWithinCoursePeriodsStartDateAndEndDate . '.</FONT>';
+                        $go = false;
                         $_REQUEST['assignment_id'] = 'new';
                     }
+                } else {
+
 
-                       }
-
-                        
-                        else
-                        {
-                           
-                            
-                        if(strtotime($columns['DUE_DATE'])>=$s_d && strtotime($columns['DUE_DATE'])<=$e_d && strtotime($columns['ASSIGNED_DATE'])>=$s_d && strtotime($columns['ASSIGNED_DATE'])<$e_d)
-                            $go= true;
-                        else
-                        {
-                            $msg='<Font color=red>'._assignedDateAndDueDateMustBeWithinTheCurrentMarkingPeriodsStartDateAndEndDate.'.</FONT>';
-                            $go= false;
+                    if (strtotime($columns['DUE_DATE']) >= $s_d && strtotime($columns['DUE_DATE']) <= $e_d && strtotime($columns['ASSIGNED_DATE']) >= $s_d && strtotime($columns['ASSIGNED_DATE']) < $e_d)
+                        $go = true;
+                    else {
+                        $msg = '<Font color=red>' . _assignedDateAndDueDateMustBeWithinTheCurrentMarkingPeriodsStartDateAndEndDate . '.</FONT>';
+                        $go = false;
                         $_REQUEST['assignment_id'] = 'new';
                     }
                 }
             }
-                    if(isset($columns['DUE_DATE']) && !isset($columns['ASSIGNED_DATE']))
-                    {
-
-                        if($get_custom_date[1]['MARKING_PERIOD_ID']==NULL) 
-                       {
-
-                         if(strtotime($columns['DUE_DATE'])>$cud_sd && strtotime($columns['DUE_DATE'])<=$cud_ed)
-                            $go= true;
-                        else
-                        {
-                            $msg='<Font color=red>'._dueDateMustBeWithinTheCoursePeriodStartDateAndEndDate.'.</FONT>';
-                            $go= false;
+            if (isset($columns['DUE_DATE']) && !isset($columns['ASSIGNED_DATE'])) {
+
+                if ($get_custom_date[1]['MARKING_PERIOD_ID'] == NULL) {
+
+                    if (strtotime($columns['DUE_DATE']) > $cud_sd && strtotime($columns['DUE_DATE']) <= $cud_ed)
+                        $go = true;
+                    else {
+                        $msg = '<Font color=red>' . _dueDateMustBeWithinTheCoursePeriodStartDateAndEndDate . '.</FONT>';
+                        $go = false;
                         $_REQUEST['assignment_id'] = 'new';
                     }
-                          
-                       }
-                        
-                        else
-                        {
-                        if(strtotime($columns['DUE_DATE'])>$s_d && strtotime($columns['DUE_DATE'])<=$e_d)
-                            $go= true;
-                        else
-                        {
-                            $msg='<Font color=red>'._dueDateMustBeWithinTheCurrentMarkingPeriodStartDateAndEndDate.'.</FONT>';
-                            $go= false;
+                } else {
+                    if (strtotime($columns['DUE_DATE']) > $s_d && strtotime($columns['DUE_DATE']) <= $e_d)
+                        $go = true;
+                    else {
+                        $msg = '<Font color=red>' . _dueDateMustBeWithinTheCurrentMarkingPeriodStartDateAndEndDate . '.</FONT>';
+                        $go = false;
                         $_REQUEST['assignment_id'] = 'new';
                     }
                 }
-                        
             }
-                    if(!isset($columns['DUE_DATE']) && isset($columns['ASSIGNED_DATE']))
-                    {
-                         if($get_custom_date[1]['MARKING_PERIOD_ID']==NULL) 
-                       {
-
-                         if(strtotime($columns['ASSIGNED_DATE'])>=$cud_sd && strtotime($columns['ASSIGNED_DATE'])<$cud_ed)
-                            $go= true;
-                        else
-                        {
-                            $msg='<Font color=red>'._assignedDateAndDueDateMustBeWithinTheCurrentMarkingPeriodStartDateAndEndDate.'.</FONT>';
-                            $go= false;
+            if (!isset($columns['DUE_DATE']) && isset($columns['ASSIGNED_DATE'])) {
+                if ($get_custom_date[1]['MARKING_PERIOD_ID'] == NULL) {
+
+                    if (strtotime($columns['ASSIGNED_DATE']) >= $cud_sd && strtotime($columns['ASSIGNED_DATE']) < $cud_ed)
+                        $go = true;
+                    else {
+                        $msg = '<Font color=red>' . _assignedDateAndDueDateMustBeWithinTheCurrentMarkingPeriodStartDateAndEndDate . '.</FONT>';
+                        $go = false;
                         $_REQUEST['assignment_id'] = 'new';
                     }
-                          
-                       }
-                        
-                        else
-                        {
-                        if(strtotime($columns['ASSIGNED_DATE'])>=$s_d && strtotime($columns['ASSIGNED_DATE'])<$e_d)
-                            $go= true;
-                        else
-                        {
-                            $msg='<Font color=red>'._assignedDateMustBeWithinTheCurrentMarkingPeriodStartDateAndEndDate.'.</FONT>';
-                            $go= false;
+                } else {
+                    if (strtotime($columns['ASSIGNED_DATE']) >= $s_d && strtotime($columns['ASSIGNED_DATE']) < $e_d)
+                        $go = true;
+                    else {
+                        $msg = '<Font color=red>' . _assignedDateMustBeWithinTheCurrentMarkingPeriodStartDateAndEndDate . '.</FONT>';
+                        $go = false;
                         $_REQUEST['assignment_id'] = 'new';
                     }
                 }
             }
         }
 
-           if($go && $f==0){
-                    if($_REQUEST['assignment_id']!='')
-                    {
+        if ($go && $f == 0) {
+            if ($_REQUEST['assignment_id'] != '') {
                 DBQuery_assignment($sql);
-                         if($_REQUEST['type_id']=='new' && $_REQUEST['table']=='gradebook_assignments' && $_REQUEST['tables']['new']['COURSE_ID']=='Y')
-                         {
-                            $assign_tyid=DBGet(DBQuery('SELECT ASSIGNMENT_TYPE_ID FROM gradebook_assignments WHERE ASSIGNMENT_ID='.$_REQUEST['assignment_id']));
-                            $assign_tyid=$assign_tyid[1]['ASSIGNMENT_TYPE_ID'];
-                            DBQuery('UPDATE gradebook_assignments SET COURSE_ID='.UserCourse().' WHERE ASSIGNMENT_ID='.$_REQUEST['assignment_id']);
-//                            $get_all_cps=DBGet(DBQuery("SELECT COURSE_PERIOD_ID FROM course_periods  WHERE SYEAR='".UserSyear()."' AND SCHOOL_ID='".UserSchool()."' AND COURSE_ID='".UserCourse()."' AND (TEACHER_ID='".User('STAFF_ID')."' OR SECONDARY_TEACHER_ID='".User('STAFF_ID')."') AND (MARKING_PERIOD_ID IN (".GetAllMP($allMP,UserMP()).") OR (MARKING_PERIOD_ID IS NULL)) AND COURSE_PERIOD_ID!=".UserCoursePeriod()." group by (COURSE_PERIOD_ID)"));
-//                            foreach($get_all_cps as $gci=>$gcd)
-//                            {
-//                                $assign_type_newid = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'gradebook_assignment_types\''));
-//                                $assign_type_newid= $assign_type_newid[1]['AUTO_INCREMENT'];
-//                                DBQuery('INSERT INTO  gradebook_assignment_types (ASSIGNMENT_TYPE_ID,STAFF_ID,COURSE_ID,TITLE,FINAL_GRADE_PERCENT,COURSE_PERIOD_ID) (SELECT '.$assign_type_newid.',STAFF_ID,COURSE_ID,TITLE,FINAL_GRADE_PERCENT,'.$gcd['COURSE_PERIOD_ID'].' FROM gradebook_assignment_types WHERE ASSIGNMENT_TYPE_ID='.$assign_tyid.')');
-//                                DBQuery('INSERT INTO  gradebook_assignments (STAFF_ID,MARKING_PERIOD_ID,COURSE_PERIOD_ID,COURSE_ID,ASSIGNMENT_TYPE_ID,TITLE,ASSIGNED_DATE,DUE_DATE,POINTS,DESCRIPTION,UNGRADED) (SELECT STAFF_ID,MARKING_PERIOD_ID,'.$gcd['COURSE_PERIOD_ID'].',COURSE_ID,'.$assign_type_newid.',TITLE,ASSIGNED_DATE,DUE_DATE,POINTS,DESCRIPTION,UNGRADED FROM gradebook_assignments WHERE ASSIGNMENT_ID='.$_REQUEST['assignment_id'].')');
-//                                
-//                            }
-                    }
+                if ($id == 'new' && $table == 'gradebook_assignments') {
+                    $_REQUEST['assignment_id'] = mysqli_insert_id($connection);
                 }
-                    else
-                        DBQuery ($sql);
-//            DBQuery('UPDATE gradebook_assignments SET UNGRADED=2 WHERE ASSIGNMENT_ID IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NULL OR POINTS=\'\') OR ASSIGNMENT_ID NOT IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NOT NULL OR POINTS!=\'\')');
+                if ($_REQUEST['type_id'] == 'new' && $_REQUEST['table'] == 'gradebook_assignments' && $_REQUEST['tables']['new']['COURSE_ID'] == 'Y') {
+                    $assign_tyid = DBGet(DBQuery('SELECT ASSIGNMENT_TYPE_ID FROM gradebook_assignments WHERE ASSIGNMENT_ID=' . $_REQUEST['assignment_id']));
+                    $assign_tyid = $assign_tyid[1]['ASSIGNMENT_TYPE_ID'];
+                    DBQuery('UPDATE gradebook_assignments SET COURSE_ID=' . UserCourse() . ' WHERE ASSIGNMENT_ID=' . $_REQUEST['assignment_id']);
+                    //                            $get_all_cps=DBGet(DBQuery("SELECT COURSE_PERIOD_ID FROM course_periods  WHERE SYEAR='".UserSyear()."' AND SCHOOL_ID='".UserSchool()."' AND COURSE_ID='".UserCourse()."' AND (TEACHER_ID='".User('STAFF_ID')."' OR SECONDARY_TEACHER_ID='".User('STAFF_ID')."') AND (MARKING_PERIOD_ID IN (".GetAllMP($allMP,UserMP()).") OR (MARKING_PERIOD_ID IS NULL)) AND COURSE_PERIOD_ID!=".UserCoursePeriod()." group by (COURSE_PERIOD_ID)"));
+                    //                            foreach($get_all_cps as $gci=>$gcd)
+                    //                            {
+                    //                                $assign_type_newid = DBGet(DBQuery('SHOW TABLE STATUS LIKE \'gradebook_assignment_types\''));
+                    //                                $assign_type_newid= $assign_type_newid[1]['AUTO_INCREMENT'];
+                    //                                DBQuery('INSERT INTO  gradebook_assignment_types (ASSIGNMENT_TYPE_ID,STAFF_ID,COURSE_ID,TITLE,FINAL_GRADE_PERCENT,COURSE_PERIOD_ID) (SELECT '.$assign_type_newid.',STAFF_ID,COURSE_ID,TITLE,FINAL_GRADE_PERCENT,'.$gcd['COURSE_PERIOD_ID'].' FROM gradebook_assignment_types WHERE ASSIGNMENT_TYPE_ID='.$assign_tyid.')');
+                    //                                DBQuery('INSERT INTO  gradebook_assignments (STAFF_ID,MARKING_PERIOD_ID,COURSE_PERIOD_ID,COURSE_ID,ASSIGNMENT_TYPE_ID,TITLE,ASSIGNED_DATE,DUE_DATE,POINTS,DESCRIPTION,UNGRADED) (SELECT STAFF_ID,MARKING_PERIOD_ID,'.$gcd['COURSE_PERIOD_ID'].',COURSE_ID,'.$assign_type_newid.',TITLE,ASSIGNED_DATE,DUE_DATE,POINTS,DESCRIPTION,UNGRADED FROM gradebook_assignments WHERE ASSIGNMENT_ID='.$_REQUEST['assignment_id'].')');
+                    //                                
+                    //                            }
+                }
+            } else {
+                DBQuery($sql);
+                if ($id == 'new' && $table == 'gradebook_assignment_types') {
+                    $_REQUEST['assignment_type_id'] = mysqli_insert_id($connection);
+                }
+            }
+            //            DBQuery('UPDATE gradebook_assignments SET UNGRADED=2 WHERE ASSIGNMENT_ID IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NULL OR POINTS=\'\') OR ASSIGNMENT_ID NOT IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NOT NULL OR POINTS!=\'\')');
         }
-                if($msg)
-                {
-                    echo '<div class="alert alert-danger no-border">'.$msg.'</div>';
+        if ($msg) {
+            echo '<div class="alert alert-danger no-border">' . $msg . '</div>';
         }
     }
     unset($_REQUEST['tables']);
     unset($_SESSION['ASSIGNMENT_DESCRIPTION']);
     $_REQUEST['ajax'] = true;
     unset($_SESSION['_REQUEST_vars']['tables']);
-        if($redirect_now=='y')
+    if ($redirect_now == 'y')
         echo '<script type="text/javascript">check_content("Ajax.php?modname=grades/Assignments.php");</script>';
-        
 }
 
-if($err)
-{
+if ($err) {
 
     unset($_REQUEST['tables']);
     $_REQUEST['assignment_id'] = 'new';
     $_REQUEST['ajax'] = true;
-     if($err_ck!=1)
-    {
-        echo '<Font color=red>'._dueDateMustBeGreaterThanAssignedDate.'.</FONT>';
+    if ($err_ck != 1) {
+        echo '<Font color=red>' . _dueDateMustBeGreaterThanAssignedDate . '.</FONT>';
     }
 }
 
-if(clean_param($_REQUEST['modfunc'],PARAM_ALPHAMOD)=='delete')
-{  
-
-	if($_REQUEST['assignment_type_id'] || $_REQUEST['assignment_id'])
-        {
-         if($_REQUEST['assignment_type_id'] && !$_REQUEST['assignment_id'])
-        {   
-         $table =_assignmentType;
-       
-        //   $data=DBGet(DBQuery('select id from student_report_card_grades where course_period_id=(select course_period_id from  gradebook_assignment_types where assignment_type_id='.$_REQUEST['assignment_type_id'].')'));
-        
-        $data=DBGet(DBQuery('select id from student_report_card_grades where course_period_id=(select course_period_id from  gradebook_assignments where assignment_type_id='.$_REQUEST['assignment_type_id'].')'));
-        
-         if(count($data)>0)
-             UnableDeletePromptMod(''._gradebookAssignmentTypeCannotBeDeletedBecauseAssignmentsAreCreatedInThisAssignmentType.'.','','modfunc=&assignment_type_id='.$_REQUEST['assignment_type_id']);
-        else
-        {
-         if(DeletePromptAssignment(ucfirst($table), $_REQUEST['assignment_type_id']))
-            {
-
-            if($_REQUEST['assignment_type_id']!=0 && $_REQUEST['assignment_type_id']!='')
-            {
-            $assignment_ids_to_del=DBGet(DBQuery('SELECT * FROM gradebook_assignments WHERE assignment_type_id='.$_REQUEST['assignment_type_id']));
-            foreach($assignment_ids_to_del as $ai_del)
-            {
-            DBQuery('DELETE FROM gradebook_grades WHERE assignment_id=\''.$ai_del['ASSIGNMENT_ID'].'\'');
-            }
-            } 
-             
-             
-            DBQuery('DELETE FROM gradebook_assignment_types  WHERE assignment_type_id=\''.$_REQUEST['assignment_type_id'].'\'');
-            DBQuery('DELETE FROM gradebook_assignments WHERE assignment_type_id=\''.$_REQUEST['assignment_type_id'].'\'');
+if (clean_param($_REQUEST['modfunc'], PARAM_ALPHAMOD) == 'delete') {
+
+    if ($_REQUEST['assignment_type_id'] || $_REQUEST['assignment_id']) {
+        if ($_REQUEST['assignment_type_id'] && !$_REQUEST['assignment_id']) {
+            $table = _assignmentType;
+
+            //   $data=DBGet(DBQuery('select id from student_report_card_grades where course_period_id=(select course_period_id from  gradebook_assignment_types where assignment_type_id='.$_REQUEST['assignment_type_id'].')'));
+
+            $data = DBGet(DBQuery('select id from student_report_card_grades where course_period_id=(select course_period_id from  gradebook_assignments where assignment_type_id=' . $_REQUEST['assignment_type_id'] . ')'));
+
+            if (count($data) > 0)
+                UnableDeletePromptMod('' . _gradebookAssignmentTypeCannotBeDeletedBecauseAssignmentsAreCreatedInThisAssignmentType . '.', '', 'modfunc=&assignment_type_id=' . $_REQUEST['assignment_type_id']);
+            else {
+                if (DeletePromptAssignment(ucfirst($table), $_REQUEST['assignment_type_id'])) {
+
+                    if ($_REQUEST['assignment_type_id'] != 0 && $_REQUEST['assignment_type_id'] != '') {
+                        $assignment_ids_to_del = DBGet(DBQuery('SELECT * FROM gradebook_assignments WHERE assignment_type_id=' . $_REQUEST['assignment_type_id']));
+                        foreach ($assignment_ids_to_del as $ai_del) {
+                            DBQuery('DELETE FROM gradebook_grades WHERE assignment_id=\'' . $ai_del['ASSIGNMENT_ID'] . '\'');
+                        }
+                    }
+
+
+                    DBQuery('DELETE FROM gradebook_assignment_types  WHERE assignment_type_id=\'' . $_REQUEST['assignment_type_id'] . '\'');
+                    DBQuery('DELETE FROM gradebook_assignments WHERE assignment_type_id=\'' . $_REQUEST['assignment_type_id'] . '\'');
 
                     unset($_REQUEST['assignment_type_id']);
                     unset($_REQUEST['modfunc']);
                 }
             }
-        }
-        else
-        {
+        } else {
             $table = 'assignment';
 
-        $has_assigned=0;
-       $mp_id=  UserMP().",'E".UserMP()."'";
+            $has_assigned = 0;
+            $mp_id =  UserMP() . ",'E" . UserMP() . "'";
 
-     $stmt = DBGet(DBQuery("SELECT id  AS TOTAL_ASSIGNED from student_report_card_grades WHERE course_period_id=".UserCoursePeriod()." and marking_period_id in($mp_id)"));
-     $has_assigned=$stmt[1]['TOTAL_ASSIGNED'];
-		if($has_assigned>0){
-                    UnableDeletePromptMod(''._gradebookAssignmentCannotBeDeletedBecauseGradeWasGivenForThisAssignment.'.','','modfunc=&assignment_type_id='.$_REQUEST['assignment_type_id'].'&assignment_id='.$_REQUEST['assignment_id']);
-		}else{
-		if(DeletePromptAssignment(ucfirst($table), $_REQUEST['assignment_type_id']))
-			{
+            $stmt = DBGet(DBQuery("SELECT id  AS TOTAL_ASSIGNED from student_report_card_grades WHERE course_period_id=" . UserCoursePeriod() . " and marking_period_id in($mp_id)"));
+            $has_assigned = $stmt[1]['TOTAL_ASSIGNED'];
+            if ($has_assigned > 0) {
+                UnableDeletePromptMod('' . _gradebookAssignmentCannotBeDeletedBecauseGradeWasGivenForThisAssignment . '.', '', 'modfunc=&assignment_type_id=' . $_REQUEST['assignment_type_id'] . '&assignment_id=' . $_REQUEST['assignment_id']);
+            } else {
+                if (DeletePromptAssignment(ucfirst($table), $_REQUEST['assignment_type_id'])) {
 
-                        DBQuery('DELETE FROM gradebook_grades WHERE assignment_id=\''.$_REQUEST['assignment_id'].'\'');
-                        DBQuery('DELETE FROM gradebook_assignments WHERE assignment_id=\''.$_REQUEST['assignment_id'].'\'');
+                    DBQuery('DELETE FROM gradebook_grades WHERE assignment_id=\'' . $_REQUEST['assignment_id'] . '\'');
+                    DBQuery('DELETE FROM gradebook_assignments WHERE assignment_id=\'' . $_REQUEST['assignment_id'] . '\'');
                     unset($_REQUEST['assignment_id']);
                     unset($_REQUEST['modfunc']);
                 }
-                        
             }
         }
     }
     unset($_SESSION['_REQUEST_vars']['modfunc']);
 }
 
-if(!$_REQUEST['modfunc'] && $course_id)
-{
+if (!$_REQUEST['modfunc'] && $course_id) {
 
     ## ASSIGNMENT TYPES
     // $sql = ' SELECT ASSIGNMENT_TYPE_ID,TITLE 
@@ -582,79 +472,71 @@
 
     $sql = ' SELECT ASSIGNMENT_TYPE_ID,TITLE 
                  FROM (
-                    ( select gat.ASSIGNMENT_TYPE_ID,gat.TITLE  FROM gradebook_assignment_types gat where gat.COURSE_PERIOD_ID=\''.$course_period_id.'\' )
+                    ( select gat.ASSIGNMENT_TYPE_ID,gat.TITLE  FROM gradebook_assignment_types gat where gat.COURSE_PERIOD_ID=\'' . $course_period_id . '\' )
                   UNION  
                    (SELECT gat.ASSIGNMENT_TYPE_ID as ASSIGNMENT_TYPE_ID,concat(gat.TITLE,\' (\',TRIM(cp.title),\')\') as TITLE FROM gradebook_assignment_types gat , gradebook_assignments ga, course_periods cp
                     where cp.course_period_id =gat.course_period_id and gat.ASSIGNMENT_TYPE_ID=ga.ASSIGNMENT_TYPE_ID AND ga.COURSE_ID IS NOT NULL 
-                    AND ga.COURSE_ID=\''.UserCourse().'\' AND ga.STAFF_ID=\''.UserID().'\' ) 
+                    AND ga.COURSE_ID=\'' . UserCourse() . '\' AND ga.STAFF_ID=\'' . UserID() . '\' ) 
                   )as t
                   GROUP BY ASSIGNMENT_TYPE_ID';
 
     $QI = DBQuery($sql);
-        
+
     $types_RET = DBGet($QI);
-//        $counter_i=count($types_RET);
-//        $others=DBGet(DBQuery('SELECT * FROM gradebook_assignments WHERE COURSE_ID='.UserCourse().' AND COURSE_PERIOD_ID!='.UserCoursePeriod()));
-//        foreach($others as $o)
-//        {
-//            $counter_i++;
-//            $gat=DBGet(DBQuery('SELECT * FROM gradebook_assignment_types WHERE ASSIGNMENT_TYPE_ID='.$o['ASSIGNMENT_TYPE_ID']));
-//            $types_RET[$counter_i]['ASSIGNMENT_TYPE_ID']=$gat[1]['ASSIGNMENT_TYPE_ID'];
-//            $types_RET[$counter_i]['TITLE']=$gat[1]['TITLE'];
-//        }
-	if($_REQUEST['assignment_id']!='new' && $_REQUEST['assignment_type_id']!='new')
-        {
-		$delete_button = "<INPUT type=button value="._delete." class='btn btn-danger' onClick='javascript:window.location=\"Modules.php?modname=$_REQUEST[modname]&modfunc=delete&assignment_type_id=$_REQUEST[assignment_type_id]&assignment_id=$_REQUEST[assignment_id]\"'> &nbsp;";
+    //        $counter_i=count($types_RET);
+    //        $others=DBGet(DBQuery('SELECT * FROM gradebook_assignments WHERE COURSE_ID='.UserCourse().' AND COURSE_PERIOD_ID!='.UserCoursePeriod()));
+    //        foreach($others as $o)
+    //        {
+    //            $counter_i++;
+    //            $gat=DBGet(DBQuery('SELECT * FROM gradebook_assignment_types WHERE ASSIGNMENT_TYPE_ID='.$o['ASSIGNMENT_TYPE_ID']));
+    //            $types_RET[$counter_i]['ASSIGNMENT_TYPE_ID']=$gat[1]['ASSIGNMENT_TYPE_ID'];
+    //            $types_RET[$counter_i]['TITLE']=$gat[1]['TITLE'];
+    //        }
+    if ($_REQUEST['assignment_id'] != 'new' && $_REQUEST['assignment_type_id'] != 'new') {
+        $delete_button = "<INPUT type=button value=" . _delete . " class='btn btn-danger' onClick='javascript:window.location=\"Modules.php?modname=$_REQUEST[modname]&modfunc=delete&assignment_type_id=$_REQUEST[assignment_type_id]&assignment_id=$_REQUEST[assignment_id]\"'> &nbsp;";
     }
 
     // ADDING & EDITING FORM
-	if($_REQUEST['assignment_id'] && $_REQUEST['assignment_id']!='new')
-	{   
+    if ($_REQUEST['assignment_id'] && $_REQUEST['assignment_id'] != 'new') {
         $sql = 'SELECT ASSIGNMENT_TYPE_ID,TITLE,ASSIGNED_DATE,DUE_DATE,POINTS,COURSE_ID,DESCRIPTION,
 				CASE WHEN DUE_DATE<ASSIGNED_DATE THEN \'Y\' ELSE NULL END AS DATE_ERROR
 				FROM gradebook_assignments
-				WHERE ASSIGNMENT_ID=\''.$_REQUEST['assignment_id'].'\'';
+				WHERE ASSIGNMENT_ID=\'' . $_REQUEST['assignment_id'] . '\'';
         $QI = DBQuery($sql);
         $RET = DBGet($QI);
         $RET = $RET[1];
         $title = $RET['TITLE'];
-	}
-	elseif($_REQUEST['assignment_type_id'] && $_REQUEST['assignment_type_id']!='new' && $_REQUEST['assignment_id']!='new')
-	{
+    } elseif ($_REQUEST['assignment_type_id'] && $_REQUEST['assignment_type_id'] != 'new' && $_REQUEST['assignment_id'] != 'new') {
         // $sql = 'SELECT at.TITLE,at.FINAL_GRADE_PERCENT,
-				// (SELECT sum(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE assignment_type_id in(select assignment_type_id from gradebook_assignment_types  where COURSE_PERIOD_ID=\''.$course_period_id.'\')) AS TOTAL_PERCENT
-				// FROM gradebook_assignment_types at
-				// WHERE at.ASSIGNMENT_TYPE_ID=\''.$_REQUEST['assignment_type_id'].'\'';
+        // (SELECT sum(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE assignment_type_id in(select assignment_type_id from gradebook_assignment_types  where COURSE_PERIOD_ID=\''.$course_period_id.'\')) AS TOTAL_PERCENT
+        // FROM gradebook_assignment_types at
+        // WHERE at.ASSIGNMENT_TYPE_ID=\''.$_REQUEST['assignment_type_id'].'\'';
 
         $sql = 'SELECT at.TITLE,at.FINAL_GRADE_PERCENT,
-                (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE assignment_type_id IN(SELECT gat1.assignment_type_id FROM gradebook_assignment_types gat1 WHERE gat1.COURSE_PERIOD_ID=\''.$course_period_id.'\' 
+                (SELECT SUM(FINAL_GRADE_PERCENT) FROM gradebook_assignment_types WHERE assignment_type_id IN(SELECT gat1.assignment_type_id FROM gradebook_assignment_types gat1 WHERE gat1.COURSE_PERIOD_ID=\'' . $course_period_id . '\' 
                     UNION SELECT gat2.assignment_type_id FROM gradebook_assignment_types gat2, gradebook_assignments ga, course_periods cp
                     WHERE cp.course_period_id = gat2.course_period_id AND gat2.ASSIGNMENT_TYPE_ID = ga.ASSIGNMENT_TYPE_ID AND ga.COURSE_ID IS NOT NULL 
-                    AND ga.COURSE_ID=\''.UserCourse().'\' AND ga.STAFF_ID=\''.UserID().'\' )) AS TOTAL_PERCENT
+                    AND ga.COURSE_ID=\'' . UserCourse() . '\' AND ga.STAFF_ID=\'' . UserID() . '\' )) AS TOTAL_PERCENT
                 FROM gradebook_assignment_types at
-                WHERE at.ASSIGNMENT_TYPE_ID=\''.$_REQUEST['assignment_type_id'].'\'';
+                WHERE at.ASSIGNMENT_TYPE_ID=\'' . $_REQUEST['assignment_type_id'] . '\'';
 
         $QI = DBQuery($sql);
-		$RET = DBGet($QI,array('FINAL_GRADE_PERCENT'=>'_makePercent'));
+        $RET = DBGet($QI, array('FINAL_GRADE_PERCENT' => '_makePercent'));
         $RET = $RET[1];
         $title = $RET['TITLE'];
-	}
-	elseif($_REQUEST['assignment_id']=='new')
-	{
+    } elseif ($_REQUEST['assignment_id'] == 'new') {
         $title = _newAssignment;
         $new = true;
-	}
-	elseif($_REQUEST['assignment_type_id']=='new')
-	{
+    } elseif ($_REQUEST['assignment_type_id'] == 'new') {
         // $sql='SELECT sum(FINAL_GRADE_PERCENT) AS TOTAL_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id in(select assignment_type_id from gradebook_assignment_types  where COURSE_PERIOD_ID=\''.$course_period_id.'\')';
 
-        $sql='SELECT SUM(FINAL_GRADE_PERCENT) AS TOTAL_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id IN(SELECT gat1.assignment_type_id FROM gradebook_assignment_types gat1 WHERE gat1.COURSE_PERIOD_ID=\''.$course_period_id.'\' 
+        $sql = 'SELECT SUM(FINAL_GRADE_PERCENT) AS TOTAL_PERCENT FROM gradebook_assignment_types WHERE assignment_type_id IN(SELECT gat1.assignment_type_id FROM gradebook_assignment_types gat1 WHERE gat1.COURSE_PERIOD_ID=\'' . $course_period_id . '\' 
             UNION SELECT gat2.assignment_type_id FROM gradebook_assignment_types gat2, gradebook_assignments ga, course_periods cp
                     WHERE cp.course_period_id = gat2.course_period_id AND gat2.ASSIGNMENT_TYPE_ID = ga.ASSIGNMENT_TYPE_ID AND ga.COURSE_ID IS NOT NULL 
-                    AND ga.COURSE_ID=\''.UserCourse().'\' AND ga.STAFF_ID=\''.UserID().'\' )';
+                    AND ga.COURSE_ID=\'' . UserCourse() . '\' AND ga.STAFF_ID=\'' . UserID() . '\' )';
 
         $QI = DBQuery($sql);
-		$RET = DBGet($QI,array('FINAL_GRADE_PERCENT'=>'_makePercent'));
+        $RET = DBGet($QI, array('FINAL_GRADE_PERCENT' => '_makePercent'));
         $RET = $RET[1];
         $title = _newAssignmentType;
     }
@@ -668,17 +550,17 @@
             echo "&assignment_id=new";
         echo "&table=gradebook_assignments method=POST>";
         echo '<div class="panel panel-default">';
-        DrawHeader($title, $delete_button . '<INPUT type=submit id="setupAssgnTypeBtnOne" class="btn btn-primary" value='._save.' onclick="formcheck_assignments(this);">');
+        DrawHeader($title, $delete_button . '<INPUT type=submit id="setupAssgnTypeBtnOne" class="btn btn-primary" value=' . _save . ' onclick="formcheck_assignments(this);">');
         echo '<div class="panel-body">';
         echo "<INPUT type=hidden name=type_id value='$_REQUEST[assignment_id]' id=type_id>";
         $header .= '<div class="row">';
-        $header .= '<div class="col-md-6"><div class="form-group">' . TextInput($RET['TITLE'], 'tables[' . $_REQUEST['assignment_id'] . '][TITLE]', ''._title.' *', 'size=36') . '</div></div>';
+        $header .= '<div class="col-md-6"><div class="form-group">' . TextInput($RET['TITLE'], 'tables[' . $_REQUEST['assignment_id'] . '][TITLE]', '' . _title . ' *', 'size=36') . '</div></div>';
 
         if ($id == "new" || $_REQUEST['tab_id'] == "new" || $RET['POINTS'] == '')
             $extra = ' size=4 maxlength=5 onkeydown="return numberOnlyMod(event,this);" ';
         else
             $extra = ' size=4 maxlength=5 onkeydown=\"return numberOnlyMod(event,this);\"';
-        $header .= '<div class="col-md-6"><div class="form-group">' . TextInput($RET['POINTS'], 'tables[' . $_REQUEST['assignment_id'] . '][POINTS]', ''._points.' *' , $extra) . '</div></div>';
+        $header .= '<div class="col-md-6"><div class="form-group">' . TextInput($RET['POINTS'], 'tables[' . $_REQUEST['assignment_id'] . '][POINTS]', '' . _points . ' *', $extra) . '</div></div>';
         $header .= '</div>';
 
         $header .= '<div class="row">';
@@ -691,27 +573,26 @@
         $header .= '</div>';
 
         $header .= '<div class="row">';
-        $header .= '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . ($_REQUEST['assignment_id'] == 'new' ? ''._assigned.' <span class="text-danger">*</span>' : ''._assigned.'  <span class="text-danger">*</span>') . '</label><div class="col-lg-8">' . DateInputAY($new && Preferences('DEFAULT_ASSIGNED', 'Gradebook') == 'Y' ? date('Y-m-d') : $RET['ASSIGNED_DATE'], 'tables[' . $_REQUEST['assignment_id'] . '][ASSIGNED_DATE]', 1) . '</div></div></div>';
-        $header .= '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . ($_REQUEST['assignment_id'] == 'new' ? ''._due.'  <span class="text-danger">*</span>' : ''._due.'  <span class="text-danger">*</span>') . '</label>' . DateInputAY($new && Preferences('DEFAULT_DUE', 'Gradebook') == 'Y' ? date('Y-m-d') : $RET['DUE_DATE'], 'tables[' . $_REQUEST['assignment_id'] . '][DUE_DATE]', 2) . '</div></div>';
+        $header .= '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . ($_REQUEST['assignment_id'] == 'new' ? '' . _assigned . ' <span class="text-danger">*</span>' : '' . _assigned . '  <span class="text-danger">*</span>') . '</label><div class="col-lg-8">' . DateInputAY($new && Preferences('DEFAULT_ASSIGNED', 'Gradebook') == 'Y' ? date('Y-m-d') : $RET['ASSIGNED_DATE'], 'tables[' . $_REQUEST['assignment_id'] . '][ASSIGNED_DATE]', 1) . '</div></div></div>';
+        $header .= '<div class="col-md-6"><div class="form-group"><label class="control-label col-lg-4 text-right">' . ($_REQUEST['assignment_id'] == 'new' ? '' . _due . '  <span class="text-danger">*</span>' : '' . _due . '  <span class="text-danger">*</span>') . '</label>' . DateInputAY($new && Preferences('DEFAULT_DUE', 'Gradebook') == 'Y' ? date('Y-m-d') : $RET['DUE_DATE'], 'tables[' . $_REQUEST['assignment_id'] . '][DUE_DATE]', 2) . '</div></div>';
         $header .= '</div>';
-    }
-    elseif ($_REQUEST['assignment_type_id']) {
+    } elseif ($_REQUEST['assignment_type_id']) {
 
         echo "<FORM class=form-horizontal name=F3 action=Modules.php?modname=$_REQUEST[modname]&table=gradebook_assignment_types";
         if ($_REQUEST['assignment_type_id'] != 'new')
             echo "&assignment_type_id=$_REQUEST[assignment_type_id]";
         echo " method=POST>";
         echo '<div class="panel panel-default">';
-        DrawHeader($title, $delete_button . '<INPUT type=submit id="setupAssgnTypeBtnTwo" class="btn btn-primary" value='._save.' onclick="return formcheck_assignments(this);">');
+        DrawHeader($title, $delete_button . '<INPUT type=submit id="setupAssgnTypeBtnTwo" class="btn btn-primary" value=' . _save . ' onclick="return formcheck_assignments(this);">');
         echo '<div class="panel-body">';
-        
+
         echo "<INPUT type=hidden name=type_id value='$_REQUEST[assignment_id]' id=type_id>";
         echo "<INPUT type=hidden name=assignment_type_id value='$_REQUEST[assignment_type_id]' id=assignment_type_id>";
-        
+
         $header .= '<div class="row">';
         $header .= '<div class="col-md-6"><div class="form-group">' . TextInput($RET['TITLE'], 'tables[' . $_REQUEST['assignment_type_id'] . '][TITLE]', _title, 'size=36') . '</div></div>';
 
-        if($programconfig['WEIGHT']=='Y'){
+        if ($programconfig['WEIGHT'] == 'Y') {
             $header .= '<div class="col-md-6"><div class="form-group">' . TextInput(($RET['FINAL_GRADE_PERCENT'] != 0 ? $RET['FINAL_GRADE_PERCENT'] : ''), 'tables[' . $_REQUEST['assignment_type_id'] . '][FINAL_GRADE_PERCENT]', ($RET['FINAL_GRADE_PERCENT'] != 0 ? '' : '<FONT color=red>') . _weightPercent . ($RET['FINAL_GRADE_PERCENT'] != 0 ? '' : '</FONT>')) . '</div></div>';
             $header .= '<div class="col-md-6"><div class="form-group">' . NoInput($RET['TOTAL_PERCENT'] == 1 ? '100%' : '<FONT COLOR=red>' . (100 * $RET['TOTAL_PERCENT']) . '%</FONT>', _percentTotal) . '</div></div>';
         }
@@ -724,28 +605,28 @@
             echo $header;
             echo '<div class="row">';
             echo '<div class="col-md-12"><div class="form-group">';
-            echo '<label class="control-label col-xs-2 text-right">'._description.'</label>';
+            echo '<label class="control-label col-xs-2 text-right">' . _description . '</label>';
             echo '<div class="col-xs-10">';
-                        
-//            $oFCKeditor = new FCKeditor('tables[' . $_REQUEST['assignment_id'] . '][DESCRIPTION]');
-//            $oFCKeditor->BasePath = 'modules/messaging/fckeditor/';
-//            $oFCKeditor->Value = html_entity_decode(html_entity_decode($RET['DESCRIPTION']));
-//            $oFCKeditor->Height = '200';
-//            $oFCKeditor->Width = '100%';
-//            $oFCKeditor->ToolbarSet = 'Mytoolbar ';
-//            echo $oFCKeditor->Create();
-            
-            
-            echo '<textarea name="tables[' . $_REQUEST['assignment_id'] . '][DESCRIPTION]" id="txtBody" rows="4" cols="100">'.html_entity_decode(html_entity_decode($RET['DESCRIPTION'])).'</textarea>';
+
+            //            $oFCKeditor = new FCKeditor('tables[' . $_REQUEST['assignment_id'] . '][DESCRIPTION]');
+            //            $oFCKeditor->BasePath = 'modules/messaging/fckeditor/';
+            //            $oFCKeditor->Value = html_entity_decode(html_entity_decode($RET['DESCRIPTION']));
+            //            $oFCKeditor->Height = '200';
+            //            $oFCKeditor->Width = '100%';
+            //            $oFCKeditor->ToolbarSet = 'Mytoolbar ';
+            //            echo $oFCKeditor->Create();
+
+
+            echo '<textarea name="tables[' . $_REQUEST['assignment_id'] . '][DESCRIPTION]" id="txtBody" rows="4" cols="100">' . html_entity_decode(html_entity_decode($RET['DESCRIPTION'])) . '</textarea>';
 
 
 
 
 
             echo '<script type="text/javascript">$(function(){ CKEDITOR.replace(\'txtBody\', { height: \'400px\', extraPlugins: \'forms\'}); });</script>';
 
-            
-            
+
+
             echo '</div>';
             echo '</div></div>';
             echo '</div>';
@@ -756,7 +637,7 @@
         echo '</div>'; //.panel
     }
     // DISPLAY THE MENU
-    $LO_options = array('save' =>false, 'search' =>false, 'add' =>true);
+    $LO_options = array('save' => false, 'search' => false, 'add' => true);
 
     echo '<div class="row">';
 
@@ -771,7 +652,7 @@
 
     echo '<div class="col-md-6">';
     echo '<div class="panel panel-default">';
-    $columns = array('TITLE' =>_assignmentType);
+    $columns = array('TITLE' => _assignmentType);
     $link = array();
     $link['TITLE']['link'] = "Modules.php?modname=$_REQUEST[modname]&modfunc=$_REQUEST[modfunc]";
     $link['TITLE']['variables'] = array('assignment_type_id' => 'ASSIGNMENT_TYPE_ID');
@@ -800,7 +681,7 @@
 
         echo '<div class="col-md-6">';
         echo '<div class="panel panel-default">';
-        $columns = array('TITLE' =>_assignment);
+        $columns = array('TITLE' => _assignment);
         $link = array();
         $link['TITLE']['link'] = "Modules.php?modname=$_REQUEST[modname]&assignment_type_id=$_REQUEST[assignment_type_id]";
         $link['TITLE']['variables'] = array('assignment_id' => 'ASSIGNMENT_ID');
@@ -814,12 +695,10 @@
     }
 
     echo '</div>';
-}
-elseif (!$course_id)
-    echo '<BR>' . ErrorMessage(array(''._youDonTHaveACourseThisPeriod.'.'), 'error');
+} elseif (!$course_id)
+    echo '<BR>' . ErrorMessage(array('' . _youDonTHaveACourseThisPeriod . '.'), 'error');
 
-function _makePercent($value, $column) {
+function _makePercent($value, $column)
+{
     return Percent($value, 2);
 }
-
-?>

--- modules/grades/Configuration.php ---
@@ -31,6 +31,7 @@
 $q_total = array();
 $s_total = array();
 $f_total = 0;
+$marking_sem_id = array();
 
 foreach ($_REQUEST['teacher_grade'] as $ktitle => $data) {
     $cp_id = explode('-', $ktitle);
@@ -40,14 +41,14 @@
     $k = explode('-', $key);
     if ($k[0] == 'Q') {
 
-        $q_total[$k[1]] = $q_total[$k[1]] + $val;
+        $q_total[$k[1]] = intval($q_total[$k[1]]) + intval($val);
     }
     if ($k[0] == 'SEM') {
         if (substr($k[1], 0, 1) != 'E')
             $s_total[] = $k[1];
     }
     if ($k[0] == 'FY') {
-        $f_total = $f_total + $val;
+        $f_total = intval($f_total) + intval($val);
     }
 }
 
@@ -61,23 +62,25 @@
     foreach ($_REQUEST['values'] as $key => $val) {
         $k = explode('-', $key);
         if ($k[0] == 'SEM') {
-            if (in_array($k[1], $marking_sem_id))
-                $marking_sem_val[$k[1]] = $marking_sem_val[$k[1]] + $val;
-            else {
-
-                if (substr($k[1], 0, 1) != 'E') {
-                    $pr_qr = DBGet(DBQuery("select parent_id from marking_periods where marking_period_id='$k[1]'"));
-                    $parent_mp_id = $pr_qr[1]['PARENT_ID'];
-                    $marking_sem_val[$parent_mp_id] = $marking_sem_val[$parent_mp_id] + $val;
-                }
-                if (substr($k[1], 0, 1) == 'E' && in_array(substr($k[1], 1), $marking_sem_id)) {
+            if (is_array($marking_sem_id)) {
+                if (in_array($k[1], $marking_sem_id))
+                    $marking_sem_val[$k[1]] = $marking_sem_val[$k[1]] + $val;
+                else {
+
+                    if (substr($k[1], 0, 1) != 'E') {
+                        $pr_qr = DBGet(DBQuery("select parent_id from marking_periods where marking_period_id='$k[1]'"));
+                        $parent_mp_id = $pr_qr[1]['PARENT_ID'];
+                        $marking_sem_val[$parent_mp_id] = intval($marking_sem_val[$parent_mp_id]) + intval($val);
+                    }
+                    if (substr($k[1], 0, 1) == 'E' && is_array($marking_sem_id) && in_array(substr($k[1], 1), $marking_sem_id)) {
 
-                    $marking_sem_val[substr($k[1], 1)] = $marking_sem_val[substr($k[1], 1)] + $val;
-                }
-                if (substr($k[1], 0, 1) == 'E' && !in_array(substr($k[1], 1), $marking_sem_id)) {
-                    $pr_qr = DBGet(DBQuery("select parent_id from marking_periods where marking_period_id='" . substr($k[1], 1) . "'"));
-                    $parent_mp_id = $pr_qr[1]['PARENT_ID'];
-                    $marking_sem_val[$parent_mp_id] = $marking_sem_val[$parent_mp_id] + $val;
+                        $marking_sem_val[substr($k[1], 1)] = intval($marking_sem_val[substr($k[1], 1)]) + intval($val);
+                    }
+                    if (substr($k[1], 0, 1) == 'E' && is_array($marking_sem_id) && !in_array(substr($k[1], 1), $marking_sem_id)) {
+                        $pr_qr = DBGet(DBQuery("select parent_id from marking_periods where marking_period_id='" . substr($k[1], 1) . "'"));
+                        $parent_mp_id = $pr_qr[1]['PARENT_ID'];
+                        $marking_sem_val[$parent_mp_id] = intval($marking_sem_val[$parent_mp_id]) + intval($val);
+                    }
                 }
             }
         }
@@ -203,24 +206,25 @@
 
 if (count($grades) > 0) {
     echo '<fieldset>';
-    echo '<legend><b>'._scoreBreakoffPoints.'</b></legend>';
-    echo '<TABLE cellspacing=1><TR><TD>';
+    echo '<h5 class="text-primary">'._scoreBreakoffPoints.'</h5>';
+    echo '<TABLE width="100%" cellspacing=1><TR><TD>';
     foreach ($grades as $course_period_id => $cp_grades) {
-        $table = '<TABLE>';
-        $table .= '<TR><TD rowspan=2 align=right width=100>' . $cp_grades[1]['COURSE_TITLE'] . ' - ' . substr($cp_grades[1]['CP_TITLE'], 0, strrpos(str_replace(' - ', ' ^ ', $cp_grades[1]['CP_TITLE']), '^')) . '</TD>';
+        $table = '<TABLE width="100%">';
+        $table .= '<TR><TD rowspan=2 align=left width=20%>' . $cp_grades[1]['COURSE_TITLE'] . ' - ' . substr($cp_grades[1]['CP_TITLE'], 0, strrpos(str_replace(' - ', ' ^ ', $cp_grades[1]['CP_TITLE']), '^')) . '</TD>';
         foreach ($cp_grades as $grade)
-            $table .= '<TD><B>' . $grade['TITLE'] . '</B></TD>';
+            $table .= '<TD align=center><B>' . $grade['TITLE'] . '</B></TD>';
         $table .= '</TR>';
         $table .= '<TR>';
         foreach ($cp_grades as $grade)
-            $table .= '<TD><INPUT type=text name=values[' . $course_period_id . '-' . $grade['ID'] . '] value="' . $programconfig[$course_period_id . '-' . $grade['ID']] . '" size=3 maxlength=5></TD>';
+            $table .= '<TD><INPUT type=text class="form-control text-center" name=values[' . $course_period_id . '-' . $grade['ID'] . '] value="' . $programconfig[$course_period_id . '-' . $grade['ID']] . '" size=3 maxlength=5></TD>';
         $table .= '</TR>';
         $table .= '</TABLE>';
-        echo DrawRoundedRect($table);
+        echo $table;
+        // echo DrawRoundedRect($table);
         echo '</TD></TR><TR><TD>';
     }
     echo '</TD></TR></TABLE>';
-    echo '</fieldset></TD>';
+    echo '</fieldset>';
 }
 
 $quarters_dt = DBGet(DBQuery('SELECT TITLE,MARKING_PERIOD_ID,SEMESTER_ID,DOES_GRADES,DOES_EXAM FROM school_quarters WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' ORDER BY SORT_ORDER'));

--- modules/grades/DeletePromptX.fnc.php ---
@@ -36,7 +36,8 @@ function DeletePromptX($title,$action='delete')
 
 	if(!$_REQUEST['delete_ok'] && !$_REQUEST['delete_cancel'])
 	{
-		PopTable('header',confirm." ".(!substr(' ',' '.$action)?$action:''));
+		//PopTable('header',_confirm." ".(!substr(' ',' '.$action)?$action:''));
+		PopTable('header',_confirm." ".(trim($action)!=""?$action:''));
 		echo "<CENTER><h4>"._areYouSureYouWantTo." $action that $title?</h4><br><FORM action=$PHP_tmp_SELF METHOD=POST><INPUT type=submit name=delete_ok class=\"btn btn-danger\" value="._ok."> <INPUT type=submit class=\"btn btn-primary\" name=delete_cancel value="._cancel."></FORM></CENTER>";
 		PopTable('footer');
 		return '';

--- modules/grades/EditHistoryMarkingPeriods.php ---
@@ -101,11 +101,11 @@
 }
 
 if (!$_REQUEST['modfunc']) {
-    echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&tab_id=" . strip_tags(trim($_REQUEST[tab_id])) . "&mp_id=$mp_id method=POST>";
+    echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&tab_id=" . strip_tags(trim($_REQUEST['tab_id'])) . "&mp_id=$mp_id method=POST>";
     DrawHeader(ProgramTitle(), SubmitButton(_save, '', 'class="btn btn-primary" onclick="self_disable(this);"'));
     echo '<hr class="no-margin"/>';
 
-    $sql = 'SELECT * FROM history_marking_periods WHERE SCHOOL_ID = ' . UserSchool() . ' ORDER BY POST_END_DATE';
+    $sql = 'SELECT * FROM history_marking_periods WHERE SCHOOL_ID = ' . UserSchool() . ' ORDER BY SYEAR, POST_END_DATE';
 
     $functions = array('MP_TYPE' => 'makeSelectInput',
         'NAME' => 'makeTextInput',
@@ -160,6 +160,9 @@ function makeDateInput($value, $name) {
     else
         $id = 'new';
 
+    if ($value == '0000-00-00' || $value == '' || $value == NULL)
+        $value = '';
+
     if ($id != 'new')
         return DateInputAY($value, "values[$id][$name]", $id);
     else
@@ -190,7 +193,11 @@ function makeSchoolYearSelectInput($value, $name) {
     else
         $id = 'new';
     $options = array();
-    foreach (range(UserSyear() - 15, UserSyear()) as $year)
+
+    $get_min_year = DBGet(DBQuery('SELECT MIN(`syear`) AS MIN_SYEAR FROM `school_years` WHERE `school_id` = \'' . UserSchool() . '\''));
+    $least_available_syear = $get_min_year[1]['MIN_SYEAR'];
+
+    foreach (range($least_available_syear - 15, UserSyear()) as $year)
         $options[$year] = $year . '-' . ($year + 1);
 
     return SelectInput(trim($value), "values[$id][$name]", '', $options, false);

--- modules/grades/EditReportCardGrades.php ---
@@ -221,7 +221,7 @@
         echo '<div class="panel panel-default">';
         DrawHeader(_editReportCardGrades, '<div class="form-group">' . $mpselect . '</div>');
 
-        echo "<FORM class=\"form-horizontal m-b-0\" action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&tab_id=" . strip_tags(trim($_REQUEST[tab_id])) . "&mp_id=" . $mp_id . " method=POST>";
+        echo "<FORM class=\"form-horizontal m-b-0\" action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&tab_id=" . strip_tags(trim($_REQUEST['tab_id'])) . "&mp_id=" . $mp_id . " method=POST>";
 
         echo '<div class="panel-body alpha-grey">';
         echo '<div class="media">';
@@ -353,7 +353,7 @@
 
             //PopTable_wo_header('header');
 
-            ListOutput($LO_ret, $LO_columns, '', '', $link, array(), array('count' =>true, 'download' =>true, 'search' =>true));
+            ListOutputWithStudentInfo($LO_ret, $LO_columns, '', '', $link, array(), array('count' =>true, 'download' =>true, 'search' =>true));
             //PopTable('footer');
         }
 

--- modules/grades/FinalGrades.php ---
@@ -43,7 +43,10 @@
         $_REQUEST['modfunc'] = 'save';
 }
 if (clean_param($_REQUEST['modfunc'], PARAM_ALPHAMOD) == 'save') {
-    if (count($_REQUEST['mp_arr']) && count($_REQUEST['st_arr'])) {
+    $check_count_mp_arr = is_countable($_REQUEST['mp_arr']) ? count($_REQUEST['mp_arr']): 0;
+    $check_count_st_arr = is_countable($_REQUEST['st_arr']) ? count($_REQUEST['st_arr']): 0;
+    // if (count($_REQUEST['mp_arr']) && count($_REQUEST['st_arr'])) {
+    if ($check_count_mp_arr && $check_count_st_arr) {
         $mp_list = '\'' . implode('\',\'', $_REQUEST['mp_arr']) . '\'';
         $last_mp = end($_REQUEST['mp_arr']);
         $st_list = '\'' . implode('\',\'', $_REQUEST['st_arr']) . '\'';
@@ -300,7 +303,7 @@
     if ($_REQUEST['search_modfunc'] == 'list') {
         $_openSIS['allow_edit'] = true;
 
-        echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST[include_inactive])) . " method=POST>";
+        echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST['include_inactive'])) . " method=POST>";
 
         $attendance_codes = DBGet(DBQuery('SELECT SHORT_NAME,ID FROM attendance_codes WHERE SYEAR=\'' . UserSyear() . '\' AND SCHOOL_ID=\'' . UserSchool() . '\' AND (DEFAULT_CODE!=\'Y\' OR DEFAULT_CODE IS NULL) AND TABLE_NAME=\'0\''));
         //PopTable_wo_header('header');
@@ -379,9 +382,9 @@
         $extra['WHERE'] .= ' AND s.STUDENT_ID=' . $_SESSION['student_id'];
     }
     $extra['functions'] = array('CHECKBOX' => '_makeChooseCheckbox');
-     $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAll(this.form,this.form.controller.checked,\'st_arr\');"><A>');
+    //  $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAll(this.form,this.form.controller.checked,\'st_arr\');"><A>');
    // $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAll(this.form,this.form.controller.checked,\'unused\');"><A>');
-  //  $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod(this,\'st_arr\');"><A>');
+   $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod(this,\'st_arr\');"><A>');
     $extra['new'] = true;
     $extra['options']['search'] = false;
     $extra['force_search'] = true;
@@ -427,18 +430,18 @@
     }
 }
 
-//function _makeChooseCheckbox($value, $title) {
-//    global $THIS_RET;
-////    return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
-//    
-//    return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
-//}
-
 function _makeChooseCheckbox($value, $title) {
-    global $THIS_RET;
-    return '<INPUT type=checkbox name=st_arr[] value=' . $value . '>';
-   // return "<input name=unused_var[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID]);' />";
+   global $THIS_RET;
+//    return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
+   
+   return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET['STUDENT_ID'] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
 }
+
+// function _makeChooseCheckbox($value, $title) {
+//     global $THIS_RET;
+//     return '<INPUT type=checkbox name=st_arr[] value=' . $value . '>';
+//    // return "<input name=unused_var[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[$THIS_RET[STUDENT_ID]]\",this,$THIS_RET[STUDENT_ID]);' />";
+// }
 function _makeTeacher($teacher, $column) {
     return substr($teacher, strrpos(str_replace(' - ', ' ^ ', $teacher), '^') + 2);
 }

--- modules/grades/GradeBreakdown.php ---
@@ -57,7 +57,8 @@
         $i++;
         $teachers_RET[$i]['FULL_NAME'] = $grades[key($grades)][1]['FULL_NAME'];
         foreach ($grades_RET as $grade)
-            $teachers_RET[$i][$grade['ID']] = count($grades[$grade['ID']]);
+            $teachers_RET[$i][$grade['ID']] = (is_countable($grades[$grade['ID']])) ? count($grades[$grade['ID']]) : 0;
+        
     }
 }
 

--- modules/grades/Grades.php ---
@@ -29,19 +29,16 @@
 include('../../RedirectModulesInc.php');
 DrawBC(""._gradebook." > " . ProgramTitle());
 
-// echo "<PRE>";
-// print_r($_REQUEST);
-// echo "<PRE>";
-
 include_once 'functions/MakeLetterGradeFnc.php';
 include_once 'functions/MakePercentGradeFnc.php';
+
 $max_allowed = Preferences('ANOMALOUS_MAX', 'Gradebook') / 100;
 // if running as a teacher program then openSIS[allow_edit] will already be set according to admin permissions
 if (!isset($_openSIS['allow_edit']))
     $_openSIS['allow_edit'] = true;
 
 $config_RET = DBGet(DBQuery('SELECT TITLE,VALUE FROM program_user_config WHERE USER_ID=\'' . User('STAFF_ID') . '\' AND PROGRAM=\'Gradebook\' AND VALUE LIKE \'%_' . UserCoursePeriod() . '\''), array(), array('TITLE'));
-if (count($config_RET))
+if (is_countable($config_RET) && count($config_RET))
     foreach ($config_RET as $title => $value) {
         $unused_var = explode('_', $value[1]['VALUE']);
         $programconfig[User('STAFF_ID')][$title] = $unused_var[0];
@@ -110,7 +107,7 @@
     $link['TITLE']['link'] = "Modules.php?modname=$_REQUEST[modname]&include_inactive=$_REQUEST[include_inactive]";
     $link['TITLE']['variables'] = array('assignment_id' => 'ASSIGNMENT_ID');
     $current_RET[$_REQUEST['student_id']] = DBGet(DBQuery('SELECT g.ASSIGNMENT_ID FROM gradebook_grades g,gradebook_assignments a WHERE a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND a.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\' AND g.STUDENT_ID=\'' . $_REQUEST['student_id'] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\'' . ($_REQUEST['assignment_id'] == 'all' ? '' : ' AND g.ASSIGNMENT_ID=\'' . $_REQUEST['assignment_id'] . '\'')), array(), array('ASSIGNMENT_ID'));
-    if (count($assignments_RET)) {
+    if (is_countable($assignments_RET) && count($assignments_RET)) {
         foreach ($assignments_RET as $id => $assignment)
             $total_points[$id] = $assignment[1]['POINTS'];
     }
@@ -150,10 +147,10 @@
         $extra['SELECT'] = ',ssm.START_DATE';
         $extra['WHERE'] = ' AND \'' . DBDate('mysql') . '\'>=ssm.START_DATE';
         $extra['functions'] = array();
-        if (count($assignments_RET)) {
+        if (is_countable($assignments_RET) && count($assignments_RET)) {
             foreach ($assignments_RET as $id => $assignment) {
                 $assignment = $assignment[1];
-                $extra['SELECT'] .= ',\'' . $id . '\' AS G' . $id . ',\'' . $assignment[DUE] . '\' AS D' . $id . ',\'' . $assignment[DUE_DATE] . '\' AS DUE_' . $id . '';
+                $extra['SELECT'] .= ',\'' . $id . '\' AS G' . $id . ',\'' . $assignment['DUE'] . '\' AS D' . $id . ',\'' . $assignment['DUE_DATE'] . '\' AS DUE_' . $id . '';
 
                 $extra['functions'] += array('G' . $id => '_makeExtraCols');
                 $LO_columns += array('G' . $id => $assignment['TYPE_TITLE'] . '<BR>' . $assignment['TITLE']);
@@ -173,7 +170,7 @@
 
         $current_RET = DBGet(DBQuery('SELECT STUDENT_ID,POINTS,COMMENT,ASSIGNMENT_ID FROM gradebook_grades WHERE ASSIGNMENT_ID=\'' . $id . '\' AND COURSE_PERIOD_ID=\'' . $course_period_id . '\''), array(), array('STUDENT_ID', 'ASSIGNMENT_ID'));
     } else {
-        if (count($assignments_RET)) {
+        if (is_countable($assignments_RET) && count($assignments_RET)) {
              if ($programconfig[User('STAFF_ID')]['WEIGHT'] != 'Y') {
             $_SESSION['ROUNDING'] = $programconfig[User('STAFF_ID')]['ROUNDING'];
             $extra['SELECT'] .= ',\'\' AS POINTS,\'\' AS LETTER_GRADE,\'\' AS COMMENT';
@@ -186,8 +183,8 @@
                         $_SESSION['ROUNDING']= $programconfig[User('STAFF_ID')]['ROUNDING'];
 			$extra['SELECT'] .= ',\'\' AS POINTS,\'\' AS LETTER_GRADE,\'\' AS WEIGHT_GRADE,\'\' AS COMMENT';
                         $extra['WHERE']=' AND \''.DBDate('mysql').'\'>=ssm.START_DATE';
-//			$extra['functions'] = array('POINTS'=>'_makeExtraAssnCols','LETTER_GRADE'=>'_makeExtraAssnCols','WEIGHT_GRADE'=>'_makeWtg');
-//			$LO_columns += array('POINTS'=>'Points','LETTER_GRADE'=>'Grade','WEIGHT_GRADE'=>'WEIGHT GRADE');
+            //			$extra['functions'] = array('POINTS'=>'_makeExtraAssnCols','LETTER_GRADE'=>'_makeExtraAssnCols','WEIGHT_GRADE'=>'_makeWtg');
+            //			$LO_columns += array('POINTS'=>'Points','LETTER_GRADE'=>'Grade','WEIGHT_GRADE'=>'WEIGHT GRADE');
                         $extra['functions'] = array('POINTS'=>'_makeExtraAssnCols','WEIGHT_GRADE'=>'_makeWtg');
 			$LO_columns += array('POINTS'=>'Points','WEIGHT_GRADE'=>'Grade');						
              }
@@ -198,7 +195,7 @@
                 $points_RET = DBGet(DBQuery('SELECT DISTINCT s.STUDENT_ID, gt.ASSIGNMENT_TYPE_ID, 
                                     sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'gg.POINTS')) . ') AS PARTIAL_POINTS,
                                         sum(' . db_case(array('gg.POINTS', '\'-1\' OR gg.POINTS IS NULL OR (ga.due_date <  (select DISTINCT ssm.start_date  from student_enrollment ssm where ssm.STUDENT_ID=s.STUDENT_ID AND ssm.SYEAR=\'' . UserSyear() . '\' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1
-)  ) ', "'0'", 'ga.POINTS')) . ') AS PARTIAL_TOTAL, gt.FINAL_GRADE_PERCENT FROM students s JOIN schedule ss ON (ss.STUDENT_ID=s.STUDENT_ID AND ss.COURSE_PERIOD_ID=\'' . $course_period_id . '\') JOIN gradebook_assignments ga ON ((ga.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID OR ga.COURSE_ID=\'' . $course_id . '\' AND ga.STAFF_ID=\'' . User('STAFF_ID') . '\') AND ga.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\') LEFT OUTER JOIN gradebook_grades gg ON (gg.STUDENT_ID=s.STUDENT_ID AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID)
+                )  ) ', "'0'", 'ga.POINTS')) . ') AS PARTIAL_TOTAL, gt.FINAL_GRADE_PERCENT FROM students s JOIN schedule ss ON (ss.STUDENT_ID=s.STUDENT_ID AND ss.COURSE_PERIOD_ID=\'' . $course_period_id . '\') JOIN gradebook_assignments ga ON ((ga.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID OR ga.COURSE_ID=\'' . $course_id . '\' AND ga.STAFF_ID=\'' . User('STAFF_ID') . '\') AND ga.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\') LEFT OUTER JOIN gradebook_grades gg ON (gg.STUDENT_ID=s.STUDENT_ID AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID)
                                      
                                         ,gradebook_assignment_types gt WHERE gt.ASSIGNMENT_TYPE_ID=ga.ASSIGNMENT_TYPE_ID AND gt.COURSE_ID=\'' . $course_id . '\' AND ((ga.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=ga.ASSIGNED_DATE) AND (ga.DUE_DATE IS NULL OR CURRENT_DATE>=ga.DUE_DATE) OR gg.POINTS IS NOT NULL) GROUP BY s.STUDENT_ID,ss.START_DATE,gt.ASSIGNMENT_TYPE_ID,gt.FINAL_GRADE_PERCENT'), array(), array('STUDENT_ID'));
             } else {
@@ -232,13 +229,14 @@
                         $sql .= ' AND (a.POINTS!=\'0\' OR g.POINTS IS NOT NULL AND g.POINTS!=\'-1\')';
                         $sql .=' ORDER BY a.ASSIGNMENT_ID';
                         $current_RET = DBGet(DBQuery($sql),array( 'ASSIGN_TYP_WG' => '_makeAssnWG',  'LETTER_GRADE' => '_makeExtra', ),array('STUDENT_ID'));
-//                        print_r($current_RET);
+                        // print_r($current_RET);
             foreach ($assignments_RET as $id => $assignment)
                 $total_points[$id] = $assignment[1]['POINTS'];
         }
     }
 }
-if (clean_param($_REQUEST['values'], PARAM_NOTAGS) && ($_POST['values'] || $_REQUEST['ajax']) && $_SESSION['assignment_id'] == clean_param($_REQUEST['assignment_id'], PARAM_INT)) {
+### Need to work clean_param($_REQUEST['assignment_id'], PARAM_INT) ###
+if (clean_param($_REQUEST['values'], PARAM_NOTAGS) && ($_POST['values'] || $_REQUEST['ajax']) && $_SESSION['assignment_id'] == $_REQUEST['assignment_id']) {
     foreach ($_REQUEST['values'] as $student_id => $assignments) {
         foreach ($assignments as $assignment_id => $columns) {
             if ($columns['POINTS']) {
@@ -283,16 +281,16 @@
                 if(isset($columns['POINTS']) && $columns['POINTS']=='')
                 DBQuery("UPDATE gradebook_grades SET points=null WHERE STUDENT_ID='$student_id' AND ASSIGNMENT_ID='$assignment_id' AND COURSE_PERIOD_ID='$course_period_id'");
 
-//                DBQuery('UPDATE gradebook_assignments SET UNGRADED=2 WHERE ASSIGNMENT_ID IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NULL OR POINTS=\'\') OR ASSIGNMENT_ID NOT IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NOT NULL OR POINTS!=\'\')');
+                //                DBQuery('UPDATE gradebook_assignments SET UNGRADED=2 WHERE ASSIGNMENT_ID IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NULL OR POINTS=\'\') OR ASSIGNMENT_ID NOT IN (SELECT ASSIGNMENT_ID FROM gradebook_grades WHERE POINTS IS NOT NULL OR POINTS!=\'\')');
             }
         }
     }
     if ($_REQUEST['student_id'])
-        $current_RET[$_REQUEST['student_id']] = DBGet(DBQuery('SELECT g.ASSIGNMENT_ID FROM gradebook_grades g,gradebook_assignments a WHERE a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND a.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\' AND g.STUDENT_ID=\'' . $_REQUEST[student_id] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\'' . ($_REQUEST['assignment_id'] == 'all' ? '' : ' AND g.ASSIGNMENT_ID=\'' . $_REQUEST[assignment_id] . '\'')), array(), array('ASSIGNMENT_ID'));
+        $current_RET[$_REQUEST['student_id']] = DBGet(DBQuery('SELECT g.ASSIGNMENT_ID FROM gradebook_grades g,gradebook_assignments a WHERE a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND a.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\' AND g.STUDENT_ID=\'' . $_REQUEST['student_id'] . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\'' . ($_REQUEST['assignment_id'] == 'all' ? '' : ' AND g.ASSIGNMENT_ID=\'' . $_REQUEST['assignment_id'] . '\'')), array(), array('ASSIGNMENT_ID'));
     elseif ($_REQUEST['assignment_id'] == 'all')
         $current_RET = DBGet(DBQuery('SELECT g.STUDENT_ID,g.ASSIGNMENT_ID,g.POINTS FROM gradebook_grades g,gradebook_assignments a WHERE a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND a.MARKING_PERIOD_ID=\'' . (GetCpDet($course_period_id, 'MARKING_PERIOD_ID') != '' ? UserMP() : GetMPId('FY')) . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\''), array(), array('STUDENT_ID', 'ASSIGNMENT_ID'));
     else
-        $current_RET = DBGet(DBQuery('SELECT STUDENT_ID,POINTS,COMMENT,ASSIGNMENT_ID FROM gradebook_grades WHERE ASSIGNMENT_ID=\'' . $_REQUEST[assignment_id] . '\' AND COURSE_PERIOD_ID=\'' . $course_period_id . '\''), array(), array('STUDENT_ID', 'ASSIGNMENT_ID'));
+        $current_RET = DBGet(DBQuery('SELECT STUDENT_ID,POINTS,COMMENT,ASSIGNMENT_ID FROM gradebook_grades WHERE ASSIGNMENT_ID=\'' . $_REQUEST['assignment_id'] . '\' AND COURSE_PERIOD_ID=\'' . $course_period_id . '\''), array(), array('STUDENT_ID', 'ASSIGNMENT_ID'));
 
     unset($_REQUEST['values']);
     unset($_SESSION['_REQUEST_vars']['values']);
@@ -303,37 +301,37 @@
 // echo "<pre>";
 // print_r($extra);
 $stu_RET = GetStuList($extra);
-$assignment_select = '<SELECT name=assignment_id class="form-control" onchange="document.location.href=\'Modules.php?modname=' . $_REQUEST['modname'] . '&include_inactive=' . $_REQUEST['include_inactive'] . '&cpv_id=' . CpvId() . '&assignment_id=\'+this.options[selectedIndex].value"><OPTION value="">'._totals.'</OPTION><OPTION value="all"' . (($_REQUEST['assignment_id'] == 'all' && !$_REQUEST['student_id']) ? ' SELECTED' : '') . '>'._all.'</OPTION>';
+$assignment_select = '<SELECT name=assignment_id class="form-control m-20" onchange="document.location.href=\'Modules.php?modname=' . $_REQUEST['modname'] . '&include_inactive=' . $_REQUEST['include_inactive'] . '&cpv_id=' . CpvId() . '&assignment_id=\'+this.options[selectedIndex].value"><OPTION value="">'._totals.'</OPTION><OPTION value="all"' . (($_REQUEST['assignment_id'] == 'all' && !$_REQUEST['student_id']) ? ' SELECTED' : '') . '>'._all.'</OPTION>';
 if ($_REQUEST['student_id'])
     $assignment_select .= '<OPTION value=' . $_REQUEST['assignment_id'] . ' SELECTED>' . $stu_RET[1]['FULL_NAME'] . '</OPTION>';
 foreach ($assignments_RET as $id => $assignment)
     $assignment_select .= '<OPTION value=' . $id . (($_REQUEST['assignment_id'] == $id && !$_REQUEST['student_id']) ? ' SELECTED' : '') . '>' . $assignment[1]['TYPE_TITLE'] . ' - ' . $assignment[1]['TITLE'] . '</OPTION>';
 $assignment_select .= '</SELECT>';
-echo '<div class="panel-body">';
-echo "<FORM class='m-b-0' action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&student_id=" . strip_tags(trim($_REQUEST[student_id])) . "&cpv_id=" . CpvId() . " method=POST>";
+echo '<div class="">';
+echo "<FORM class='m-b-0' action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&student_id=" . strip_tags(trim($_REQUEST['student_id'])) . "&cpv_id=" . CpvId() . "&include_inactive=" . $_REQUEST['include_inactive'] . " method=POST>";
 $tmp_REQUEST = $_REQUEST;
 unset($tmp_REQUEST['include_inactive']);
 
-if (count($stu_RET) == 0 && !$_REQUEST['student_id'])
+if (is_countable($stu_RET) && count($stu_RET) == 0 && !$_REQUEST['student_id'])
     echo '<div class="form-inline">' . $assignment_select . ' &nbsp; <label class="checkbox checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=include_inactive value=Y' . ($_REQUEST['include_inactive'] == 'Y' ? " CHECKED onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=\";'" : " onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=Y\";'") . '><span></span>'._includeInactiveStudents.':</label></div>';
 else {
     if (!$_REQUEST['student_id']) {
-        echo '<div class="form-inline">' . $assignment_select . ' &nbsp; &nbsp; <label class="checkbox checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=include_inactive value=Y' . ($_REQUEST['include_inactive'] == 'Y' ? " CHECKED onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=\";'" : " onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=Y\";'") . '><span></span> &nbsp; '._includeInactiveStudents.'</label> &nbsp; ' . ($_REQUEST['assignment_id'] ? SubmitButton(_save, '', 'class="btn btn-primary pull-right" onclick="self_disable(this);"') : '') . '</div>';
+        echo '<div class="form-inline">' . $assignment_select . ' &nbsp; &nbsp; <label class="checkbox checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=include_inactive value=Y' . ($_REQUEST['include_inactive'] == 'Y' ? " CHECKED onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=\";'" : " onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=Y\";'") . '><span></span> &nbsp; '._includeInactiveStudents.'</label> &nbsp; ' . ($_REQUEST['assignment_id'] ? SubmitButton(_save, '', 'class="btn btn-primary pull-right m-20" onclick="self_disable(this);"') : '') . '</div>';
     } else {
-        echo '<div class="form-inline">' . $assignment_select . ' &nbsp; ' . ($_REQUEST['assignment_id'] ? SubmitButton(_save, '', 'class="btn btn-primary pull-right" onclick="self_disable(this);"') : '') . '</div>';
+        echo '<div class="form-inline">' . $assignment_select . ' &nbsp; ' . ($_REQUEST['assignment_id'] ? SubmitButton(_save, '', 'class="btn btn-primary pull-right m-20" onclick="self_disable(this);"') : '') . '</div>';
     }
 }
 
-
+echo '<hr class="no-margin" />';
 
 if (!$_REQUEST['student_id'] && $_REQUEST['assignment_id'] == 'all')
     $options = array('yscroll' =>true);
 
 // echo '<hr class="no-margin-bottom"/>';
 ListOutput($stu_RET, $LO_columns, $item, $items, $link, array(), $options);
 
-if (count($assignments_RET) != 0)
-    echo $_REQUEST['assignment_id'] ? '<CENTER>' . SubmitButton(_save, '', 'class="btn btn-primary" onclick="self_disable(this);"') . '</CENTER>' : '';
+if (is_countable($assignments_RET) && count($assignments_RET) != 0)
+    echo $_REQUEST['assignment_id'] ? '<div class="panel-footer text-center">' . SubmitButton(_save, '', 'class="btn btn-primary" onclick="self_disable(this);"') . '</div>' : '';
 echo '</FORM>';
 
 echo '</div>'; //.panel-body
@@ -379,14 +377,14 @@ function _makeExtra($value, $column) {
 function _makeExtraAssnCols($assignment_id, $column) {
     global $THIS_RET, $total_points, $current_RET, $points_RET, $tabindex, $max_allowed;
     $rounding = DBGet(DBQuery('SELECT VALUE FROM program_user_config WHERE USER_ID=\'' . User('STAFF_ID') . '\' AND TITLE=\'ROUNDING\' AND PROGRAM=\'Gradebook\' '));
-    if (count($rounding))
+    if (is_countable($rounding) && count($rounding))
         $_SESSION['ROUNDING'] = $rounding[1]['VALUE'];
     switch ($column) {
         case 'POINTS':
             $tabindex++;
 
             if ($assignment_id == '' && !$_REQUEST['student_id']) {
-                if (count($points_RET[$THIS_RET['STUDENT_ID']])) {
+                if (is_countable($points_RET[$THIS_RET['STUDENT_ID']]) && count($points_RET[$THIS_RET['STUDENT_ID']])) {
                     $total = $total_points = 0;
                     foreach ($points_RET[$THIS_RET['STUDENT_ID']] as $partial_points)
                         if ($partial_points['PARTIAL_TOTAL'] != 0) {
@@ -411,7 +409,7 @@ function _makeExtraAssnCols($assignment_id, $column) {
             break;
         case 'LETTER_GRADE':
             if ($assignment_id == '' && !$_REQUEST['student_id']) {
-                if (count($points_RET[$THIS_RET['STUDENT_ID']])) {
+                if (is_countable($points_RET[$THIS_RET['STUDENT_ID']]) && count($points_RET[$THIS_RET['STUDENT_ID']])) {
 
 
 
@@ -514,7 +512,7 @@ function _makeExtraCols($assignment_id, $column) {
 
     $rounding = DBGet(DBQuery('SELECT VALUE FROM program_user_config WHERE USER_ID=\'' . User('STAFF_ID') . '\' AND TITLE=\'ROUNDING\' AND PROGRAM=\'Gradebook\' '));
 
-    if (count($rounding))
+    if (is_countable($rounding) && count($rounding))
         $_SESSION['ROUNDING'] = $rounding[1]['VALUE'];
     if (strtotime($THIS_RET['START_DATE'], 0) == strtotime($THIS_RET['DUE_' . $assignment_id], 0))
         $days_left = 1;
@@ -575,122 +573,121 @@ function _makeExtraCols($assignment_id, $column) {
 
 function _makeWtg($assignment_id,$column)
 {	
-        global $THIS_RET,$total_points,$current_RET,$points_RET,$tabindex,$max_allowed; 
+    global $THIS_RET,$total_points,$current_RET,$points_RET,$tabindex,$max_allowed;
        
-        if(clean_param($_REQUEST['assignment_id'],PARAM_INT)=='' && substr($_REQUEST['assignment_id'],0,1)!='t' && !$_REQUEST['student_id'])
-			{
-
-				if(count($current_RET[$THIS_RET['STUDENT_ID']]))
-				{
-                                            $total = $total_percent = 0;
-                                            $assign_typ_wg=array();
-                                            $tot_weight_grade='';
-                                            $tot_weighted_percent=array();
-                                            $assignment_type_count=array();
+    if((clean_param($_REQUEST['assignment_id'],PARAM_INT)=='' || clean_param($_REQUEST['assignment_id'],PARAM_INT)=='0') && substr($_REQUEST['assignment_id'],0,1)!='t' && !$_REQUEST['student_id'])
+	{
+		if(is_countable($current_RET[$THIS_RET['STUDENT_ID']]) && count($current_RET[$THIS_RET['STUDENT_ID']]))
+		{
+            $total = $total_percent = 0;
+            $assign_typ_wg=array();
+            $tot_weight_grade='';
+            $tot_weighted_percent=array();
+            $assignment_type_count=array();
                                            
-                                            foreach($current_RET[$THIS_RET['STUDENT_ID']] as $partial_points)
-                                            {
-                                                
-                                               
-                                               $THIS_RET['STUDENT_ID']['flag']=0;
-                                                    if( $partial_points['LETTERWTD_GRADE']!=-1.00 && $partial_points['LETTERWTD_GRADE']!='')
-                                                    {
-                                                        $wper = explode('%', $partial_points['LETTER_GRADE']);
-                                                        
-                                                        if ($tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] != '')
-                                                            $tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] = $tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] + $wper[0];
-                                                        else
-                                                            $tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] = $wper[0];
-                                                        if ($assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] != '')
-                                                            $assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] = $assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] + 1;
-                                                        else
-                                                            $assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] = 1;
-                                                        if ($partial_points['ASSIGN_TYP_WG'] != '')
-                                                            $assign_typ_wg[$partial_points['ASSIGNMENT_TYPE_ID']] = substr($partial_points['ASSIGN_TYP_WG'], 0, -2);
-                                                        
-//                                                            $total += (($partial_points['PARTIAL_POINTS']/$partial_points['PARTIAL_TOTAL']))*$partial_points['FINAL_GRADE_PERCENT'];
-                                                            //$total_percent += $partial_points['PARTIAL_TOTAL'];
-                                                      
-                                                      $THIS_RET['STUDENT_ID']['flag']=1;
-                                                    }
-                                            }
+            foreach($current_RET[$THIS_RET['STUDENT_ID']] as $partial_points)
+            {
+                // $THIS_RET['STUDENT_ID']['flag']=0;
+                $THIS_RET_STUDENT_ID_flag = 0;
+
+                if( $partial_points['LETTERWTD_GRADE']!=-1.00 && $partial_points['LETTERWTD_GRADE']!='')
+                {
+                    $wper = explode('%', $partial_points['LETTER_GRADE']);
+                    
+                    if ($tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] != '')
+                        $tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] = $tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] + $wper[0];
+                    else
+                        $tot_weighted_percent[$partial_points['ASSIGNMENT_TYPE_ID']] = $wper[0];
+                    if ($assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] != '')
+                        $assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] = $assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] + 1;
+                    else
+                        $assignment_type_count[$partial_points['ASSIGNMENT_TYPE_ID']] = 1;
+                    if ($partial_points['ASSIGN_TYP_WG'] != '')
+                        $assign_typ_wg[$partial_points['ASSIGNMENT_TYPE_ID']] = substr($partial_points['ASSIGN_TYP_WG'], 0, -2);
+                    
+                    // $total += (($partial_points['PARTIAL_POINTS']/$partial_points['PARTIAL_TOTAL']))*$partial_points['FINAL_GRADE_PERCENT'];
+                        // $total_percent += $partial_points['PARTIAL_TOTAL'];
+                  
+                    // $THIS_RET['STUDENT_ID']['flag']=1;
+                    $THIS_RET_STUDENT_ID_flag = 1;
+                }
+            }
                                                     
-                                                            $total_weightage = 0;
-//                                                            print_r($assignment_type_count);
-                 foreach ($assignment_type_count as $assign_key => $value) {
-                            $total_weightage = $total_weightage + $assign_typ_wg[$assign_key];
-                            if ($tot_weight_grade == '')
-                            {
-                                            $tot_weight_grade = round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2);
-                                            //echo $tot_weight_grade .'= round((round(('.$tot_weighted_percent[$assign_key].' / '.$value.'), 2) * '.$assign_typ_wg[$assign_key].') / 100, 2)----new<br/><br/>';
-
-                            }else{
-                                            $tot_weight_grade = $tot_weight_grade + (round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2));
-                                            //echo $tot_weight_grade .'= '.$tot_weight_grade.' + (round((round(('.$tot_weighted_percent[$assign_key].' / '.$value.'), 2) * '.$assign_typ_wg[$assign_key].') / 100, 2))----old<br/><br/>';
-
-
-                            }
-                 }
-                                $tot_weight_grade = $tot_weight_grade / 100;
+            $total_weightage = 0;
+            // print_r($assignment_type_count);
+            foreach ($assignment_type_count as $assign_key => $value) {
+                $total_weightage = $total_weightage + $assign_typ_wg[$assign_key];
+                if ($tot_weight_grade == '')
+                {
+                    $tot_weight_grade = round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2);
+                    //echo $tot_weight_grade .'= round((round(('.$tot_weighted_percent[$assign_key].' / '.$value.'), 2) * '.$assign_typ_wg[$assign_key].') / 100, 2)----new<br/><br/>';
+                }else{
+                    $tot_weight_grade = $tot_weight_grade + (round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2));
+                    //echo $tot_weight_grade .'= '.$tot_weight_grade.' + (round((round(('.$tot_weighted_percent[$assign_key].' / '.$value.'), 2) * '.$assign_typ_wg[$assign_key].') / 100, 2))----old<br/><br/>';
+                }
+            }
+            $tot_weight_grade = $tot_weight_grade / 100;
                                
-                                                        //$tot_weight_grade=$tot_weight_grade/100;
-//                                            if($total_percent!=0)
-//						$total = ($total/$total_percent)*$partial_points;
-                                
-                                    
-				}
-				else
-					$total = 0;
-                                $tot_weight_grade = ($tot_weight_grade / $total_weightage) * 100;
-                               // return (($current_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!=-1.00 && $current_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!='' && $current_RET[$THIS_RET['STUDENT_ID']][1]['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'').'</B>':'N/A');
-                               return (($THIS_RET['STUDENT_ID']['flag']==1) ?_makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'').'</B>':'N/A');
-//                                $ppercent= _makeLetterGrade($total,"",User('STAFF_ID'),"%");
-//                                if($points_RET[$THIS_RET['STUDENT_ID']][1]['PARTIAL_POINTS']!='')
-//                                    return ($total>$max_allowed?'<FONT color=red>':'').$ppercent.($total>$max_allowed?'</FONT>':'').'% &nbsp;<B>'._makeLetterGrade($total,"",User('STAFF_ID')).'</B>';
-//                                else
-//					return 'Not Graded';
-			}
-			else if(clean_param($_REQUEST['assignment_id'],PARAM_INT)!='' && substr($_REQUEST['assignment_id'],0,1)!='t' && !$_REQUEST['student_id'])
-			{
-				$points = $points_RET[$THIS_RET['STUDENT_ID']][1]['POINTS'];                                
-					if($points!='-1')
-                                        {
-                                            if($points!='')
-                                            {
-                                                foreach($points_RET[$THIS_RET['STUDENT_ID']] as $partial_points)
-                                                    if($partial_points['TOTAL_POINTS']!=0 && $partial_points['POINTS']!=-1.00 && $partial_points['POINTS']!='')
-                                                    {
-                                                        $pnt=(($partial_points['POINTS']/$partial_points['TOTAL_POINTS'])*100)*$partial_points['FINAL_GRADE_PERCENT'];
-                                                        $pnt=$pnt/100;
-                                                        return (($points_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!=-1.00 && $points_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!='' && $points_RET[$THIS_RET['STUDENT_ID']][1]['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($pnt,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($pnt,"",User('STAFF_ID'),'').'</B>':'N/A');
-//                                                
-                                                    }
-                                                    else
-                                                    return 'N/A';
-                                                
-                                            }
-                                            else
-                                                    return 'N/A';
-                                        }
-//                                                 
-                                            else
-                                                return 'N/A';
-//                                        }
-//					else
-//						return 'N/A&nbsp;N/A';
-//                                }
-//				else
-//					return 'E/C';
-			}
-                        else
-                        {
-                            
-                            $wtdper=($THIS_RET['POINTS']/$THIS_RET['TOTAL_POINTS'])*$THIS_RET['FINAL_GRADE_PERCENT'];
-                            return (($THIS_RET['LETTERWTD_GRADE']!=-1.00 && $THIS_RET['LETTERWTD_GRADE']!='' && $THIS_RET['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($wtdper,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($wtdper,"",User('STAFF_ID'),'').'</B>':'N/A');
-                        }
-        
+            //$tot_weight_grade=$tot_weight_grade/100;
+            // if($total_percent!=0)
+            //     $total = ($total/$total_percent)*$partial_points;
+		}
+		else
+			$total = 0;
         
+        if ($tot_weight_grade != '' && $total_weightage != '')
+            $tot_weight_grade = ($tot_weight_grade / $total_weightage) * 100;
+        else
+            $tot_weight_grade = 0;
+
+        // return (($current_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!=-1.00 && $current_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!='' && $current_RET[$THIS_RET['STUDENT_ID']][1]['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'').'</B>':'N/A');
+        // return (($THIS_RET['STUDENT_ID']['flag']==1) ?_makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'').'</B>':'N/A');
+        return (($THIS_RET_STUDENT_ID_flag==1) ?_makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($tot_weight_grade,"",User('STAFF_ID'),'').'</B>':'N/A');
+        // $ppercent= _makeLetterGrade($total,"",User('STAFF_ID'),"%");
+        // if($points_RET[$THIS_RET['STUDENT_ID']][1]['PARTIAL_POINTS']!='')
+        //                                    return ($total>$max_allowed?'<FONT color=red>':'').$ppercent.($total>$max_allowed?'</FONT>':'').'% &nbsp;<B>'._makeLetterGrade($total,"",User('STAFF_ID')).'</B>';
+        //                                else
+        //					return 'Not Graded';
+	}
+	else if(clean_param($_REQUEST['assignment_id'],PARAM_INT)!='' && substr($_REQUEST['assignment_id'],0,1)!='t' && !$_REQUEST['student_id'])
+	{
+		$points = $points_RET[$THIS_RET['STUDENT_ID']][1]['POINTS'];
+
+		if($points!='-1')
+        {
+            if($points!='')
+            {
+                foreach($points_RET[$THIS_RET['STUDENT_ID']] as $partial_points)
+                    if($partial_points['TOTAL_POINTS']!=0 && $partial_points['POINTS']!=-1.00 && $partial_points['POINTS']!='')
+                    {
+                        $pnt=(($partial_points['POINTS']/$partial_points['TOTAL_POINTS'])*100)*$partial_points['FINAL_GRADE_PERCENT'];
+                        $pnt=$pnt/100;
+                        return (($points_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!=-1.00 && $points_RET[$THIS_RET['STUDENT_ID']][1]['LETTERWTD_GRADE']!='' && $points_RET[$THIS_RET['STUDENT_ID']][1]['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($pnt,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($pnt,"",User('STAFF_ID'),'').'</B>':'N/A');
+                        //                                                
+                    }
+                    else
+                        return 'N/A';
+            }
+            else
+                return 'N/A';
+        }
+        //                                                 
+        else
+            return 'N/A';
+        //                                        }
+        //					else
+        //						return 'N/A&nbsp;N/A';
+        //                                }
+        //				else
+        //					return 'E/C';
+	}
+    else
+    {
+        $wtdper=($THIS_RET['POINTS']/$THIS_RET['TOTAL_POINTS'])*$THIS_RET['FINAL_GRADE_PERCENT'];
+        return (($THIS_RET['LETTERWTD_GRADE']!=-1.00 && $THIS_RET['LETTERWTD_GRADE']!='' && $THIS_RET['ASSIGN_TYP_WG']!='N/A') ?_makeLetterGrade($wtdper,"",User('STAFF_ID'),'%').'% <B>'._makeLetterGrade($wtdper,"",User('STAFF_ID'),'').'</B>':'N/A');
+    }
 }
+
 function _makeAssnWG($value, $column) {
     global $THIS_RET, $student_points, $total_points, $percent_weights;
     return ($THIS_RET['ASSIGN_TYP_WG'] != 'N/A' ? ($value * 100) . ' %' : $THIS_RET['ASSIGN_TYP_WG']);

--- modules/grades/HistoricalReportCardGrades.php ---
@@ -273,17 +273,24 @@
 
 
 
+        // $gquery = 'SELECT mp.syear, mp.marking_period_id as mp_id, mp.title as mp_name, mp.post_end_date as posted, sgc.grade_level_short as GRADE_LEVEL, 
+        // sgc.weighted_gpa, sgc.unweighted_gpa
+        // FROM marking_periods mp, student_gpa_calculated sgc, schools s
+        // WHERE sgc.marking_period_id = mp.marking_period_id and
+        //      s.id = mp.school_id and sgc.student_id = ' . $student_id . ' AND mp.marking_period_id IN (SELECT marking_period_id FROM  history_marking_periods)
+        // AND mp.school_id = \'' . UserSchool() . '\' order by mp.post_end_date';
+
         $gquery = 'SELECT mp.syear, mp.marking_period_id as mp_id, mp.title as mp_name, mp.post_end_date as posted, sgc.grade_level_short as GRADE_LEVEL, 
-       sgc.weighted_gpa, sgc.unweighted_gpa
-       FROM marking_periods mp, student_gpa_calculated sgc, schools s
-       WHERE sgc.marking_period_id = mp.marking_period_id and
-             s.id = mp.school_id and sgc.student_id = ' . $student_id . ' AND mp.marking_period_id IN (SELECT marking_period_id FROM  history_marking_periods)
-       AND mp.school_id = \'' . UserSchool() . '\' order by mp.post_end_date';
+        sgc.weighted_gpa, sgc.unweighted_gpa
+        FROM marking_periods mp, student_gpa_calculated sgc, schools s
+        WHERE sgc.marking_period_id = mp.marking_period_id and
+            s.id = mp.school_id and sgc.student_id = ' . $student_id . ' 
+        AND mp.school_id = \'' . UserSchool() . '\' order by mp.syear, mp.post_end_date';
 
         $GRET = DBGet(DBQuery($gquery));
 
 
-        $last_posted = _null;
+        //$last_posted = _null;
         $gmp = array(); //grade marking_periodso
         $grecs = array();  //grade records
         if ($GRET) {
@@ -322,15 +329,15 @@
         $mpselect = "<FORM class=\"form-horizontal\" action=Modules.php?modname=$_REQUEST[modname]&tab_id=" . $_REQUEST['tab_id'] . " method=POST id=F2 name=F2>";
         $mpselect .= "<SELECT class=\"form-control\" name=mp_id onchange='this.form.submit();'>";
         foreach ($gmp as $id => $mparray) {
-            $mpselect .= "<OPTION value=" . $id . (($id == $mp_id) ? ' SELECTED' : '') . ">" . $mparray['schoolyear'] . ' ' . $mparray['mp_name'] . ', Grade ' . $mparray['grade_level'] . "</OPTION>";
+            $mpselect .= "<OPTION value=" . $id . (($id == $mp_id) ? ' SELECTED' : '') . ">" . $mparray['schoolyear'] . ' | ' . $mparray['mp_name'] . "</OPTION>";
         }
         $mpselect .= "<OPTION value=0 " . (($mp_id == '0') ? ' SELECTED' : '') . ">"._addAnotherMarkingPeriod."</OPTION>";
         $mpselect .= '</SELECT>';
 
         echo '</FORM>';
 
         echo '<div class="panel">';
-        echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&tab_id=" . strip_tags(trim($_REQUEST[tab_id])) . "&mp_id=$mp_id method=POST>";
+        echo "<FORM action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=update&tab_id=" . strip_tags(trim($_REQUEST['tab_id'])) . "&mp_id=$mp_id method=POST>";
 
         $sms_grade_level = TextInput($gmp[$mp_id]['grade_level'], "SMS_GRADE_LEVEL", "", 'size=25  class=form-control');
 
@@ -359,16 +366,47 @@
         if ($mp_id == "0") {
             $syear = UserSyear();
             $sql = 'SELECT MARKING_PERIOD_ID, SYEAR, TITLE, POST_END_DATE FROM marking_periods WHERE SCHOOL_ID = \'' . UserSchool() .
-                    '\' ORDER BY POST_END_DATE';
+                    '\' AND MARKING_PERIOD_ID NOT IN (SELECT MARKING_PERIOD_ID FROM history_marking_periods) ORDER BY SYEAR, POST_END_DATE';
             $MPRET = DBGet(DBQuery($sql));
-            if ($MPRET) {
+
+            $hist_mp_sql = 'SELECT MARKING_PERIOD_ID, SYEAR, TITLE, POST_END_DATE FROM marking_periods WHERE SCHOOL_ID = \'' . UserSchool() .
+                    '\' AND MARKING_PERIOD_ID IN (SELECT MARKING_PERIOD_ID FROM history_marking_periods) ORDER BY SYEAR, POST_END_DATE';
+            $HIST_MPRET = DBGet(DBQuery($hist_mp_sql));
+
+            if ($MPRET || $HIST_MPRET) {
                 $mpoptions = array();
                 foreach ($MPRET as $id => $mp) {
-                    $mpoptions[$mp['MARKING_PERIOD_ID']] = formatSyear($mp['SYEAR']) . ' ' . $mp['TITLE'];
+                    $mpoptions[$mp['MARKING_PERIOD_ID']] = formatSyear($mp['SYEAR']) . ' | ' . $mp['TITLE'];
+                }
+
+                $hist_mpoptions = array();
+                foreach ($HIST_MPRET as $hid => $hmp) {
+                    $hist_mpoptions[$hmp['MARKING_PERIOD_ID']] = formatSyear($hmp['SYEAR']) . ' | ' . $hmp['TITLE'];
                 }
 
+                $new_MP_RET_OPT = '<select name="new_sms" class="form-control">';
+                
+                if (count($MPRET) > 0) {
+                    $new_MP_RET_OPT .= '<option value="0" disabled>▼ ' . _schoolMarkingPeriods . '</option>';
+
+                    foreach ($mpoptions as $s_mp_key => $s_mp_val) {
+                        $new_MP_RET_OPT .= '<option value="' . $s_mp_key . '">' . $s_mp_val . '</option>';
+                    }
+                }
+
+                if (count($HIST_MPRET) > 0) {
+                    $new_MP_RET_OPT .= '<option value="0" disabled>▼ ' . _historyMarkingPeriods . '</option>';
+
+                    foreach ($hist_mpoptions as $h_mp_key => $h_mp_val) {
+                        $new_MP_RET_OPT .= '<option value="' . $h_mp_key . '">' . $h_mp_val . '</option>';
+                    }
+                }
+
+                $new_MP_RET_OPT .= '</select>';
+
                 echo '<div class="form-group">';
-                echo '<div class="col-md-4"><label class="control-label">'._newMarkingPeriod.'</label>' . SelectInput(null, 'new_sms', '', $mpoptions, false, $extra) . '</div>';
+                // echo '<div class="col-md-4"><label class="control-label">'._newMarkingPeriod.'</label>' . SelectInput(null, 'new_sms', '', $mpoptions, false, $extra) . '</div>';
+                echo '<div class="col-md-4"><label class="control-label">'._newMarkingPeriod.'</label>' . $new_MP_RET_OPT . '</div>';
                 echo '<div class="col-md-4"><label class="control-label">'._schoolName.'</label>' . TextInput($historyschool[1]['school_name'], "SCHOOL_NAME", "", 'size=35  class=form-control ') . '</div>';
                 echo '<div class="col-md-4"><label class="control-label">'._gradeLevel.'</label>' . $sms_grade_level . '</div>';
                 echo '</div>';
@@ -382,9 +420,9 @@
                 $school_name = $historyschool[1]['SCHOOL_NAME'];
             else {
                 $get_schoolid = DBGet(DBQuery("SELECT school_id FROM  marking_periods  WHERE marking_period_id = $selectedmp"));
-                if ($get_schoolid[1]['school_id']) {
-                    $get_schoolid = DBGet(DBQuery("SELECT title FROM  schools  WHERE id = $get_schoolid[1][school_id]"));
-                    $school_name = $get_schoolid[1]['title'];
+                if ($get_schoolid[1]['SCHOOL_ID']) {
+                    $get_school_name = DBGet(DBQuery('SELECT title FROM  schools  WHERE id = \'' . $get_schoolid[1]['SCHOOL_ID'] . '\''));
+                    $school_name = $get_school_name[1]['TITLE'];
                 }
             }
             echo '<div class="form-group clearfix">';
@@ -473,12 +511,14 @@ function makeTextInput($value, $name) {
     elseif ($name == 'COURSE_CODE')
         $extra = 'size=10 maxlength=20 class=form-control';
     elseif ($name == 'GRADE_PERCENT')
-        $extra = 'size=6 maxlength=6 class=form-control';
+        $extra = 'size=6 maxlength=6 class=form-control onkeydown="return numberOnlyMod(event);"';
     elseif ($name == 'GRADE_LETTER')
         $extra = 'size=5 maxlength=5 class=form-control';
+    elseif ($name == 'GP_SCALE' || $name == 'CREDIT_ATTEMPTED' || $name == 'CREDIT_EARNED')
+        $extra = 'size=6 maxlength=6 class=form-control onkeydown="return numberOnlyMod(event);"';
     elseif ($name == 'GP') {
         $name = 'UNWEIGHTED_GP';
-        $extra = 'size=5 maxlength=5 class=form-control';
+        $extra = 'size=5 maxlength=5 class=form-control onkeydown="return numberOnlyMod(event);"';
     } else
         $extra = 'size=10 maxlength=10 class=form-control';
 

--- modules/grades/HonorRoll.php ---
@@ -29,7 +29,7 @@
 include 'modules/grades/DeletePromptX.fnc.php';
 DrawBC(""._gradebook." > " . ProgramTitle());
 if ($_REQUEST['modfunc'] == 'save' && $_REQUEST['honor_roll']) {
-    if (count($_REQUEST['st_arr'])) {
+    if (is_countable($_REQUEST['st_arr']) && count($_REQUEST['st_arr'])) {
         $mp = $_REQUEST['mp'];
         if ($_REQUEST['honor_roll'] != 986) {
 
@@ -140,7 +140,7 @@
              'ALT_ID' =>_alternateId,
              'GRADE_ID' =>_grade,
              'PHONE' =>_phone,
-             'HONOR_ROLL' => honorRoll
+             'HONOR_ROLL' => _honorRoll
             );
             ListOutputPrint_Report($RET, $columns);
         } else {
@@ -198,9 +198,9 @@
             $mp = $fy;
         }
         if ($_REQUEST['w_course_period_id'])
-            echo "<FORM action=ForExport.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST[include_inactive])) . "&honor_roll=" . strip_tags(trim($_REQUEST[honor_roll])) . "&mp=$mp&w_course_period_id=" . strip_tags(trim($_REQUEST[w_course_period_id])) . "&_openSIS_PDF=true method=POST target=_blank>";
+            echo "<FORM action=ForExport.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST['include_inactive'])) . "&honor_roll=" . strip_tags(trim($_REQUEST['honor_roll'])) . "&mp=$mp&w_course_period_id=" . strip_tags(trim($_REQUEST['w_course_period_id'])) . "&_openSIS_PDF=true method=POST target=_blank>";
         else
-            echo "<FORM action=ForExport.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST[include_inactive])) . "&honor_roll=" . strip_tags(trim($_REQUEST[honor_roll])) . "&mp=$mp&_openSIS_PDF=true method=POST target=_blank>";
+            echo "<FORM action=ForExport.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST['include_inactive'])) . "&honor_roll=" . strip_tags(trim($_REQUEST['honor_roll'])) . "&mp=$mp&_openSIS_PDF=true method=POST target=_blank>";
         $extra['header_right'] = SubmitButton(_createHonorRollForSelectedStudents, '', 'class="btn btn-primary"');
 
         $extra['extra_header_left'] = '<div>';
@@ -213,7 +213,8 @@
     if (!isset($_REQUEST['_openSIS_PDF'])) {
         $extra['SELECT'] = ",s.STUDENT_ID AS CHECKBOX";
         $extra['functions'] = array('CHECKBOX' => '_makeChooseCheckbox');
-        $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller checked onclick="checkAll(this.form,this.form.controller.checked,\'st_arr\');"><A>');
+        // $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller checked onclick="checkAll(this.form,this.form.controller.checked,\'st_arr\');"><A>');
+        $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller checked onclick="checkAllDtMod(this,\'st_arr\');"><A>');
     }
     $extra['link'] = array('FULL_NAME' =>false);
     $extra['new'] = true;
@@ -278,8 +279,14 @@
 }
 
 function _makeChooseCheckbox($value, $title) {
-    return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
+    global $THIS_RET;
+    // return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
+    
+    return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET['STUDENT_ID'] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
 }
+// function _makeChooseCheckbox($value, $title) {
+//     return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
+// }
 
 function MyWidgets($item, $mp) {
     global $extra, $THIS_RET;

--- modules/grades/InputFinalGrades.php ---
@@ -209,7 +209,8 @@
                     if ($programconfig[User('STAFF_ID')]['WEIGHT'] == 'Y') {
                         $assign_typ_wg = array();
                         $tot_weight_grade = '';
-                        $total_weightage = '';
+                        //$total_weightage = '';
+                        $total_weightage = 0;
                         if ($course_periods[1]['MARKING_PERIOD_ID'] == NULL) {
                             $sql = 'SELECT a.TITLE,t.TITLE AS ASSIGN_TYP,a.ASSIGNED_DATE,a.DUE_DATE, t.ASSIGNMENT_TYPE_ID, t.FINAL_GRADE_PERCENT AS WEIGHT_GRADE  ,  t.FINAL_GRADE_PERCENT,t.FINAL_GRADE_PERCENT as ASSIGN_TYP_WG,g.POINTS,a.POINTS AS TOTAL_POINTS,g.COMMENT,g.POINTS AS LETTER_GRADE,g.POINTS AS LETTERWTD_GRADE,CASE WHEN (a.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=a.ASSIGNED_DATE) AND (a.DUE_DATE IS NULL OR CURRENT_DATE>=a.DUE_DATE) THEN \'Y\' ELSE NULL END AS DUE FROM gradebook_assignment_types t,gradebook_assignments a LEFT OUTER JOIN gradebook_grades g ON (a.ASSIGNMENT_ID=g.ASSIGNMENT_ID AND g.STUDENT_ID=\'' . $student_id . '\' AND g.COURSE_PERIOD_ID=\'' . $course_period_id . '\') WHERE   a.ASSIGNMENT_TYPE_ID=t.ASSIGNMENT_TYPE_ID AND (a.COURSE_PERIOD_ID=\'' . $course_period_id . '\' OR a.COURSE_ID=\'' . $course_id . '\' AND a.STAFF_ID=\'' . User('STAFF_ID') . '\') AND t.COURSE_ID=\'' . $course_id . '\' AND (a.MARKING_PERIOD_ID=\'' . UserMP() . '\' OR a.MARKING_PERIOD_ID=\'' . $fy_mp_id . '\')';
                         } else {
@@ -268,7 +269,7 @@
                             $total1 = 0;
                             if ($programconfig[User('STAFF_ID')][$prefix . $mp1] != '') {
 
-                                $total1 += (round($tot_weight_grade, 2)) * ($programconfig[User('STAFF_ID')][$prefix . $mp1] / 100);
+                                $total1 += (trim($tot_weight_grade) == "" ? 0 : (round($tot_weight_grade, 2)) * ($programconfig[User('STAFF_ID')][$prefix . $mp1] / 100));
 
                                 // break;
                             }
@@ -289,9 +290,9 @@
                             //-------------------------------------------------------//
 
 
-
-
-                            $import_RET[$student_id] = array(1 => array('REPORT_CARD_GRADE_ID' => _makeLetterGrade($tot_weight_grade/$total_weightage, $course_period_id, 0, 'ID'), 'GRADE_PERCENT' => _makeLetterGrade($tot_weight_grade / $total_weightage, $course_period_id, User('STAFF_ID'), '%') . '%'));
+                            //echo ($total_weightage == 0 ? "XYZ" : ("A"/0));
+                            //echo $total_weightage."XYZ";
+                            $import_RET[$student_id] = array(1 => array('REPORT_CARD_GRADE_ID' => _makeLetterGrade((intval($total_weightage) == 0 ? 0 : $tot_weight_grade/$total_weightage), $course_period_id, 0, 'ID'), 'GRADE_PERCENT' => _makeLetterGrade((intval($total_weightage) == 0 ? 0 : $tot_weight_grade / $total_weightage), $course_period_id, User('STAFF_ID'), '%') . '%'));
                         } else {
                             foreach ($student as $partial_points)
                                 if ($partial_points['PARTIAL_TOTAL'] != 0) {
@@ -391,7 +392,7 @@
         } elseif (GetMP($_REQUEST['mp'], 'TABLE') == 'school_semesters' || GetMP($_REQUEST['mp'], 'TABLE') == 'school_years') {
             if ($sem || (GetMP($_REQUEST['mp'], 'TABLE') == 'school_years') && $fy) {
                 if (GetMP($_REQUEST['mp'], 'TABLE') == 'school_semesters') {
-                    $RET = DBGet(DBQuery('SELECT MARKING_PERIOD_ID,\'Y\' AS DOES_GRADES,NULL AS DOES_EXAM FROM school_quarters WHERE SEMESTER_ID=\'' . $_REQUEST['mp'] . '\' UNION SELECT MARKING_PERIOD_ID,NULL AS DOES_GRADES,DOES_EXAM FROM school_semesters WHERE MARKING_PERIOD_ID=\'' . $_REQUEST[mp] . '\''));
+                    $RET = DBGet(DBQuery('SELECT MARKING_PERIOD_ID,\'Y\' AS DOES_GRADES,NULL AS DOES_EXAM FROM school_quarters WHERE SEMESTER_ID=\'' . $_REQUEST['mp'] . '\' UNION SELECT MARKING_PERIOD_ID,NULL AS DOES_GRADES,DOES_EXAM FROM school_semesters WHERE MARKING_PERIOD_ID=\'' . $_REQUEST['mp'] . '\''));
                     $prefix = 'SEM-';
                 } else {
                     $RET = DBGet(DBQuery('SELECT q.marking_period_id,\'Y\' AS DOES_GRADES,NULL AS DOES_EXAM FROM school_quarters q,school_semesters s WHERE q.SEMESTER_ID=s.MARKING_PERIOD_ID AND s.YEAR_ID=\'' . $_REQUEST['mp'] . '\' UNION SELECT MARKING_PERIOD_ID,DOES_GRADES,DOES_EXAM FROM school_semesters WHERE YEAR_ID=\'' . $_REQUEST['mp'] . '\' UNION SELECT MARKING_PERIOD_ID,NULL AS DOES_GRADES,DOES_EXAM FROM school_years WHERE MARKING_PERIOD_ID=\'' . $_REQUEST['mp'] . '\''));
@@ -501,12 +502,14 @@
                     $gg_mp = UserMP();
 
                 if ($programconfig[User('STAFF_ID')]['WEIGHT'] == 'Y')
-                    $points_RET = DBGet(DBQuery('SELECT DISTINCT s.STUDENT_ID,gt.ASSIGNMENT_TYPE_ID,  gt.ASSIGNMENT_TYPE_ID,sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'gg.POINTS')) . ') AS PARTIAL_POINTS,sum(' . db_case(array('gg.POINTS', '\'-1\' OR (ga.due_date <  (select DISTINCT ssm.start_date  from student_enrollment ssm where ssm.STUDENT_ID=s.STUDENT_ID AND ssm.SYEAR=\'' . UserSyear() . '\' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1
+                    $points_RET = DBGet(DBQuery('SELECT DISTINCT s.STUDENT_ID,gt.ASSIGNMENT_TYPE_ID,  gt.ASSIGNMENT_TYPE_ID,sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'gg.POINTS')) . ') AS PARTIAL_POINTS,sum(' . db_case(array('gg.POINTS', '\'-1\' OR gg.POINTS IS NULL OR (ga.due_date <  (select DISTINCT ssm.start_date  from student_enrollment ssm where ssm.STUDENT_ID=s.STUDENT_ID AND ssm.SYEAR=\'' . UserSyear() . '\' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1
                         )  ) ', '\'0\'', 'ga.POINTS')) . ') AS PARTIAL_TOTAL,    gt.FINAL_GRADE_PERCENT FROM students s JOIN schedule ss ON (ss.STUDENT_ID=s.STUDENT_ID AND ss.COURSE_PERIOD_ID=\'' . $course_period_id . '\') JOIN gradebook_assignments ga ON ((ga.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID OR ga.COURSE_ID=\'' . $course_id . '\' AND ga.STAFF_ID=\'' . User('STAFF_ID') . '\') AND ga.MARKING_PERIOD_ID=\'' . $gg_mp . '\') LEFT OUTER JOIN gradebook_grades gg ON (gg.STUDENT_ID=s.STUDENT_ID AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID),gradebook_assignment_types gt WHERE gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gt.ASSIGNMENT_TYPE_ID=ga.ASSIGNMENT_TYPE_ID AND gt.COURSE_ID=\'' . $course_id . '\' AND ((ga.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=ga.ASSIGNED_DATE) AND (ga.DUE_DATE IS NULL OR CURRENT_DATE>=ga.DUE_DATE) OR gg.POINTS IS NOT NULL) GROUP BY s.STUDENT_ID,ss.START_DATE,gt.ASSIGNMENT_TYPE_ID,gt.FINAL_GRADE_PERCENT'), array(), array('STUDENT_ID'));
+              
                 else
-                    $points_RET = DBGet(DBQuery('SELECT DISTINCT  s.STUDENT_ID,\'-1\' AS ASSIGNMENT_TYPE_ID,sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'gg.POINTS')) . ') AS PARTIAL_POINTS,sum(' . db_case(array('gg.POINTS', '\'-1\' OR (ga.due_date <  (select DISTINCT ssm.start_date  from student_enrollment ssm where ssm.STUDENT_ID=s.STUDENT_ID AND ssm.SYEAR=\'' . UserSyear() . '\' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1
+                    $points_RET = DBGet(DBQuery('SELECT DISTINCT  s.STUDENT_ID,\'-1\' AS ASSIGNMENT_TYPE_ID,sum(' . db_case(array('gg.POINTS', "'-1'", "'0'", 'gg.POINTS')) . ') AS PARTIAL_POINTS,sum(' . db_case(array('gg.POINTS', '\'-1\' OR gg.POINTS IS NULL OR (ga.due_date <  (select DISTINCT ssm.start_date  from student_enrollment ssm where ssm.STUDENT_ID=s.STUDENT_ID AND ssm.SYEAR=\'' . UserSyear() . '\' AND ssm.SCHOOL_ID=' . UserSchool() . ' AND (ssm.START_DATE IS NOT NULL AND (CURRENT_DATE<=ssm.END_DATE OR CURRENT_DATE>=ssm.END_DATE OR  ssm.END_DATE IS NULL)) order by ssm.start_date desc limit 1
                         )  ) ', '\'0\'', 'ga.POINTS')) . ') AS PARTIAL_TOTAL,\'1\' AS FINAL_GRADE_PERCENT FROM students s JOIN schedule ss ON (ss.STUDENT_ID=s.STUDENT_ID AND ss.COURSE_PERIOD_ID=\'' . $course_period_id . '\') JOIN gradebook_assignments ga ON ((ga.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID OR ga.COURSE_ID=\'' . $course_id . '\' AND ga.STAFF_ID=\'' . User('STAFF_ID') . '\') AND ga.MARKING_PERIOD_ID=\'' . $gg_mp . '\') LEFT OUTER JOIN gradebook_grades gg ON (gg.STUDENT_ID=s.STUDENT_ID AND gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND gg.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID)   WHERE gg.ASSIGNMENT_ID=ga.ASSIGNMENT_ID AND ((ga.ASSIGNED_DATE IS NULL OR CURRENT_DATE>=ga.ASSIGNED_DATE) AND (ga.DUE_DATE IS NULL OR CURRENT_DATE>=ga.DUE_DATE) OR gg.POINTS IS NOT NULL) GROUP BY s.STUDENT_ID,ss.START_DATE,FINAL_GRADE_PERCENT'), array(), array('STUDENT_ID'));
 
+
                 if (count($points_RET)) {
                     foreach ($points_RET as $student_id => $student) {
                         $total = $total_percent = 0;
@@ -799,7 +802,7 @@
                     $sql .= ',UNWEIGHTED_GP=\'' . $grades_RET[$columns['grade']][1]['UNWEIGHTED_GP'] . '\'';
                     $sql .= ',CREDIT_EARNED=\'' . ($grades_RET[$columns['grade']][1]['UNWEIGHTED_GP'] > 0 ? $course_RET[1]['CREDITS'] : 0) . '\'';
                 }
-                $sql .= ',COURSE_TITLE=\'' . $course_RET[1]['COURSE_NAME'] . '\'';
+                $sql .= ',COURSE_TITLE=\'' . addslashes($course_RET[1]['COURSE_NAME']) . '\'';
                 $sql .= ',GP_SCALE=\'' . $grades_RET[$columns['grade']][1]['GP_SCALE'] . '\'';
                 $sql .= ',CREDIT_ATTEMPTED=\'' . $course_RET[1]['CREDITS'] . '\'';
             } elseif (isset($columns['percent']) && $columns['percent'] != $current_RET[$student_id][1]['GRADE_PERCENT']) {
@@ -833,7 +836,7 @@
                         else
                             $sql .= ',CREDIT_EARNED=\'0\'';
                     }
-                    $sql .= ',COURSE_TITLE=\'' . $course_RET[1]['COURSE_NAME'] . '\'';
+                    $sql .= ',COURSE_TITLE=\'' . addslashes($course_RET[1]['COURSE_NAME']) . '\'';
                     $sql .= ',GP_SCALE=\'' . $grades_RET[$gp_id][1]['GP_SCALE'] . '\'';
                     $sql .= ',CREDIT_ATTEMPTED=\'' . $course_RET[1]['CREDITS'] . '\'';
                 }
@@ -873,9 +876,9 @@
                 $grade = _makeLetterGrade($percent / 100, $course_period_id, 0, 'ID');
             }
 
-            $id = DBGet(DBQuery("SHOW TABLE STATUS LIKE 'student_report_card_grades'"));
-            $grade_id[1]['ID'] = $id[1]['AUTO_INCREMENT'];
-            $ngrade_id = $grade_id[1]['ID'];
+            // $id = DBGet(DBQuery("SHOW TABLE STATUS LIKE 'student_report_card_grades'"));
+            // $grade_id[1]['ID'] = $id[1]['AUTO_INCREMENT'];
+            // $ngrade_id = $grade_id[1]['ID'];
 
             if (stripos($_SERVER['SERVER_SOFTWARE'], 'linux')) {
                 $columns['comment'] = mysqli_real_escape_string($columns['comment']);
@@ -897,7 +900,7 @@
             $sql = 'INSERT INTO student_report_card_grades (SYEAR,SCHOOL_ID,STUDENT_ID,COURSE_PERIOD_ID,MARKING_PERIOD_ID,REPORT_CARD_GRADE_ID,GRADE_PERCENT,
                     COMMENT,GRADE_LETTER,WEIGHTED_GP,UNWEIGHTED_GP,COURSE_TITLE,GP_SCALE,CREDIT_ATTEMPTED,CREDIT_EARNED,CREDIT_CATEGORY)
 					values(\'' . UserSyear() . '\',\'' . UserSchool() . '\',\'' . $student_id . '\',\'' . $course_period_id . '\',\'' . $_REQUEST['mp'] . '\',\'' . $grade . '\',\'' . $percent . '\',
-                    \'' . singleQuoteReplace('', '', clean_param($columns['comment'], PARAM_NOTAGS)) . '\',\'' . $grades_RET[$grade][1]['TITLE'] . '\',\'' . $WEIGHTED_GP . '\',\'' . $UNWEIGHTED_GP . '\',\'' . $course_RET[1]['COURSE_NAME'] . '\',\'' . $grades_RET[$grade][1]['GP_SCALE'] . '\',\'' . $course_RET[1]['CREDITS'] . '\',\'' . $CREDIT_EARNED . '\',\'' . $gr_crct . '\')';
+                    \'' . singleQuoteReplace('', '', clean_param($columns['comment'], PARAM_NOTAGS)) . '\',\'' . $grades_RET[$grade][1]['TITLE'] . '\',\'' . $WEIGHTED_GP . '\',\'' . $UNWEIGHTED_GP . '\',\'' . addslashes($course_RET[1]['COURSE_NAME']) . '\',\'' . $grades_RET[$grade][1]['GP_SCALE'] . '\',\'' . $course_RET[1]['CREDITS'] . '\',\'' . $CREDIT_EARNED . '\',\'' . $gr_crct . '\')';
         }
 
         if ($sql) {
@@ -1208,7 +1211,7 @@
         echo $mps_select . ' &nbsp; ' . SubmitButton(_save, 'submit[save]', 'class="btn btn-primary" onclick="self_disable(this);"').' &nbsp; &nbsp; ';
         echo '<input type=hidden name=period value="' . strip_tags(trim($_REQUEST['period'])) . '" />';
     }
-    echo '<label class="checkbox checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=include_inactive value=Y' . ($_REQUEST['include_inactive'] == 'Y' ? " CHECKED onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=\";'" : " onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=Y\";'") . '><span></span>'._includeInactiveStudents.':</label>';
+    echo '<label class="checkbox checkbox-inline checkbox-switch switch-success switch-xs"><INPUT type=checkbox name=include_inactive value=Y' . ($_REQUEST['include_inactive'] == 'Y' ? " CHECKED onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=\";'" : " onclick='document.location.href=\"" . PreparePHP_SELF($tmp_REQUEST) . "&include_inactive=Y\";'") . '><span></span> '._includeInactiveStudents.'</label>';
     echo '</div></div>';
     $dbf = DBGet(DBQuery('SELECT DOES_BREAKOFF,GRADE_SCALE_ID FROM course_periods WHERE COURSE_PERIOD_ID=\'' . UserCoursePeriod() . '\''));
     if ($dbf[1]['DOES_BREAKOFF'] == 'Y') {
@@ -1232,6 +1235,37 @@
         echo '<div class="alert bg-danger alert-styled-left">'._gradeReportingDateHasNotSetForThisMarkingPeriod.'.</div>';
     }
 
+    # Letting user know if they have weighted the course period but have not set any
+    # weights to the assignment types
+
+    if ($programconfig[User('STAFF_ID')]['WEIGHT'] == 'Y') {
+        $assignment_type_list_sql = 'SELECT ASSIGNMENT_TYPE_ID, TITLE, FINAL_GRADE_PERCENT 
+                FROM (
+                ( SELECT gat.ASSIGNMENT_TYPE_ID, gat.TITLE, gat.FINAL_GRADE_PERCENT FROM gradebook_assignment_types gat WHERE gat.COURSE_PERIOD_ID=\'' . UserCoursePeriod() . '\' )
+                UNION  
+                (SELECT gat.ASSIGNMENT_TYPE_ID as ASSIGNMENT_TYPE_ID,concat(gat.TITLE,\' (\',TRIM(cp.title),\')\') as TITLE, gat.FINAL_GRADE_PERCENT FROM gradebook_assignment_types gat, gradebook_assignments ga, course_periods cp
+                WHERE cp.course_period_id = gat.course_period_id AND gat.ASSIGNMENT_TYPE_ID = ga.ASSIGNMENT_TYPE_ID AND ga.COURSE_ID IS NOT NULL AND ga.COURSE_ID = \'' . UserCourse() . '\' AND ga.STAFF_ID = \'' . UserID() . '\' ) 
+                ) AS T
+                GROUP BY ASSIGNMENT_TYPE_ID';
+
+        $list_assignment_types = DBGet(DBQuery($assignment_type_list_sql));
+
+        $total_assignment_type_weightage = 0;
+        $total_assignment_type_weightage_arr = array();
+
+        if (!empty($list_assignment_types)) {
+            foreach ($list_assignment_types as $at_key => $at_val) {
+                if ($at_val['FINAL_GRADE_PERCENT'] != '' && number_format($at_val['FINAL_GRADE_PERCENT']) != 0)
+                    array_push($total_assignment_type_weightage_arr, $at_val['FINAL_GRADE_PERCENT']);
+            }
+
+            $total_assignment_type_weightage = array_sum($total_assignment_type_weightage_arr);
+
+            if ($total_assignment_type_weightage == 0)
+                echo '<div class="alert alert-warning alert-styled-left">' . _coursePeriodIsConfiguredAsWeightedButNoWeightsAreAssignedToTheAssignmentTypes . '</div>';
+        }
+    }
+
     if (AllowEdit() && count($stu_RET) != 0) {
         echo '<ul class="nav nav-pills nav-xs nav-pills-bordered">';
         if ($_REQUEST['use_percents'] != 'true')
@@ -1243,7 +1277,7 @@
             if ($cp_type != 'custom')
                 $gb_header .= "<li><A HREF=Modules.php?modname=$_REQUEST[modname]&include_inactive=$_REQUEST[include_inactive]&modfunc=gradebook&mp=$_REQUEST[mp]&use_percents=true&period=$_REQUEST[period]>"._getGradebookGrades."</A></li>";
             else
-                $gb_header .= "<li><A HREF=Modules.php?modname=$_REQUEST[modname]&include_inactive=$_REQUEST[include_inactive]&modfunc=gradebook&mp=" . ($_REQUEST[mp] == '' ? $full_year_mp[1]['MARKING_PERIOD_ID'] : $_REQUEST[mp]) . "&custom_cp=y&use_percents=true&period=$_REQUEST[period]>"._getGradebookGrades."</A></li>";
+                $gb_header .= "<li><A HREF=Modules.php?modname=$_REQUEST[modname]&include_inactive=$_REQUEST[include_inactive]&modfunc=gradebook&mp=" . ($_REQUEST['mp'] == '' ? $full_year_mp[1]['MARKING_PERIOD_ID'] : $_REQUEST['mp']) . "&custom_cp=y&use_percents=true&period=$_REQUEST[period]>"._getGradebookGrades."</A></li>";
 
             if ($cp_type != 'custom') {
                 if (GetMP($_REQUEST['mp'], 'PA_ID') != -1) {
@@ -1568,12 +1602,14 @@ function _makeExtra($value, $column) {
                     $total_points[$THIS_RET['ASSIGNMENT_TYPE_ID']] += $THIS_RET['TOTAL_POINTS'];
                     $percent_weights[$THIS_RET['ASSIGNMENT_TYPE_ID']] = $THIS_RET['FINAL_GRADE_PERCENT'];
                 }
-                return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+                //return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+                return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . rtrim(rtrim($value, '0'), '.') . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
             } else
                 return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>Excluded</font></TD><TD></TD><TD></TD></TR></TABLE>';
         else {
             $student_points[$THIS_RET['ASSIGNMENT_TYPE_ID']] += $value;
-            return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+            //return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+            return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . rtrim(rtrim($value, '0'), '.') . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
         }
     } elseif ($column == 'LETTER_GRADE') {
         if ($THIS_RET['TOTAL_POINTS'] != '0')
@@ -1593,5 +1629,3 @@ function _makeExtra($value, $column) {
             return 'E/C';
     }
 }
-
-?>

--- modules/grades/ParentProgressReports.php ---
@@ -117,7 +117,7 @@
             $courselist_ret = DBGet(DBQuery('SELECT s.TITLE AS COURSE, s.COURSE_ID, cp.COURSE_PERIOD_ID,cp.TEACHER_ID 
                                                         FROM gradebook_grades g, courses s, course_periods cp, gradebook_assignments ga, schedule sc
                                                         WHERE cp.COURSE_PERIOD_ID = ga.COURSE_PERIOD_ID AND sc.COURSE_PERIOD_ID=cp.COURSE_PERIOD_ID AND sc.STUDENT_ID=g.STUDENT_ID 
-                                                        AND s.COURSE_ID = cp.COURSE_ID AND ga.assignment_id = g.assignment_id AND ga.marking_period_id in (' . GetAllMP($MP_TYPE, UserMP()) . ')  and  g.STUDENT_ID=\'' . $student[STUDENT_ID] . '\' and s.syear=\'' . UserSyear() . '\' group by cp.COURSE_PERIOD_ID'));
+                                                        AND s.COURSE_ID = cp.COURSE_ID AND ga.assignment_id = g.assignment_id AND ga.marking_period_id in (' . GetAllMP($MP_TYPE, UserMP()) . ')  and  g.STUDENT_ID=\'' . $student['STUDENT_ID'] . '\' and s.syear=\'' . UserSyear() . '\' group by cp.COURSE_PERIOD_ID'));
             if (!empty($courselist_ret[1])) {
                 foreach ($courselist_ret as $courselist => $course) {
                     unset($student_points);
@@ -197,7 +197,7 @@
                     $grades_RET = DBGet(DBQuery($sql), array('ASSIGNED_DATE' => '_removeSpaces', 'ASSIGN_TYP_WG' => '_makeAssnWG', 'DUE_DATE' => '_removeSpaces', 'TITLE' => '_removeSpaces', 'POINTS' => '_makeExtra', 'LETTER_GRADE' => '_makeExtra', 'WEIGHT_GRADE' => '_makeWtg'));
 
                     //			$sum_points = $sum_percent = 0;
-                    if (count($percent_weights)) {
+                    if (is_countable($percent_weights) && count($percent_weights)) {
 
                         foreach ($percent_weights as $assignment_type_id => $percent) {
                             //				$sum_points += $student_points[$assignment_type_id] * $percent_weights[$assignment_type_id] / $total_points[$assignment_type_id];
@@ -212,7 +212,7 @@
                     //				$sum_points = 0;
                     if ($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT'] == 'Y') {
                         $assign_typ_wg = array();
-                        $tot_weight_grade = '';
+                        $tot_weight_grade = 0;
                         //                           $sum_points=0;
 
                         if (count($grades_RET)) {
@@ -234,17 +234,21 @@
                             $total_weightage = 0;
                             foreach ($assignment_type_count as $assign_key => $value) {
                                 $total_weightage = $total_weightage + $assign_typ_wg[$assign_key];
-                                if ($tot_weight_grade == '')
+                                if ($tot_weight_grade == 0)
                                     $tot_weight_grade = round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2);
                                 else
                                     $tot_weight_grade = $tot_weight_grade + (round((round(($tot_weighted_percent[$assign_key] / $value), 2) * $assign_typ_wg[$assign_key]) / 100, 2));
                             }
                             $tot_weight_grade = $tot_weight_grade / 100;
                         }
                     }
-                    $tot_weight_grade = ($tot_weight_grade / $total_weightage) * 100;
+                    // $tot_weight_grade = ($tot_weight_grade / $total_weightage) * 100;
+                    $tot_weight_grade=($total_weightage == 0 ? 0 : ($tot_weight_grade/$total_weightage)*100);
+
+
                     //                            $link['add']['html'] = array('TITLE'=>'<B>Total</B>','LETTER_GRADE'=>'( '.$total_stpoints.' / '.$total_asgnpoints.' ) '._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID'],"%").'%&nbsp;'._makeLetterGrade(($total_stpoints/$total_asgnpoints),$course_period_id,  $course['TEACHER_ID']),'WEIGHT_GRADE'=>$programconfig[$course['TEACHER_ID']][$course_period_id]['WEIGHT']=='Y'?_makeLetterGrade($tot_weight_grade,"",$course['TEACHER_ID'],'%').'%&nbsp;'._makeLetterGrade($tot_weight_grade,$course_period_id,$course['TEACHER_ID']):'N/A');
-                    $link['add']['html'] = array('TITLE' => '<font style="font-size:13;font-weight:bold;"><B>' . _total . '</B></font>', 'POINTS' => '<font style="font-size:13;font-weight:bold;">' . $total_stpoints . ' / ' . $total_asgnpoints . '</font>', 'LETTER_GRADE' => '<font style="font-size:13;font-weight:bold;">' . _makeLetterGrade(($total_stpoints / $total_asgnpoints), $course_period_id, $course['TEACHER_ID'], "%") . '%&nbsp;' . _makeLetterGrade(($total_stpoints / $total_asgnpoints), $course_period_id, $course['TEACHER_ID']) . '</font>', 'WEIGHT_GRADE' => '<font style="font-size:13;font-weight:bold;">' . ($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT'] == 'Y' ? _makeLetterGrade($tot_weight_grade, "", $course['TEACHER_ID'], '%') . '%&nbsp;' . _makeLetterGrade($tot_weight_grade, $course_period_id, $course['TEACHER_ID']) : 'N/A') . '</font>');
+                    $total_st_div_agn_points = ($total_asgnpoints == 0 ? 0 : $total_stpoints/$total_asgnpoints);
+                    $link['add']['html'] = array('TITLE' => '<font style="font-size:13;font-weight:bold;"><B>' . _total . '</B></font>', 'POINTS' => '<font style="font-size:13;font-weight:bold;">' . $total_stpoints . ' / ' . $total_asgnpoints . '</font>', 'LETTER_GRADE' => '<font style="font-size:13;font-weight:bold;">' . _makeLetterGrade($total_st_div_agn_points, $course_period_id, $course['TEACHER_ID'], "%") . '%&nbsp;' . _makeLetterGrade($total_st_div_agn_points, $course_period_id, $course['TEACHER_ID']) . '</font>', 'WEIGHT_GRADE' => '<font style="font-size:13;font-weight:bold;">' . ($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT'] == 'Y' ? _makeLetterGrade($tot_weight_grade, "", $course['TEACHER_ID'], '%') . '%&nbsp;' . _makeLetterGrade($tot_weight_grade, $course_period_id, $course['TEACHER_ID']) : 'N/A') . '</font>');
 
 
 
@@ -254,7 +258,7 @@
 
                     if ($_REQUEST['list_type'] == 'total') {
                         echo '<table border=0  style=\"font-size:12px;\" >';
-                        echo '<tr><td> ' . _total . ':</td><td>' . _makeLetterGrade(($total_stpoints / $total_asgnpoints), $course_period_id, $course['TEACHER_ID'], "%") . '%&nbsp;' . _makeLetterGrade(($total_stpoints / $total_asgnpoints), $course_period_id, $course['TEACHER_ID']) . '</td> </tr>';
+                        echo '<tr><td> ' . _total . ':</td><td>' . _makeLetterGrade($total_st_div_agn_points, $course_period_id, $course['TEACHER_ID'], "%") . '%&nbsp;' . _makeLetterGrade($total_st_div_agn_points, $course_period_id, $course['TEACHER_ID']) . '</td> </tr>';
                         echo '<tr><td> ' . _totalWeightedGrade . ':</td><td>' . ($program_config[$course['TEACHER_ID']][$course_period_id]['WEIGHT'] == 'Y' ? _makeLetterGrade($tot_weight_grade, "", $course['TEACHER_ID'], '%') . '%&nbsp;' . _makeLetterGrade($tot_weight_grade, $course_period_id, $course['TEACHER_ID']) : '' . _nA . '') . '</td> </tr>';
                         echo '<tr><td></td></tr>';
                         echo '</table>';
@@ -275,14 +279,14 @@
 
 if (!$_REQUEST['modfunc']) {
 
-    echo "<FORM action=ForExport.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST[include_inactive])) . "&_openSIS_PDF=true method=POST target=_blank>";
+    echo "<FORM action=ForExport.php?modname=" . strip_tags(trim($_REQUEST[modname])) . "&modfunc=save&include_inactive=" . strip_tags(trim($_REQUEST['include_inactive'])) . "&_openSIS_PDF=true method=POST target=_blank>";
     //echo '<div class="panel">';
     //echo '<div class="panel-body">';
     PopTable('header', _progressReports);
 
     echo '<div class="row">';
     echo '<div class="col-md-4">';
-    echo '<div class="form-group"><div class="checkbox checkbox-switch switch-success switch-xs"><label><INPUT type=checkbox value=Y name=assigned_date><span></span>' . _assignedDate . '</label></div></div>';
+    echo '<div class="form-group"><div class="checkbox checkbox-switch switch-success switch-xs"><label><INPUT type=checkbox value=Y name=assigned_date id=assigned_date><span></span>' . _assignedDate . '</label></div></div>';
     echo '</div>';
     echo '<div class="col-md-4">';
     echo '<div class="form-group"><div class="checkbox checkbox-switch switch-success switch-xs"><label><INPUT type=checkbox value=Y name=exclude_ec checked><span></span>' . _excludeUngradedECAssignments . '</label></div></div>';
@@ -291,7 +295,7 @@
 
     echo '<div class="row">';
     echo '<div class="col-md-4">';
-    echo '<div class="form-group"><div class="checkbox checkbox-switch switch-success switch-xs"><label><INPUT type=checkbox value=Y name=due_date checked><span></span>' . _dueDate . '</label></div></div>';
+    echo '<div class="form-group"><div class="checkbox checkbox-switch switch-success switch-xs"><label><INPUT type=checkbox value=Y name=due_date id=due_date checked><span></span>' . _dueDate . '</label></div></div>';
     echo '</div>';
     echo '<div class="col-md-4">';
     echo '<div class="form-group"><div class="checkbox checkbox-switch switch-success switch-xs"><label><INPUT type=checkbox value=Y name=exclude_notdue><span></span>' . _excludeUngradedAssignmentsNotDue . '</label></div></div>';
@@ -300,10 +304,10 @@
 
     echo '<div class="row">';
     echo '<div class="col-md-4">';
-    echo '<div class="form-group"><div class="radio"><label><INPUT class="styled" type=radio value=detail name=list_type checked=true>' . _withAssignmentDetails . '</label></div></div>';
+    echo '<div class="form-group"><div class="radio"><label><INPUT class="styled" type=radio value=detail name=list_type onclick="assignmentDetails()" checked=true>' . _withAssignmentDetails . '</label></div></div>';
     echo '</div>';
     echo '<div class="col-md-4">';
-    echo '<div class="form-group"><div class="radio"><label><INPUT class="styled" type=radio value=total name=list_type>' . _totalsOnly . '</label></div></div>';
+    echo '<div class="form-group"><div class="radio"><label><INPUT class="styled" type=radio value=total name=list_type onclick="totalsOnly()">' . _totalsOnly . '</label></div></div>';
     echo '</div>'; //.col-md-4
     echo '</div>'; //.row
 
@@ -324,12 +328,15 @@ function _makeExtra($value, $column)
                     $total_points[$THIS_RET['ASSIGNMENT_TYPE_ID']] += $THIS_RET['TOTAL_POINTS'];
                     $percent_weights[$THIS_RET['ASSIGNMENT_TYPE_ID']] = $THIS_RET['FINAL_GRADE_PERCENT'];
                 }
-                return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+                // return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+                $outputval = rtrim(rtrim($value,'0'),'.');
+                return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . ($outputval == '' ? 0 : $outputval) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
             } else
                 return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>Excluded</font></TD><TD></TD><TD></TD></TR></TABLE>';
         else {
             $student_points[$THIS_RET['ASSIGNMENT_TYPE_ID']] += $value;
-            return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+            // return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . (rtrim(rtrim($value, '0'), '.') + 0) . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
+            return '<TABLE border=0 cellspacing=0 cellpadding=0 class=LO_field><TR><TD><font size=-1>' . rtrim(rtrim($value, '0'), '.') . '</font></TD><TD><font size=-1>&nbsp;/&nbsp;</font></TD><TD><font size=-1>' . $THIS_RET['TOTAL_POINTS'] . '</font></TD></TR></TABLE>';
         }
     } elseif ($column == 'LETTER_GRADE') {
 
@@ -374,3 +381,26 @@ function _makeWtg($value, $column)
     $wtdper = ($THIS_RET['POINTS'] / $THIS_RET['TOTAL_POINTS']) * $THIS_RET['FINAL_GRADE_PERCENT'];
     return (($THIS_RET['LETTERWTD_GRADE'] != -1.00 && $THIS_RET['LETTERWTD_GRADE'] != '' && $THIS_RET['ASSIGN_TYP_WG'] != 'N/A') ? _makeLetterGrade($wtdper, $THIS_RET['COURSE_PERIOD_ID'], $THIS_RET['CP_TEACHER_ID'], '%') . '%' : 'N/A');
 }
+?>
+<script>
+    
+    function totalsOnly(){
+   var assigned_date = document.getElementById("assigned_date");
+   document.getElementById("assigned_date").disabled = true;
+   document.getElementById("due_date").disabled = true;
+   if(assigned_date.checked){
+document.getElementById("assigned_date").checked = false;
+   }
+   var due_date = document.getElementById("due_date");
+   if(due_date.checked){
+document.getElementById("due_date").checked = false;
+   }
+    }
+    
+    function assignmentDetails(){
+        document.getElementById("due_date").checked = true;
+        document.getElementById("due_date").disabled = false;
+        document.getElementById("assigned_date").disabled = false;
+        
+    }
+   </script>

