--- discordBot/commands/ChatInput/logic/kerbid.js ---
@@ -1,6 +1,8 @@
 import { profileText } from '../../common/kerbid.js'
+import { authorizeAndReply } from '../../serverAuthorization.js'
 
 export default async function (interaction) {
+  if (!await authorizeAndReply(interaction)) return
   interaction.reply({
     content: await profileText(interaction.options.get('user').user),
     allowedMentions: {

--- discordBot/commands/ChatInput/logic/resetnick.js ---
@@ -1,6 +1,8 @@
 import { getNewNickname } from '../../common/resetnick.js'
+import { authorizeAndReply } from '../../serverAuthorization.js'
 
 export default async function (interaction) {
+  if (!await authorizeAndReply(interaction)) return
   const targetUser = interaction.options.get('user').user
   const newNickname = await getNewNickname(targetUser)
   if (newNickname === false) {

--- discordBot/commands/User/logic/Get Profile from Linked Kerberos.js ---
@@ -1,6 +1,8 @@
 import { profileText } from '../../common/kerbid.js'
+import { authorizeAndReply } from '../../serverAuthorization.js'
 
 export default async function (interaction) {
+  if (!await authorizeAndReply(interaction)) return
   interaction.reply({
     content: await profileText(interaction.options.get('user').user),
     allowedMentions: {

--- discordBot/commands/serverAuthorization.js ---
@@ -0,0 +1,17 @@
+import { configDb } from '../../lib/preferencesReader.js'
+
+export async function authorize (interaction) {
+  return Object.keys(await configDb.getDocumentByName('servers')).includes(interaction.guildId)
+}
+
+export async function authorizeAndReply (interaction, ephemeralResponse = true) {
+  if (await authorize(interaction)) {
+    return true
+  } else {
+    await interaction.reply({
+      content: '**Error!** This server is not authorized to perform the attempted action.',
+      ephemeral: ephemeralResponse
+    })
+    return false
+  }
+}

