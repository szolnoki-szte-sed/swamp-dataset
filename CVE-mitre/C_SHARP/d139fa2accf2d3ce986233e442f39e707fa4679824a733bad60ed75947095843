--- src/i18n/Concrete/TextLocalizer.cs ---
@@ -126,6 +126,9 @@ private bool IsLanguageValid(string langtag)
         {
         // Note that there is no need to serialize access to System.Web.HttpRuntime.Cache when just reading from it.
         //
+            if (!langtag.IsSet()) {
+                return false; }
+
             // Default language is always valid.
             if (LocalizedApplication.Current.MessageKeyIsValueInDefaultLanguage
                 && LocalizedApplication.Current.DefaultLanguageTag.Equals(langtag)) {

--- src/i18n/LocalizedApplication.cs ---
@@ -118,10 +118,12 @@ public string DefaultLanguage
             }
             set
             {
-                DefaultLanguageTag = LanguageTag.GetCachedInstance(value);
+                LanguageTag defaultLanguageTag = LanguageTag.GetCachedInstance(value);
+                if (defaultLanguageTag != null) {
+                    DefaultLanguageTag = defaultLanguageTag; }
             }
         }
-        public LanguageTag DefaultLanguageTag { get; set; }
+        public LanguageTag DefaultLanguageTag { get; private set; }
 
         /// <summary>
         /// Specifies whether the key for a message may be assumed to be the value for

