--- asio/include/asio/ssl/detail/impl/engine.ipp ---
@@ -246,8 +246,15 @@ engine::want engine::perform(int (engine::* op)(void*, std::size_t),
 
   if (ssl_error == SSL_ERROR_SYSCALL)
   {
-    ec = asio::error_code(sys_error,
-        asio::error::get_system_category());
+    if (sys_error == 0)
+    {
+      ec = asio::ssl::error::unspecified_system_error;
+    }
+    else
+    {
+      ec = asio::error_code(sys_error,
+          asio::error::get_ssl_category());
+    }
     return pending_output_after > pending_output_before
       ? want_output : want_nothing;
   }
@@ -270,16 +277,21 @@ engine::want engine::perform(int (engine::* op)(void*, std::size_t),
     ec = asio::error_code();
     return want_input_and_retry;
   }
-  else if (::SSL_get_shutdown(ssl_) & SSL_RECEIVED_SHUTDOWN)
+  else if (ssl_error == SSL_ERROR_ZERO_RETURN)
   {
     ec = asio::error::eof;
     return want_nothing;
   }
-  else
+  else if (ssl_error == SSL_ERROR_NONE)
   {
     ec = asio::error_code();
     return want_nothing;
   }
+  else
+  {
+    ec = asio::ssl::error::unexpected_result;
+    return want_nothing;
+  }
 }
 
 int engine::do_accept(void*, std::size_t)

--- asio/include/asio/ssl/error.hpp ---
@@ -44,12 +44,24 @@ enum stream_errors
 {
 #if defined(GENERATING_DOCUMENTATION)
   /// The underlying stream closed before the ssl stream gracefully shut down.
-  stream_truncated
-#elif (OPENSSL_VERSION_NUMBER < 0x10100000L) && !defined(OPENSSL_IS_BORINGSSL)
-  stream_truncated = ERR_PACK(ERR_LIB_SSL, 0, SSL_R_SHORT_READ)
-#else
-  stream_truncated = 1
-#endif
+  stream_truncated,
+
+  /// The underlying SSL library returned a system error without providing
+  /// further information.
+  unspecified_system_error,
+
+  /// The underlying SSL library generated an unexpected result from a function
+  /// call.
+  unexpected_result
+#else // defined(GENERATING_DOCUMENTATION)
+# if (OPENSSL_VERSION_NUMBER < 0x10100000L) && !defined(OPENSSL_IS_BORINGSSL)
+  stream_truncated = ERR_PACK(ERR_LIB_SSL, 0, SSL_R_SHORT_READ),
+# else
+  stream_truncated = 1,
+# endif
+  unspecified_system_error = 2,
+  unexpected_result = 3
+#endif // defined(GENERATING_DOCUMENTATION)
 };
 
 extern ASIO_DECL

--- asio/include/asio/ssl/impl/error.ipp ---
@@ -76,6 +76,8 @@ public:
     switch (value)
     {
     case stream_truncated: return "stream truncated";
+    case unspecified_system_error: return "unspecified system error";
+    case unexpected_result: return "unexpected result";
     default: return "asio.ssl.stream error";
     }
   }

