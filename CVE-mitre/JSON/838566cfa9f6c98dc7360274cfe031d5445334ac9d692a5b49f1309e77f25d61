--- composer.json ---
@@ -54,7 +54,11 @@
         "laminas/laminas-view": "^2.14, required for using the laminas-form view helpers"
     },
     "config": {
-        "sort-packages": true
+        "sort-packages": true,
+        "allow-plugins": {
+            "composer/package-versions-deprecated": true,
+            "dealerdirect/phpcodesniffer-composer-installer": true
+        }
     },
     "extra": {
         "laminas": {

--- src/View/Helper/FormElementErrors.php ---
@@ -9,6 +9,7 @@
 
 use function array_merge;
 use function array_walk_recursive;
+use function count;
 use function implode;
 use function sprintf;
 
@@ -77,6 +78,12 @@ public function render(ElementInterface $element, array $attributes = []): strin
             $attributes = ' ' . $attributes;
         }
 
+        $count   = count($messages);
+        $escaper = $this->getEscapeHtmlHelper();
+        for ($i = 0; $i < $count; $i += 1) {
+            $messages[$i] = $escaper($messages[$i]);
+        }
+
         // Generate markup
         $markup  = sprintf($this->getMessageOpenFormat(), $attributes);
         $markup .= implode($this->getMessageSeparatorString(), $messages);

--- test/View/Helper/FormElementErrorsTest.php ---
@@ -222,4 +222,22 @@ public function testCallingTheHelperToRenderInvokeCanReturnObject(): void
         $helper = $this->helper;
         $this->assertEquals($helper(), $helper);
     }
+
+    public function testHtmlEscapingOfMessages(): void
+    {
+        $messages = [
+            [
+                '<span>First validator message</span>',
+                '<span>Second validator first message</span>',
+                '<span>Second validator second message</span>',
+            ],
+        ];
+        $element  = new Element('foo');
+        $element->setMessages($messages);
+
+        $markup = $this->helper->render($element);
+
+        $this->assertStringNotContainsString('<span>', $markup);
+        $this->assertStringNotContainsString('</span>', $markup);
+    }
 }

