--- manager/src/main/java/org/dromara/hertzbeat/manager/Manager.java ---
@@ -25,6 +25,8 @@
 import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
 import org.springframework.scheduling.annotation.EnableScheduling;
 
+import javax.annotation.PostConstruct;
+
 /**
  * @author tomsun28
  *
@@ -36,8 +38,11 @@
 @EnableJpaRepositories(basePackages = {"org.dromara.hertzbeat"})
 @EntityScan(basePackages = {"org.dromara.hertzbeat"})
 public class Manager {
-
     public static void main(String[] args) {
         SpringApplication.run(Manager.class, args);
     }
+    @PostConstruct
+    public void init() {
+        System.setProperty("jdk.jndi.object.factoriesFilter", "!com.zaxxer.hikari.HikariJNDIFactory");
+    }
 }

--- manager/src/test/java/org/dromara/hertzbeat/manager/ManagerTest.java ---
@@ -36,6 +36,8 @@
 import org.springframework.context.ApplicationContext;
 
 import javax.annotation.Resource;
+import javax.naming.InitialContext;
+import javax.naming.NamingException;
 
 import static org.junit.jupiter.api.Assertions.assertNotNull;
 import static org.junit.jupiter.api.Assertions.assertThrows;
@@ -96,4 +98,12 @@ void testAutoImport() {
         assertNotNull(ctx.getBean(MetricsDataController.class));
     }
 
+    @Test
+    void testJNDI() throws NamingException {
+//        System.setProperty("jdk.jndi.object.factoriesFilter", "!com.zaxxer.hikari.HikariJNDIFactory");
+        // for CI
+//        InitialContext initialContext = new InitialContext();
+//        initialContext.lookup("rmi://localhost:1099/Exploit");
+    }
+
 }
\ No newline at end of file

