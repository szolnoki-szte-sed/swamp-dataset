--- src/gd_gd2.c ---
@@ -503,18 +503,16 @@ BGD_DECLARE(gdImagePtr) gdImageCreateFromGd2Ctx (gdIOCtxPtr in)
 
 						if (im->trueColor) {
 							if (!gdGetInt (&im->tpixels[y][x], in)) {
-								/*printf("EOF while reading\n"); */
-								/*gdImageDestroy(im); */
-								/*return 0; */
-								im->tpixels[y][x] = 0;
+								gd_error("gd2: EOF while reading\n");
+								gdImageDestroy(im);
+								return NULL;
 							}
 						} else {
 							int ch;
 							if (!gdGetByte (&ch, in)) {
-								/*printf("EOF while reading\n"); */
-								/*gdImageDestroy(im); */
-								/*return 0; */
-								ch = 0;
+								gd_error("gd2: EOF while reading\n");
+								gdImageDestroy(im);
+								return NULL;
 							}
 							im->pixels[y][x] = ch;
 						}

--- tests/gd2/.gitignore ---
@@ -6,3 +6,4 @@
 /gd2_read
 /gd2_read_corrupt
 /php_bug_72339
+/too_few_image_data

--- tests/gd2/CMakeLists.txt ---
@@ -7,6 +7,7 @@ LIST(APPEND TESTS_FILES
 	php_bug_72339
 	gd2_read
 	gd2_read_corrupt
+	too_few_image_data
 )
 
 ADD_GD_TESTS()

--- tests/gd2/Makemodule.am ---
@@ -3,7 +3,8 @@ libgd_test_programs += \
 	gd2/bug00309 \
 	gd2/gd2_empty_file \
 	gd2/php_bug_72339 \
-	gd2/gd2_read_corrupt
+	gd2/gd2_read_corrupt \
+	gd2/too_few_image_data
 
 if HAVE_LIBZ
 libgd_test_programs += \
@@ -23,4 +24,6 @@ EXTRA_DIST += \
 	gd2/conv_test_exp.png \
 	gd2/empty.gd2 \
 	gd2/invalid_header.gd2 \
-	gd2/invalid_neg_size.gd2
+	gd2/invalid_neg_size.gd2 \
+	gd2/php_bug_72339_exp.gd2 \
+	gd2/too_few_image_data.gd2

--- tests/gd2/too_few_image_data.c ---
@@ -0,0 +1,22 @@
+/*
+too_few_image_data.gd2 claims to have a size of 12336x48 pixels, but doesn't
+provide as much image data. We test that gdImageCreateFromGd2Ctx() returns NULL
+in this case.
+*/
+
+#include "gd.h"
+#include "gdtest.h"
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+
+    fp = gdTestFileOpen2("gd2", "too_few_image_data.gd2");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGd2(fp);
+    gdTestAssert(im == NULL);
+    fclose(fp);
+
+    return gdNumFailures();
+}

