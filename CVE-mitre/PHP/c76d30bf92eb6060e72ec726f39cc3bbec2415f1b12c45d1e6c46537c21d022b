--- CalendarModal.php ---
@@ -36,6 +36,9 @@
 
 echo '<div id=err_message ></div>';
 
+echo '<div class="form-group">';
+echo '<label class="control-label">Date : '.$_REQUEST['school_date'].'&nbsp;</label>';
+echo '</div>';
 
 if ($RET[1]['TITLE'] == '') {
     echo '<div class="form-group">';

--- Modules.php ---
@@ -358,7 +358,7 @@
 
     //===================================================================================================
 
-    //For Marking Period
+    // For Marking Period
     echo "<li><div class=\"form-group\"><FORM name=head_frm id=head_frm action=Side.php?modfunc=update&btnn=$btn&nsc=$ns method=POST>
                         <INPUT type=hidden name=modcat value='' id=modcat_input>";
 
@@ -386,10 +386,10 @@
             echo "<OPTION value=$quarter[MARKING_PERIOD_ID]" . (UserMP() == $quarter['MARKING_PERIOD_ID'] ? ' SELECTED' : '') . ">" . $quarter['TITLE'] . "</OPTION>";
     }
     echo "</SELECT>";
-    //Marking Period
+    // Marking Period
 
     echo '</FORM></div></li>';
-}##################Porfile Not Teacher End##########################################
+}################## Porfile Not Teacher End ##########################################
 
 if (UserStudentID() && User('PROFILE') != 'parent' && User('PROFILE') != 'student') {
     $RET = DBGet(DBQuery("SELECT FIRST_NAME,LAST_NAME,MIDDLE_NAME,NAME_SUFFIX FROM students WHERE STUDENT_ID='" . UserStudentID() . "'"));
@@ -458,7 +458,7 @@
             $ret_increment++;
         }
     }
-   // print_r($RET);
+   
     if (!UserCourse()) {
         $_SESSION['UserCourse'] = $RET[1]['COURSE_ID'];
     }

--- install/SqlForClientSchoolAndSampleDataInc.php ---
@@ -54,11 +54,11 @@
 --
 
 INSERT INTO `app` (`name`, `value`) VALUES
-('version', '7.3'),
-('date', 'August 23, 2019'),
-('build', '20190823001'),
+('version', '7.4'),
+('date', 'April 25, 2020'),
+('build', '20200425001'),
 ('update', '0'),
-('last_updated', 'August 23, 2019');
+('last_updated', 'April 25, 2020');
 
 --
 -- Dumping data for table `attendance_calendar`

--- install/SqlForClientSchoolInc.php ---
@@ -34,11 +34,11 @@
 
 
 INSERT INTO `app` (`name`, `value`) VALUES
-('version', '7.3'),
-('date', 'August 23, 2019'),
-('build', '20190823001'),
+('version', '7.4'),
+('date', 'April 25, 2020'),
+('build', '20200425001'),
 ('update', '0'),
-('last_updated', 'August 23, 2019');
+('last_updated', 'April 25, 2020');
 
 --
 -- Dumping data for table `address`

--- install/SqlSampleDataInc.php ---
@@ -52,13 +52,13 @@
 --
 -- Dumping data for table `app`
 --
-
 INSERT INTO `app` (`name`, `value`) VALUES
-('version', '7.3'),
-('date', 'August 23, 2019'),
-('build', '20190823001'),
+('version', '7.4'),
+('date', 'April 25, 2020'),
+('build', '20200425001'),
 ('update', '0'),
-('last_updated', 'August 23, 2019');
+('last_updated', 'April 25, 2020');
+
 
 --
 -- Dumping data for table `attendance_calendar`

--- install/Step0.php ---
@@ -84,7 +84,7 @@
                                             echo '</tr><tr>';
                                             echo '<td valign="middle" align="center"><a href="Step0.1.php?mod=upgrade"><img src="assets/images/icon-upgrade.png" alt="Upgrade OpenSIS" /><br/><h5 class="text-black"><b>Upgrade</b><br/><small>(From ver 4.7 thru 6.0)</small></h5></a></td>';
                                         } else {
-                                            echo '<td valign="middle" align="center"><a href="SystemCheck.php"><img src="assets/images/icon-package.png" alt="New Installation" /><br/><h5 class="text-black"><b>New Installation</b><br/><small>(Ver 7.3)</small></h5></a></td>';
+                                            echo '<td valign="middle" align="center"><a href="SystemCheck.php"><img src="assets/images/icon-package.png" alt="New Installation" /><br/><h5 class="text-black"><b>New Installation</b><br/><small>(Ver 7.4)</small></h5></a></td>';
                                             echo '<td valign="middle" align="center"><a href="Step0.1.php?mod=upgrade"><img src="assets/images/icon-upgrade.png" alt="Upgrade OpenSIS"/><br/><h5 class="text-black"><b>Upgrade</b><br/><small>(From ver 7.1 onwards)</small></h5></a></td>';
                                         }
                                         ?>

--- js/Ajaxload.js ---
@@ -86,16 +86,26 @@ function usercheck_init(i) {
         return;
 
     var err = new Array();
-    if (i.value.match(/[^A-Za-z0-9_]/))
-        err[err.length] = 'Username can only contain letters, numbers and underscores';
+    if (i.value.match(/[^A-Za-z0-9_@.]/))
+        err[err.length] = 'Username can only contain letters, numbers, underscores, at the rate and dots';
     if (i.value.length < 3)
         err[err.length] = 'Username too short';
     if (err != '') {
         obj.style.color = '#ff0000';
         obj.innerHTML = err.join('<br />');
+
+        if(i.value.length > 1)
+        {
+            window.$("#staff_username_flag").val("0");
+            window.$("#mod_staff_btn").attr("disabled", true);
+        }
+
         return;
     }
 
+    window.$("#staff_username_flag").val("1");
+    window.$("#mod_staff_btn").attr("disabled", false);
+
     var pqr = i.value;
 
 
@@ -112,6 +122,23 @@ function usercheck_callback(data) {
         obj.innerHTML = 'Username Available';
     else
         obj.innerHTML = 'Username already taken';
+
+
+    var staff_username = document.getElementById("USERNAME").value;
+    var staff_username_flag = document.getElementById("staff_username_flag").value;
+
+    if(staff_username != '' && staff_username_flag == '0')
+    {
+        var obj = document.getElementById('ajax_output');
+        obj.style.color = '#ff0000';
+        obj.innerHTML = 'Username can only contain letters, numbers, underscores, at the rate and dots';
+
+        window.$("#mod_staff_btn").attr("disabled", true);
+    }
+    else
+    {
+        window.$("#mod_staff_btn").attr("disabled", false);
+    }
 }
 
 function usercheck_init_mod(i, opt) {
@@ -122,16 +149,26 @@ function usercheck_init_mod(i, opt) {
         return;
 
     var err = new Array();
-    if (i.value.match(/[^A-Za-z0-9_]/))
-        err[err.length] = 'Username can only contain letters, numbers and underscores';
+    if (i.value.match(/[^A-Za-z0-9_@.]/))
+        err[err.length] = 'Username can only contain letters, numbers, underscores, at the rate and dots';
     if (i.value.length < 3)
         err[err.length] = 'Username Too Short';
     if (err != '') {
         obj.style.color = '#ff0000';
         obj.innerHTML = err.join('<br />');
+
+        if(i.value.length > 1)
+        {
+            window.$("#staff_username_flag").val("0");
+            window.$("#mod_staff_btn").attr("disabled", true);
+        }
+
         return;
     }
 
+    window.$("#staff_username_flag").val("1");
+    window.$("#mod_staff_btn").attr("disabled", false);
+
     var pqr = i.value;
 
     if (opt == '1')
@@ -147,6 +184,22 @@ function usercheck_callback_p(data) {
     var obj = document.getElementById('ajax_output_1');
     obj.style.color = (response) ? '#008800' : '#ff0000';
     obj.innerHTML = (response == 1) ? 'Username Available' : 'Username already taken';
+
+    var staff_username = document.getElementById("USERNAME").value;
+    var staff_username_flag = document.getElementById("staff_username_flag").value;
+
+    if(staff_username != '' && staff_username_flag == '0')
+    {
+        var obj = document.getElementById('ajax_output_1');
+        obj.style.color = '#ff0000';
+        obj.innerHTML = 'Username can only contain letters, numbers, underscores, at the rate and dots';
+
+        window.$("#mod_staff_btn").attr("disabled", true);
+    }
+    else
+    {
+        window.$("#mod_staff_btn").attr("disabled", false);
+    }
 }
 
 function usercheck_callback_s(data) {
@@ -155,6 +208,22 @@ function usercheck_callback_s(data) {
     var obj = document.getElementById('ajax_output_2');
     obj.style.color = (response) ? '#008800' : '#ff0000';
     obj.innerHTML = (response == 1) ? 'Username Available' : 'Username already taken';
+
+    var staff_username = document.getElementById("USERNAME").value;
+    var staff_username_flag = document.getElementById("staff_username_flag").value;
+
+    if(staff_username != '' && staff_username_flag == '0')
+    {
+        var obj = document.getElementById('ajax_output_1');
+        obj.style.color = '#ff0000';
+        obj.innerHTML = 'Username can only contain letters, numbers, underscores, at the rate and dots';
+
+        window.$("#mod_staff_btn").attr("disabled", true);
+    }
+    else
+    {
+        window.$("#mod_staff_btn").attr("disabled", false);
+    }
 }
 
 
@@ -232,16 +301,57 @@ function usercheck_init_staff(i) {
         return;
 
     var err = new Array();
-    if (i.value.match(/[^A-Za-z0-9_]/))
-        err[err.length] = 'Username can only contain letters, numbers and underscores';
+    if (i.value.match(/[^A-Za-z0-9_@.]/))
+        err[err.length] = 'Username can only contain letters, numbers, underscores, at the rate and dots';
+    if (i.value.length < 3)
+        err[err.length] = 'Username Too Short';
+    if (err != '') {
+        obj.style.color = '#ff0000';
+        obj.innerHTML = err.join('<br />');
+
+        if(i.value.length > 1)
+        {
+            window.$("#staff_username_flag").val("0");
+            window.$("#mod_staff_btn").attr("disabled", true);
+        }
+
+        return;
+    }
+
+    window.$("#staff_username_flag").val("1");
+    window.$("#mod_staff_btn").attr("disabled", false);
+
+    ajax_call('Validator.php?u=' + i.value + 'stud', usercheck_callback_staff);
+}
+
+function usercheck_init_staff_2(i) {
+    var obj = document.getElementById('ajax_output_st');
+    obj.innerHTML = '';
+    document.getElementById('usr_err_check').value = '0';
+    if (i.value.length < 1)
+        return;
+
+    var err = new Array();
+    if (i.value.match(/[^A-Za-z0-9_@.]/))
+        err[err.length] = 'Username can only contain letters, numbers, underscores, at the rate and dots';
     if (i.value.length < 3)
         err[err.length] = 'Username Too Short';
     if (err != '') {
         obj.style.color = '#ff0000';
         obj.innerHTML = err.join('<br />');
+
+        if(i.value.length > 1)
+        {
+            window.$("#staff_username_flag").val("0");
+            window.$("#mod_staff_btn").attr("disabled", true);
+        }
+
         return;
     }
 
+    window.$("#staff_username_flag").val("1");
+    window.$("#mod_staff_btn").attr("disabled", false);
+
     ajax_call('Validator.php?u=' + i.value + 'stud', usercheck_callback_staff);
 }
 
@@ -266,15 +376,24 @@ function usercheck_init_student(i) {
         return;
 
     var err = new Array();
-    if (i.value.match(/[^A-Za-z0-9_]/))
-        err[err.length] = 'Username can only contain letters, numbers and underscores';
+    if (i.value.match(/[^A-Za-z0-9_@.]/))
+        err[err.length] = 'Username can only contain letters, numbers, underscores, at the rate and dots';
     if (i.value.length < 3)
         err[err.length] = 'Username Too Short';
     if (err != '') {
         obj.style.color = '#ff0000';
         obj.innerHTML = err.join('<br />');
+
+        if(i.value.length > 1)
+        {
+            window.$("#stu_username_flag").val("0");
+            window.$("#mod_student_btn").attr("disabled", true);
+        }
+
         return;
     }
+    window.$("#stu_username_flag").val("1");
+    window.$("#mod_student_btn").attr("disabled", false);
     ajax_call('Validator.php?u=' + i.value + 'stud', usercheck_callback_student, usercheck_error_student);
 }
 
@@ -303,6 +422,22 @@ function usercheck_callback_student_Mod(data) {
         document.getElementById('students[USERNAME]').value = '';
         document.getElementById('students[PASSWORD]').value = '';
     }
+
+    var student_username = document.getElementById("students[USERNAME]").value;
+    var student_username_flag = document.getElementById("stu_username_flag").value;
+
+    if(student_username != '' && student_username_flag == '0')
+    {
+        var obj = document.getElementById('ajax_output_st');
+        obj.style.color = '#ff0000';
+        obj.innerHTML = 'Username can only contain letters, numbers, underscores, at the rate and dots';
+
+        window.$("#mod_student_btn").attr("disabled", true);
+    }
+    else
+    {
+        window.$("#mod_student_btn").attr("disabled", false);
+    }
 }
 
 function usercheck_error_student_Mod(err) {
@@ -2066,8 +2201,8 @@ function usercheck_init_noacess(i) {
         return;
 
     var err = new Array();
-    if (i.value.match(/[^A-Za-z0-9_]/))
-        err[err.length] = 'Username can only contain letters, numbers and underscores';
+    if (i.value.match(/[^A-Za-z0-9_@.]/))
+        err[err.length] = 'Username can only contain letters, numbers, underscores, at the rate and dots';
     if (i.value.length < 3)
         err[err.length] = 'Username Too Short';
     if (err != '') {

--- js/DivControl.js ---
@@ -664,6 +664,31 @@ function checkAllDtMod(elem,name)
     }
 }
 
+function checkAllDtMod2(elem,name)
+{
+    var res_length=document.getElementById('res_length').value;
+    var res_len=document.getElementById('res_len').value;
+    var unique_id=res_len.split(',');
+    
+    for(var i=0;i<res_length;i++){
+        if(elem.checked==true){
+            if(document.getElementById(unique_id[i])){
+                $('#hidden_checkboxes').append("<input type=hidden name='"+name+"["+unique_id[i]+"]' value='"+unique_id[i]+"' data-checkbox-hidden-id='"+unique_id[i]+"' />");
+                // document.getElementById(unique_id[i]).checked=true;
+                // window.$('#'+unique_id[i]).attr("checked",true);
+                $(".student_label_cbx").prop('checked', true);
+                // alert(unique_id[i]);
+            }
+        }else{
+            if(document.getElementById(unique_id[i])){
+                $('[data-checkbox-hidden-id='+unique_id[i]+']').remove();   
+                // document.getElementById(unique_id[i]).checked=false;
+                $(".student_label_cbx").prop('checked', false);
+            }
+        }
+    }
+}
+
 function addseccheck_button(){
     if (document.getElementById('values[people][SECONDARY][RELATIONSHIP]').value != ''){
         document.getElementById('rss').checked=true;

--- modules/eligibility/EntryTimes.php ---
@@ -113,25 +113,33 @@
 echo "<FORM name=F1 id=F1 class=form-horizontal action=Modules.php?modname=" . strip_tags(trim($_REQUEST[modname])) . " method=POST>";
 PopTable('header', 'Allow Extracurricular Posting');
 echo '<div>';
+
+
 if (count($start_end_RET)) {
     $start_value = $days[$arr['START_DAY']] . ', ' . $START_HOUR . ':' . str_pad($arr['START_MINUTE'], 2, 0, STR_PAD_LEFT) . ' ' . $START_M;
     $end_value = $days[$arr['END_DAY']] . ', ' . $END_HOUR . ':' . str_pad($arr['END_MINUTE'], 2, 0, STR_PAD_LEFT) . ' ' . $END_M;
     $start_time = $START_HOUR . ':' . str_pad($arr['START_MINUTE'], 2, 0, STR_PAD_LEFT) . ' ' . $START_M;
     $end_time = $END_HOUR . ':' . str_pad($arr['END_MINUTE'], 2, 0, STR_PAD_LEFT) . ' ' . $END_M;
+
     echo '<div class="form-group"><label class="control-label col-md-2 text-right">From :</label>';
-    echo '<div class="col-md-10"><div class="form-inline">' . SelectInput($arr['START_DAY'], 'values[START_DAY]', '', $day_options, false, '', false) . ' &nbsp; '. TextInput_time($start_time, 'values[START_TIME]', '', NULL) . '</div></div>';
+    echo '<div class="col-md-10"><div class="form-inline"><div class="row"><div class= col-sm-3>' . SelectInput($arr['START_DAY'], 'values[START_DAY]', '', $day_options,false, '') . '</div> &nbsp; <div class= col-sm-4>'. TextInput_time($start_time, 'values[START_TIME]', '', NULL) . '</div></div></div></div>';
     echo '</div>'; //form-group
+
     echo '<div class="form-group"><label class="control-label col-md-2 text-right">To :</label>';
-    echo '<div class="col-md-10"><div class="form-inline">' . SelectInput($arr['END_DAY'], 'values[END_DAY]', '', $day_options, false, '', false) . ' &nbsp; '. TextInput_time($end_time, 'values[END_TIME]', '', NULL) . '</div></div>';
+    // echo '<div class="col-md-10"><div class="form-inline">' . SelectInput($arr['END_DAY'], 'values[END_DAY]', '', $day_options, false, '', false) . ' &nbsp; '. TextInput_time($end_time, 'values[END_TIME]', '', NULL) . '</div></div>';
+    echo '<div class="col-md-10"><div class="form-inline"><div class="row"><div class= col-sm-3>' . SelectInput($arr['END_DAY'], 'values[END_DAY]','', $day_options,false, '') . '</div> &nbsp; <div class= col-sm-4>'. TextInput_time($end_time, 'values[END_TIME]', '', NULL) . '</div></div></div></div>';
     echo '</div>';
 } else {
-    echo '<div class="form-group"><div class="col-md-4"><div class="form-inline"><label class="control-label col-md-3">From</label>' . SelectInput($START_DAY, 'values[START_DAY]', '', $day_options, false, '', false) . ' &nbsp; '. TextInput_time('', 'values[START_TIME]', '', NULL) . '</div></div></div>';
-    echo '<div class="form-group"><div class="col-md-4"><div class="form-inline"><label class="control-label col-md-2">To</label>' . SelectInput($END_DAY, 'values[END_DAY]', '', $day_options, false, '', false) . ' &nbsp; ' . TextInput_time('', 'values[END_TIME]', '', NULL)  . '</div></div></div>';
+    echo '<div class="form-group"><label class="control-label col-md-2 text-right">From :</label><div class="col-md-10"><div class="form-inline"><div class="row"><div class= col-sm-3>' . SelectInput($START_DAY, 'values[START_DAY]', '', $day_options, false, '', false) . ' </div> &nbsp; <div class= col-sm-4>'. TextInput_time('', 'values[START_TIME]', '', NULL) . '</div></div></div></div></div>';
+
+    echo '<div class="form-group"><label class="control-label col-md-2 text-right">To :</label><div class="col-md-10"><div class="form-inline"><div class="row"><div class= col-sm-3>' . SelectInput($END_DAY, 'values[END_DAY]', '', $day_options, false, '', false) . ' </div> &nbsp; <div class= col-sm-4>' . TextInput_time('', 'values[END_TIME]', '', NULL)  . '</div></div></div></div></div>';
 }
+
+
 $btn = SubmitButton('Save', '', 'class="btn btn-primary" onclick="formcheck_eligibility_entrytimes();"');
 echo '</div>';
 PopTable('footer',  $btn);
 echo '</FORM>';
 echo '</div>';
 echo '</div>';
-?>
\ No newline at end of file
+?>

--- modules/grades/Assignments.php ---
@@ -75,6 +75,7 @@
     $table = trim($_REQUEST['table']);
         $err=false;
         $f=0;
+
 	foreach($_REQUEST['tables'] as $id=>$columns)
 	{
 		if($table=='gradebook_assignment_types' && substr($programconfig['WEIGHT'],0,1)=='Y' && $columns['FINAL_GRADE_PERCENT']!='')
@@ -189,10 +190,11 @@
                         }
                     }
 
-                                if((($column=='ASSIGNED_DATE'&& $value!='' && $due_date_sql[1]['ASSIGNED_DATE']!=$value) ||($column=='DUE_DATE'&& $value!='' && $due_date_sql[1]['DUE_DATE']!=$value) ) && $table=='gradebook_assignments')
-                                {
+                    if((($column=='ASSIGNED_DATE'&& $value!='' && $due_date_sql[1]['ASSIGNED_DATE']!=$value) ||($column=='DUE_DATE'&& $value!='' && $due_date_sql[1]['DUE_DATE']!=$value) ) && $table=='gradebook_assignments')
+                    {
 
-$grade_assign_qr=  DBGet(DBQuery('SELECT COUNT(STUDENT_ID) AS TOT FROM   student_report_card_grades WHERE  COURSE_PERIOD_ID='.$course_period_id.' and marking_period_id='.UserMP().''));
+                        // $grade_assign_qr = DBGet(DBQuery('SELECT COUNT(STUDENT_ID) AS TOT FROM   student_report_card_grades WHERE  COURSE_PERIOD_ID='.$course_period_id.' and marking_period_id='.UserMP().''));
+                        $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   gradebook_grades WHERE ASSIGNMENT_ID = '".$_REQUEST['assignment_id']."'"));
                         if($grade_assign_qr[1]['TOT']>0)
                         {
                             $f=1;
@@ -201,10 +203,11 @@
                     }
 
 
-                                     if($column=='POINTS' && $value!='' && $table=='gradebook_assignments')
-                                {
+                    if($column=='POINTS' && $value!='' && $table=='gradebook_assignments')
+                    {
 
-$grade_assign_qr=  DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   student_report_card_grades WHERE COURSE_PERIOD_ID='$course_period_id'"));
+                        // $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   student_report_card_grades WHERE COURSE_PERIOD_ID='$course_period_id'"));
+                        $grade_assign_qr = DBGet(DBQuery("SELECT COUNT(STUDENT_ID) AS TOT FROM   gradebook_grades WHERE ASSIGNMENT_ID = '".$_REQUEST['assignment_id']."'"));
                         if($grade_assign_qr[1]['TOT']>0)
                         {
                             $f=1;

--- modules/schoolsetup/Courses.php ---
@@ -70,7 +70,7 @@
     }
 }
 if ($_REQUEST['course_period_id'] != 'new') {
-    if ($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['SCHEDULE_TYPE'] == 'FIXED') { // echo 'sss';
+    if ($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['SCHEDULE_TYPE'] == 'FIXED') { 
         if ($_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['TOTAL_SEATS'] != '')
             $total_seats = $_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['TOTAL_SEATS'];
         else {
@@ -369,7 +369,7 @@
 
     if ($_REQUEST['tables']['parent_id'])
         $_REQUEST['tables']['course_periods'][$_REQUEST['course_period_id']]['PARENT_ID'] = $_REQUEST['tables']['parent_id'];
-    //===================================For custom range==========================
+    //================================ For Custom Range ========================
 
     if ($_REQUEST['month_begin'] && $_REQUEST['day_begin'] && $_REQUEST['year_begin']) {
         while (!VerifyDate($begin = $_REQUEST['day_begin'] . '-' . $_REQUEST['month_begin'] . '-' . $_REQUEST['year_begin']))

--- modules/students/AdvancedReport.php ---
@@ -67,7 +67,7 @@
     $extra['search'] .= '<div class="form-group"><label>Include courses active as of</label>' . DateInputAY('', 'include_active_date', 1) . '</div>';
     $extra['new'] = true;
     include('modules/miscellaneous/Export.php');
-    echo '<BR><CENTER><INPUT type=submit value=\'Create Report for Selected Students\' class="btn btn-primary"></CENTER>';
+    echo '<BR><CENTER><INPUT type=submit value=\'Create Report for Selected Fields\' class="btn btn-primary"></CENTER>';
     echo "</FORM>";
 }
 $modal_flag = 1;
@@ -158,7 +158,8 @@
         $extra['functions'] = array('CHECKBOX' => '_makeChooseCheckbox');
 //        $extra['SELECT'] = ",CONCAT('<INPUT type=checkbox name=st_arr[] value=',s.STUDENT_ID,' checked>') AS CHECKBOX";
 
-        $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod(this,\'st_arr\');"><A>');
+        // $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod(this,\'st_arr\');"><A>');
+        $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod2(this,\'st_arr\');"><A>');
         $extra['options']['search'] = false;
 
 
@@ -230,8 +231,10 @@
 
 function _makeChooseCheckbox($value, $title) {
     global $THIS_RET;
-//    return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
+    // return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
     
-    return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
+    // return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
+
+    return "<input  class='student_label_cbx' name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
 }
 ?>
\ No newline at end of file

--- modules/students/PrintStudentInfo.php ---
@@ -278,6 +278,7 @@
                ORDER BY ADDRESS ASC,CUSTODY ASC,STUDENT_RELATION ' ;
                     $addresses_RET = DBGet(DBQuery($addr_sql));
                     $address_previous = "x";
+
                     if($addresses_RET[1]['ADDRESS']=='' && $addresses_RET[2]['ADDRESS']!='' || $addresses_RET[2]['ADDRESS']!=$addresses_RET[1]['ADDRESS']){
                         unset ($addresses_RET[1]);
                     }
@@ -513,7 +514,7 @@
 
                     $contacts_RET2 = DBGet(DBQuery('SELECT p.STAFF_ID as PERSON_ID,p.FIRST_NAME,p.MIDDLE_NAME,p.LAST_NAME,p.CUSTODY,sjp.EMERGENCY_TYPE AS EMERGENCY,sjp.RELATIONSHIP AS STUDENT_RELATION FROM people p,students_join_people sjp WHERE p.STAFF_ID=sjp.PERSON_ID AND sjp.STUDENT_ID=' . UserStudentID()));
                     foreach ($contacts_RET2 as $contact) {
-                        echo '<B>' . $contact['FIRST_NAME'] . ' ' . ($contact['MIDDLE_NAME'] ? $contact['MIDDLE_NAME'] . ' ' : '') . $contact['LAST_NAME'] . ($contact['STUDENT_RELATION'] ? ': ' . $contact['STUDENT_RELATION'] : '') . ' &nbsp;</B>';
+                        // echo '<B>' . $contact['FIRST_NAME'] . ' ' . ($contact['MIDDLE_NAME'] ? $contact['MIDDLE_NAME'] . ' ' : '') . $contact['LAST_NAME'] . ($contact['STUDENT_RELATION'] ? ': ' . $contact['STUDENT_RELATION'] : '') . ' &nbsp;</B>';
 
 
                         foreach ($people_categories_RET as $categories)

--- modules/students/Student.php ---
@@ -1824,7 +1824,7 @@
                     }
 
                     if (isset($_REQUEST['goal_id']) && $_REQUEST['goal_id'] != 'new' && !isset($_REQUEST['progress_id']))
-                        $buttons = SubmitButton('Save', '', 'class="btn btn-primary pull-right" onclick="formcheck_student_student();"');
+                        $buttons = SubmitButton('Save', '', 'id="mod_student_btn" class="btn btn-primary pull-right" onclick="formcheck_student_student();"');
                     else {
                         if ($_REQUEST['student_id'] != 'new') {
 
@@ -1833,15 +1833,15 @@
                             $enrollment_info = DBGet(DBQuery('SELECT ENROLLMENT_CODE FROM student_enrollment WHERE STUDENT_ID=' . $student_id));
                             $enrollment_code = $enrollment_info[1]['ENROLLMENT_CODE'];
                             if ($_REQUEST['category_id'] == 1 && $enrollment_code == NULL)
-                                $buttons = SubmitButton('Save', '', 'class="btn btn-primary" onclick="formcheck_student_student();"');
+                                $buttons = SubmitButton('Save', '', 'id="mod_student_btn" class="btn btn-primary" onclick="formcheck_student_student();"');
                             else
-                                $buttons = SubmitButton('Save', '', 'class="btn btn-primary" onclick="formcheck_student_student();"');
+                                $buttons = SubmitButton('Save', '', 'id="mod_student_btn" class="btn btn-primary" onclick="formcheck_student_student();"');
                         }
                         else {
                             if ($_REQUEST['category_id'] == 1)
-                                $buttons = SubmitButton('Save & Next', '', 'class="btn btn-primary" onclick="formcheck_student_student();"');
+                                $buttons = SubmitButton('Save & Next', '', 'id="mod_student_btn" class="btn btn-primary" onclick="formcheck_student_student();"');
                             else
-                                $buttons = SubmitButton('Save', '', 'class="btn btn-primary" onclick="formcheck_student_student();"');
+                                $buttons = SubmitButton('Save', '', 'id="mod_student_btn" class="btn btn-primary" onclick="formcheck_student_student();"');
                         }
                     }
                     echo PopTable('footer',$buttons);

--- modules/students/StudentLabels.php ---
@@ -44,7 +44,6 @@
                     $extra['SELECT'] .= ',(SELECT GROUP_CONCAT(r.TITLE) AS ROOM  FROM course_period_var cpv,rooms r WHERE cpv.ROOM_ID=r.ROOM_ID AND cpv.COURSE_PERIOD_ID=\'' . $_REQUEST[w_course_period_id] . '\') AS ROOM';
             }
             else {
-
                 if ($_REQUEST['teacher'])
                     $extra['SELECT'] .= ',(SELECT CONCAT(st.FIRST_NAME,\'' . ' ' . '\',st.LAST_NAME) FROM staff st,course_periods cp,school_periods p,schedule ss,course_period_var cpv WHERE cp.COURSE_PERIOD_ID=cpv.COURSE_PERIOD_ID AND st.STAFF_ID=cp.TEACHER_ID AND cpv.PERIOD_ID=p.PERIOD_ID AND p.ATTENDANCE=\'' . 'Y' . '\' AND cp.COURSE_PERIOD_ID=ss.COURSE_PERIOD_ID AND ss.STUDENT_ID=s.STUDENT_ID AND ss.SYEAR=\'' . UserSyear() . '\' ' . ($_REQUEST['_search_all_schools'] != 'Y' ? ' AND ss.MARKING_PERIOD_ID IN(' . $qtr . ') ' : '') . ' AND (ss.START_DATE<=\'' . DBDate() . '\' AND (ss.END_DATE>=\'' . DBDate() . '\' OR ss.END_DATE IS NULL)) ORDER BY p.SORT_ORDER LIMIT 1) AS TEACHER';
                 if ($_REQUEST['room'])
@@ -195,11 +194,11 @@
     $extra['search'] .= '</div>';
     $extra['search'] .= '</div>';
 
-
     $extra['link'] = array('FULL_NAME' => false);
     $extra['SELECT'] = ",s.STUDENT_ID AS CHECKBOX";
     $extra['functions'] = array('CHECKBOX' => '_makeChooseCheckbox');
-    $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod(this,\'st_arr\');"><A>');
+    // $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onClick="checkAllDtMod(this,\'st_arr\')"><A>');
+    $extra['columns_before'] = array('CHECKBOX' => '</A><INPUT type=checkbox value=Y name=controller onclick="checkAllDtMod2(this,\'st_arr\');"><A>');
     $extra['options']['search'] = false;
     $extra['new'] = true;
 
@@ -248,7 +247,10 @@
 function _makeChooseCheckbox($value, $title) {
     //    return '<INPUT type=checkbox name=st_arr[] value=' . $value . ' checked>';
     global $THIS_RET;
-    return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
+
+    // return "<input name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);'/>";
+
+    return "<input  class='student_label_cbx' name=unused[$THIS_RET[STUDENT_ID]] value=" . $THIS_RET[STUDENT_ID] . "  type='checkbox' id=$THIS_RET[STUDENT_ID] onClick='setHiddenCheckboxStudents(\"st_arr[]\",this,$THIS_RET[STUDENT_ID]);' />";
 }
 
 ?>
\ No newline at end of file

--- modules/students/includes/GeneralInfoInc.php ---
@@ -357,6 +357,16 @@
 echo '</div>'; //.row
 
 
+if($student['USERNAME'] && $student['USERNAME'] != '')
+{
+    echo '<input id="stu_username_flag" type="hidden" value="1">';
+}
+else
+{
+    echo '<input id="stu_username_flag" type="hidden" value="0">';
+}
+
+
 echo '<div class="row">';
 if ($_REQUEST['student_id'] != 'new') {
     echo '<div class="col-lg-6">';

--- modules/tools/Menu.php ---
@@ -29,14 +29,14 @@
 $menu['tools']['admin'] = array(
 						
                                'tools/LogDetails.php'=>'Access Log',
-			       'tools/DeleteLog.php'=>'Delete Log',
+			                         'tools/DeleteLog.php'=>'Delete Log',
                                'tools/Rollover.php'=>'Rollover',
                                'tools/Backup.php'=>'Backup Database',
                                'tools/DataImport.php'=>'Data Import Utility',
                                'tools/GenerateApi.php'=>'API Token',
                                 1=>'Reports',  
                                'tools/Reports.php?func=Basic'=>'At a Glance',
                                'tools/Reports.php?func=Ins_r'=>'Institute Reports',
-//                               'tools/Reports.php?func=Ins_cf'=>'Institute Custom Field Reports',                                
+                               'tools/Reports.php?func=Ins_cf'=>'Institute Custom Field Reports',                                
     );
 ?>

--- modules/tools/Reports.php ---
@@ -103,13 +103,15 @@
     echo '</div>'; //.well
     echo '</div>'; //.col-md-4
     echo '</div>'; //.row
-//    echo '<div id="d"><TABLE align=center cellpadding=5 cellspacing=5>';
-//    echo '<tr><td><b>Number of Institutions</b></td><td>:</td><td>&nbsp ' . $num_schools . ' &nbsp </td></tr>';
-//    echo '<tr><td><b>Number of Students</b></td><td>:</td><td>&nbsp ' . $num_students . ' &nbsp </td><td> &nbsp Male : ' . $male . ' &nbsp| &nbspFemale : ' . $female . '</td></tr>';
-//    echo '<tr><td><b>Number of Teachers</b></td><td>:</td><td colspan=2>&nbsp ' . $num_teacher . '</td></tr>';
-//    echo '<tr><td><b>Number of Staff</b></td><td>:</td><td colspan=2>&nbsp ' . $num_staff . '</td></tr>';
-//    echo '<tr><td><b>Number of Parents</b></td><td>:</td><td colspan=2>&nbsp ' . $num_parent . '</td></tr>';
-//    echo '</TABLE></div>';
+
+    //    echo '<div id="d"><TABLE align=center cellpadding=5 cellspacing=5>';
+    //    echo '<tr><td><b>Number of Institutions</b></td><td>:</td><td>&nbsp ' . $num_schools . ' &nbsp </td></tr>';
+    //    echo '<tr><td><b>Number of Students</b></td><td>:</td><td>&nbsp ' . $num_students . ' &nbsp </td><td> &nbsp Male : ' . $male . ' &nbsp| &nbspFemale : ' . $female . '</td></tr>';
+    //    echo '<tr><td><b>Number of Teachers</b></td><td>:</td><td colspan=2>&nbsp ' . $num_teacher . '</td></tr>';
+    //    echo '<tr><td><b>Number of Staff</b></td><td>:</td><td colspan=2>&nbsp ' . $num_staff . '</td></tr>';
+    //    echo '<tr><td><b>Number of Parents</b></td><td>:</td><td colspan=2>&nbsp ' . $num_parent . '</td></tr>';
+    //    echo '</TABLE></div>';
+
     echo '</div>';
     echo '</div>';//.tabbable
     echo '</div>';//.panel
@@ -177,8 +179,7 @@
                 }
             }
             echo '<br>';
-            // print_r($arr);print_r($arr);
-            // echo 'SELECT ID,' . $columns . ' FROM schools';
+            
             $get_school_info = DBGet(DBQuery('SELECT ID,' . $columns . ' FROM schools'));
 
             echo '<br>';

--- modules/users/Staff.php ---
@@ -839,26 +839,26 @@
 
             if ($_REQUEST['staff_id'] != 'new') {
                 if ($_REQUEST['category_id'] == 1 && ($username == '' || $password == '' || $this_school['JOINING_DATE'] == '')) {
-                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save & Next', '', 'class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
+                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save & Next', '', 'id="mod_staff_btn" class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
                 }
                 if ($_REQUEST['category_id'] == 1 && $username != '' && $password != '' && $this_school['JOINING_DATE'] != '') {
-                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
+                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'id="mod_staff_btn" class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
                 }
                 if ($_REQUEST['category_id'] != 1) {
                     $btn_flag=1;
                     if(User('PROFILE')=='admin' && $_REQUEST['modname']=='users/Staff.php' && isset($_REQUEST['include']) && $_REQUEST['include']=='ScheduleInc')
                     $btn_flag=0;
                     if($btn_flag==1)
-                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
+                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'id="mod_staff_btn" class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
                 }
             } else {
                 if ($_REQUEST['category_id'] != 3) {
-                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save & Next', '', 'class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
+                    echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save & Next', '', 'id="mod_staff_btn" class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
                 } else {
                     if ($_SESSION[staff_school_chkbox_id] != '') {
-                        echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'class="btn btn-primary pull-right" onClick="return formcheck_add_staff(' . $_SESSION[staff_school_chkbox_id] . ');"') . '</div></div>';
+                        echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'id="mod_staff_btn" class="btn btn-primary pull-right" onClick="return formcheck_add_staff(' . $_SESSION[staff_school_chkbox_id] . ');"') . '</div></div>';
                     } else
-                        echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
+                        echo '<div class="panel-footer"><div class="heading-elements">' . SubmitButton('Save', '', 'id="mod_staff_btn" class="btn btn-primary pull-right" onClick="return formcheck_add_staff(0);"') . '</div></div>';
                     unset($_SESSION[staff_school_chkbox_id]);
                 }
             }

--- modules/users/UserFields.php ---
@@ -227,7 +227,7 @@
         if ($has_assigned > 0) {
             UnableDeletePromptMod('Cannot delete becauses this people field is associated.');
         } else {
-            if (DeletePromptMod('staff field')) {
+            if (DeletePromptMod('parent field')) {
                 $id = clean_param($_REQUEST['id'], PARAM_INT);
                 DBQuery('DELETE FROM people_fields WHERE ID=\'' . $id . '\'');
                 DBQuery('ALTER TABLE people DROP COLUMN CUSTOM_' . $id . '');
@@ -241,7 +241,7 @@
         if ($has_assigned > 0) {
             UnableDeletePromptMod('Cannot delete becauses this people field category is associated.');
         } else {
-            if (DeletePromptMod('staff field category and all fields in the category')) {
+            if (DeletePromptMod('parent field category')) {
                 $fields = DBGet(DBQuery('SELECT ID FROM people_fields WHERE CATEGORY_ID=\'' . $_REQUEST[category_id] . '\''));
                 foreach ($fields as $field) {
                     DBQuery('DELETE FROM people_fields WHERE ID=\'' . $field[ID] . '\'');

--- modules/users/includes/SchoolsInfoInc.php ---
@@ -768,7 +768,7 @@
             echo '<div class="col-lg-6">';
             echo '<div class="form-group"><label class="control-label text-right col-lg-4">Username <span class=text-danger>*</span></label><div class="col-lg-8">';
             if (!$this_school_mod['USERNAME']) {
-                echo TextInput('', 'USERNAME', '', 'size=20 maxlength=50 onblur="usercheck_init_staff(this)"');
+                echo TextInput('', 'USERNAME', '', 'size=20 maxlength=50 onkeyup="usercheck_init_staff_2(this)" onblur="usercheck_init_staff(this)"');
                 echo '<span id="ajax_output_st"></span><input type=hidden id=usr_err_check value=0>';
             } else {
                 echo NoInput($this_school_mod['USERNAME'], '', '', 'onkeyup="usercheck_init(this)"') . '<div id="ajax_output"></div>';
@@ -787,6 +787,15 @@
             echo "<span id='passwordStrength'></span></div></div>";
             echo '</div>'; //.col-lg-6
             echo '</div>'; //.row
+
+            if($this_school_mod['USERNAME'] && $this_school_mod['USERNAME'] != '')
+            {
+                echo '<input id="staff_username_flag" type="hidden" value="1">';
+            }
+            else
+            {
+                echo '<input id="staff_username_flag" type="hidden" value="0">';
+            }
             
             echo '<div class="row">';
             echo '<div class="col-md-6">';

