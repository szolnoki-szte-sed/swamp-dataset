--- i18n/en.json ---
@@ -92,6 +92,8 @@
 	"importdump-request-edited-target": "Target:\nPrevious value: $1\nNew value: $2",
 	"importdump-request-locked": "This request has been locked. It can not be edited, and no comments can be added to it.",
 	"importdump-request-reopened": "Request reopened by $1.\n\n[Changes made]$2",
+	"importdump-requestimportqueue-notcentral": "Disabled",
+	"importdump-requestimportqueue-notcentral-text": "Import requests are disabled on this wiki. Please check the import queue from the central wiki.",
 	"importdump-section-comments": "Request comments",
 	"importdump-section-details": "Request details",
 	"importdump-section-editing": "Edit request",

--- i18n/qqq.json ---
@@ -79,8 +79,8 @@
 	"importdump-log-header": "Header for the ImportDump log.",
 	"importdump-log-name": "{{doc-logpage}}",
 	"importdump-no-changes": "Message displayed if attempting to edit request without making any changes.",
-	"importdump-notcentral": "Heading for the message displayed if there is a configured central wiki, and it is not the current wiki.\n{{Identical|Disabled}}",
-	"importdump-notcentral-text": "Text for the message displayed if there is a configured central wiki, and it is not the current wiki.",
+	"importdump-notcentral": "Heading for the message displayed for Special:RequestImport if there is a configured central wiki, and it is not the current wiki.\n{{Identical|Disabled}}",
+	"importdump-notcentral-text": "Text for the message displayed for Special:RequestImport if there is a configured central wiki, and it is not the current wiki.",
 	"importdump-notification-body-import-failed": "Echo notification body for 'importdump-import-failed'. $1 is the error message that is received.",
 	"importdump-notification-body-new-request": "Echo notification body for 'importdump-new-request'. $1 is reason; $2 is the requester's username; $3 is the target wiki's database name.",
 	"importdump-notification-header-comment": "Echo notification header for 'importdump-request-comment'. $1 is the request ID.",
@@ -96,6 +96,8 @@
 	"importdump-request-edited-target": "Message displayed if the value of 'target' was edited. $1 is the previous value; $2 is the new value.",
 	"importdump-request-locked": "Message displayed above the form at Special:RequestImportQueue if the request is locked.",
 	"importdump-request-reopened": "'Request reopened' message. $1 is the actor's username; $2 is the changes that were made.",
+	"importdump-requestimportqueue-notcentral": "Heading for the message displayed for Special:RequestImportQueue if there is a configured central wiki, and it is not the current wiki.\n{{Identical|Disabled}}",
+	"importdump-requestimportqueue-notcentral-text": "Text for the message displayed for Special:RequestImportQueue if there is a configured central wiki, and it is not the current wiki.",
 	"importdump-section-comments": "'Request Comments' section label.\n{{doc-important|This means \"comments about the request\", not \"ask for comments\"}}",
 	"importdump-section-details": "'Request Details' section label.\n{{doc-important|This means \"details about the request\", not \"ask for details\"}}",
 	"importdump-section-editing": "'Edit Request' section label.",

--- includes/Specials/SpecialRequestImportQueue.php ---
@@ -2,10 +2,12 @@
 
 namespace Miraheze\ImportDump\Specials;
 
+use ErrorPageError;
 use MediaWiki\HTMLForm\HTMLForm;
 use MediaWiki\Permissions\PermissionManager;
 use MediaWiki\SpecialPage\SpecialPage;
 use MediaWiki\User\UserFactory;
+use MediaWiki\WikiMap\WikiMap;
 use Miraheze\ImportDump\ImportDumpRequestManager;
 use Miraheze\ImportDump\ImportDumpRequestQueuePager;
 use Miraheze\ImportDump\ImportDumpRequestViewer;
@@ -53,6 +55,11 @@ public function __construct(
 	public function execute( $par ) {
 		$this->setHeaders();
 
+		$dbr = $this->connectionProvider->getReplicaDatabase( 'virtual-importdump' );
+		if ( !WikiMap::isCurrentWikiDbDomain( $dbr->getDomainID() ) ) {
+			throw new ErrorPageError( 'importdump-requestimportqueue-notcentral', 'importdump-requestimportqueue-notcentral-text' );
+		}
+
 		if ( $par ) {
 			$this->getOutput()->addBacklinkSubtitle( $this->getPageTitle() );
 			$this->lookupRequest( $par );

