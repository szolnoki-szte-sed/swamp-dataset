--- framework/core/js/src/forum/components/AvatarEditor.js ---
@@ -204,7 +204,7 @@ export default class AvatarEditor extends Component {
 
   /**
    * After a successful upload/removal, push the updated user data into the
-   * store, and force a recomputation of the user's avatar color.
+   * store, and force a re-computation of the user's avatar color.
    *
    * @param {object} response
    * @protected

--- framework/core/src/Api/Controller/UploadFaviconController.php ---
@@ -62,7 +62,7 @@ protected function makeImage(UploadedFileInterface $file): Image
             ]);
         }
 
-        $encodedImage = $this->imageManager->make($file->getStream())->resize(64, 64, function ($constraint) {
+        $encodedImage = $this->imageManager->make($file->getStream()->getMetadata('uri'))->resize(64, 64, function ($constraint) {
             $constraint->aspectRatio();
             $constraint->upsize();
         })->encode('png');

--- framework/core/src/Api/Controller/UploadLogoController.php ---
@@ -38,7 +38,7 @@ public function __construct(SettingsRepositoryInterface $settings, Factory $file
      */
     protected function makeImage(UploadedFileInterface $file): Image
     {
-        $encodedImage = $this->imageManager->make($file->getStream())->heighten(60, function ($constraint) {
+        $encodedImage = $this->imageManager->make($file->getStream()->getMetadata('uri'))->heighten(60, function ($constraint) {
             $constraint->upsize();
         })->encode('png');
 

--- framework/core/src/User/AvatarValidator.php ---
@@ -87,7 +87,7 @@ protected function assertFileMimes(UploadedFileInterface $file)
         }
 
         try {
-            $this->imageManager->make($file->getStream());
+            $this->imageManager->make($file->getStream()->getMetadata('uri'));
         } catch (NotReadableException $_e) {
             $this->raise('image');
         }

--- framework/core/src/User/Command/UploadAvatarHandler.php ---
@@ -74,7 +74,7 @@ public function handle(UploadAvatar $command)
 
         $this->validator->assertValid(['avatar' => $command->file]);
 
-        $image = $this->imageManager->make($command->file->getStream());
+        $image = $this->imageManager->make($command->file->getStream()->getMetadata('uri'));
 
         $this->events->dispatch(
             new AvatarSaving($user, $actor, $image)

