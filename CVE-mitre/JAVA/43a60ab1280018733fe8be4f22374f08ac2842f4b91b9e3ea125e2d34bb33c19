--- extensions/database/src/com/google/refine/extension/database/DatabaseConfiguration.java ---
@@ -67,6 +67,13 @@ public String getDatabaseHost() {
     }
 
     public void setDatabaseHost(String databaseServer) {
+        // forbid setting settings inside the host parameter:
+        // https://dev.mysql.com/doc/connector-j/en/connector-j-reference-jdbc-url-format.html
+        if (databaseServer == null ||
+                databaseServer.contains("(") ||
+                databaseServer.contains("=")) {
+            throw new IllegalArgumentException("Invalid host supplied");
+        }
         this.databaseHost = databaseServer;
     }
 

--- extensions/database/tests/src/com/google/refine/extension/database/DatabaseConfigurationTest.java ---
@@ -1,5 +1,8 @@
 package com.google.refine.extension.database;
 
+import static org.testng.Assert.assertEquals;
+import static org.testng.Assert.assertThrows;
+
 import org.testng.annotations.Test;
 
 import static org.testng.Assert.assertEquals;
@@ -18,4 +21,13 @@ public void testToURI() {
         // the database name is escaped, preventing the exploit
         assertEquals(url, "jdbc:mysql://my.host/test%3FallowLoadLocalInfile=true%23");
     }
+
+    @Test
+    public void testSetMaliciousHost() {
+        DatabaseConfiguration config = new DatabaseConfiguration();
+        config.setDatabaseType("mysql");
+
+        assertThrows(IllegalArgumentException.class,
+                () -> config.setDatabaseHost("127.0.0.1:3306,(allowLoadLocalInfile=true,allowUrlInLocalInfile=true),127.0.0.1"));
+    }
 }

