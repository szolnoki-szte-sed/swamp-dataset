diff --git a/src/main/java/com/google/code/kaptcha/impl/DefaultNoise.java b/src/main/java/com/google/code/kaptcha/impl/DefaultNoise.java
index a59ad09..c068b30 100644
--- a/src/main/java/com/google/code/kaptcha/impl/DefaultNoise.java
+++ b/src/main/java/com/google/code/kaptcha/impl/DefaultNoise.java
@@ -8,6 +8,7 @@
 import java.awt.geom.PathIterator;
 import java.awt.geom.Point2D;
 import java.awt.image.BufferedImage;
+import java.security.SecureRandom;
 import java.util.Random;
 
 import com.google.code.kaptcha.NoiseProducer;
@@ -41,7 +42,7 @@ public void makeNoise(BufferedImage image, float factorOne,
 
 		// the points where the line changes the stroke and direction
 		Point2D[] pts = null;
-		Random rand = new Random();
+		Random rand = new SecureRandom();
 
 		// the curve from where the points are taken
 		CubicCurve2D cc = new CubicCurve2D.Float(width * factorOne, height
diff --git a/src/main/java/com/google/code/kaptcha/impl/ShadowGimpy.java b/src/main/java/com/google/code/kaptcha/impl/ShadowGimpy.java
index 7a935e4..b5a2915 100644
--- a/src/main/java/com/google/code/kaptcha/impl/ShadowGimpy.java
+++ b/src/main/java/com/google/code/kaptcha/impl/ShadowGimpy.java
@@ -2,6 +2,7 @@
 
 import java.awt.Graphics2D;
 import java.awt.image.BufferedImage;
+import java.security.SecureRandom;
 import java.util.Random;
 
 import com.google.code.kaptcha.GimpyEngine;
@@ -35,7 +36,7 @@ public BufferedImage getDistortedImage(BufferedImage baseImage)
 		shadowFilter.setDistance(5);
 		shadowFilter.setOpacity(1);
 
-		Random rand = new Random();
+		Random rand = new SecureRandom();
 
 		RippleFilter rippleFilter = new RippleFilter();
 		rippleFilter.setWaveType(RippleFilter.SINE);
diff --git a/src/main/java/com/google/code/kaptcha/text/impl/ChineseTextProducer.java b/src/main/java/com/google/code/kaptcha/text/impl/ChineseTextProducer.java
index 98c6f5f..716220c 100644
--- a/src/main/java/com/google/code/kaptcha/text/impl/ChineseTextProducer.java
+++ b/src/main/java/com/google/code/kaptcha/text/impl/ChineseTextProducer.java
@@ -1,6 +1,6 @@
 package com.google.code.kaptcha.text.impl;
 
-import java.util.Random;
+import java.security.SecureRandom;
 
 import com.google.code.kaptcha.text.TextProducer;
 
@@ -19,6 +19,6 @@ public class ChineseTextProducer implements TextProducer
 	 */
 	public String getText()
 	{
-		return simplifiedChineseTexts[new Random().nextInt(simplifiedChineseTexts.length)];
+		return simplifiedChineseTexts[new SecureRandom().nextInt(simplifiedChineseTexts.length)];
 	}
 }
diff --git a/src/main/java/com/google/code/kaptcha/text/impl/DefaultTextCreator.java b/src/main/java/com/google/code/kaptcha/text/impl/DefaultTextCreator.java
index f708fc2..eafc7db 100644
--- a/src/main/java/com/google/code/kaptcha/text/impl/DefaultTextCreator.java
+++ b/src/main/java/com/google/code/kaptcha/text/impl/DefaultTextCreator.java
@@ -1,5 +1,6 @@
 package com.google.code.kaptcha.text.impl;
 
+import java.security.SecureRandom;
 import java.util.Random;
 
 import com.google.code.kaptcha.text.TextProducer;
@@ -18,7 +19,7 @@ public String getText()
 	{
 		int length = getConfig().getTextProducerCharLength();
 		char[] chars = getConfig().getTextProducerCharString();
-		Random rand = new Random();
+		Random rand = new SecureRandom();
 		StringBuffer text = new StringBuffer();
 		for (int i = 0; i < length; i++)
 		{
diff --git a/src/main/java/com/google/code/kaptcha/text/impl/DefaultWordRenderer.java b/src/main/java/com/google/code/kaptcha/text/impl/DefaultWordRenderer.java
index f233ebb..8925318 100644
--- a/src/main/java/com/google/code/kaptcha/text/impl/DefaultWordRenderer.java
+++ b/src/main/java/com/google/code/kaptcha/text/impl/DefaultWordRenderer.java
@@ -7,6 +7,7 @@
 import java.awt.font.FontRenderContext;
 import java.awt.font.GlyphVector;
 import java.awt.image.BufferedImage;
+import java.security.SecureRandom;
 import java.util.Random;
 
 import com.google.code.kaptcha.text.WordRenderer;
@@ -48,7 +49,7 @@ public BufferedImage renderWord(String word, int width, int height)
 		g2D.setRenderingHints(hints);
 
 		FontRenderContext frc = g2D.getFontRenderContext();
-		Random random = new Random();
+		Random random = new SecureRandom();
 
 		int startPosY = (height - fontSize) / 5 + fontSize;
 
diff --git a/src/main/java/com/google/code/kaptcha/text/impl/FiveLetterFirstNameTextCreator.java b/src/main/java/com/google/code/kaptcha/text/impl/FiveLetterFirstNameTextCreator.java
index 7b0bc4e..8e07668 100644
--- a/src/main/java/com/google/code/kaptcha/text/impl/FiveLetterFirstNameTextCreator.java
+++ b/src/main/java/com/google/code/kaptcha/text/impl/FiveLetterFirstNameTextCreator.java
@@ -1,6 +1,7 @@
 package com.google.code.kaptcha.text.impl;
 
 import java.util.Random;
+import java.security.SecureRandom;
 
 import com.google.code.kaptcha.text.TextProducer;
 
@@ -1056,7 +1057,7 @@ public class FiveLetterFirstNameTextCreator implements TextProducer
 	public String getText()
 	{
 		int randomContext = FIRST_NAMES.length - 1;
-		Random rand = new Random();
+		Random rand = new SecureRandom();
 		return FIRST_NAMES[rand.nextInt(randomContext) + 1];
 	}
 }
