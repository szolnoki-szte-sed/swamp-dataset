--- package.json ---
@@ -1,6 +1,6 @@
 {
   "name": "@workos-inc/authkit-nextjs",
-  "version": "0.13.1",
+  "version": "0.13.2",
   "description": "Authentication and session helpers for using WorkOS & AuthKit with Next.js",
   "sideEffects": false,
   "type": "module",

--- src/session.ts ---
@@ -120,7 +120,7 @@ async function updateSession(
   }
 
   try {
-    if (debug) console.log('Session invalid. Attempting refresh', session.refreshToken);
+    if (debug) console.log(`Session invalid. Refreshing access token that ends in ${session.accessToken.slice(-10)}`);
 
     const { org_id: organizationId } = decodeJwt<AccessToken>(session.accessToken);
 
@@ -131,7 +131,7 @@ async function updateSession(
       organizationId,
     });
 
-    if (debug) console.log('Refresh successful:', refreshToken);
+    if (debug) console.log(`Refresh successful. New access token ends in ${accessToken.slice(-10)}`);
 
     // Encrypt session with new access and refresh tokens
     const encryptedSession = await encryptSession({

--- src/workos.ts ---
@@ -1,7 +1,7 @@
 import { WorkOS } from '@workos-inc/node';
 import { WORKOS_API_HOSTNAME, WORKOS_API_KEY, WORKOS_API_HTTPS, WORKOS_API_PORT } from './env-variables.js';
 
-export const VERSION = '0.13.1';
+export const VERSION = '0.13.2';
 
 const options = {
   apiHostname: WORKOS_API_HOSTNAME,

