--- src/web/core/src/main/java/org/geoserver/web/GeoServerBasePage.java ---
@@ -267,7 +267,7 @@ protected void onComponentTag(org.apache.wicket.markup.ComponentTag tag) {
         // home page link
         add(
                 new BookmarkablePageLink<>("home", GeoServerHomePage.class)
-                        .add(new Label("label", new StringResourceModel("home", null, null))));
+                        .add(new Label("label", "")));
 
         // dev buttons
         DeveloperToolbar devToolbar = new DeveloperToolbar("devButtons");

--- src/web/core/src/main/java/org/geoserver/web/GeoServerHomePage.java ---
@@ -645,6 +645,12 @@ private Label belongsTo(ContactInfo contactInfo, Locale locale) {
     private Label footerMessage(ContactInfo contactInfo, Locale locale) {
         String version = String.valueOf(new ResourceModel("version").getObject());
 
+        boolean admin = getSession().isAdmin();
+        if (!admin) {
+            Label footerMessage = new Label("footerMessage", "");
+            return footerMessage;
+        }
+
         HashMap<String, String> params = new HashMap<>();
         params.put("version", version);
 

--- src/web/core/src/test/java/org/geoserver/web/GeoServerHomePageTest.java ---
@@ -12,6 +12,7 @@
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotSame;
 import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -21,6 +22,7 @@
 import org.apache.wicket.Page;
 import org.apache.wicket.markup.html.basic.Label;
 import org.apache.wicket.markup.html.form.TextField;
+import org.apache.wicket.model.StringResourceModel;
 import org.apache.wicket.util.tester.FormTester;
 import org.geoserver.catalog.PublishedInfo;
 import org.geoserver.catalog.WorkspaceInfo;
@@ -290,6 +292,23 @@ public void testAutoSelection() throws Exception {
         tester.assertComponent("form:layer:select", Select2DropDownChoice.class);
     }
 
+    @Test
+    public void testHideSensitiveInfo() throws Exception {
+        logout();
+        tester.startPage(GeoServerHomePage.class);
+
+        var version = new StringResourceModel("version", null, null).getString();
+
+        String responseTxt = tester.getLastResponse().getDocument();
+        assertFalse(responseTxt.contains(version));
+
+        login();
+        tester.startPage(GeoServerHomePage.class);
+
+        responseTxt = tester.getLastResponse().getDocument();
+        assertTrue(responseTxt.contains(version));
+    }
+
     public static class MockHomePageContentProvider implements GeoServerHomePageContentProvider {
         @Override
         public Component getPageBodyComponent(final String id) {

