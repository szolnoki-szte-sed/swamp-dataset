--- classes/form/CustomerAddressForm.php ---
@@ -134,7 +134,7 @@ public function submit()
         }
 
         $address = new Address(
-            $this->getValue('id_address'),
+            Tools::getValue('id_address'),
             $this->language->id
         );
 

--- classes/form/CustomerAddressFormatter.php ---
@@ -66,12 +66,6 @@ public function getFormat()
         $required = array_flip(AddressFormat::getFieldsRequired());
 
         $format = [
-            'id_address' => (new FormField())
-                ->setName('id_address')
-                ->setType('hidden'),
-            'id_customer' => (new FormField())
-                ->setName('id_customer')
-                ->setType('hidden'),
             'back' => (new FormField())
                 ->setName('back')
                 ->setType('hidden'),

--- classes/form/CustomerForm.php ---
@@ -76,7 +76,6 @@ public function setPasswordRequired($passwordRequired)
     public function fillFromCustomer(Customer $customer)
     {
         $params = get_object_vars($customer);
-        $params['id_customer'] = $customer->id;
         $params['birthday'] = $customer->birthday === '0000-00-00' ? null : Tools::displayDate($customer->birthday);
 
         return $this->fillWith($params);
@@ -87,13 +86,10 @@ public function fillFromCustomer(Customer $customer)
      */
     public function getCustomer()
     {
-        $customer = new Customer($this->getValue('id_customer'));
+        $customer = new Customer($this->context->customer->id);
 
         foreach ($this->formFields as $field) {
             $customerField = $field->getName();
-            if ($customerField === 'id_customer') {
-                $customerField = 'id';
-            }
             if (property_exists($customer, $customerField)) {
                 $customer->$customerField = $field->getValue();
             }
@@ -119,10 +115,10 @@ public function validate()
         $birthdayField = $this->getField('birthday');
         if (!empty($birthdayField) &&
             !empty($birthdayField->getValue()) &&
-            Validate::isBirthDate($birthdayField->getValue(), Context::getContext()->language->date_format_lite)
+            Validate::isBirthDate($birthdayField->getValue(), $this->context->language->date_format_lite)
         ) {
             $dateBuilt = DateTime::createFromFormat(
-                Context::getContext()->language->date_format_lite,
+                $this->context->language->date_format_lite,
                 $birthdayField->getValue()
             );
             $birthdayField->setValue($dateBuilt->format('Y-m-d'));

--- classes/form/CustomerFormatter.php ---
@@ -91,10 +91,6 @@ public function getFormat()
     {
         $format = [];
 
-        $format['id_customer'] = (new FormField())
-            ->setName('id_customer')
-            ->setType('hidden');
-
         $genders = Gender::getGenders($this->language->id);
         if ($genders->count() > 0) {
             $genderField = (new FormField())

