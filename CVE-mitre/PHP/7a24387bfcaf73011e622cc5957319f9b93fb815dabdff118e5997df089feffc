--- src/Platforms/AbstractPlatform.php ---
@@ -3365,7 +3365,11 @@ final public function modifyLimitQuery($query, $limit, $offset = 0)
             ));
         }
 
-        return $this->doModifyLimitQuery($query, $limit, $offset);
+        if ($limit !== null) {
+            $limit = (int) $limit;
+        }
+
+        return $this->doModifyLimitQuery($query, $limit, (int) $offset);
     }
 
     /**

--- tests/Platforms/AbstractPlatformTestCase.php ---
@@ -1470,6 +1470,19 @@ public function testZeroOffsetWithoutLimitIsIgnored(): void
         );
     }
 
+    public function testLimitOffsetCastToInt(): void
+    {
+        self::assertSame(
+            $this->getLimitOffsetCastToIntExpectedQuery(),
+            $this->platform->modifyLimitQuery('SELECT * FROM user', '1 BANANA', '2 APPLES')
+        );
+    }
+
+    protected function getLimitOffsetCastToIntExpectedQuery(): string
+    {
+        return 'SELECT * FROM user LIMIT 1 OFFSET 2';
+    }
+
     /**
      * @param array<string, mixed> $column
      *

--- tests/Platforms/DB2PlatformTest.php ---
@@ -773,4 +773,10 @@ public function testQuotesTableNameInListTableForeignKeysSQL(): void
             $this->platform->getListTableForeignKeysSQL("Foo'Bar\\")
         );
     }
+
+    protected function getLimitOffsetCastToIntExpectedQuery(): string
+    {
+        return 'SELECT db22.* FROM (SELECT db21.*, ROW_NUMBER() OVER() AS DC_ROWNUM'
+            . ' FROM (SELECT * FROM user) db21) db22 WHERE db22.DC_ROWNUM >= 3 AND db22.DC_ROWNUM <= 3';
+    }
 }

--- tests/Platforms/OraclePlatformTest.php ---
@@ -986,4 +986,10 @@ public function asciiStringSqlDeclarationDataProvider(): array
             ['CHAR(12)', ['length' => 12, 'fixed' => true]],
         ];
     }
+
+    protected function getLimitOffsetCastToIntExpectedQuery(): string
+    {
+        return 'SELECT * FROM (SELECT a.*, ROWNUM AS doctrine_rownum FROM (SELECT * FROM user) a WHERE ROWNUM <= 3)'
+            . ' WHERE doctrine_rownum >= 3';
+    }
 }

