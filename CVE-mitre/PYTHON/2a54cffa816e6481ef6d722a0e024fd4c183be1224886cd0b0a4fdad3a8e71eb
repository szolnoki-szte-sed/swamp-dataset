--- llama-index-core/llama_index/core/query_engine/cogniswitch_query_engine.py ---
@@ -41,7 +41,6 @@ def query_knowledge(self, query: str) -> Response:
         response = requests.post(
             self.knowledge_request_endpoint,
             headers=self.headers,
-            verify=False,
             data=data,
         )
         if response.status_code == 200:

--- llama-index-integrations/llms/llama-index-llms-rungpt/llama_index/llms/rungpt/base.py ---
@@ -1,4 +1,3 @@
-import json
 from typing import Any, Callable, Dict, List, Optional, Sequence, Tuple, Union
 
 from llama_index.core.base.llms.types import (
@@ -153,7 +152,7 @@ def stream_complete(
         def gen() -> CompletionResponseGen:
             text = ""
             for item in response_iter:
-                item_dict = json.loads(json.dumps(eval(item.data)))
+                item_dict = dict(item.data)
                 delta = item_dict["choices"][0]["text"]
                 additional_kwargs = item_dict["usage"]
                 text = text + self._space_handler(delta)
@@ -214,7 +213,7 @@ def stream_chat(
         def gen() -> ChatResponseGen:
             content = ""
             for item in chat_iter:
-                item_dict = json.loads(json.dumps(eval(item.data)))
+                item_dict = dict(item.data)
                 chat_message, delta = self._message_unpacker(item_dict)
                 content = content + self._space_handler(delta)
                 chat_message.content = content

--- llama-index-integrations/tools/llama-index-tools-cogniswitch/llama_index/tools/cogniswitch/base.py ---
@@ -91,9 +91,7 @@ def store_data(
                 "documentName": document_name,
                 "documentDescription": document_description,
             }
-            response = requests.post(
-                api_url, headers=headers, verify=False, data=data, files=files
-            )
+            response = requests.post(api_url, headers=headers, data=data, files=files)
 
         elif file:
             api_url = self.source_file_endpoint
@@ -108,9 +106,7 @@ def store_data(
                 "documentName": document_name,
                 "documentDescription": document_description,
             }
-            response = requests.post(
-                api_url, headers=headers, verify=False, data=data, files=files
-            )
+            response = requests.post(api_url, headers=headers, data=data, files=files)
         if response.status_code == 200:
             return response.json()
         else:
@@ -134,7 +130,7 @@ def query_knowledge(self, query: str) -> dict:
         headers = self.headers
 
         data = {"query": query}
-        response = requests.post(api_url, headers=headers, verify=False, data=data)
+        response = requests.post(api_url, headers=headers, data=data)
         if response.status_code == 200:
             return response.json()
         else:
@@ -157,7 +153,6 @@ def knowledge_status(self, document_name: str) -> dict:
             self.knowledge_status_endpoint,
             headers=self.headers,
             params=params,
-            verify=False,
         )
         if response.status_code == 200:
             source_info = response.json()

