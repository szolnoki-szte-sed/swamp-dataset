--- plugins/tracker/include/Tracker/Artifact/ArtifactsDeletion/ArchiveAndDeleteArtifactTaskBuilder.php ---
@@ -217,7 +217,6 @@ public function build(LoggerInterface $logger): ArchiveAndDeleteArtifactTask
                 new ComputedFieldDaoCache(new ComputedFieldDao()),
                 new RecentlyVisitedDao(),
                 new PendingArtifactRemovalDao(),
-                new ArtifactChangesetValueDeletorDAO(),
                 new PostArtifactMoveReferencesCleaner(
                     $cross_reference_manager,
                     new ReverseLinksRetriever(new ReverseLinksDao(), $tracker_artifact_factory),

--- plugins/tracker/include/Tracker/Artifact/ArtifactsDeletion/ArtifactChangesetValueDeletorDAO.php ---
@@ -1,61 +0,0 @@
-<?php
-/**
- * Copyright (c) Enalean 2023 - Present. All Rights Reserved.
- *
- * This file is a part of Tuleap.
- *
- * Tuleap is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * Tuleap is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
- */
-
-declare(strict_types=1);
-
-namespace Tuleap\Tracker\Artifact\ArtifactsDeletion;
-
-use Tuleap\DB\DataAccessObject;
-use Tuleap\Tracker\Artifact\Artifact;
-
-class ArtifactChangesetValueDeletorDAO extends DataAccessObject
-{
-    public function cleanAllChangesetValueInTransaction(Artifact $artifact): void
-    {
-        $sql  = 'SELECT cvalue.changeset_id, changeset.id FROM tracker_changeset AS changeset
-                INNER JOIN tracker_changeset_value AS cvalue ON changeset.id = cvalue.changeset_id WHERE artifact_id = ?';
-        $rows = $this->getDB()->run($sql, $artifact->getId());
-
-        foreach ($rows as $row) {
-            $this->getDB()->delete('tracker_changeset_value_artifactlink', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_computedfield_manual_value', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_date', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_file', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_float', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_int', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_list', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_openlist', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_permissionsonartifact', ['changeset_value_id' => $row['changeset_id']]);
-            $this->getDB()->delete('tracker_changeset_value_text', ['changeset_value_id' => $row['changeset_id']]);
-
-            $sql = 'DELETE tracker_changeset_comment, tracker_changeset_comment_fulltext
-                    FROM tracker_changeset_comment
-                    INNER JOIN tracker_changeset_comment_fulltext ON tracker_changeset_comment.id = tracker_changeset_comment_fulltext.comment_id
-                    WHERE changeset_id = ?';
-            $this->getDB()->run($sql, $row['changeset_id']);
-
-            $this->getDB()->delete('tracker_changeset_incomingmail', ['changeset_id' => $row['id']]);
-
-            $this->getDB()->delete('tracker_changeset_value', ['changeset_id' => $row['id']]);
-        }
-
-        $this->getDB()->delete('tracker_changeset', ['artifact_id' => $artifact->getId()]);
-    }
-}

--- plugins/tracker/include/Tracker/Artifact/ArtifactsDeletion/ArtifactDependenciesCleaner.php ---
@@ -36,7 +36,6 @@ public function __construct(
         private readonly ComputedFieldDaoCache $computed_dao_cache,
         private readonly RecentlyVisitedDao $recently_visited_dao,
         private readonly PendingArtifactRemovalDao $artifact_removal,
-        private readonly ArtifactChangesetValueDeletorDAO $changeset_value_deletor_DAO,
         private readonly PostArtifactMoveReferencesCleaner $post_artifact_move_references_cleaner,
         private readonly PostArtifactDeletionCleaner $artifact_deletion_cleaner,
     ) {
@@ -48,7 +47,6 @@ public function cleanDependencies(Artifact $artifact, DeletionContext $context,
 
         $this->cleanReferences($artifact, $context, $user);
 
-        $this->changeset_value_deletor_DAO->cleanAllChangesetValueInTransaction($artifact);
         $this->dao->deleteUnsubscribeNotificationForArtifact($artifact->getId());
         // We do not keep trace of the history change here because it doesn't have any sense
         $this->tracker_artifact_priority_manager->deletePriority($artifact);

--- plugins/tracker/include/Tracker/Artifact/ArtifactsDeletion/PendingArtifactRemovalDao.php ---
@@ -41,10 +41,35 @@ public function getPendingArtifactById($artifact_id)
         return $this->getDB()->row($sql, $artifact_id);
     }
 
-    public function removeArtifact($artifact_id)
+    public function removeArtifact($artifact_id): void
     {
-        $sql = 'DELETE FROM plugin_tracker_artifact_pending_removal
-                  WHERE id = ?';
+        $tables_to_clean_with_join = [
+            'tracker_changeset' => 'tracker_changeset.artifact_id = plugin_tracker_artifact_pending_removal.id',
+            'tracker_changeset_comment' => 'tracker_changeset_comment.changeset_id = tracker_changeset.id',
+            'tracker_changeset_comment_fulltext' => 'tracker_changeset_comment_fulltext.comment_id = tracker_changeset_comment.id',
+            'tracker_changeset_incomingmail' => 'tracker_changeset_incomingmail.changeset_id = tracker_changeset.id',
+            'tracker_changeset_value' => 'tracker_changeset_value.changeset_id = tracker_changeset.id',
+            'tracker_changeset_value_artifactlink' => 'tracker_changeset_value_artifactlink.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_computedfield_manual_value' => 'tracker_changeset_value_computedfield_manual_value.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_date' => 'tracker_changeset_value_date.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_file' => 'tracker_changeset_value_file.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_float' => 'tracker_changeset_value_float.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_int' => 'tracker_changeset_value_int.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_list' => 'tracker_changeset_value_list.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_openlist' => 'tracker_changeset_value_openlist.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_permissionsonartifact' => 'tracker_changeset_value_permissionsonartifact.changeset_value_id = tracker_changeset_value.id',
+            'tracker_changeset_value_text' => 'tracker_changeset_value_text.changeset_value_id = tracker_changeset_value.id',
+        ];
+
+        $tables = \Psl\Str\join(array_keys($tables_to_clean_with_join), ', ');
+        $joins  = '';
+        foreach ($tables_to_clean_with_join as $table => $join) {
+            $joins = $joins . sprintf('LEFT JOIN %s ON (%s) ', $table, $join);
+        }
+
+        $sql = "DELETE plugin_tracker_artifact_pending_removal, $tables
+                FROM plugin_tracker_artifact_pending_removal $joins
+                WHERE plugin_tracker_artifact_pending_removal.id = ?";
 
         $this->getDB()->run($sql, $artifact_id);
     }

--- plugins/tracker/tests/unit/Tracker/Artifact/ArtifactsDeletion/ArtifactDependenciesDeletorTest.php ---
@@ -52,7 +52,6 @@ protected function setUp(): void
         $computed_dao_cache                = $this->createStub(ComputedFieldDaoCache::class);
         $recently_visited_dao              = $this->createStub(RecentlyVisitedDao::class);
         $artifact_removal                  = $this->createStub(PendingArtifactRemovalDao::class);
-        $value_deletor                     = $this->createStub(ArtifactChangesetValueDeletorDAO::class);
         $this->post_move_deletor           = $this->createStub(PostArtifactMoveReferencesCleaner::class);
         $this->artifact_deletor            = $this->createStub(PostArtifactDeletionCleaner::class);
 
@@ -62,7 +61,6 @@ protected function setUp(): void
         $computed_dao_cache->expects(self::atLeastOnce())->method('deleteAllArtifactCacheValues');
         $recently_visited_dao->expects(self::atLeastOnce())->method('deleteVisitByArtifactId');
         $artifact_removal->expects(self::atLeastOnce())->method('removeArtifact');
-        $value_deletor->expects(self::atLeastOnce())->method('cleanAllChangesetValueInTransaction');
 
         $this->deletor = new ArtifactDependenciesCleaner(
             $permissions_manager,
@@ -71,7 +69,6 @@ protected function setUp(): void
             $computed_dao_cache,
             $recently_visited_dao,
             $artifact_removal,
-            $value_deletor,
             $this->post_move_deletor,
             $this->artifact_deletor
         );

