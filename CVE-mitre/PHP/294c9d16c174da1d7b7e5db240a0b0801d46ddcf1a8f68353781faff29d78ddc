--- controle/FuncionarioControle.php ---
@@ -850,6 +850,22 @@ public function alterarInfPessoal()
     public function alterarSenha()
     {
         extract($_REQUEST); 
+
+    
+        $funcionarioDAO=new FuncionarioDAO();
+       
+        if($id_pessoa != $_SESSION['id_pessoa']){
+            try{
+                if(!$funcionarioDAO->verificaAdm($_SESSION['id_pessoa'])){
+                    http_response_code(401);
+                    exit('Operação negada: O usuário logado não é o mesmo de que se deseja alterar a senha');
+                }
+            }catch(PDOException $e){
+                echo $e->getMessage();
+                exit();
+            }
+        }
+
         $nova_senha=hash('sha256', $nova_senha);
         if(isset($redir)){
             $page = $redir;
@@ -864,7 +880,6 @@ public function alterarSenha()
         }elseif ($verificacao==2) {
             header("Location: ".WWW."html/$page?verificacao=".$verificacao);
         }else{
-            $funcionarioDAO=new FuncionarioDAO();
             try {
                 $funcionarioDAO->alterarSenha($id_pessoa, $nova_senha);
                  $conexao =  mysqli_connect(DB_HOST,DB_USER,DB_PASSWORD,DB_NAME);

--- controle/control.php ---
@@ -3,6 +3,7 @@
 ini_set('display_errors', 1);
 ini_set('display_startup_erros', 1);
 error_reporting(E_ALL);
+session_start();
 
 function processaRequisicao($nomeClasse, $metodo, $modulo = null){
 	if ($nomeClasse && $metodo) {
@@ -12,6 +13,11 @@ function processaRequisicao($nomeClasse, $metodo, $modulo = null){
             include_once $nomeClasse . ".php";
         }
 
+		if(!isset($_SESSION['id_pessoa'])){
+			http_response_code(401);
+			exit('Operação negada: Cliente não autorizado');
+		}
+
         // Cria uma instância da classe e chama o método
         $objeto = new $nomeClasse();
         $objeto->$metodo();

--- dao/FuncionarioDAO.php ---
@@ -15,6 +15,24 @@
 
 class FuncionarioDAO
 {
+
+    public function verificaAdm($id){
+        $pdo = Conexao::connect();
+
+        $buscaAdm = 'SELECT * FROM pessoa WHERE id_pessoa=:id AND adm_configurado=1';
+
+        $stmt = $pdo->prepare($buscaAdm);
+        $stmt->bindParam(':id', $id);
+
+        $stmt->execute();
+
+        if($stmt->rowCount() == 1){
+            return true;
+        }
+
+        return false;
+    }
+
     public function retornarIdPessoa($id_funcionario)
     {
         try {

