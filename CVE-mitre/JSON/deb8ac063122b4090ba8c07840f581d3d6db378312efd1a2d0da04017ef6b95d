--- .travis.yml ---
@@ -1,7 +1,7 @@
 language: node_js
 node_js:
-  - "8"
-  - "6"
+  - "12"
+  - "10"
 before_script:
   - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
   - chmod +x ./cc-test-reporter

--- LICENSE ---
@@ -1,6 +1,6 @@
 The MIT License (MIT)
 
-Copyright (c) 2018 Alexey Bystrov
+Copyright (c) 2018-present Alexey Bystrov
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal

--- README.md ---
@@ -1,8 +1,8 @@
 set [![License](https://img.shields.io/npm/l/@strikeentco/set.svg)](https://github.com/strikeentco/set/blob/master/LICENSE)  [![npm](https://img.shields.io/npm/v/@strikeentco/set.svg)](https://www.npmjs.com/package/@strikeentco/set)
 ==========
-[![Build Status](https://travis-ci.org/strikeentco/set.svg)](https://travis-ci.org/strikeentco/set)  [![node](https://img.shields.io/node/v/@strikeentco/set.svg)](https://www.npmjs.com/package/@strikeentco/set) [![Test Coverage](https://api.codeclimate.com/v1/badges/450e530044d31f690dc5/test_coverage)](https://codeclimate.com/github/strikeentco/set/test_coverage) [![bitHound Score](https://www.bithound.io/github/strikeentco/set/badges/score.svg)](https://www.bithound.io/github/strikeentco/set)
+[![Build Status](https://travis-ci.org/strikeentco/set.svg)](https://travis-ci.org/strikeentco/set)  [![node](https://img.shields.io/node/v/@strikeentco/set.svg)](https://www.npmjs.com/package/@strikeentco/set) [![Test Coverage](https://api.codeclimate.com/v1/badges/450e530044d31f690dc5/test_coverage)](https://codeclimate.com/github/strikeentco/set/test_coverage)
 
-One of the smallest (*24 sloc*) and most effective implementations of setting a nested value on an object.
+One of the smallest (*31 sloc*) and most effective implementations of setting a nested value on an object.
 
 # Usage
 
@@ -41,4 +41,4 @@ set({ a: { b: 'c' } }, 'a:b', 'd', ':');
 ## License
 
 The MIT License (MIT)<br/>
-Copyright (c) 2018 Alexey Bystrov
+Copyright (c) 2018-present Alexey Bystrov

--- main.js ---
@@ -1,22 +1,39 @@
 'use strict';
 
-const isObject = val => typeof val === 'object' || typeof val === 'function';
+/* eslint-disable no-continue */
+
+const isObject = (val) => typeof val === 'object' || typeof val === 'function';
+const isProto = (val, obj) => val === '__proto__' || (val === 'constructor' && typeof obj.constructor === 'function');
 const set = (obj, parts, length, val) => {
   let tmp = obj;
   let i = 0;
   for (; i < length - 1; i++) {
     const part = parts[i];
+    if (isProto(part, tmp)) {
+      continue;
+    }
     tmp = !isObject(tmp[part]) ? tmp[part] = {} : tmp[part];
   }
   tmp[parts[i]] = val;
   return obj;
 };
 
+/**
+* Sets nested values on an object using a dot path or custom separator
+* @param {Object} obj
+* @param {String|Array} path
+* @param {Any} val
+* @param {String} [sep = '.']
+* @returns {Object}
+*/
 module.exports = (obj, path, val, sep = '.') => {
   if (!isObject(obj) || !path || !path.length) {
     return obj;
   }
   const parts = Array.isArray(path) ? path : String(path).split(sep);
+  if (isProto(parts[0], obj)) {
+    return obj;
+  }
   const { length } = parts;
   if (length === 1) {
     obj[parts[0]] = val;

--- package.json ---
@@ -1,7 +1,7 @@
 {
   "name": "@strikeentco/set",
   "author": "Alexey Bystrov <strikeentco@gmail.com>",
-  "version": "1.0.0",
+  "version": "1.0.1",
   "description": "Set nested values on an object using a dot path or custom separator",
   "engines": {
     "node": ">=6.0.0"
@@ -37,9 +37,9 @@
   ],
   "scripts": {
     "test": "mocha test",
-    "lint": "eslint main.js",
+    "lint": "npx eslint main.js",
     "check": "npm run lint && npm run test",
-    "cover": "nyc ./node_modules/mocha/bin/_mocha && nyc report --reporter=html",
+    "cover": "nyc ./node_modules/mocha/bin/_mocha && nyc report --reporter=html --reporter=json-summary",
     "test-on-travis": "nyc ./node_modules/mocha/bin/_mocha && nyc report --reporter=lcovonly"
   },
   "repository": {
@@ -50,14 +50,14 @@
     "url": "https://github.com/strikeentco/set/issues"
   },
   "devDependencies": {
-    "eslint": "^4.18.1",
-    "eslint-config-airbnb": "^16.1.0",
-    "eslint-plugin-import": "^2.9.0",
-    "eslint-plugin-jsx-a11y": "^6.0.3",
-    "eslint-plugin-react": "^7.7.0",
-    "mocha": "^5.0.1",
-    "nyc": "^11.4.1",
-    "should": "^13.2.1"
+    "eslint": "^7.12.1",
+    "eslint-config-airbnb": "^18.2.0",
+    "eslint-plugin-import": "^2.22.1",
+    "eslint-plugin-jsx-a11y": "^6.4.1",
+    "eslint-plugin-react": "^7.21.5",
+    "mocha": "^8.2.0",
+    "nyc": "^15.1.0",
+    "should": "^13.2.3"
   },
   "license": "MIT"
 }

--- test.js ---
@@ -106,4 +106,42 @@ describe('set', () => {
     set(o, 'a.b', date);
     should(o.a.b.getTime()).be.eql(date.getTime());
   });
+
+  it('should not indirectly set Object properties', () => {
+    const o = {};
+    set(o, 'constructor.a', 1);
+    should(o.constructor.a).be.eql(undefined);
+
+    set(o, ['constructor', 'b'], 1);
+    should(o.constructor.b).be.eql(undefined);
+  });
+
+  it('should not indirectly set Object properties', () => {
+    const o = {};
+    set(o, '__proto__.a', 1);
+    should(o.a).be.eql(undefined);
+
+    set(o, ['__proto__', 'b'], 1);
+    should(o.b).be.eql(undefined);
+  });
+
+  it('should not indirectly set Object properties', () => {
+    const o = {};
+    const ob = { o };
+    set(o, 'ob.constructor.a', 1);
+    should(ob.a).be.eql(undefined);
+
+    set(o, ['ob.constructor', 'b'], 1);
+    should(ob.b).be.eql(undefined);
+  });
+
+  it('should not indirectly set Object properties', () => {
+    const o = {};
+    const ob = { o };
+    set(o, 'ob.__proto__.a', 1);
+    should(ob.a).be.eql(undefined);
+
+    set(o, ['ob.__proto__', 'b'], 1);
+    should(ob.b).be.eql(undefined);
+  });
 });

