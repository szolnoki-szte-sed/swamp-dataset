--- docker/main.cfg ---
@@ -37,6 +37,10 @@ addressElectronicMailAddress=gerald.fenoy@geolabs.fr
 phoneVoice=False
 phoneFacsimile=False
 
+[headers]
+X-Powered-By=ZOO-Project
+Content-Security-Policy=default-src 'self'; script-src 'self'; style-src 'self';
+
 [database]
 dbname=zoo
 port=5432

--- zoo-project/zoo-kernel/response_print.c ---
@@ -3266,7 +3266,7 @@ void printRawdataOutput(maps* pmsConf,maps* outputs){
       sprintf(locationUrlHeader,"%s/processes/%s",rootUrl->value,location->value);
       printf("Location: %s\r\n",locationUrlHeader);
     }
-
+    printHeaders(pmsConf);
     map* pmStatus = getMapFromMaps(pmsConf,"headers","Status");
     if(pmStatus!=NULL){
       printf("Status: %s;\r\n\r\n",pmStatus->value);

--- zoo-project/zoo-kernel/service.h ---
@@ -838,6 +838,19 @@ do {\
     {26,7}
   };
 
+  /**
+   * OGC API - Processes exception limits
+   * 
+   * Used to determine which exceptionsUrl to use for the current exception.
+   * The first value is the index in the WPSExceptionCode array, and the second
+   * one is the index in the exceptionsUrl map array (i.e. when exception code 
+   * index is 4 or upper, we should use exceptionUrl_1).
+   * @see WPSExceptionCode, OAPIPCorrespondances
+   */
+  static const int OAPIPExceptionLimits[1][2] = {
+    {4,1}
+  };
+
   /**
    * OGC API - Processes exception codes
    * @see WPSExceptionCode, OAPIPCorrespondances

--- zoo-project/zoo-kernel/service_json.c ---
@@ -370,25 +370,34 @@ extern "C" {
       }
       json_object_object_add(schema,field,defaultProp);
     }
-    else if(pmTmp!=NULL)
-      if(pmType!=NULL && strncasecmp(pmType->value,"integer",7)==0)
-        json_object_object_add(schema,field,json_object_new_int(atoi(pmTmp->value)));
-      else{
-        if(pmType!=NULL && strncasecmp(pmType->value,"float",5)==0){
-          json_object_object_add(schema,field,json_object_new_double(atof(pmTmp->value)));
-          json_object_object_add(schema,"format",json_object_new_string("double"));
-        }
+    else if(pmTmp!=NULL){
+      if((strstr(pmTmp->value,"[")!=NULL && strstr(pmTmp->value,"]")!=NULL) ||
+        (strstr(pmTmp->value,"{")!=NULL && strstr(pmTmp->value,"}")!=NULL)){
+        json_object* defaultProp=parseJson(pmConf,pmTmp->value);
+        json_object_object_add(schema,field,defaultProp);
+      }
+      else
+        if(pmType!=NULL && strncasecmp(pmType->value,"integer",7)==0)
+          json_object_object_add(schema,field,json_object_new_int(atoi(pmTmp->value)));
         else{
-          if(pmType!=NULL && strncasecmp(pmType->value,"bool",4)==0){
-            if(strncasecmp(pmType->value,"true",4)==0)
-              json_object_object_add(schema,field,json_object_new_boolean(true));
-            else
-              json_object_object_add(schema,field,json_object_new_boolean(false));
+          if(pmType!=NULL && strncasecmp(pmType->value,"float",5)==0){
+            json_object_object_add(schema,field,json_object_new_double(atof(pmTmp->value)));
+            json_object_object_add(schema,"format",json_object_new_string("double"));
+          }
+          else{
+            if(pmType!=NULL && strncasecmp(pmType->value,"bool",4)==0){
+              if(strncasecmp(pmType->value,"true",4)==0)
+                json_object_object_add(schema,field,json_object_new_boolean(true));
+              else
+                json_object_object_add(schema,field,json_object_new_boolean(false));
+            }
+            else{
+              ZOO_DEBUG(pmTmp->value);
+              json_object_object_add(schema,field,json_object_new_string(pmTmp->value));
+            }
           }
-          else
-            json_object_object_add(schema,field,json_object_new_string(pmTmp->value));
         }
-      }
+    }
   }
   
   /**
@@ -1126,8 +1135,14 @@ extern "C" {
           // cf. /req/deploy-replace-undeploy/deploy-response-duplicate
           // cf. /req/deploy-replace-undeploy/deploy-response-immutable
           // cf. /req/deploy-replace-undeploy/unsupported-content-type
-          if(i>=4)
-            pmExceptionUrl=getMapFromMaps(m,"openapi","exceptionsUrl_1");
+          for(int iSCnt=0;iSCnt<1;iSCnt++){
+            if(i>=OAPIPExceptionLimits[iSCnt][0]){
+              maps* pmsOpenApi=getMaps(m,"openapi");
+              if(pmsOpenApi!=NULL){
+                pmExceptionUrl=getMapArray(pmsOpenApi->content,"exceptionsUrl",OAPIPExceptionLimits[iSCnt][1]);
+              }
+            }
+          }
           char* pcaTmp=(char*)malloc((strlen(pmExceptionUrl->value)+strlen(OAPIPExceptionCode[OAPIPCorrespondances[i][1]])+2)*sizeof(char));
           sprintf(pcaTmp,"%s/%s",pmExceptionUrl->value,OAPIPExceptionCode[OAPIPCorrespondances[i][1]]);
           json_object_object_add(res,"type",json_object_new_string(pcaTmp));
@@ -3216,6 +3231,7 @@ extern "C" {
     }else
       sessId = getMapFromMaps (conf, "lenv", "gs_usid");
     if(sessId!=NULL){
+      json_object_object_add(res,"id",json_object_new_string(sessId->value));
       json_object_object_add(res,"jobID",json_object_new_string(sessId->value));
       if(isDismissed==0)
         json_getStatusAttributes(conf,sessId,res,status);

--- zoo-project/zoo-services/utils/open-api/dru/deploy_util.py ---
@@ -184,6 +184,10 @@ def write_zcfg(self, stream):
             ),
             file=stream,
         )
+        print(
+            "  mutable = {0}".format("true"),
+            file=stream,
+        )
 
         if self.metadata is not None:
             print("  <MetaData>", file=stream)
@@ -602,7 +606,7 @@ def set_type_from_cwl(self, input, trim_len):
             elif type_name == "Directory":
                 type_name = "string"
                 self.file_content_type = "text/plain"
-            elif isinstance(type_name, cwl_v1_2.InputArraySchema):
+            elif isinstance(type_name, cwl_v1_0.InputArraySchema):
                 current_type_is_array=True
                 type_name = type_name.items
                 if type_name in self.__class__.cwl_type_map:
@@ -633,7 +637,7 @@ def set_type_from_cwl(self, input, trim_len):
             self.max_occurs = 1 if not(current_type_is_array) else 1024
             # 0 means unbounded, TODO: what should be the maxOcccurs value if unbounded is not available?
 
-        elif isinstance(input.type, cwl_v1_2.InputArraySchema):
+        elif isinstance(input.type, cwl_v1_0.InputArraySchema):
             type_name = input.type.items
 
             if type_name in self.__class__.cwl_type_map:
@@ -654,7 +658,7 @@ def set_type_from_cwl(self, input, trim_len):
 
             self.type = type_name
 
-        elif isinstance(input.type, cwl_v1_2.InputEnumSchema):
+        elif isinstance(input.type, cwl_v1_0.InputEnumSchema):
             type_name = "string"
             self.possible_values = [str(s)[trim_len+len(self.identifier)+2:] for s in input.type.symbols]
 

--- zoo-project/zoo-services/utils/open-api/server/publish.py ---
@@ -34,12 +34,6 @@
 
 print('Content-Type: text/html')
 print('')
-print('Environment variables')
-for param in os.environ.keys():
-        print ("<b>%20s</b>: %s<br/>" % (param, os.environ[param]))
-
-print(data)
-
 from urllib import parse
 
 try:
@@ -49,7 +43,6 @@
         r = redis.Redis(host=os.environ["ZOO_REDIS_HOST"], port=6379, db=0)
     else:
         r = redis.Redis(host='redis', port=6379, db=0)
-    print(params)
     r.publish(params["jobid"][0],data)
 except Exception as e:
 	print(e)

