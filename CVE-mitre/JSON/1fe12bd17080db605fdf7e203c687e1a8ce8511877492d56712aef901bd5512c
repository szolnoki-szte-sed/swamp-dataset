--- i18n/en.json ---
@@ -7,6 +7,8 @@
 	"soa2-scratch-username": "Scratch username:",
 	"soa2-invalid-username": "Invalid username: $1",
 	"soa2-vercode-explanation": "Please go to $1 and comment the code below:",
+	"soa2-vercode-explanation2": "For added privacy, delete your comment immediately after logging in here.",
+	"soa2-vercode": "Copy this paragraph (including both the code and this message). Only post this code if it came from {{SERVER}} | $1",
 	"soa2-your-profile": "your profile",
 	"soa2-next": "Next",
 	"soa2-login": "I have done so",

--- i18n/qqq.json ---
@@ -7,6 +7,8 @@
 	"soa2-scratch-username": "Label for Scratch username field",
 	"soa2-invalid-username": "Error message for invalid username",
 	"soa2-vercode-explanation": "Instructions for user verification. $1 is the \"your profile\" link.",
+	"soa2-vercode-explanation2": "Instructions to delete the comment afterwards.",
+	"soa2-vercode": "A message prepended to the actual code to prevent man-in-the-middle attacks. $1 is the code.",
 	"soa2-your-profile": "Link text for \"your profile\"",
 	"soa2-next": "Next button text",
 	"soa2-login": "Login button text",

--- includes/common/login.php ---
@@ -14,6 +14,7 @@ public static function gen_code( $session ) {
 		if (!$session->exists( 'soa2_scratch_code' )) {
 			$code = chunk_split(hash('sha256', random_bytes(32)), 5, ':');
 			$code = substr($code, 0, strlen($code) - 1); // chop off last colon
+			$code = wfMessage('soa2-vercode', $code)->text();
 			$session->set( 'soa2_scratch_code', $code );
 			$session->save();
 		}

--- includes/special/SpecialScratchOAuth2.php ---
@@ -120,8 +120,9 @@ public function loginForm( WebRequest $request ) { // Step 13
 			wfMessage('soa2-vercode-explanation')->rawParams($profile)->parse()
 		));
 		$out->addHTML(Html::rawElement('p', [], Html::element(
-			'code', [], $codes['code']
+			'textarea', [], $codes['code']
 		)));
+		$out->addWikiMsg('soa2-vercode-explanation2');
 		$out->addHTML(Html::rawElement('p', [], Html::submitButton(
 			wfMessage('soa2-login')->plain(), []
 		)));

