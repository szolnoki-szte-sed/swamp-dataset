--- lib/setup-sandbox.js ---
@@ -67,7 +67,8 @@ Object.defineProperties(global, {
 	global: {value: global, writable: true, configurable: true, enumerable: true},
 	globalThis: {value: global, writable: true, configurable: true},
 	GLOBAL: {value: global, writable: true, configurable: true},
-	root: {value: global, writable: true, configurable: true}
+	root: {value: global, writable: true, configurable: true},
+	Error: {value: LocalError}
 });
 
 if (!localReflectDefineProperty(global, 'VMError', {

--- test/vm.js ---
@@ -1070,6 +1070,13 @@ describe('VM', () => {
 			Error.prepareStackTrace = undefined;
 			stack.process
 		`));
+		assert.throws(()=>vm2.run(`(()=>{
+			const OldError = Error;
+			global.Error = {prepareStackTrace: (_, c) => c.map(c => c.getThis()).find(a => a && a.process)};
+			const { stack } = new OldError();
+			global.Error = OldError;
+			return stack.process.mainModule;
+		})()`));
 	});
 
 	it('Node internal prepareStackTrace attack', () => {

