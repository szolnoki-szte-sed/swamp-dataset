--- core/package.json ---
@@ -53,7 +53,6 @@
     "cli-truncate": "^2.1.0",
     "cpy": "^8.1.2",
     "cross-spawn": "^7.0.3",
-    "cryo": "0.0.6",
     "crypto-random-string": "^3.3.1",
     "date-fns": "^2.29.3",
     "dedent": "^0.7.0",
@@ -247,8 +246,8 @@
     "md5": "^2.3.0",
     "mocha": "^10.2.0",
     "nock": "^12.0.3",
-    "nodemon": "^2.0.15",
     "node-fetch": "^2.7.0",
+    "nodemon": "^2.0.15",
     "nyc": "^15.1.0",
     "p-event": "^4.2.0",
     "peggy": "^3.0.2",

--- core/src/plugins/kubernetes/run-results.ts ---
@@ -65,7 +65,9 @@ export const k8sGetRunResult: RunActionHandler<"getResult", any> = async (params
 }
 
 export function getRunResultKey(ctx: PluginContext, action: Action) {
-  const key = `${ctx.projectName}--${action.type}.${action.name}--${action.versionString()}`
+  // change the result format version if the result format changes breaking backwards-compatibility e.g. serialization format
+  const resultFormatVersion = 1
+  const key = `${ctx.projectName}--${action.type}.${action.name}--${action.versionString()}--${resultFormatVersion}`
   const hash = hasha(key, { algorithm: "sha1" })
   return `run-result--${hash.slice(0, 32)}`
 }

--- core/src/plugins/kubernetes/test-results.ts ---
@@ -57,7 +57,9 @@ export const k8sGetTestResult: TestActionHandler<"getResult", any> = async (para
 }
 
 export function getTestResultKey(ctx: PluginContext, action: StoreTestResultParams["action"]) {
-  const key = `${ctx.projectName}--${action.name}--${action.versionString()}`
+  // change the result format version if the result format changes breaking backwards-compatibility e.g. serialization format
+  const resultFormatVersion = 1
+  const key = `${ctx.projectName}--${action.name}--${action.versionString()}--${resultFormatVersion}`
   const hash = hasha(key, { algorithm: "sha1" })
   return `test-result--${hash.slice(0, 32)}`
 }

--- core/src/util/serialization.ts ---
@@ -7,7 +7,6 @@
  */
 
 import { mapValues } from "lodash"
-import Cryo from "cryo"
 import { writeFile } from "fs-extra"
 import { DumpOptions, dump } from "js-yaml"
 import highlight from "cli-highlight"
@@ -50,11 +49,11 @@ export async function dumpYamlMulti(yamlPath: string, objects: object[]) {
 }
 
 export function serializeObject(o: any): string {
-  return Buffer.from(Cryo.stringify(o)).toString("base64")
+  return Buffer.from(JSON.stringify(o)).toString("base64")
 }
 
 export function deserializeObject(s: string) {
-  return Cryo.parse(Buffer.from(s, "base64"))
+  return JSON.parse(Buffer.from(s, "base64").toString())
 }
 
 export function serializeValues(o: { [key: string]: any }): { [key: string]: string } {

--- package-lock.json ---
@@ -3297,7 +3297,6 @@
         "cli-truncate": "^2.1.0",
         "cpy": "^8.1.2",
         "cross-spawn": "^7.0.3",
-        "cryo": "0.0.6",
         "crypto-random-string": "^3.3.1",
         "date-fns": "^2.29.3",
         "dedent": "^0.7.0",
@@ -10292,14 +10291,6 @@
       "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
       "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw=="
     },
-    "core/node_modules/cryo": {
-      "version": "0.0.6",
-      "resolved": "https://registry.npmjs.org/cryo/-/cryo-0.0.6.tgz",
-      "integrity": "sha512-vSbO1hJvP9oOGXcKHiAj3U37rtErI8jIZ8gOp8EfiQgPncAv6nc4JArGWzqrxlwA5xe6Sph5OUAg//7yqTOyIg==",
-      "engines": {
-        "node": ">= 0.4.x"
-      }
-    },
     "core/node_modules/crypto-random-string": {
       "version": "3.3.1",
       "resolved": "https://registry.npmjs.org/crypto-random-string/-/crypto-random-string-3.3.1.tgz",

