--- config/config-api/src/main/java/com/thoughtworks/go/util/command/UrlArgument.java ---
@@ -28,7 +28,7 @@
 
 @ConfigAttributeValue(fieldName = "url")
 public class UrlArgument extends CommandArgument {
-    private static final String URL_DUMB_VALIDATION_REGEX = "^[a-zA-Z0-9/].*";
+    private static final String URL_DUMB_VALIDATION_REGEX = "^[a-zA-Z0-9/#].*";
     private static final Pattern pattern = Pattern.compile(URL_DUMB_VALIDATION_REGEX);
 
     protected String url;

--- config/config-api/src/test/java/com/thoughtworks/go/config/materials/git/GitMaterialConfigTest.java ---
@@ -275,6 +275,7 @@ void rejectsObviouslyWrongURL() {
             assertTrue(validating(git("@url-not-starting-with-an-alphanumeric-character")).errors().containsKey(GitMaterialConfig.URL));
 
             assertFalse(validating(git("url-starting-with-an-alphanumeric-character")).errors().containsKey(GitMaterialConfig.URL));
+            assertFalse(validating(git("#{url}")).errors().containsKey(GitMaterialConfig.URL));
         }
 
         private GitMaterialConfig validating(GitMaterialConfig git) {

--- config/config-api/src/test/java/com/thoughtworks/go/config/materials/mercurial/HgMaterialConfigTest.java ---
@@ -300,6 +300,7 @@ void rejectsObviouslyWrongURL() {
             assertTrue(validating(hg("@url-not-starting-with-an-alphanumeric-character", "folder")).errors().containsKey(HgMaterialConfig.URL));
 
             assertFalse(validating(hg("url-starting-with-an-alphanumeric-character", "folder")).errors().containsKey(HgMaterialConfig.URL));
+            assertFalse(validating(hg("#{url}", "folder")).errors().containsKey(HgMaterialConfig.URL));
         }
 
         private HgMaterialConfig validating(HgMaterialConfig hg) {

--- config/config-api/src/test/java/com/thoughtworks/go/config/materials/svn/SvnMaterialConfigTest.java ---
@@ -168,6 +168,7 @@ void rejectsObviouslyWrongURL() {
             assertTrue(validating(svn("@url-not-starting-with-an-alphanumeric-character", false)).errors().containsKey(SvnMaterialConfig.URL));
 
             assertFalse(validating(svn("url-starting-with-an-alphanumeric-character", false)).errors().containsKey(SvnMaterialConfig.URL));
+            assertFalse(validating(svn("#{url}", false)).errors().containsKey(SvnMaterialConfig.URL));
         }
 
         private SvnMaterialConfig validating(SvnMaterialConfig svn) {

--- config/config-api/src/test/java/com/thoughtworks/go/config/materials/tfs/TfsMaterialConfigTest.java ---
@@ -176,6 +176,7 @@ void rejectsObviouslyWrongURL() {
             assertTrue(validating(tfs("@url-not-starting-with-an-alphanumeric-character")).errors().containsKey(TfsMaterialConfig.URL));
 
             assertFalse(validating(tfs("url-starting-with-an-alphanumeric-character")).errors().containsKey(TfsMaterialConfig.URL));
+            assertFalse(validating(tfs("#{url}")).errors().containsKey(TfsMaterialConfig.URL));
         }
 
         private TfsMaterialConfig validating(TfsMaterialConfig tfs) {

