--- src/iniparser/iniparser.c ---
@@ -626,7 +626,7 @@ static line_status iniparser_line(
   The returned dictionary must be freed using iniparser_freedict().
  */
 /*--------------------------------------------------------------------------*/
-dictionary * iniparser_load(const char * ininame)
+dictionary * iniparser_load(const char * ininame, load_options options)
 {
     FILE * in ;
 
@@ -707,10 +707,18 @@ dictionary * iniparser_load(const char * ininame)
             break ;
 
             case LINE_ERROR:
-            fprintf(stderr, "iniparser: syntax error in %s (%d):\n",
-                    ininame,
-                    lineno);
-            fprintf(stderr, "-> %s\n", line);
+
+            if(options & HIDE_ERRORED_LINE_CONTENT) {
+              fprintf(stderr, "iniparser: syntax error in %s (%d)\n",
+                      ininame,
+                      lineno);
+            }
+            else {
+              fprintf(stderr, "iniparser: syntax error in %s (%d):\n",
+                      ininame,
+                      lineno);
+              fprintf(stderr, "-> %s\n", line);
+            }
             errs++ ;
             break;
 

--- src/iniparser/iniparser.h ---
@@ -31,6 +31,10 @@
 extern "C" {
 #endif
 
+typedef enum {
+  HIDE_ERRORED_LINE_CONTENT = (1<<0)
+} load_options;
+
 /*-------------------------------------------------------------------------*/
 /**
   @brief    Get number of sections in a dictionary
@@ -286,6 +290,7 @@ int iniparser_find_entry(const dictionary * ini, const char * entry) ;
 /**
   @brief    Parse an ini file and return an allocated dictionary object
   @param    ininame Name of the ini file to read.
+  @param    options Name of the ini file to read.
   @return   Pointer to newly allocated dictionary
 
   This is the parser for ini files. This function is called, providing
@@ -296,7 +301,7 @@ int iniparser_find_entry(const dictionary * ini, const char * entry) ;
   The returned dictionary must be freed using iniparser_freedict().
  */
 /*--------------------------------------------------------------------------*/
-dictionary * iniparser_load(const char * ininame);
+dictionary * iniparser_load(const char * ininame, load_options options);
 
 /*-------------------------------------------------------------------------*/
 /**

--- src/parse.c ---
@@ -186,7 +186,7 @@ int parse_config(char *filename, bridge_t **bridges)
     const char *bridge_name;
     int i, nsec;
 
-    if ((ubridge_config = iniparser_load(filename)) == NULL) {
+    if ((ubridge_config = iniparser_load(filename, HIDE_ERRORED_LINE_CONTENT)) == NULL) {
        return FALSE;
     }
 

