--- frontend/js/components/AdminLinkWithHotkey.tsx ---
@@ -1,7 +1,7 @@
 import React, { MutableRefObject, useCallback, useEffect, useRef } from "react";
 import { NavLink } from "react-router-dom";
 import { useRecord } from "../context/record-context";
-import { KeyboardShortcut, keyboardShortcutHandler } from "../utils";
+import { getKey, KeyboardShortcut, keyboardShortcutHandler } from "../utils";
 import { AdminLinkProps } from "./AdminLink";
 import { adminPath } from "./use-go-to-admin-page";
 
@@ -61,6 +61,7 @@ export default function AdminLinkWithHotkey({
         isActive && recordMatches ? "active" : undefined
       }
       ref={el}
+      title={getKey(shortcut)}
       {...otherProps}
     >
       {children}

--- frontend/js/sidebar/PageActions.tsx ---
@@ -40,6 +40,7 @@ function BrowseFSLink() {
 }
 
 const editKey = { key: "Control+e", mac: "Meta+e", preventDefault: true };
+const previewKey = { key: "Control+p", mac: "Meta+p", preventDefault: true };
 
 function PageActions({ recordInfo }: { recordInfo: RecordInfo }) {
   const { path, alt } = useRecord();
@@ -70,9 +71,14 @@ function PageActions({ recordInfo }: { recordInfo: RecordInfo }) {
           </li>
         )}
         <li key="preview">
-          <AdminLink page="preview" path={path} alt={alt}>
+          <AdminLinkWithHotkey
+            page="preview"
+            path={path}
+            alt={alt}
+            shortcut={previewKey}
+          >
             {trans("PREVIEW")}
-          </AdminLink>
+          </AdminLinkWithHotkey>
         </li>
         {recordInfo.exists && (
           <li key="fs-open">

--- frontend/js/views/edit/EditPage.tsx ---
@@ -27,6 +27,7 @@ import { useRecord } from "../../context/record-context";
 import { UNSAFE_NavigationContext } from "react-router-dom";
 
 import type { History } from "history";
+import { dispatch } from "../../events";
 
 export type RawRecordInfo = {
   alt: string;
@@ -254,24 +255,28 @@ function EditPage(): JSX.Element | null {
   );
 
   const saveChanges = useCallback(
-    (ev: FormEvent) => {
-      ev.preventDefault();
+    (ev?: FormEvent) => {
+      ev?.preventDefault();
       const data = getValues({ recordDataModel, recordInfo, recordData });
-      put("/rawrecord", { data, path, alt }).then(() => {
+      return put("/rawrecord", { data, path, alt });
+    },
+    [alt, path, recordData, recordDataModel, recordInfo]
+  );
+  const saveChangesAndNotify = useCallback(
+    (ev: FormEvent) => {
+      saveChanges(ev).then(() => {
         setHasPendingChanges(false);
-        goToAdminPage("preview", path, alt);
+        dispatch("lektor-notification", { message: trans("SAVE_SUCCESS") });
       }, showErrorDialog);
     },
-    [
-      alt,
-      goToAdminPage,
-      path,
-      recordData,
-      recordDataModel,
-      recordInfo,
-      setHasPendingChanges,
-    ]
+    [saveChanges, setHasPendingChanges]
   );
+  const saveChangesAndPreview = useCallback(() => {
+    saveChanges().then(() => {
+      setHasPendingChanges(false);
+      goToAdminPage("preview", path, alt);
+    }, showErrorDialog);
+  }, [alt, goToAdminPage, path, saveChanges, setHasPendingChanges]);
 
   const renderFormField = useCallback(
     (field: Field) => {
@@ -316,7 +321,7 @@ function EditPage(): JSX.Element | null {
   return (
     <>
       <h2>{title}</h2>
-      <form ref={form} onSubmit={saveChanges}>
+      <form ref={form} onSubmit={saveChangesAndNotify}>
         <FieldRows fields={normalFields} renderFunc={renderFormField} />
         {systemFields.length > 0 && (
           <ToggleGroup
@@ -329,6 +334,7 @@ function EditPage(): JSX.Element | null {
         <EditPageActions
           recordInfo={recordInfo}
           hasPendingChanges={hasPendingChanges}
+          saveChangesAndPreview={saveChangesAndPreview}
         />
       </form>
     </>

--- frontend/js/views/edit/EditPageActions.tsx ---
@@ -7,9 +7,11 @@ import { RawRecordInfo } from "./EditPage";
 export function EditPageActions({
   recordInfo,
   hasPendingChanges,
+  saveChangesAndPreview,
 }: {
   recordInfo: RawRecordInfo;
   hasPendingChanges: boolean;
+  saveChangesAndPreview: () => void;
 }): JSX.Element {
   const { path, alt } = useRecord();
   const goToAdminPage = useGoToAdminPage();
@@ -27,6 +29,14 @@ export function EditPageActions({
       >
         {trans("SAVE_CHANGES")}
       </button>
+      <button
+        type="button"
+        disabled={!hasPendingChanges}
+        onClick={saveChangesAndPreview}
+        className="btn btn-secondary"
+      >
+        {trans("SAVE_CHANGES_AND_PREVIEW")}
+      </button>
       {recordInfo.can_be_deleted ? (
         <button
           type="button"

--- lektor/translations/en.json ---
@@ -56,6 +56,8 @@
   "EDIT_ATTACHMENT_METADATA_OF": "Edit Metadata of Attachment “%s”",
   "EDIT_PAGE_NAME": "Edit “%s”",
   "SAVE_CHANGES": "Save Changes",
+  "SAVE_CHANGES_AND_PREVIEW": "Save Changes and Preview",
+  "SAVE_SUCCESS": "Page saved successfully",
   "BROWSE_FS": "Browse in Filesystem",
   "BROWSE_FS_MAC": "Reveal in Finder",
   "BROWSE_FS_WINDOWS": "Open in Explorer",

