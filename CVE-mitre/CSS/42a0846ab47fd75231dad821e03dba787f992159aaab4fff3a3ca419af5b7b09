--- CHANGELOG.txt ---
@@ -1,79 +1,44 @@
 CHANGELOG Sentrifugo
 ====================
-RELEASE 3.0 Beta
------------------
+RELEASE 3.2 
+------------
 
 Changes in Controllers
 ------------------------
+./application/modules/exit/controllers/ExittypesController.php 
+./application/modules/exit/controllers/ConfigureexitqsController.php 
+./application/modules/exit/controllers/ExitprocsettingsController.php 
+./application/modules/exit/controllers/AllexitprocController.php 
+./application/modules/exit/controllers/ExitprocController.php 
+./application/modules/default/controllers/EmployeeController.php 
+./application/modules/default/controllers/LeavemanagementController.php 
+./application/modules/default/controllers/holidaydatesController.php 
 
-./application/modules/expenses/controllers/AdvancesController.php 
-./application/modules/expenses/controllers/EmployeeadvancesController.php 
-./application/modules/expenses/controllers/ExpensecategoriesController.php 
-./application/modules/expenses/controllers/ExpensesController.php 
-./application/modules/expenses/controllers/IndexController.php 
-./application/modules/expenses/controllers/MyemployeeexpensesController.php 
-./application/modules/expenses/controllers/PaymentmodeController.php 
-./application/modules/expenses/controllers/ReceiptsController.php 
-./application/modules/expenses/controllers/TripsController.php 
-./application/modules/default/controllers/EmployeeController.php
-./application/modules/default/controllers/LeaverequestController.php
-./application/modules/default/controllers/AppraisalhistoryController.php
-./application/modules/default/controllers/MyteamappraisalController.php
-./application/modules/default/controllers/MyemployeesController.php
-./application/modules/assets/controllers/AssetcategoriesController.php
-./application/modules/assets/controllers/AssetsController.php
 
-- AdvancesController.php
-  view employee advances.
-  
-- EmployeeadvancesController.php
-  Add,edit,delete advances to employee.
-  
-- ExpensecategoriesController.php
-  Add,edit,view,delete expense categories.
-  
-- ExpensesController.php
-  Add,edit,view,delete expense , submit expenses.
+
+- ExittypesController.php
+  Management,hr can add,edit,delete exit types.
+
+- ConfigureexitqsController.php 
+  Management,hr can add,edit,delete questions for exit types.
   
-- IndexController.php
-  view expenses. 
- 
-- MyemployeeexpensesController.php
-  approve ,reject,view employee submitted expenses. 
+- ExitprocsettingsController.php 
+  Management,hr can configure managers for exit process.
   
-- PaymentmodeController.php
-  add,edit,delete,view payment modes. 
- 
-- ReceiptsController.php
-  add,edit,delete,view,download , add receipt to expense,trip .  
+- AllexitprocController.php
+  Configured managers can approve or reject exit process.
   
-- TripsController.php
-  add,edit,delete,view, approve,reject,submit trip. 
+- ExitprocController.php
+  Employee can initiate exit process.He can check status of exit process.
 
-- EmployeeController.php 
-  Management and Hr can edit employee id.
   
-- LeaverequestController.php
-  Leave request calender leaves are distinguished with status approved(A) and pending(p).  
   
-- AppraisalhistoryController.php 
-  Employees can view their appraisal history and manager can view their team appraisal history.
-
-- MyteamappraisalController.php
-  Manager and employess can print current appraisal forms.
-
 Note: You can find the respective view files in below scripts: 
-./application/modules/expenses/views/scripts
-./application/modules/assets/views/scripts
-./application/modules/default/views/scripts
+./application/modules/exit/views/scripts
 
 Changes in scripts
 ------------------------
-./public/media/expenses/js/expenses.js
+./public/media/exit/js/expenses.js
 ./public/media/js/hrms.js
-./public/media/js/hrmsv2.js
 ./public/media/css/style.css
-./public/media/css/successstyle.css
-
-
-
+./public/media/css/successstyle.css
\ No newline at end of file

--- UPGRADE.txt ---
@@ -40,4 +40,4 @@ To import sql data file in Windows:
 
 [path-to-mysql] mysql.exe -h [hostname] -u [username] -p [DATA-BASE-NAME] < [path-to-sql-file]
 
-If you have followed the above steps, you have successfully updated your application. Login to enjoy the services.
+Yippiieeeee..... If you have followed the above steps, you have successfully updated your application. Login to enjoy the services.
\ No newline at end of file

--- Zend/View/Helper/Breadcrumbs.php ---
@@ -280,6 +280,10 @@ public  function breadcrumbs($baseUrlString = '')
 			{
 				$url = "/assets/".$pageName;
 			}
+			if($pageName=='allexitproc' || $pageName=='exitproc' || $pageName=='exitprocsettings' || $pageName=='exittypes' || $pageName=='configureexitqs')
+			{
+				$url = "/exit/".$pageName;
+			}
 			$breadCrumIds = $this->getBreadCrumDetails($url);
 			
 			$breadCrumNames = array();	

--- Zend/View/Helper/Grid.php ---
@@ -61,6 +61,7 @@ public function grid ($dataArray)
 		{ 
 			$actions_arr = array();
 		}
+		
 		$gridFieldsArr=array();$tmpActionsArr=array();
 		$tmpActionsArr = $actions_arr;
 		array_pop($tmpActionsArr);	//last element of actions array is menuname so delete that & check the privileges are empty or not...
@@ -225,6 +226,77 @@ public function grid ($dataArray)
 										</div>');
 							}
 						}
+						//for exit types grid and all exit types grid
+						if($dataArray['objectname'] == 'exittypes' || $dataArray['objectname'] == 'configureexitqs')
+						{
+							$view_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/view/id/{{id}}" name="{{id}}" class="sprite view"  title=\'View\'></a>';
+							$edit_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/edit/id/{{id}}" name="{{id}}" id="edit{{id}}" class="sprite edit"  title=\'Edit\'></a>';
+							
+							$delete_str = '<a id="del{{id}}" name="{{id}}" onclick= changestatus(\''.$dataArray['objectname'].'\',\'{{id}}\',\''.$msgdta.'\')	href= javascript:void(0) title=\'Delete\' class="sprite delete" ></a>';
+							
+							$extra['action'] = array('name' => 'edit', 'value' =>'<div class="grid-action-align">
+											'.((in_array('view',$actions_arr)?$view_str:'')).'
+											'.((in_array('edit',$actions_arr)?$edit_str:'')).'
+											'.((in_array('delete',$actions_arr)?$delete_str:'')).'
+										</div>');
+						}
+						
+						if($dataArray['objectname'] == 'allexitproc' || $dataArray['objectname'] == 'exitproc')
+						{
+							$view_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/view/id/{{id}}" name="{{id}}" class="sprite view"  title=\'View\'></a>';
+							
+							/*if($dataArray['objectname'] == 'exitproc')
+								$edit_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/questions/id/{{id}}" name="{{id}}" id="questions{{id}}" class="sprite assign_view_questions"  title=\'Edit\'></a>';
+							else
+								$edit_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/edit/id/{{id}}" name="{{id}}" id="edit{{id}}" class="sprite assign_view_questions"  title=\'Edit\'></a>';*/
+							
+							$auth = Zend_Auth::getInstance();
+							if($auth->hasIdentity())
+							{
+								$loginUserId = $auth->getStorage()->read()->id;
+								$loginuserGroup = $auth->getStorage()->read()->group_id;
+								$loginuserRole = $auth->getStorage()->read()->emprole;
+								$is_og_head = $auth->getStorage()->read()->is_orghead;
+							}
+							if($dataArray['objectname'] == 'exitproc')
+								$edit_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/questions/id/{{id}}" name="{{id}}" id="questions{{id}}" class="sprite assign_view_questions"  title=\'Answer and View Questions/Comments\'></a>';
+							elseif($loginuserRole != SUPERADMINROLE && $is_og_head!=1)
+								$edit_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/edit/id/{{id}}" name="{{id}}" id="edit{{id}}" class="sprite edit"  title=\'Edit\'></a>';
+							else
+								$edit_str='';	
+							
+							// assign questions icon only for hr, management and superadmin
+							if(($loginuserRole == SUPERADMINROLE || $loginuserGroup == HR_GROUP || $loginuserGroup == MANAGEMENT_GROUP) && $dataArray['objectname'] == 'allexitproc'){
+								$assign_questions_str = '<a href= "'.BASE_URL.'exit'.'/'.$dataArray['objectname'].'/assignquestions/id/{{id}}" name="{{id}}" class="sprite assign_view_questions"  id="assign_ques{{id}}"  title=\'Assign and View Questions/Comments\'></a>';
+								
+							}
+							else {
+								$assign_questions_str = '';
+							}
+							
+							// no delete action for all exit process
+							if($loginuserRole == SUPERADMINROLE || $loginuserGroup == HR_GROUP || $loginuserGroup == MANAGEMENT_GROUP){
+								$delete_str = '<a name="{{id}}" id="overallupdate_{{id}}" onclick= displayexitform(\''.BASE_URL.'exit/allexitproc/editpopup/id/{{id}}'.'\',\'\')	href= javascript:void(0) title=\'Update Overall Status\' class="fa fa-ellipsis-v" ></a>';
+							}else{
+								$delete_str = '';
+							}
+
+							
+
+							if($dataArray['objectname'] == 'exitproc')
+								$delete_str = '';
+							$extra['action'] = array('name' => 'edit', 'value' =>'<div class="grid-action-align">
+											'.((in_array('view',$actions_arr)?$view_str:'')).'
+											'.((in_array('edit',$actions_arr)?$edit_str:'')).'
+											'.((in_array('assign',$actions_arr)?'':$assign_questions_str )).'
+											'.((in_array('update',$actions_arr)?'':$delete_str)).'
+											
+										</div>');
+						}
+						
+						
+						
+						
 		}
 		$extra['options'] = array(); 
         $addaction= '';  		
@@ -362,7 +434,27 @@ public function generateGrid ($name, $fields = null,$paginator=null,$extracolumn
 				$output .= "<div class='add-btn-div'>";
 				$output .= "<input type='button' onclick='window.location.href=\"".BASE_URL.$name.'/'.$action."\"' title = 'Raise an Incident' value='Raise an Incident' class='sprite addrequest' />";
 				$output .= "</div>";
-			}else{
+			}
+			elseif($name == 'exittypes' || $name == 'configureexitqs')
+			{
+				$output .= "<a href='".BASE_URL.'exit'.'/'.$name.'/'.$action."'><input type='button' title = 'Add' value='Add Record' class='sprite addrecord' /></a>";
+			}elseif($name == 'allexitproc')
+			{
+				$output .= "";
+			}else if($name=='exitproc'){
+				$auth = Zend_Auth::getInstance();
+				if($auth->hasIdentity())
+				{
+					$loginUserId = $auth->getStorage()->read()->id;
+					$loginuserGroup = $auth->getStorage()->read()->group_id;
+					$loginuserRole = $auth->getStorage()->read()->emprole;
+				}
+				if($loginuserRole == SUPERADMINROLE)
+					$output .= "";
+				else
+					$output .= "<a href='".BASE_URL.'exit'.'/'.$name.'/'.$action."'><input type='button' title = 'Add' value='Add Record' class='sprite addrecord' /></a>";
+			}
+			else{
 		  		$output .= "<a href='".BASE_URL.$name.'/'.$action."'><input type='button' title = 'Add' value='Add Record' class='sprite addrecord' /></a>";
 			}
 			$output .= "</div>";
@@ -710,6 +802,60 @@ public function generateGrid ($name, $fields = null,$paginator=null,$extracolumn
 												});
 												</script>";
 								}
+								// remove edit and delete if isused=1
+								if($controllerName == 'exittypes' || $controllerName == 'configureexitqs')
+								{
+									if($p['isused'] == 1)
+									{
+										echo "<script type='text/javascript'>
+												$(document).ready(function() {
+												$('#del".$p['id']."').remove();
+												$('#edit'+".$p['id'].").remove();
+												});
+												</script>";
+									}
+								}
+
+								
+								//hide edit when overall status is approved in exitprocess
+								if($controllerName == 'allexitproc' && $p['overall_status'] == 'Approved')
+								{
+									echo "<script type='text/javascript'>
+												$(document).ready(function() {
+											 
+												$('#edit'+".$p['id'].").remove();
+												});
+												</script>";
+									echo "<script type='text/javascript'>
+												$(document).ready(function() {
+											 
+												$('#overallupdate_'+".$p['id'].").remove();
+												});
+												</script>";			
+												
+												
+								}
+								//hide edit when overall status is approved in exitprocess
+								if($controllerName == 'allexitproc' && $p['overall_status'] != 'Approved')
+								{
+									echo "<script type='text/javascript'>
+												$(document).ready(function() {
+								
+												$('#assign_ques'+".$p['id'].").remove();
+												});
+												</script>";
+								}
+							
+								if($controllerName == 'exitproc' && $p['overall_status'] != 'Approved')
+								{
+									echo "<script type='text/javascript'>
+												$(document).ready(function() {
+											 
+												$('#questions'+".$p['id'].").remove();
+												});
+												</script>";
+								}
+								
                                 // hr can edit and delete any businessunit and dept announcemets---3.1
 								//removing edit,dele icons for announcements
 								/* if($controllerName == 'announcements')
@@ -753,7 +899,6 @@ public function generateGrid ($name, $fields = null,$paginator=null,$extracolumn
 								 * Second Case - Grid field
 								 * Keep 'default' case to allow display other Grids, normal.
 								 */
-								
 								switch ($menuName) {
 									case 'CV Management':
 										switch ($k) {
@@ -801,9 +946,19 @@ public function generateGrid ($name, $fields = null,$paginator=null,$extracolumn
 										}
 										break;
 									case 'All Exit Procedures':
-										if($k == 'createddate')
+										if($k == 'initiateddate')
+										{
+											$output .= "<span ".$dataclass.">".sapp_Global::change_date($p[$k],'view')."</span>";
+										}
+										else
+										{
+			 	                            	$output .= "<span ".$dataclass." title='".htmlentities(trim($p[$k]), ENT_QUOTES, "UTF-8")."' >".htmlentities($valToInclude, ENT_QUOTES, "UTF-8")."</span>";
+										}
+										break;
+									case 'Initiate/Check Status':	
+										if($k == 'initiateddate')
 										{
-											$output .= "<span ".$dataclass.">".sapp_Global::getDisplayDate($p[$k])."</span>";
+											$output .= "<span ".$dataclass.">".sapp_Global::change_date($p[$k],'view')."</span>";
 										}
 										else
 										{
@@ -827,7 +982,7 @@ public function generateGrid ($name, $fields = null,$paginator=null,$extracolumn
 			$output.="</tr>";
 		}
 		if($ii == 0){
-			$output.= "<tr><td colspan='$colinr' class='no-data-td'><p class='no-data'>No data found</p></td></tr>";
+			$output.= "<tr><td colspan='$colinr' class='no-data-td'><p class='no-data'>No data found.</p></td></tr>";
 		}
 		$output .= "</tbody>";
 		$output .="</table>

--- Zend/View/Helper/Gridep.php ---
@@ -0,0 +1,569 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+/**
+ * A View Helper that allows you to easily create Grids with Pagination
+ *
+ */
+
+class Zend_View_Helper_Gridep extends Zend_View_Helper_Abstract {
+
+	public $view = null;
+	public $extra = array();
+	private $output; // Container to hold the Grid
+	private $encrypt_status = "no";
+	private $empDetailsObj;
+	private $buDetailsObj;
+	private $deptDetailsObj;
+
+	public function gridep ($dataArray)
+	{
+		$request = Zend_Controller_Front::getInstance();
+            $params = $request->getRequest()->getParams();		
+             
+        if(isset($dataArray['encrypt_status']) && $dataArray['encrypt_status'] == 'yes')
+            $this->encrypt_status = "yes";
+            
+		$menu_model = new Default_Model_Menu();
+		$session=new Zend_Auth_Storage_Session();
+		$data=$session->read();
+		$role_id = $data['emprole'];
+		$menunamestr = '';$sortStr ='';$actnArr = array();
+		$sortStr = $dataArray['by'];
+		$controllers_arr = $menu_model->getControllersByRole($role_id);
+		$menuName = '';
+		
+		$actionsobjname = $dataArray['objectname'];
+		if(isset($controllers_arr[$actionsobjname."controller.php"]))
+		{
+			$actions_arr = $controllers_arr[$actionsobjname."controller.php"]['actions'];
+			$menuName = $actions_arr[sizeof($actions_arr)-1];
+			
+		}
+		else
+		{ 
+			$actions_arr = array();
+		}
+		$gridFieldsArr=array();$tmpActionsArr=array();
+		$tmpActionsArr = $actions_arr;
+		array_pop($tmpActionsArr);	//last element of actions array is menuname so delete that & check the privileges are empty or not...
+		
+		$actnArr = $tmpActionsArr;
+		if(($key = array_search('add', $actnArr)) !== false) 
+		{
+			unset($actnArr[$key]);
+		}
+		if(empty($tmpActionsArr))	
+		{
+			$gridFieldsArr = $dataArray['tableheader'];
+			unset($gridFieldsArr['action']);
+			$dataArray['tableheader']=$gridFieldsArr;
+		}
+		
+		if(isset($dataArray['menuName']))
+			$menuName = $dataArray['menuName'];	
+		
+		
+		$paginator = new Zend_Paginator(new Zend_Paginator_Adapter_DbSelect($dataArray['tablecontent']));                
+		$paginator->setItemCountPerPage($dataArray['perPage'])->setCurrentPageNumber($dataArray['pageNo']);
+		
+		if(empty($dataArray['tableheader']))
+		{
+			$widgetsModel = new Default_Model_Widgets();
+			$columnData = $widgetsModel->getTableFields('/'.$dataArray['objectname']);
+			$dataArray['tableheader'] = json_decode($columnData['menufields'],true);				
+		}
+		$msgtitle = $dataArray['objectname'].'_delete';
+		$msgtitle = strtoupper($msgtitle);
+		$msgflag = constant($msgtitle);
+		$msgAr = explode(' ',$msgflag);
+		$msgdta = implode('@#$',$msgAr);
+		if(isset($dataArray['formgrid']) && $dataArray['formgrid'] == 'true') 
+		{			
+			
+			if(isset($dataArray['unitId']))
+				$con = '/unitId/'.$dataArray['unitId'];
+			else
+			{
+				if(isset($params['id']))
+				$con = '/unitId/'.$params['id'];
+			}
+			
+			$formgridVal = $dataArray['formgrid'];
+			
+			$viewaction = 'viewpopup';
+			$editaction = 'editpopup';			
+			
+			if(isset($dataArray['menuName']) && $dataArray['menuName'] !='')
+			  $menunamestr = $dataArray['menuName'];
+			
+			$viewpopup_str = '<a onclick="displaydeptform(\''.BASE_URL.$dataArray['objectname'].'/'.$viewaction.'/id/{{id}}'.$con.'/popup/1\',\''.$menunamestr.'\')" name="{{id}}" class="sprite view"  title=\'View\'></a>';
+			$editpopup_str = '<a id="edit{{id}}" onclick="displaydeptform(\''.BASE_URL.$dataArray['objectname'].'/'.$editaction.'/id/{{id}}'.$con.'/popup/1\',\''.$menunamestr.'\')" name="{{id}}" class="sprite edit"  title=\'Edit\' ></a>';
+			$deletepopup_str = '<a name="{{id}}" id="del{{id}}" onclick= changestatus(\''.$dataArray['objectname'].'\',\'{{id}}\',\''.$msgdta.'\')	href= javascript:void(0) title=\'Delete\' class="sprite delete" ></a>';
+			
+			if(!in_array('view',$actions_arr) && !in_array('edit',$actions_arr) && !in_array('delete',$actions_arr))
+			{
+				$extra['action'] =array(); 				  
+			}
+			else
+			{
+				  $extra['action'] = array('name' => 'edit', 'value' =>'<div class="grid-action-align">
+								'.((in_array('view',$actions_arr)?$viewpopup_str:'')).'
+								'.((in_array('edit',$actions_arr)?$editpopup_str:'')).'
+								'.((in_array('delete',$actions_arr)?$deletepopup_str:'')).'
+							</div>'); 
+			}	
+		}
+		else
+		{
+			$formgridVal = '';
+			$view_str = '<a href= "'.BASE_URL.'exit/'.$dataArray['objectname'].'/view/id/{{id}}" name="{{id}}" class="sprite view"  title=\'View\'></a>';
+			$edit_str = '<a href= "'.BASE_URL.'exit/'.$dataArray['objectname'].'/edit/id/{{id}}" name="{{id}}" class="sprite edit"  title=\'Edit\'></a>';
+			$delete_str = '<a name="{{id}}" onclick= changestatus(\''.$dataArray['objectname'].'\',\'{{id}}\',\''.$msgdta.'\')	href= javascript:void(0) title=\'Delete\' class="sprite delete" ></a>';
+
+			if(!in_array('view',$actions_arr) && !in_array('edit',$actions_arr) && !in_array('delete',$actions_arr))
+			{
+			  $extra['action'] =array(); 
+			}else
+			{
+			  $extra['action'] = array('name' => 'edit', 'value' =>'<div class="grid-action-align">
+							'.((in_array('view',$actions_arr)?$view_str:'')).'
+							'.((in_array('edit',$actions_arr)?$edit_str:'')).'
+							'.((in_array('delete',$actions_arr)?$delete_str:'')).'
+						</div>'); //onclick ="javascript:editlocdata(\'{{id}}\')" 
+			}		
+		}
+		$extra['options'] = array(); 
+        $addaction= '';  		
+		if(isset($dataArray['add']) && $dataArray['add'] !='')
+		{
+		  $addaction = $dataArray['add'];
+		}
+		else
+		{
+		  $addaction = '';
+		}
+		$unitId = '';
+		
+		if(in_array('add',$actions_arr))
+		{
+		  $addpermission = "true";
+		}
+		else
+		{
+		 $addpermission = "false";
+		}
+		if(isset($dataArray['unitId'])) $unitId = $dataArray['unitId'];
+
+		/** capture emp data, business units data and departments data from data object **/
+
+		$this->empDetailsObj = $dataArray['empDetailsObj'];
+		$this->buDetailsObj = $dataArray['buDetailsObj'];
+		$this->deptDetailsObj = $dataArray['deptDetailsObj'];
+
+		return $this->generateGrid($dataArray['objectname'],$dataArray['tableheader'],$paginator,$extra,true,$dataArray['jsGridFnName'], $dataArray['perPage'],$dataArray['pageNo'],$dataArray['jsFillFnName'],$dataArray['searchArray'],$formgridVal,$addaction,$menuName,$unitId,$addpermission,$menunamestr,isset($dataArray['call'])?$dataArray['call']:"",$sortStr,isset($dataArray['search_filters'])?$dataArray['search_filters']:"",isset($dataArray['dashboardcall'])?$dataArray['dashboardcall']:"No",isset($dataArray['empstatus'])?$dataArray['empstatus']:"",$actnArr,isset($dataArray['empscreentotalcount'])?$dataArray['empscreentotalcount']:"",isset($dataArray['sort'])?$dataArray['sort']:"",isset($dataArray['by'])?$dataArray['by']:"");
+	}
+	
+	/**
+	 * @param string $name
+	 * @param array $fields
+	 * @param Zend_Paginator Instance $paginator
+	 * @param array $extracolumn
+	 * @param Bool  $sorting
+	 *
+	 * @return string
+	 **/
+	public function generateGrid ($name, $fields = null,$paginator=null,$extracolumn=array(),$sorting=false,$jsGridFnname='', $perPage='5',$page='1', $jsFillFnName='',$searchArray='',$formgrid='false',$addaction='',$menuName='',$unitId,$addpermission,$menunamestr,$call='',$sortStr='',$search_filters = '',$dashboardCall = 'No',$empstatus = '',$actnArr,$empscreenTotalCount = '',$sortname='',$by='') {
+        $request = Zend_Controller_Front::getInstance();
+        $params = $request->getRequest()->getParams();		
+        $controllerName = $request->getRequest()->getControllerName();
+        $actionName = $request->getRequest()->getActionName(); 
+		$dataclass = '';
+		// Store Extra Columns
+		$this->extra = $extracolumn;$sortIconStr = "";
+
+		$sort = Zend_Controller_Front::getInstance()->getRequest()->getParam('sort','DESC');
+		// checking and handling sorting.
+		if($sort == "")
+		{
+			$sortIconStr = "<span class='s-ico'>
+			<span class='ui-icon-desc ui-state-disabled ui-icon ui-icon-triangle-1-n'></span>
+			<span class='ui-icon-asc ui-state-disabled ui-icon ui-icon-triangle-1-s'></span></span>";
+		}
+		else if ($sort  ==  'ASC')
+		{
+			$sort = 'DESC';
+			//For Sort Icons....
+			$sortIconStr = "<span class='s-ico'>
+			<span class='ui-icon-desc ui-icon ui-icon-triangle-1-n'></span>
+			</span>";
+		}  
+		else 
+		{
+			$sort = 'ASC';
+			//For Sort Icons....
+			$sortIconStr = "<span class='s-ico'>
+			<span class='ui-icon-asc  ui-icon ui-icon-triangle-1-s'></span></span>";
+		}
+			
+		if($call != "ajaxcall")		$sortIconStr = "";
+		if($addaction !='')
+		{
+		  $action = $addaction;
+		  $popupaction = 'addpopup';
+		} 
+		else
+		{
+		  $action = "edit";
+		  $popupaction = 'editpopup';
+		}
+		$con ='';
+
+		if($formgrid != '')
+		{
+			$urlString = trim($_SERVER['REQUEST_URI']);
+			$serverUrl = $_SERVER['HTTP_HOST'];	
+			
+			$urlData = explode('/',$urlString);
+			if($unitId != '')
+				$con = 'unitId/'.$unitId;
+			else 
+			{
+				if(isset($params['id']))
+				$con = 'unitId/'.$params['id'];
+			}
+			$output ="<div class='table-header'><span>".$menuName."</span><input type='button' title = 'Add'  onclick='displaydeptform(\"".BASE_URL.$name.'/'.$popupaction."/$con/popup/1\",\"".$menunamestr."\")' value='Add Record' class='sprite addrecord' /></div>";		
+		}
+		else
+		{
+			$output ="<div class='table-header'><span>".$menuName."</span>";
+		  	$output .= "<a href='".BASE_URL.'exit/'.$name.'/'.$action."'><input type='button' title = 'Add' value='Add Record' class='sprite addrecord' /></a>";
+			$output .= "</div>";
+		} 
+		
+		if($addpermission == 'false')
+		{	
+			$output ="<div class='table-header'><span>".$menuName."</span></div>";
+		}
+		$output .="<div id='".$name."' class='details_data_display_block newtablegrid'>";
+		$output .= "<table class='grid' align='center'  width='100%' cellspacing='0' cellpadding='4' border='0'><thead><tr>";
+		// this foreach loop display the column header  in �th� tag.
+		$colinr = 0;
+		if(!empty($fields)) 
+		{
+			$tabindx = 0;
+			if(empty($actnArr)) unset($fields['action']);
+			foreach ($fields as $key => $value) {
+				
+				if(isset($value['align'])) $align = (@$value['align'] != '')? 'align="'.$value['align'].'" ':'';
+				if(isset($value['sortkey']))$sortkey = (@$value['sortkey'] != '')? 'align="'.$value['sortkey'].'" ':'';
+				if(isset($value['style']))$style = (@$value['style'] != '')? 'style="'.$value['style'].'" ':'';
+				
+				$value = (is_array($value) && !isset($value['sortkey']))? $value['value']:$value;	
+				if($value == 'Action') $width = 'width=90'; else $width =  '';//'width='.$eachColumnWidth;
+				$output .= "<th ".$width.">";
+				// Check if Sorting is set to True
+				if($sorting) {
+
+					// Disable Sorting if Key is in Extra Columns
+					if(@$this->extra[$key]['name'] != '' && !is_array($value)) {
+						if($value == "Action")	
+							$output .= "<span class='action-text'>Action</span>";
+						else
+							$output .= $value;
+						
+					} else {
+						if(is_array($value)){
+							$key = $value['sortkey'];
+							$value = $value['value'];
+						} 
+						$welcome = 'false';
+						$urlString = $_SERVER['REQUEST_URI'];
+						if (strpos($urlString,'welcome') !== false) {
+							$welcome = 'true';
+						}
+					
+						if($formgrid=='true')
+						{
+							$output .= "<a href='javascript:void(0);' onclick=javascript:paginationndsorting('".BASE_URL.$name."/index/sort/".$sort."/by/".$key."/objname/".$name."/page/".$page."/per_page/".$perPage."/call/ajaxcall/$con/');>".$value."</a>";
+							//For Sort Icons....
+								if($key == $sortStr)
+									$output .= $sortIconStr;
+						}
+						else 
+						{
+							$output .= "<a href='javascript:void(0);' onclick=javascript:paginationndsorting('".$this->view->url(array('sort'=>$sort,'by'=>$key,'objname'=> $name,'page' => $page,'per_page'=>$perPage))."');>".$value."</a>";
+							//For Sort Icons....
+							if($key == $sortStr)
+									$output .= $sortIconStr;
+						}
+						
+					}
+				}  else {
+					//For Sort Icons....
+					if($key == $sortStr)
+						$output .= $sortIconStr;
+					$output .= $value;
+
+				}
+
+				$output .= "</th>";
+				$colinr++;
+				$tabindx++;
+			}//end of for each loop
+			$output .= "</tr><tr id='search_tr_$name'>";
+			$tabindx = 0;
+
+			foreach ($fields as $key => $value) {
+				
+				if(isset($value['align'])) $align = (@$value['align'] != '')? 'align="'.$value['align'].'" ':'';
+				if(isset($value['sortkey']))$sortkey = (@$value['sortkey'] != '')? 'align="'.$value['sortkey'].'" ':'';
+				if(isset($value['style']))$style = (@$value['style'] != '')? 'style="'.$value['style'].'" ':'';
+				
+				$value = (is_array($value) && !isset($value['sortkey']))? $value['value']:$value;	
+				if($value == 'Action') $width = 'width=90'; else $width =  '';
+				$output .= "<th ".$width.">";
+				// Check if Sorting is set to True
+				if($sorting) {
+
+					// Disable Sorting if Key is in Extra Columns
+					if(@$this->extra[$key]['name'] != '' && !is_array($value)) {
+						if($value == "Action")	
+							$output .= "<span class='action-text'></span>";
+						else
+							$output .= $value;
+						
+					} else {
+						if(is_array($value)){
+							$key = $value['sortkey'];
+							$value = $value['value'];
+						} 
+						$welcome = 'false';
+						$urlString = $_SERVER['REQUEST_URI'];
+						
+						if($key != 'id')
+						{
+							$sText = '';
+							
+							if(!empty($searchArray)) $display = 'display: block;'; else $display = 'display: none;';
+							
+						
+							if(is_array($searchArray)) { if(array_key_exists($key,$searchArray)) $sText = $searchArray[$key]; else $sText = ''; }
+							
+							if(isset($search_filters[$key]))
+							{
+								$search_function =  'getsearchdata("'.$name.'","search",this.id,event';
+								$output .= sapp_Global::grid_data($search_filters,$key,$name,$display,$sText,$tabindx,$search_function);
+							}
+							else
+							{
+								$output .= "<input tabIndex=$tabindx type='text' name='$name' id='$key' style='$display' class='searchtxtbox_$name table_inputs grid_search_inputs' value=\"$sText\" onKeypress='if (!((event.keyCode || event.which) > 47 && (event.keyCode || event.which) < 58) && !((event.keyCode || event.which) > 64  && (event.keyCode || event.which) < 91)  && !((event.keyCode || event.which) > 96  && (event.keyCode || event.which) < 123) && ((event.keyCode || event.which) != 45) && ((event.keyCode || event.which) != 63) && ((event.keyCode || event.which) != 39) && ((event.keyCode || event.which) != 46) && ((event.keyCode || event.which) != 44) && ((event.keyCode || event.which) != 47) && ((event.keyCode || event.which) != 35) && ((event.keyCode || event.which) != 64) && ((event.keyCode || event.which) != 36) && ((event.keyCode || event.which) != 38) && ((event.keyCode || event.which) != 42) && ((event.keyCode || event.which) != 40) && ((event.keyCode || event.which) != 41) && ((event.keyCode || event.which) != 33) && ((event.keyCode || event.which) != 32) && ((event.keyCode || event.which) != 8)) event.preventDefault();' onkeydown='getsearchdata(\"$name\",\"search\",this.id,event,\"text\")' />";
+							}
+						}
+					}
+				}  else {
+					//For Sort Icons....
+					if($key == $sortStr)
+						$output .= $sortIconStr;
+					$output .= $value;
+
+				}
+
+				$output .= "</th>";
+				$colinr++;
+				$tabindx++;
+			}//end of for each loop
+		}
+		$output .= "</tr>
+
+        </thead>";
+
+		$output .="<tbody>";
+
+		// Start Looping Data
+		$ii=0;
+        
+		foreach($paginator as $p) {
+			$cell_color = ($ii % 2 == 0 ? "row1" : "row2");
+			$ii++;$bodyCount = 0;
+			$output.="<tr onclick='selectrow($name,this);' class='$cell_color'>";
+			// Reset Fields Array to Top
+			if(!empty($fields)) 
+			{ 
+				reset($fields); 
+				foreach($fields AS $k=>$v) {
+								$tdclass = '';
+					// Look for additional attributes
+					$characterlimit = 40;
+					if(is_array($v)) {
+						$class = (@$v['class'] != '')? 'class="'.$v['class'].'" ':'';
+						$align = (@$v['align'] != '')? 'align="'.$v['align'].'" ':'';
+						$valign = (@$v['valign'] != '')? 'valign="'.$v['valign'].'" ':'';
+						if(isset($v['characterlimit']))
+							$characterlimit = $v['characterlimit'];
+						$output .= "<td {$tdclass}{$align}{$valign}>";
+					} else {
+						if($k == 'description' && $menuName == 'Screening Types')
+							$characterlimit = 80;
+						$output .= "<td {$tdclass}>";
+					}
+					// Check to see if this Field is in Extra Columns
+					if(isset($this->extra[$k]['value'])) {
+						$output .= $this->_parseExtra($k,$p);
+					} else {					
+						if( $bodyCount== 0 && $jsFillFnName != '')
+						{
+							$valToInclude = (strlen($p[$k])>$characterlimit)? substr($p[$k],0,$characterlimit)."..":$p[$k];							
+                            $output .= "<a onclick= ".$jsFillFnName."(\"/id/$p[id]\") href= 'javascript:void(0)' title='".htmlentities (trim($p[$k]), ENT_QUOTES, "UTF-8")."' >".  htmlentities ($valToInclude, ENT_QUOTES, "UTF-8")."</a>";
+						}
+						else{
+                                                    
+							$p = (array)$p;
+							if(isset($p[$k])) {
+								// Customize grid field data
+								if($k == 'businessunit_id')	
+									$valToInclude_full = $this->buDetailsObj[$p[$k]]['unitname'];
+								else if($k == 'department_id')	
+									$valToInclude_full = $this->deptDetailsObj[$p[$k]]['deptname'];
+								else if($k == 'hr_manager' || $k == 'sys_admin' || $k == 'general_admin' || $k == 'finance_manager' || $k == 'l2_manager')	
+									$valToInclude_full = (isset($this->empDetailsObj[$p[$k]]))? $this->empDetailsObj[$p[$k]]['userfullname']:"";
+								else if($k == 'l1_manager')
+									$valToInclude_full = ($p[$k] == 1)? 'Yes' : 'No';
+
+						 		$valToInclude = (strlen($valToInclude_full)>$characterlimit)? substr($valToInclude_full,0,$characterlimit)."..":$valToInclude_full;
+                                $output .= "<span ".$dataclass." title='".trim($valToInclude_full)."' >".htmlentities($valToInclude, ENT_QUOTES, "ISO-8859-1")."</span>";
+							}	
+							else
+							{
+								$output .= "<span ".$dataclass.">--</span>";
+							}
+						}
+					}
+					$dataclass = '';
+					$output .= "</td>";
+					$bodyCount++;
+				}
+			}
+			// Close the Table Row
+			$output.="</tr>";
+		}
+		if($ii == 0){
+			$output.= "<tr><td colspan='$colinr' class='no-data-td'><p class='no-data'>No data found</p></td></tr>";
+		}
+		$output .= "</tbody>";
+		$output .="</table>
+                <script type='text/javascript' language='javascript'>
+                $(document).ready(function(){
+                                                                        
+                                    if($('.searchtxtbox_".$name."').is(':visible'))
+                                    {
+                                        
+                                        $('#search_tr_".$name."').show();	
+                                    }
+                                    else 
+                                        
+                                        $('#search_tr_".$name."').hide();	
+                                    });
+                </script>    
+                </div>";
+		
+		// Attach Pagination
+		if($paginator) {
+		
+			$params = array();
+			$params['jsGridFnName'] = $jsGridFnname;
+			$params['perPage'] = $perPage;
+			$params['objname'] = $name;
+			$params['searchArray'] = $searchArray;			
+			$params['formgrid'] = $formgrid;
+			$params['con'] = $con;
+			$params['dashboardcall'] = $dashboardCall;
+			$params['sortname'] = $sortname;
+			$params['by'] = $by;
+
+			$output.= $this->view->paginationControl($paginator, 'Sliding', 'partials/pagination.phtml',$params);
+		}
+		$output .= "<script type='text/javascript' language='javascript'>$('#$name').slimScrollHorizontal({
+									  alwaysVisible: false,
+									  start: 'left',
+									  position: 'bottom',
+									 
+									}).css({ background: '#ccc', paddingBottom: '10px' }); </script>";
+		$output .= "<script type='text/javascript' language='javascript'>
+						var id = $('#columnId').val();
+						var coldata = $('#'+id).val();
+						var focusID = $('#columnId').val();
+                                                var fval = $('#'+focusID).attr('data-focus');
+                                                if(fval == '' || fval == null)
+						$('#'+focusID).focus().val('').val(coldata);
+                                                
+					</script>";
+		return $output;
+	}
+
+    /**
+     * Function that Parses Extra Column info
+     *
+     * Regex looks for {{field_name}}
+     *
+     * @param string $column
+     * @param array $p
+     * @return string
+     */
+    public function _parseExtra($column,$p) 
+    {
+        if(isset ($this->extra[$column])) 
+        {
+            $val = '';
+
+            $characterlimit = 15;
+            if(isset($this->extra[$column]['characterlimit']))
+                $characterlimit = $this->extra[$column]['characterlimit'];
+            preg_match_all('/\{\{(.*?)\}\}/', $this->extra[$column]['value'], $matches);
+            if(count($matches[1]) > 0) 
+            {
+                $matches[1] = array_unique($matches[1]);
+                $a = $this->extra[$column]['value'];
+				
+                foreach($matches[1] AS $match) 
+                {
+                    $p = (array)$p;
+                    $replaced_str = $p[$match];
+                    if($this->encrypt_status == 'yes')
+                        $replaced_str = sapp_Global::_encrypt ($p[$match]);
+                    $a = str_replace('{{'.$match.'}}',$replaced_str, $a);
+                    preg_match_all('/\[\[(.*?)\]\]/', $a, $newMaches);
+                    if(count($newMaches[1]) > 0) 
+                    {
+                        foreach($newMaches[1] AS $matchNew) 
+                        {
+                            $valToInclude = (strlen($p[$matchNew])>$characterlimit)? substr($p[$matchNew],0,$characterlimit)."..":$p[$matchNew];
+                            $a = str_replace('[['.$matchNew.']]',$valToInclude, $a);
+                        }
+                    }
+                }
+                $val = $a;
+            }
+            return $val;
+        }
+        return '';
+    }//end of _parseExtra
+}//end of class
\ No newline at end of file

--- Zend/View/Helper/Recentlyviewed.php ---
@@ -434,7 +434,7 @@ public function recentlyviewed()
                         	 	if($pagesplit_action != 'employeetimesheet'){
 							 	   echo '<li><span id="redirectlink"  title = "'.$menuName.'" onclick ="redirecttolink(\''.$pagesplitLink.'\',\''.$pagesplit_module.'\');">'.$menuName.'</span><a href="javascript:void(0);" onClick="closetab(this,\''.$pagesplitName.'\',\''.$pagesplitLink.'\')"></a></li>';
                         	 	}
-                        	 }else if($pagesplit_module == 'expenses' || $pagesplit_module == 'assets')
+                        	 }else if($pagesplit_module == 'expenses' || $pagesplit_module == 'assets' || $pagesplit_module == 'exit')
 							 {
 								
 							 	   echo '<li><span id="redirectlink"  title = "'.$menuName.'" onclick ="redirecttolink(\''.$pagesplitLink.'\',\''.$pagesplit_module.'\');">'.$menuName.'</span><a href="javascript:void(0);" onClick="closetab(this,\''.$pagesplitName.'\',\''.$pagesplitLink.'\')"></a></li>';

--- application/controllers/ErrorController.php ---
@@ -0,0 +1,58 @@
+<?php
+
+class ErrorController extends Zend_Controller_Action
+{
+
+    public function errorAction()
+    {
+        $errors = $this->_getParam('error_handler');
+        
+        if (!$errors || !$errors instanceof ArrayObject) {
+            $this->view->message = 'You have reached the error page';
+            return;
+        }
+        
+        switch ($errors->type) {
+            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ROUTE:
+            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_CONTROLLER:
+            case Zend_Controller_Plugin_ErrorHandler::EXCEPTION_NO_ACTION:
+                // 404 error -- controller or action not found
+                $this->getResponse()->setHttpResponseCode(404);
+                $priority = Zend_Log::NOTICE;
+                $this->view->message = 'Page not found';
+                break;
+            default:
+                // application error
+                $this->getResponse()->setHttpResponseCode(500);
+                $priority = Zend_Log::CRIT;
+                $this->view->message = 'Application error';
+                break;
+        }
+        
+        // Log exception, if logger available
+        if ($log = $this->getLog()) {
+            $log->log($this->view->message, $priority, $errors->exception);
+            $log->log('Request Parameters', $priority, $errors->request->getParams());
+        }
+        
+        // conditionally display exceptions
+        if ($this->getInvokeArg('displayExceptions') == true) {
+            $this->view->exception = $errors->exception;
+        }
+        
+        $this->view->request   = $errors->request;
+    }
+
+    public function getLog()
+    {
+        $bootstrap = $this->getInvokeArg('bootstrap');
+        if (!$bootstrap->hasResource('Log')) {
+            return false;
+        }
+        $log = $bootstrap->getResource('Log');
+        return $log;
+    }
+
+
+}
+

--- application/controllers/IndexController.php ---
@@ -0,0 +1,18 @@
+<?php
+
+class IndexController extends Zend_Controller_Action
+{
+
+    public function init()
+    {
+        /* Initialize action controller here */
+    }
+
+    public function indexAction()
+    {
+        // action body
+    }
+
+
+}
+

--- application/layouts/scripts/hrmsheader.phtml ---
@@ -34,7 +34,6 @@ $module = $request->getRequest()->getModuleName();
 $controllerName = $request->getRequest()->getControllerName();
 $actionName = $request->getRequest()->getActionName();
 $baseUrl = rtrim(BASE_URL, '/');
-
 $auth = Zend_Auth::getInstance();
 
 $loginUserName = ""; 
@@ -156,7 +155,7 @@ if($actionName == 'viewsettings'){
 <script type="text/javascript" src="<?php echo MEDIA_PATH;?>jquery/js/jquery-1.7.1.min.js"></script> 
 <script type="text/javascript" src="<?php echo MEDIA_PATH;?>jquery/js/jquery-1.10.2.min.js"></script>
 <script type="text/javascript" src="<?php echo MEDIA_PATH;?>jquery/js/jquery-ui-1.10.3.custom.js"></script> 
-<?php if($module!='timemanagement') { ?>
+<?php if($module!='timemanagement' && $module!='exit' ) { ?>
 	<script type="text/javascript" src="<?php echo MEDIA_PATH;?>js/hrms.js"></script>
 <script type="text/javascript" src="<?php echo MEDIA_PATH;?>js/hrmsv2.js"></script>
 <?php } ?>
@@ -249,7 +248,11 @@ if($controllerName == "reports" || $controllerName == "appraisalinit" || ($modul
     <link rel="stylesheet" href="<?php  echo MEDIA_PATH?>css/glyphicon.css">
 <?php } ?>
 
-
+<?php if($module == 'exit'){ ?>
+        
+        <script type="text/javascript" language="javascript" src="<?php echo EXIT_MEDIA_PATH?>js/exit.js"></script>
+		
+<?php }?>
 <?php
 	$organizationImg = new Zend_Session_Namespace('organizationinfo');
 ?>
@@ -1049,6 +1052,7 @@ if($loginuserRole == SUPERADMINROLE)
               <div class="col-md-12">
     <div class="wrapperdivright">
     <div id="breadcrumdiv">
+	
     <?php 
     if($controllerName == 'policydocuments')
     {
@@ -1214,6 +1218,8 @@ $('.toggleleftwrapper').click(function(){
 					selected_obj = $("li[menu-url='<?php echo BASE_URL.'expenses/'.$controllerName ;?>']"); 
 				<?php } else if($module == 'assets'){ ?>
 					selected_obj = $("li[menu-url='<?php echo BASE_URL.'assets/'.$controllerName ;?>']"); 
+				<?php } else if($module == 'exit'){ ?>
+					selected_obj = $("li[menu-url='<?php echo BASE_URL.'exit/'.$controllerName ;?>']"); 
 				<?php } else { ?>
 					selected_obj = $("li[menu-url='<?php echo BASE_URL.$controllerName ;?>']"); 
 				<?php }?>

--- application/layouts/scripts/popup/layout.phtml ---
@@ -97,6 +97,10 @@ echo $this->headLink()->appendStylesheet(MEDIA_PATH . 'jquery/css/cupertino/jque
 <?php } else if($module == 'assets'){ ?>
 	<script type="text/javascript" language="javascript" src="<?php echo MEDIA_PATH;?>assets/js/assets.js"></script>
 <?php } ?>
+<?php if($module == 'exit'){ ?>
+  <script type="text/javascript" language="javascript" src="<?php echo EXIT_MEDIA_PATH?>js/exit.js"></script>
+	
+<?php }?>
 <script type="text/javascript" charset="utf-8">
 //defining the project name for using in js files
 var projectPath =  '<?php echo DOMAIN;?>';

--- application/layouts/scripts/timemanagementheader.phtml ---
@@ -82,7 +82,13 @@ if($auth->hasIdentity())
 		$employeeLeaves = $usersModel->getEmpLeaves($loginUserId,$employeeDOJ['date_of_joining'],$weekend_date);
 		$getWeekends = $usersModel->getWeekend($employeeDOJ['date_of_joining'],$weekend_date,$department_id);
 		$between_days = array();
-		$between_days = sapp_Global::createDateRangeArray($employeeDOJ['date_of_joining'],$weekend_date);
+		$doj_date = strtotime($employeeDOJ['date_of_joining']);
+		$created_date = strtotime($employeeDOJ['createddate']);
+		if($created_date < $doj_date)		
+			$between_days = sapp_Global::createDateRangeArray($employeeDOJ['date_of_joining'],$weekend_date);
+		else
+			$between_days = sapp_Global::createDateRangeArray($employeeDOJ['createddate'],$weekend_date);
+		//$between_days = sapp_Global::createDateRangeArray($employeeDOJ['date_of_joining'],$weekend_date);
 		$holidayDatesArr =  array();
 		$holidayDateslistArr=array();
 		if(isset($loginUserId) && $loginUserId !=''){

--- application/modules/default/controllers/EmployeeController.php ---
@@ -90,6 +90,8 @@ public function indexAction()
 				array_push($data,$dataTmp);
 				$this->view->dataArray = $data;
 				
+				
+				
 				$this->view->empcount = $empcount;
 				$this->view->totalcount = $totalcount;
 				$this->view->limit = $limit;
@@ -126,6 +128,7 @@ public function getmoreemployeesAction()
 			$search_str = $this->_request->getParam('search_str',null);
 			$role_id = $this->_request->getParam('role_id',null);
 			$empflag = $this->_request->getParam('empflag',null);
+			$clearflag = $this->_request->getParam('clearflag',null);
 			
 			if($call == 'ajaxcall')
 				$this->_helper->layout->disableLayout();
@@ -153,19 +156,24 @@ public function getmoreemployeesAction()
 			
 			   if($search_val != '' && isset($search_val) && $flag == 0)
 			   {
-				 	$this->view->remainingcount = $totalcount -  $empcount;  
+					$this->view->remainingcount = $totalcount -  $empcount;  
 			   }
 			   else
 			   {
 				   $this->view->remainingcount = $count_remaining -  $empcount;
 			   }
-			   
-			array_push($data,$dataTmp);
+				 if($clearflag == 1)
+				{
+					$this->view->remainingcount = $totalcount -  $empcount;  
+				}
+			
+				array_push($data,$dataTmp);
 				$this->view->call = $call;
 				$this->view->dataArray = $data;
 				$this->view->empcount = $empcount;
 				$this->view->totalcount = $totalcount;
 				$this->view->limit = $limit;
+				$this->view->empflag = $empflag;
 				$this->view->inc_offset = $offset + $limit;
 			
 	}

--- application/modules/default/controllers/HolidaydatesController.php ---
@@ -429,7 +429,7 @@ public function save($holidaydatesform)
 			{ 
 				if(!is_array($groupidArr) && $groupidArr!= '')
 				{
-					$checkholidayname = $holidaydatesmodel->checkholidayname($holidayname,$groupidArr,$id);		
+					$checkholidayname = $holidaydatesmodel->checkholidayname($holidayname,$groupidArr,$id,$holidayyear );		
 					$count = $checkholidayname[0]['count'];
 					if($count > 0){
 						$msgarray['holidayname'] = $holidayname.' already added to this group.';
@@ -438,8 +438,8 @@ public function save($holidaydatesform)
 				}else{
 					for($j=0;$j<sizeof($groupidArr);$j++)	
 					{
-					 $isduplicateholiday = $holidaydatesmodel->checkholidayname($holidayname,$groupidArr[$j],'');
-					 
+					 $isduplicateholiday = $holidaydatesmodel->checkholidayname($holidayname,$groupidArr[$j],'',$holidayyear);
+					
 					 $duplicatearr['count'] = $isduplicateholiday[0]['count'];
 					} 
 				}

--- application/modules/default/controllers/HrwizardController.php ---
@@ -213,26 +213,47 @@ public function saveholidays($hrWizardData) {
 		$groupnameId = $this->_request->getParam('groupname');
 		$holidayname_arr = $this->_request->getParam('holidayname');
 		$holidaydate_arr = $this->_request->getParam('holidaydate');
+		$holidayyears=array();
+		if(!empty($holidaydate_arr))
+		{
+			for($i=0;$i<sizeof($holidaydate_arr);$i++)
+			{		
+				$holidaydate = sapp_Global::change_date($holidaydate_arr[$i], 'database');
+				$holidayyears[] = date('Y',strtotime($holidaydate));
+			}
+		}
+		
 		if(!empty($holidayname_arr))
 		{
 			$holidayArr = array_count_values($holidayname_arr);
+			$yearcountArr = array_count_values($holidayyears);
 			for($i=0;$i<sizeof($holidayname_arr);$i++)
 			{
+				
 				if($holidayname_arr[$i] == '') {
 					$msgarray['holiday_name'][$i] = 'Please enter holiday.';
 					$errorflag = 'false';
 				} else if(!preg_match('/^[a-zA-Z0-9.\- ?]+$/', $holidayname_arr[$i])) {
 					$msgarray['holiday_name'][$i] = 'Please enter valid holiday.';
 					$errorflag = 'false';
-				}else if($i>0 && $holidayArr[$holidayname_arr[$i]] > 1)
+				}
+				else if($i>0 && $holidayArr[$holidayname_arr[$i]] > 1)
 				{
-					$msgarray['holiday_name'][$i] = 'Please enter different holiday.';
-					$errorflag = 'false';
+					if($yearcountArr[$holidayyears[$i]] > 1)
+					{
+						 $msgarray['holiday_name'][$i] = 'Please enter different holiday.';
+						 $errorflag = 'false';
+					}
 				}
 				else 
 				{
 					if($groupnameId) {
-						$isduplicateholiday = $holidaydatesmodel->checkholidayname($holidayname_arr[$i],$groupnameId,'');
+						if(	$holidaydate_arr[$i] != '')
+						{				
+							$holidaydate = sapp_Global::change_date($holidaydate_arr[$i], 'database');
+							$holidayyear = date('Y',strtotime($holidaydate));
+						}
+						$isduplicateholiday = $holidaydatesmodel->checkholidayname($holidayname_arr[$i],$groupnameId,'',$holidayyear);
 						if(!empty($isduplicateholiday))
 						{
 							if($isduplicateholiday[0]['count'] > 0)

--- application/modules/default/controllers/IndexController.php ---
@@ -627,13 +627,14 @@ public function getdepartmentsAction()
 		$leavemanagementform = new Default_Form_leavemanagement();
 		$flag = '';
 		$departmentsmodel = new Default_Model_Departments();
-		$appraisalconfigmodel = new Default_Model_Appraisalconfig();
+		$appraisalconfigmodel = new Default_Model_Appraisalconfig();	
 		if($con == 'leavemanagement')
 		{
 			$leavemanagementmodel = new Default_Model_Leavemanagement();
 			$departmentidsArr = $leavemanagementmodel->getActiveDepartmentIds();
 			$depatrmentidstr = '';
 			$newarr = array();
+			$hremployees=array();
 			if(!empty($departmentidsArr))
 			{
 				$where = '';
@@ -663,6 +664,12 @@ public function getdepartmentsAction()
 				$flag = 'true';
 				$this->view->departmentlistArr=$departmentlistArr;
 			}
+			// hr employees based on business unit
+			$hremployees=$leavemanagementmodel->getBusinessunitHrEmployees($businessunit_id);	
+			if(!empty($hremployees))
+			{
+				$this->view->hremployees=$hremployees;
+			}
 		}
 		else if($con == 'appraisal_config')
 		{

--- application/modules/default/controllers/LeavemanagementController.php ---
@@ -150,18 +150,18 @@ public function addAction()
 				$bu_msg = 'no bu';
 			} 
 				
-			 if(isset($_POST['hrmanager']) && $_POST['hrmanager']!='')
-			{
-				if(isset($_POST['department_id']) && $_POST['department_id']!='')
+			/*  if(isset($_POST['hrmanager']) && $_POST['hrmanager']!='')
+			{ */
+				if(isset($_POST['businessunit']) && $_POST['businessunit']!='')
 				{
-					$hremployees=$leavemanagementmodel->getdepartmentHrEmployees($_POST['department_id']);	
+					$hremployees=$leavemanagementmodel->getBusinessunitHrEmployees($_POST['businessunit']);	
 					foreach ($hremployees as $employees)
 					{
 						$leavemanagementform->hrmanager->addMultiOption($employees['user_id'], $employees['userfullname']);
 					}
 					$leavemanagementform->setDefault('hrmanager',$_POST['hrmanager']);	
 				}
-			} 
+			//} 
 		
 			$monthslistdata = $monthslistmodel->getMonthlistData();
 				if(sizeof($monthslistdata) > 0)
@@ -450,10 +450,10 @@ public function editAction()
 									{
 									   $this->view->rowexist = "rows";
 									}
-								if($data['department_id'] != '')
+								if($data['businessunit_id'] != '')
 								{
 									//hrmanagers dropdown
-									$hremployees=$leavemanagementmodel->getdepartmentHrEmployees($data['department_id']);	
+									$hremployees=$leavemanagementmodel->getBusinessunitHrEmployees($data['businessunit_id']);	
 
 									if(!empty($hremployees))
 									{
@@ -675,25 +675,5 @@ public function getuniqueDepartment($businessunit_id)
 					return $departmentlistArr; 
                 }				
 	}
-	//get hr managers based on dept id
-	public function gethremployeesAction()
-	{
-      
-		$dept_id = $this->_getParam('dept_id',null);
-		$leavemanagementmodel = new Default_Model_Leavemanagement();
-	
-		$options_data = "";
-		$options_data .= sapp_Global::selectOptionBuilder('', 'Select Hr Manager');
-		if($dept_id != '')
-		{
-			$hremployees=$leavemanagementmodel->getdepartmentHrEmployees($dept_id);	
-			foreach ($hremployees as $employees)
-			{
-				$options_data .= sapp_Global::selectOptionBuilder($employees['user_id'], $employees['userfullname']);
-			}
-		}
-		$this->_helper->json(array('options'=>$options_data));
-	}
-
 }
 

--- application/modules/default/controllers/ManageremployeevacationsController.php ---
@@ -514,7 +514,7 @@ public function save($managerleaverequestform,$appliedleavescount,$employeeemail
                 <table width="100%" cellspacing="0" cellpadding="15" border="0" style="border:3px solid #BBBBBB; font-size:16px; font-family:Arial, Helvetica, sans-serif; margin:30px 0 30px 0;" bgcolor="#ffffff">
                       <tbody><tr>
                         <td width="28%" style="border-right:2px solid #BBBBBB;">Employee Name</td>
-                        <td width="72%">'.$repMgrName.'</td>
+                        <td width="72%">'.$userfullname.'</td>
                       </tr>
                       <tr bgcolor="#e9f6fc">
                         <td style="border-right:2px solid #BBBBBB;">No. of Day(s)</td>

--- application/modules/default/controllers/MyemployeesController.php ---
@@ -42,6 +42,7 @@ public function indexAction()
      	if($auth->hasIdentity()){
 			$loginUserId = $auth->getStorage()->read()->id;
 		} 
+		
 	    $employeeModel = new Default_Model_Employee();	
 		$myemployeesModel = new Default_Model_Myemployees();
 		$role_model = new Default_Model_Roles();		

--- application/modules/default/controllers/PendingleavesController.php ---
@@ -104,7 +104,7 @@ public function indexAction()
 			array_push($data,$dataTmp);
 			$this->view->dataArray = $data;
 			$this->view->call = $call ;
-			$this->view->objName = $objName ;
+			$this->view->objName = 'all';
 			$this->view->flag = $flag ;
 			$this->view->leavesCountArray = $leavesCountArray ;
 			$this->view->messages = $this->_helper->flashMessenger->getMessages();

--- application/modules/default/controllers/WizardController.php ---
@@ -1192,10 +1192,15 @@ public function savedepartments() {
 			$date = new Zend_Date();
 			for($i=0;$i<sizeof($department_arr);$i++)
 			{
-			   if(strlen(trim($department_arr[$i])) > 3)
+			    // Commented the code to avoid duplicate dept code genration
+			   /*if(strlen(trim($department_arr[$i])) > 3)
 			   		$deptCode = strtoupper(substr(trim($department_arr[$i]), 0, 4));
-			   else		 		
+			    else		 		
 			   		$deptCode = strtoupper(trim($department_arr[$i]));
+				*/
+				
+			   // Random Capital string generation for 4 characters.				
+			   $deptCode = $this->generateRandomCodeString();	
 			   $data = array('deptname'=>trim($department_arr[$i]),
 			                 'deptcode'=>$deptCode, 
 							 'startdate'=>NULL,
@@ -1283,11 +1288,15 @@ public function savebusinessunitAction()
 				$menumodel = new Default_Model_Menu();
 				$actionflag = '';
 				$tableid  = ''; 
-				if(strlen(trim($unitname)) > 3)
+				// Commented the code to avoid duplicate unit code genration
+				/*if(strlen(trim($unitname)) > 3)
 				   	$unitCode = strtoupper(substr(trim($unitname), 0, 4));
 			    else		 		
-			   		$unitCode = strtoupper(trim($unitname));
-			   $data = array('unitname'=>$unitname,
+			   		$unitCode = strtoupper(trim($unitname));*/
+				
+                // Random Capital string generation for 4 characters.				
+				$unitCode = $this->generateRandomCodeString();	
+			    $data = array('unitname'=>$unitname,
 			                 'unitcode'=>$unitCode, 
 							 'startdate'=>NULL,
 							 'country'=>!empty($organisationData)?$organisationData[0]['country']:NULL,
@@ -1542,6 +1551,17 @@ public function savecategoryAction()
 	
 	}
 	
+	// Random Capital string generation for 4 characters.
+	public function generateRandomCodeString($length = 4) {
+		$characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
+		$charactersLength = strlen($characters);
+		$randomString = '';
+		for ($i = 0; $i < $length; $i++) {
+			$randomString .= $characters[rand(0, $charactersLength - 1)];
+		}
+		return $randomString;
+	}
+	
 	
 }
 

--- application/modules/default/forms/leavemanagement.php ---
@@ -55,14 +55,13 @@ public function init()
 		$businessunit->setRegisterInArrayValidator(false);	
       	$businessunit->setRequired(true);
 		$businessunit->addValidator('NotEmpty', false, array('messages' => 'Please select business unit.'));
-	 
+		
 		$department_id = new Zend_Form_Element_Select('department_id');
 		$department_id->addMultiOption('','Select Department');
         $department_id->setRegisterInArrayValidator(false);
         $department_id->setRequired(true);
 		$department_id->addValidator('NotEmpty', false, array('messages' => 'Please select department.')); 
-		$department_id->setAttrib("onchange", "gethrmanagers(this);");
-		
+	
 		$hours_day = new Zend_Form_Element_Text('hours_day');
         $hours_day->setAttrib('maxLength', 2);
         $hours_day->addFilter(new Zend_Filter_StringTrim());

--- application/modules/default/library/sapp/Global.php ---
@@ -2039,6 +2039,10 @@ public static function generateAccessControl_helper($controllers,$role_id)
 			unset($acl['expenses']['indexcontroller.php']);
 			$aacl = $aacl+$acl['expenses'];
 		}
+		if(isset($acl['exit'])) {
+			unset($acl['exit']['indexcontroller.php']);
+			$aacl = $aacl+$acl['exit'];
+		}
 
 		//return $acl;
 		return $aacl;

--- application/modules/default/library/sapp/Helper.php ---
@@ -1540,11 +1540,12 @@ public static function getLeavesCountByCategory($userId)
 		$approvedLeavesCount = $leaverequestmodel->getLeavesCount($userId,2);
 		$rejectedLeavesCount = $leaverequestmodel->getLeavesCount($userId,3);
 		$cancelLeavesCount = $leaverequestmodel->getLeavesCount($userId,4);
-		return $countArray = array('pendingleaves'=>$pendingLeavesCount,
+		return $countArray = array(
+							'all'=>$pendingLeavesCount+$approvedLeavesCount+$rejectedLeavesCount+$cancelLeavesCount,
+							'pendingleaves'=>$pendingLeavesCount,
 							'cancelleaves'=>$cancelLeavesCount,
 							'approvedleaves'=>$approvedLeavesCount,
-							'rejectedleaves'=>$rejectedLeavesCount,
-							'all'=>$pendingLeavesCount+$approvedLeavesCount+$rejectedLeavesCount+$cancelLeavesCount
+							'rejectedleaves'=>$rejectedLeavesCount				
 							);
 	}
 	
@@ -1571,6 +1572,32 @@ public static function displayLeaveTypeDiv($leavesCountArray){
 	<?php	 
 		 }
 	}
+	//function to diaply employee questions after exit process approved
+	/*public static function displayEmployeeQuestionsDiv($tabsarray)
+	{
+		if(!empty($tabsarray)){ ?>
+		<div class="count_new_dis_par">
+		<?php
+		foreach ($tabsarray  as $value) {
+			if($value=='employeedetails')
+				$action = 'index';
+			else
+				$action = $value;
+		?>
+				<div id="filter_<?php echo $value;?>" class="clickable_menu count_new_dis" parent-div="div_mchilds_<?php echo HUMANRESOURCE;?>" super-parent="main_parent_<?php echo HUMANRESOURCE;?>" 
+				primary_parent="<?php echo EXITPROCEDURE;?>" menu-url="<?php echo BASE_URL.'exit/exitproc/'.$action;?>">
+		
+					<span><?php echo ucfirst($value);?></span></br>
+				</div>
+				
+
+	<?php
+		 }?>
+		 </div>
+		
+			
+	<?php	}
+	}*/
 	
 	public static function displayDisciplineHistory($incidentHistory){
 		if(count($incidentHistory)>0) {
@@ -1643,6 +1670,11 @@ public static function editdeleteForView($menu,$controllername,$id,$msgtitle,$is
 					$editpermission='Yes';
 					$deletepermission='Yes';
 				}
+			}else if($controllername=='configuration'){
+				if(Zend_Registry::get('tm_role')=='Admin')
+				{
+					$editpermission='Yes';
+				}
 			}
 			
 		}
@@ -1672,5 +1704,48 @@ public static function editdeleteForView($menu,$controllername,$id,$msgtitle,$is
 		
 	<?php }
 	
+	public static function exitProcessFinalView($employee_questions_array,$emp_response_array)
+	{
+		$view='';
+		$view.='<div class="ml-alert-1-info"><div class="style-1-icon info"></div>Exit Procedure has been completed.</div>';
+		$view.="<div class='total-form-controller view-form-detail'>";
+		$view.="<div id='msg_error'></div>";
+		$view.="<div class='total-form-controller view-form-detail employee_appraisal_view'>";
+		$view.="<table width='100%' border='0' cellspacing='0' cellpadding='0' style='clear:both;' class='employee_appraisal-table'>";
+		$view.="<thead>";
+		$view.="<tr>";
+		$view.="<th>Question</th>";
+		$view.="<th>Comments</th>";
+		$view.="</tr>";
+		$view.="</thead>";
+		$view.="<tbody>";
+		if(!empty($employee_questions_array) && count($employee_questions_array)>0) {
+			
+				foreach ($employee_questions_array as $qd)
+				{		
+					$view.="<tr>";
+					$view.="<td>";
+					$view.=	"<div>";		
+					$view.="<span class='appri_ques'>".$qd['question']."</span>";				
+					$view.="<span class='appri_desc'>".$qd['description']."</span>";				
+					$view.="</div>";	
+					$view.="</td>";
+					$view.="<td>";
+								if(isset($emp_response_array[$qd['id']])){
+									$view.="<span>".$emp_response_array[$qd['id']]."</span>";
+									}
+					$view.="</td>
+						</tr>";	
+				} 
+		}
+		
+		
+		$view.="</tbody>";
+		$view.="</table>";
+		$view.="</div>";
+		$view.="</div>";
+		return $view;
+	}
+	
 }//end of class
 ?>
\ No newline at end of file

--- application/modules/default/models/Announcements.php ---
@@ -51,7 +51,6 @@ public function getAnnouncementsData($sort, $by, $pageNo, $perPage,$searchQuery)
 		if($searchQuery)
 			$where .= " AND ".$searchQuery;
 		$db = Zend_Db_Table::getDefaultAdapter();		
-		
 		// Show announcements with multiple departments
 		$announcementData = $this->select()
     					   ->setIntegrityCheck(false)	
@@ -81,7 +80,14 @@ public function getGrid($sort,$by,$perPage,$pageNo,$searchData,$call,$dashboardc
 				$searchValues = json_decode($searchData);
 				foreach($searchValues as $key => $val)
 				{
-							$searchQuery .= " ".$key." like '%".$val."%' AND ";
+					if($key=='description')
+					{
+						$searchQuery .= " ".'a.description'." like '%".$val."%' AND ";
+					}
+					else
+					{
+						$searchQuery .= " ".$key." like '%".$val."%' AND ";
+					}
                            $searchArray[$key] = $val;
 				}
 				$searchQuery = rtrim($searchQuery," AND");					

--- application/modules/default/models/Dateformat.php ---
@@ -86,6 +86,10 @@ public function getDateFormatList()
 	}
         public function getAllDateFormats()
         {
-            return $this->fetchAll()->toArray();
+            $select = $this->select()
+						->setIntegrityCheck(false)
+						->from(array('d'=>'main_dateformat'),array('d.*'))
+					    ->where('d.isactive = 1');
+			return $this->fetchAll($select)->toArray();
         }
 }
\ No newline at end of file

--- application/modules/default/models/Employee.php ---
@@ -87,7 +87,9 @@ public function getEmployees($managerid='',$loginUserId,$limit,$offset,$search_v
 		{
 			if($search_val == 'emp_name')
 			{
-				$where .= " AND e.userfullname like '%".$search_str."%' ";
+				$search_str_l=ltrim($search_str);
+				$search_str_r=rtrim($search_str_l);
+				$where .= " AND e.userfullname like '%".$search_str_r."%' ";
 			}
 			else if($search_val == 'emp_id')
 			{
@@ -107,7 +109,7 @@ public function getEmployees($managerid='',$loginUserId,$limit,$offset,$search_v
                                 ->where($where)
                                 ->limit($limit, $offset)
 								->order('e.modifieddate desc');
-     
+   
         return $this->fetchAll($employeesData)->toArray();  		
     }
 	public function getUserRole()

--- application/modules/default/models/Holidaydates.php ---
@@ -40,7 +40,7 @@ public function getHolidayDatesData($sort, $by, $pageNo, $perPage,$searchQuery,$
 						   ->where($where)
     					   ->order("$by $sort") 
     					   ->limitPage($pageNo, $perPage);
-
+		//echo 	$groupData ; exit;
 		return $groupData;       		
 	}
 	
@@ -297,13 +297,13 @@ public function getDuplicateHolidayName($holidayname,$groupid,$holidaydate)
 	   $rows = $db->query("select count(*) as count from main_holidaydates where lower(holidayname) = lower('".$holidayname."') and groupid = ".$groupid." and holidaydate = '".$holidaydate."' and isactive = 1 ");
 	   return $rows->fetchAll();	
 	}
-	public function checkholidayname($holidayname,$groupid,$id='')
+	public function checkholidayname($holidayname,$groupid,$id='',$holidayyear ='')
 	{
 		$db = Zend_Db_Table::getDefaultAdapter();
 		if($id == '')		
-		$rows = $db->query("select count(*) as count from main_holidaydates where lower(holidayname) = lower('".$holidayname."') and groupid = ".$groupid." and isactive = 1 ");
+		$rows = $db->query("select count(*) as count from main_holidaydates where lower(holidayname) = lower('".$holidayname."') and groupid = ".$groupid." and holidayyear=".$holidayyear." and isactive = 1 ");
 		else
-		$rows = $db->query("select count(*) as count from main_holidaydates where lower(holidayname) = lower('".$holidayname."') and groupid = ".$groupid." and isactive = 1 and id != ".$id);
+		$rows = $db->query("select count(*) as count from main_holidaydates where lower(holidayname) = lower('".$holidayname."') and groupid = ".$groupid." and holidayyear=".$holidayyear." and isactive = 1 and id != ".$id);
 		
 		return $rows->fetchAll();	
 	}

--- application/modules/default/models/Leavemanagement.php ---
@@ -286,12 +286,12 @@ public function getEmployeeUsedLeavesName($id,$year)
 		
 	}
  // to get hr employees
-    public function getdepartmentHrEmployees($dept_id)
+    public function getBusinessunitHrEmployees($businessunit_id)
     {
     	$db = Zend_Db_Table::getDefaultAdapter();
     	$query = "	select es.id,es.user_id,es.userfullname from main_employees_summary es where es.user_id in (
 					select s.user_id from main_employees_summary s
-					inner join main_roles r on s.emprole = r.id where r.group_id = 3  and r.isactive=1 ) and es.isactive =1 and es.department_id=$dept_id;";
+					inner join main_roles r on s.emprole = r.id where r.group_id = 3  and r.isactive=1 ) and es.isactive =1 and es.businessunit_id=$businessunit_id;";
     	$data = $db->query($query)->fetchAll();
     	return $data;
     
@@ -302,7 +302,7 @@ public function gethrDetails($dept_id)
 	        $select = $this->select()
     					   ->setIntegrityCheck(false)	
                            ->from(array('l'=>'main_leavemanagement'),array('hr_id'=>'l.hr_id'))
-						   ->where('l.department_id = '.$dept_id.' AND l.isactive = 1');		   					   				
+						   ->where('l.department_id = "'.$dept_id.'" AND l.isactive = 1');		   					   				
 		return $this->fetchAll($select)->toArray(); 
 	}
 }
\ No newline at end of file

--- application/modules/default/plugins/AccessControl.php ---
@@ -26,10 +26,6 @@ public function preDispatch(Zend_Controller_Request_Abstract $request)
 	 $role = 'sysadmin';
 	else if($role == 9)
 	 $role = 'lead';
-	else if($role == 10)
-	 $role = 'DHead';
-	else if($role == 11)
-	 $role = 'ExAgency';
 	
   	$request->getModuleName();
         $request->getControllerName();
@@ -82,15 +78,13 @@ protected function _getAcl()
 	 $acl->addRole('agency');
 	 $acl->addRole('sysadmin');
 	 $acl->addRole('lead');
-	 $acl->addRole('DHead');
-	 $acl->addRole('ExAgency');
 	   $storage = new Zend_Auth_Storage_Session();
 	   $data = $storage->read();
 	   $role = $data['emprole'];
 		
 	$auth = Zend_Auth::getInstance(); 
 	$tmroleText=array();
-	$tmroleText = array('1'=>'admin','2'=>'management','3'=>'manager','4'=>'hrmanager','5'=>'employee','6'=>'user','7'=>'agency','8'=>'sysadmin','9'=>'lead','10'=>'DHead','11'=>'ExAgency');
+	$tmroleText = array('1'=>'admin','2'=>'management','3'=>'manager','4'=>'hrmanager','5'=>'employee','6'=>'user','7'=>'agency','8'=>'sysadmin','9'=>'lead');
 	
 		if($auth->hasIdentity())
 		{
@@ -181,6 +175,9 @@ protected function _getAcl()
 
 		 $acl->addResource(new Zend_Acl_Resource('timemanagement:expenses'));
 									$acl->allow($tmroleText[$role], 'timemanagement:expenses', array('index','edit','view','delete','download','uploadpreview','getprojectbyclientid','getfilename','submitexpense','expensereports','viewexpenses','viewexpensereports','updateexpensestatus','updateexpensestatus','updateexpensestatus','updateexpensestatus','updateexpensestatus','updateexpensestatus','updateexpensestatus','updateexpensestatus','updateexpensestatus'));
+
+		 $acl->addResource(new Zend_Acl_Resource('timemanagement:reports'));
+									$acl->allow($tmroleText[$role], 'timemanagement:reports', array('index','employeereports','projectsreports','getempduration','getprojecttaskduration','tmreport'));
  } 
 		
 	   $acl->addResource(new Zend_Acl_Resource('login:index'));	
@@ -204,9 +201,6 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:appraisalcategory'));
                     $acl->allow('admin', 'default:appraisalcategory', array('index','add','view','edit','delete','addpopup','getappraisalcategory'));
 
-		 $acl->addResource(new Zend_Acl_Resource('default:appraisalconfig'));
-                    $acl->allow('admin', 'default:appraisalconfig', array('index','add','view','edit','getbunitimplementation','getdepartments','delete'));
-
 		 $acl->addResource(new Zend_Acl_Resource('default:appraisalhistoryself'));
                     $acl->allow('admin', 'default:appraisalhistoryself', array('index','view'));
 
@@ -258,6 +252,9 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:cities'));
                     $acl->allow('admin', 'default:cities', array('index','view','edit','delete','getcitiescand','addpopup','addnewcity'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:clients'));
+                    $acl->allow('admin', 'default:clients', array('index','edit','view','delete','addpopup'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:competencylevel'));
                     $acl->allow('admin', 'default:competencylevel', array('index','view','edit','addpopup','delete'));
 
@@ -271,11 +268,26 @@ protected function _getAcl()
                     $acl->allow('admin', 'default:currencyconverter', array('index','add','view','edit','delete'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                    $acl->allow('admin', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                    $acl->allow('admin', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
                     $acl->allow('admin', 'default:departments', array('index','view','viewpopup','edit','editpopup','getdepartments','delete','getempnames'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryallincidents'));
+                    $acl->allow('admin', 'default:disciplinaryallincidents', array('index','view'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryincident'));
+                    $acl->allow('admin', 'default:disciplinaryincident', array('index','view','edit','add','getemployees','delete'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinarymyincidents'));
+                    $acl->allow('admin', 'default:disciplinarymyincidents', array('index','view','edit','saveemployeeappeal','getdisciplinaryincidentpdf'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryteamincidents'));
+                    $acl->allow('admin', 'default:disciplinaryteamincidents', array('index','view'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryviolation'));
+                    $acl->allow('admin', 'default:disciplinaryviolation', array('index','add','view','edit','delete','addpopup'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:educationlevelcode'));
                     $acl->allow('admin', 'default:educationlevelcode', array('index','view','edit','delete'));
 
@@ -292,7 +304,7 @@ protected function _getAcl()
                     $acl->allow('admin', 'default:empleavesummary', array('index','statusid','view','delete'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:employee'));
-                    $acl->allow('admin', 'default:employee', array('getemprequi','index','changeorghead','add','edit','view','getdepartments','getpositions','delete','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails'));
+                    $acl->allow('admin', 'default:employee', array('getemprequi','index','getmoreemployees','changeorghead','add','edit','view','getdepartments','getpositions','delete','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:employeeleavetypes'));
                     $acl->allow('admin', 'default:employeeleavetypes', array('index','view','edit','delete'));
@@ -411,6 +423,9 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:prefix'));
                     $acl->allow('admin', 'default:prefix', array('index','view','edit','saveupdate','delete','addpopup'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:projects'));
+                    $acl->allow('admin', 'default:projects', array('index','view','delete','viewpopup','editpopup','edit'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:racecode'));
                     $acl->allow('admin', 'default:racecode', array('index','view','edit','saveupdate','delete','addpopup'));
 
@@ -459,6 +474,9 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:usermanagement'));
                     $acl->allow('admin', 'default:usermanagement', array('index','view','edit','saveupdate','delete','getemailofuser'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:vendors'));
+                    $acl->allow('admin', 'default:vendors', array('index','view','delete','edit','addpopup'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:veteranstatus'));
                     $acl->allow('admin', 'default:veteranstatus', array('index','view','edit','delete'));
 
@@ -472,7 +490,7 @@ protected function _getAcl()
                     $acl->allow('admin', 'assets:assetcategories', array('index','edit','view','delete','addpopup','addsubcatpopup','assetuserlog'));
 
 		 $acl->addResource(new Zend_Acl_Resource('assets:assets'));
-                    $acl->allow('admin', 'assets:assets', array('index','addpopup','edit','delete','uploadsave','uploaddelete','view','getsubcategories','deleteimage','downloadimage','getemployeesdata'));
+                    $acl->allow('admin', 'assets:assets', array('index','edit','delete','uploadsave','uploaddelete','view','getsubcategories','deleteimage','downloadimage','getemployeesdata'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:advances'));
                     $acl->allow('admin', 'expenses:advances', array('index','getprojects','myadvances','viewmoreadvances','clearadvancesdata','addreturnpopup'));
@@ -498,6 +516,21 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('expenses:trips'));
                     $acl->allow('admin', 'expenses:trips', array('index','edit','view','delete','addpopup','tripstatus','deleteexpense','downloadtrippdf'));
 
+		 $acl->addResource(new Zend_Acl_Resource('exit:allexitproc'));
+                    $acl->allow('admin', 'exit:allexitproc', array('index','edit','view','editpopup','updateexitprocess','assignquestions'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:configureexitqs'));
+                    $acl->allow('admin', 'exit:configureexitqs', array('index','add','edit','view','delete','addpopup'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitproc'));
+                    $acl->allow('admin', 'exit:exitproc', array('index','questions','view','add','savequestions'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitprocsettings'));
+                    $acl->allow('admin', 'exit:exitprocsettings', array('index','view','add','edit','delete','getdepartments'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exittypes'));
+                    $acl->allow('admin', 'exit:exittypes', array('index','add','edit','view','delete','addpopup'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:processes'));
                     $acl->allow('admin', 'default:processes', array('index','addpopup','editpopup','viewpopup','delete','savecomments','displaycomments','savefeedback'));
 
@@ -595,7 +628,7 @@ protected function _getAcl()
                             $acl->allow('management', 'default:accountclasstype', array('index','addpopup','saveupdate','add','edit','delete','view','Account Class Types'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:addemployeeleaves'));
-                            $acl->allow('management', 'default:addemployeeleaves', array('index','add','edit','view','Add Employee Leaves'));
+                            $acl->allow('management', 'default:addemployeeleaves', array('index','add','edit','view','Add Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:agencylist'));
                             $acl->allow('management', 'default:agencylist', array('index','deletepoc','add','edit','delete','view','Agencies'));
@@ -606,9 +639,6 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:appraisalcategory'));
                             $acl->allow('management', 'default:appraisalcategory', array('index','addpopup','getappraisalcategory','add','edit','delete','view','Parameters'));
 
-		 $acl->addResource(new Zend_Acl_Resource('default:appraisalconfig'));
-                            $acl->allow('management', 'default:appraisalconfig', array('index','getbunitimplementation','getdepartments','add','edit','view','Appraisal Settings'));
-
 		 $acl->addResource(new Zend_Acl_Resource('default:appraisalhistoryself'));
                             $acl->allow('management', 'default:appraisalhistoryself', array('index','view','My Appraisal History'));
 
@@ -658,10 +688,10 @@ protected function _getAcl()
                             $acl->allow('management', 'default:businessunits', array('index','getdeptnames','add','edit','delete','view','Business Units'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:candidatedetails'));
-                            $acl->allow('management', 'default:candidatedetails', array('index','addpopup','chkcandidate','uploadfile','deleteresume','download','multipleresume','getvendors','viewpopup','add','edit','delete','view','CV Management'));
+                            $acl->allow('management', 'default:candidatedetails', array('index','addpopup','chkcandidate','uploadfile','deleteresume','download','multipleresume','getvendors','viewpopup','add','edit','delete','view','Candidates'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:categories'));
-                            $acl->allow('management', 'default:categories', array('index','addnewcategory','add','edit','delete','view','Categories'));
+                            $acl->allow('management', 'default:categories', array('index','addnewcategory','add','edit','delete','view','Manage Categories'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:cities'));
                             $cities_add = 'yes';
@@ -672,24 +702,48 @@ protected function _getAcl()
                                     $acl->allow('management','default:cities', array('index','getcitiescand','addpopup','addnewcity','add','delete','view','Cities'));
 
                                 
+		 $acl->addResource(new Zend_Acl_Resource('default:clients'));
+                            $acl->allow('management', 'default:clients', array('index','addpopup','add','edit','delete','view','Clients'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:competencylevel'));
                             $acl->allow('management', 'default:competencylevel', array('index','addpopup','add','edit','delete','view','Competency Levels'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:countries'));
-                            $acl->allow('management', 'default:countries', array('index','saveupdate','getcountrycode','addpopup','addnewcountry','add','edit','delete','view','Countries'));
+                            $countries_add = 'yes';
+                                if($this->id_param == '' && $countries_add == 'yes')
+                                    $acl->allow('management','default:countries', array('index','saveupdate','getcountrycode','addpopup','addnewcountry','add','delete','view','Countries','edit'));
 
+                                else
+                                    $acl->allow('management','default:countries', array('index','saveupdate','getcountrycode','addpopup','addnewcountry','add','delete','view','Countries'));
+
+                                
 		 $acl->addResource(new Zend_Acl_Resource('default:currency'));
                             $acl->allow('management', 'default:currency', array('index','addpopup','gettargetcurrency','add','edit','delete','view','Currencies'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:currencyconverter'));
                             $acl->allow('management', 'default:currencyconverter', array('index','add','edit','delete','view','Currency Conversions'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('management', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('management', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
                             $acl->allow('management', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','add','edit','delete','view','Departments'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryallincidents'));
+                            $acl->allow('management', 'default:disciplinaryallincidents', array('index','view','All Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryincident'));
+                            $acl->allow('management', 'default:disciplinaryincident', array('index','getemployees','add','edit','delete','view','Raise An Incident'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinarymyincidents'));
+                            $acl->allow('management', 'default:disciplinarymyincidents', array('index','saveemployeeappeal','getdisciplinaryincidentpdf','edit','view','My Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryteamincidents'));
+                            $acl->allow('management', 'default:disciplinaryteamincidents', array('index','view','Team Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryviolation'));
+                            $acl->allow('management', 'default:disciplinaryviolation', array('index','addpopup','add','edit','delete','view','Violation Type'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:educationlevelcode'));
                             $acl->allow('management', 'default:educationlevelcode', array('index','add','edit','delete','view','Education Levels'));
 
@@ -703,10 +757,10 @@ protected function _getAcl()
                             $acl->allow('management', 'default:empconfiguration', array('index','edit','Employee Tabs'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:empleavesummary'));
-                            $acl->allow('management', 'default:empleavesummary', array('index','statusid','view','Employee Leaves Summary'));
+                            $acl->allow('management', 'default:empleavesummary', array('index','statusid','view','Employee Leave Summary'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:employee'));
-                            $acl->allow('management', 'default:employee', array('getemprequi','index','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','add','edit','view','Employees'));
+                            $acl->allow('management', 'default:employee', array('getemprequi','index','getmoreemployees','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','add','edit','view','Employees'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:employeeleavetypes'));
                             $acl->allow('management', 'default:employeeleavetypes', array('index','add','edit','delete','view','Leave Types'));
@@ -781,7 +835,7 @@ protected function _getAcl()
                             $acl->allow('management', 'default:licensetype', array('index','add','edit','delete','view','License Types'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:manageremployeevacations'));
-                            $acl->allow('management', 'default:manageremployeevacations', array('index','edit','view','Manager Employee Leaves'));
+                            $acl->allow('management', 'default:manageremployeevacations', array('index','edit','view','Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:maritalstatus'));
                             $acl->allow('management', 'default:maritalstatus', array('index','saveupdate','addpopup','add','edit','delete','view','Marital Status'));
@@ -817,7 +871,7 @@ protected function _getAcl()
                             $acl->allow('management', 'default:payfrequency', array('index','addpopup','add','edit','delete','view','Pay Frequency'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:pendingleaves'));
-                            $acl->allow('management', 'default:pendingleaves', array('index','delete','view','My Leaves'));
+                            $acl->allow('management', 'default:pendingleaves', array('index','delete','view','My Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:policydocuments'));
                             $acl->allow('management', 'default:policydocuments', array('index','uploaddoc','deletedocument','addmultiple','uploadmultipledocs','add','edit','delete','view','View/Manage Policy Documents'));
@@ -828,6 +882,9 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:prefix'));
                             $acl->allow('management', 'default:prefix', array('index','saveupdate','addpopup','add','edit','delete','view','Prefixes'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:projects'));
+                            $acl->allow('management', 'default:projects', array('index','viewpopup','editpopup','add','edit','delete','view','Projects'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:racecode'));
                             $acl->allow('management', 'default:racecode', array('index','saveupdate','addpopup','add','edit','delete','view','Race Codes'));
 
@@ -847,7 +904,7 @@ protected function _getAcl()
                             $acl->allow('management', 'default:roles', array('index','saveupdate','getgroupmenu','add','edit','delete','view','Roles & Privileges'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:scheduleinterviews'));
-                            $acl->allow('management', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','add','edit','delete','view','Scheduled Interviews'));
+                            $acl->allow('management', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','add','edit','delete','view','Interviews'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:servicedeskconf'));
                             $acl->allow('management', 'default:servicedeskconf', array('index','getemployees','getapprover','getbunitimplementation','getassets','add','edit','delete','view','Settings'));
@@ -889,7 +946,10 @@ protected function _getAcl()
                             $acl->allow('management', 'default:timezone', array('index','saveupdate','addpopup','add','edit','delete','view','Time Zones'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:usermanagement'));
-                            $acl->allow('management', 'default:usermanagement', array('index','saveupdate','getemailofuser','add','edit','view','Manage External Users'));
+                            $acl->allow('management', 'default:usermanagement', array('index','saveupdate','getemailofuser','add','edit','view','External Users'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:vendors'));
+                            $acl->allow('management', 'default:vendors', array('index','addpopup','add','edit','delete','view','Vendors'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:veteranstatus'));
                             $acl->allow('management', 'default:veteranstatus', array('index','add','edit','delete','view','Veteran Status'));
@@ -898,22 +958,37 @@ protected function _getAcl()
                             $acl->allow('management', 'default:workeligibilitydoctypes', array('index','addpopup','add','edit','delete','view','Work Eligibility Document Types'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:advances'));
-                            $acl->allow('management', 'expenses:advances', array('index','getprojects','myadvances','viewmoreadvances','clearadvancesdata','addreturnpopup','Advances'));
+                            $acl->allow('management', 'expenses:advances', array('index','getprojects','myadvances','viewmoreadvances','clearadvancesdata','addreturnpopup','add','edit','delete','view','Advances'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:employeeadvances'));
-                            $acl->allow('management', 'expenses:employeeadvances', array('index','view','Employee Advances'));
+                            $acl->allow('management', 'expenses:employeeadvances', array('index','add','edit','delete','view','Employee Advances'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:expenses'));
-                            $acl->allow('management', 'expenses:expenses', array('index','clone','view','addpopup','uploadsave','uploaddelete','displayreceipts','addtrippopup','submitexpense','addreceiptimage','expensestatus','listreportingmangers','viewmoremanagers','forwardexpenseto','downloadexpensepdf','bulkexpenses','getcategories','getprojects','getcurrency','uploadedfiles','Expenses'));
+                            $acl->allow('management', 'expenses:expenses', array('index','clone','addpopup','uploadsave','uploaddelete','displayreceipts','addtrippopup','submitexpense','addreceiptimage','expensestatus','listreportingmangers','viewmoremanagers','forwardexpenseto','downloadexpensepdf','bulkexpenses','getcategories','getprojects','getcurrency','uploadedfiles','add','edit','delete','view','Expenses'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:myemployeeexpenses'));
-                            $acl->allow('management', 'expenses:myemployeeexpenses', array('index','view','My Employee Expenses'));
+                            $acl->allow('management', 'expenses:myemployeeexpenses', array('index','add','edit','delete','view','My Employee Expenses'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:receipts'));
-                            $acl->allow('management', 'expenses:receipts', array('index','downloadreceipt','downloadexpensereceipt','deletereceipt','uploadsave','displayreceipts','viewmorereceipts','listexpenses','addreceipttoexpense','viewmoreexpenses','cleardata','showreceiptspopup','listtrips','viewmoretrips','addexpensetotrip','Receipts'));
+                            $acl->allow('management', 'expenses:receipts', array('index','downloadreceipt','downloadexpensereceipt','deletereceipt','uploadsave','displayreceipts','viewmorereceipts','listexpenses','addreceipttoexpense','viewmoreexpenses','cleardata','showreceiptspopup','listtrips','viewmoretrips','addexpensetotrip','add','edit','delete','view','Receipts'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:trips'));
-                            $acl->allow('management', 'expenses:trips', array('index','view','addpopup','tripstatus','deleteexpense','downloadtrippdf','Trips'));
+                            $acl->allow('management', 'expenses:trips', array('index','addpopup','tripstatus','deleteexpense','downloadtrippdf','add','edit','delete','view','Trips'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:allexitproc'));
+                            $acl->allow('management', 'exit:allexitproc', array('index','editpopup','updateexitprocess','assignquestions','add','edit','view','All Exit Procedures'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:configureexitqs'));
+                            $acl->allow('management', 'exit:configureexitqs', array('index','addpopup','add','edit','delete','view','Exit Interview Questions'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitproc'));
+                            $acl->allow('management', 'exit:exitproc', array('index','questions','savequestions','add','edit','view','Initiate/Check Status'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitprocsettings'));
+                            $acl->allow('management', 'exit:exitprocsettings', array('index','getdepartments','add','edit','delete','view','Settings'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exittypes'));
+                            $acl->allow('management', 'exit:exittypes', array('index','addpopup','add','edit','delete','view','Exit Types'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:processes'));
                             $acl->allow('management', 'default:processes', array('index','addpopup','editpopup','viewpopup','savecomments','displaycomments','savefeedback','index','addpopup','editpopup','viewpopup','delete','savecomments','displaycomments','savefeedback'));
@@ -1043,16 +1118,25 @@ protected function _getAcl()
                             $acl->allow('manager', 'default:businessunits', array('index','getdeptnames','view','Business Units'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:candidatedetails'));
-                            $acl->allow('manager', 'default:candidatedetails', array('index','addpopup','chkcandidate','uploadfile','deleteresume','download','multipleresume','getvendors','viewpopup','view','CV Management'));
+                            $acl->allow('manager', 'default:candidatedetails', array('index','addpopup','chkcandidate','uploadfile','deleteresume','download','multipleresume','getvendors','viewpopup','view','Candidates'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:clients'));
+                            $acl->allow('manager', 'default:clients', array('index','addpopup','add','edit','delete','view','upload','uploadview','Clients'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('manager', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('manager', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
                             $acl->allow('manager', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','view','Departments'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinarymyincidents'));
+                            $acl->allow('manager', 'default:disciplinarymyincidents', array('index','saveemployeeappeal','getdisciplinaryincidentpdf','edit','view','My Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryteamincidents'));
+                            $acl->allow('manager', 'default:disciplinaryteamincidents', array('index','view','Team Incidents'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:employee'));
-                            $acl->allow('manager', 'default:employee', array('getemprequi','index','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
+                            $acl->allow('manager', 'default:employee', array('getemprequi','index','getmoreemployees','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:feedforwardemployee'));
                             $acl->allow('manager', 'default:feedforwardemployee', array('index','save','edit','view','Appraise Your Manager'));
@@ -1073,7 +1157,7 @@ protected function _getAcl()
 
                                 
 		 $acl->addResource(new Zend_Acl_Resource('default:manageremployeevacations'));
-                            $acl->allow('manager', 'default:manageremployeevacations', array('index','edit','view','Manager Employee Leaves'));
+                            $acl->allow('manager', 'default:manageremployeevacations', array('index','edit','view','Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:mydetails'));
                             $acl->allow('manager', 'default:mydetails', array('index','personaldetailsview','personal','communicationdetailsview','communication','skills','education','experience','leaves','holidays','salarydetailsview','certification','creditcarddetailsview','creditcard','visadetailsview','visa','medicalclaims','disabilitydetailsview','disability','dependency','workeligibilitydetailsview','workeligibility','additionaldetailsedit','jobhistory','documents','assetdetailsview','add','edit','delete','view','My Details'));
@@ -1091,7 +1175,13 @@ protected function _getAcl()
                             $acl->allow('manager', 'default:organisationinfo', array('index','edit_old','saveupdate','uploadpreview','validateorgstartdate','getcompleteorgdata','addorghead','Organization Info'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:pendingleaves'));
-                            $acl->allow('manager', 'default:pendingleaves', array('index','delete','view','My Leaves'));
+                            $acl->allow('manager', 'default:pendingleaves', array('index','delete','view','My Leave'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:policydocuments'));
+                            $acl->allow('manager', 'default:policydocuments', array('index','uploaddoc','deletedocument','addmultiple','uploadmultipledocs','view','View/Manage Policy Documents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:projects'));
+                            $acl->allow('manager', 'default:projects', array('index','viewpopup','editpopup','add','edit','delete','view','upload','uploadview','Projects'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:rejectedrequisitions'));
                             $acl->allow('manager', 'default:rejectedrequisitions', array('index','view','Rejected Requisitions'));
@@ -1100,7 +1190,7 @@ protected function _getAcl()
                             $acl->allow('manager', 'default:requisition', array('index','viewhr','approverequisition','addcandidate','interview','getdepartments','getpositions','viewpopup','getapprreqdata','chkreqforclose','getempreportingmanagers','getemailcount','getapprovers','approverejectrequisition','addpopup','add','edit','delete','view','Openings/Positions'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:scheduleinterviews'));
-                            $acl->allow('manager', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Scheduled Interviews'));
+                            $acl->allow('manager', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Interviews'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:servicerequests'));
                             $servicerequests_add = 'yes';
@@ -1135,6 +1225,12 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('expenses:trips'));
                             $acl->allow('manager', 'expenses:trips', array('index','addpopup','tripstatus','deleteexpense','downloadtrippdf','add','edit','delete','view','Trips'));
 
+		 $acl->addResource(new Zend_Acl_Resource('exit:allexitproc'));
+                            $acl->allow('manager', 'exit:allexitproc', array('index','editpopup','updateexitprocess','assignquestions','add','edit','view','upload','uploadview','All Exit Procedures'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitproc'));
+                            $acl->allow('manager', 'exit:exitproc', array('index','questions','savequestions','add','edit','view','upload','uploadview','Initiate/Check Status'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:emppersonaldetails'));
                             $acl->allow('manager', 'default:emppersonaldetails', array('index','view'));
 
@@ -1197,7 +1293,7 @@ protected function _getAcl()
 }if($role == 4 )
            {
 		 $acl->addResource(new Zend_Acl_Resource('default:addemployeeleaves'));
-                            $acl->allow('hrmanager', 'default:addemployeeleaves', array('index','add','edit','view','Add Employee Leaves'));
+                            $acl->allow('hrmanager', 'default:addemployeeleaves', array('index','add','edit','view','Add Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:agencylist'));
                             $acl->allow('hrmanager', 'default:agencylist', array('index','deletepoc','add','edit','delete','view','Agencies'));
@@ -1208,9 +1304,6 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:appraisalcategory'));
                             $acl->allow('hrmanager', 'default:appraisalcategory', array('index','addpopup','getappraisalcategory','add','edit','delete','view','Parameters'));
 
-		 $acl->addResource(new Zend_Acl_Resource('default:appraisalconfig'));
-                            $acl->allow('hrmanager', 'default:appraisalconfig', array('index','getbunitimplementation','getdepartments','view','Appraisal Settings'));
-
 		 $acl->addResource(new Zend_Acl_Resource('default:appraisalhistoryself'));
                             $acl->allow('hrmanager', 'default:appraisalhistoryself', array('index','view','My Appraisal History'));
 
@@ -1244,6 +1337,9 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:appraisalstatus'));
                             $acl->allow('hrmanager', 'default:appraisalstatus', array('index','manager','managerstatus','checkappraisalimplementation','employee','employeestatus','employeeActi','addlinemanager','displaymanagers','updatelinemanager','view','Employee Status'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:approvedrequisitions'));
+                            $acl->allow('hrmanager', 'default:approvedrequisitions', array('index','edit','view','Approved Requisitions'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:attendancestatuscode'));
                             $acl->allow('hrmanager', 'default:attendancestatuscode', array('index','add','edit','view','Attendance Status'));
 
@@ -1257,17 +1353,32 @@ protected function _getAcl()
                             $acl->allow('hrmanager', 'default:businessunits', array('index','getdeptnames','add','edit','delete','view','Business Units'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:candidatedetails'));
-                            $acl->allow('hrmanager', 'default:candidatedetails', array('index','addpopup','chkcandidate','uploadfile','deleteresume','download','multipleresume','getvendors','viewpopup','add','edit','view','CV Management'));
+                            $acl->allow('hrmanager', 'default:candidatedetails', array('index','addpopup','chkcandidate','uploadfile','deleteresume','download','multipleresume','getvendors','viewpopup','add','edit','view','Candidates'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:categories'));
+                            $acl->allow('hrmanager', 'default:categories', array('index','addnewcategory','add','edit','delete','view','Manage Categories'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:clients'));
+                            $acl->allow('hrmanager', 'default:clients', array('index','addpopup','add','edit','delete','view','upload','uploadview','Clients'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:competencylevel'));
                             $acl->allow('hrmanager', 'default:competencylevel', array('index','addpopup','add','edit','view','Competency Levels'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('hrmanager', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('hrmanager', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
                             $acl->allow('hrmanager', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','add','edit','delete','view','Departments'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryallincidents'));
+                            $acl->allow('hrmanager', 'default:disciplinaryallincidents', array('index','view','All Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinarymyincidents'));
+                            $acl->allow('hrmanager', 'default:disciplinarymyincidents', array('index','saveemployeeappeal','getdisciplinaryincidentpdf','edit','view','My Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryteamincidents'));
+                            $acl->allow('hrmanager', 'default:disciplinaryteamincidents', array('index','view','Team Incidents'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:educationlevelcode'));
                             $acl->allow('hrmanager', 'default:educationlevelcode', array('index','add','edit','view','Education Levels'));
 
@@ -1278,10 +1389,10 @@ protected function _getAcl()
                             $acl->allow('hrmanager', 'default:empconfiguration', array('index','edit','Employee Tabs'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:empleavesummary'));
-                            $acl->allow('hrmanager', 'default:empleavesummary', array('index','statusid','view','Employee Leaves Summary'));
+                            $acl->allow('hrmanager', 'default:empleavesummary', array('index','statusid','view','Employee Leave Summary'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:employee'));
-                            $acl->allow('hrmanager', 'default:employee', array('getemprequi','index','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','add','edit','view','Employees'));
+                            $acl->allow('hrmanager', 'default:employee', array('getemprequi','index','getmoreemployees','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','add','edit','view','Employees'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:employeeleavetypes'));
                             $acl->allow('hrmanager', 'default:employeeleavetypes', array('index','add','edit','view','Leave Types'));
@@ -1329,7 +1440,7 @@ protected function _getAcl()
 
                                 
 		 $acl->addResource(new Zend_Acl_Resource('default:manageremployeevacations'));
-                            $acl->allow('hrmanager', 'default:manageremployeevacations', array('index','edit','view','Manager Employee Leaves'));
+                            $acl->allow('hrmanager', 'default:manageremployeevacations', array('index','edit','view','Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:mydetails'));
                             $acl->allow('hrmanager', 'default:mydetails', array('index','personaldetailsview','personal','communicationdetailsview','communication','skills','education','experience','leaves','holidays','salarydetailsview','certification','creditcarddetailsview','creditcard','visadetailsview','visa','medicalclaims','disabilitydetailsview','disability','dependency','workeligibilitydetailsview','workeligibility','additionaldetailsedit','jobhistory','documents','assetdetailsview','add','edit','delete','view','My Details'));
@@ -1350,11 +1461,17 @@ protected function _getAcl()
                             $acl->allow('hrmanager', 'default:payfrequency', array('index','addpopup','add','edit','view','Pay Frequency'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:pendingleaves'));
-                            $acl->allow('hrmanager', 'default:pendingleaves', array('index','delete','view','My Leaves'));
+                            $acl->allow('hrmanager', 'default:pendingleaves', array('index','delete','view','My Leave'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:policydocuments'));
+                            $acl->allow('hrmanager', 'default:policydocuments', array('index','uploaddoc','deletedocument','addmultiple','uploadmultipledocs','add','edit','delete','view','View/Manage Policy Documents'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:positions'));
                             $acl->allow('hrmanager', 'default:positions', array('index','addpopup','add','edit','view','Positions'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:projects'));
+                            $acl->allow('hrmanager', 'default:projects', array('index','viewpopup','editpopup','add','edit','delete','view','upload','uploadview','Projects'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:rejectedrequisitions'));
                             $acl->allow('hrmanager', 'default:rejectedrequisitions', array('index','view','Rejected Requisitions'));
 
@@ -1368,7 +1485,7 @@ protected function _getAcl()
                             $acl->allow('hrmanager', 'default:requisition', array('index','viewhr','approverequisition','addcandidate','interview','getdepartments','getpositions','viewpopup','getapprreqdata','chkreqforclose','getempreportingmanagers','getemailcount','getapprovers','approverejectrequisition','addpopup','add','edit','delete','view','Openings/Positions'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:scheduleinterviews'));
-                            $acl->allow('hrmanager', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','add','edit','view','Scheduled Interviews'));
+                            $acl->allow('hrmanager', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','add','edit','view','Interviews'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:servicedeskconf'));
                             $acl->allow('hrmanager', 'default:servicedeskconf', array('index','getemployees','getapprover','getbunitimplementation','getassets','add','edit','delete','view','Settings'));
@@ -1395,16 +1512,19 @@ protected function _getAcl()
                             $acl->allow('hrmanager', 'default:structure', array('index','Organization Structure'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:usermanagement'));
-                            $acl->allow('hrmanager', 'default:usermanagement', array('index','saveupdate','getemailofuser','add','edit','view','Manage External Users'));
+                            $acl->allow('hrmanager', 'default:usermanagement', array('index','saveupdate','getemailofuser','add','edit','view','External Users'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:vendors'));
+                            $acl->allow('hrmanager', 'default:vendors', array('index','addpopup','add','edit','delete','view','upload','uploadview','Vendors'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:workeligibilitydoctypes'));
                             $acl->allow('hrmanager', 'default:workeligibilitydoctypes', array('index','addpopup','add','edit','view','Work Eligibility Document Types'));
 
 		 $acl->addResource(new Zend_Acl_Resource('assets:assetcategories'));
-                            $acl->allow('hrmanager', 'assets:assetcategories', array('index','addpopup','addsubcatpopup','assetuserlog','add','edit','delete','view','Assets Category'));
+                            $acl->allow('hrmanager', 'assets:assetcategories', array('index','addpopup','addsubcatpopup','assetuserlog','add','edit','delete','view','Asset Categories'));
 
 		 $acl->addResource(new Zend_Acl_Resource('assets:assets'));
-                            $acl->allow('hrmanager', 'assets:assets', array('index','addpopup','uploadsave','uploaddelete','getsubcategories','deleteimage','downloadimage','getemployeesdata','add','edit','delete','view','Assets'));
+                            $acl->allow('hrmanager', 'assets:assets', array('index','uploadsave','uploaddelete','getsubcategories','deleteimage','downloadimage','getemployeesdata','add','edit','delete','view','Assets'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:advances'));
                             $acl->allow('hrmanager', 'expenses:advances', array('index','getprojects','myadvances','viewmoreadvances','clearadvancesdata','addreturnpopup','add','edit','delete','view','Advances'));
@@ -1413,7 +1533,7 @@ protected function _getAcl()
                             $acl->allow('hrmanager', 'expenses:employeeadvances', array('index','add','edit','delete','view','Employee Advances'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:expensecategories'));
-                            $acl->allow('hrmanager', 'expenses:expensecategories', array('index','Category'));
+                            $acl->allow('hrmanager', 'expenses:expensecategories', array('index','add','edit','delete','view','Category'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:expenses'));
                             $acl->allow('hrmanager', 'expenses:expenses', array('index','clone','addpopup','uploadsave','uploaddelete','displayreceipts','addtrippopup','submitexpense','addreceiptimage','expensestatus','listreportingmangers','viewmoremanagers','forwardexpenseto','downloadexpensepdf','bulkexpenses','getcategories','getprojects','getcurrency','uploadedfiles','add','edit','delete','view','Expenses'));
@@ -1422,14 +1542,29 @@ protected function _getAcl()
                             $acl->allow('hrmanager', 'expenses:myemployeeexpenses', array('index','add','edit','delete','view','My Employee Expenses'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:paymentmode'));
-                            $acl->allow('hrmanager', 'expenses:paymentmode', array('index','Payment Mode'));
+                            $acl->allow('hrmanager', 'expenses:paymentmode', array('index','add','edit','delete','view','Payment Mode'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:receipts'));
                             $acl->allow('hrmanager', 'expenses:receipts', array('index','downloadreceipt','downloadexpensereceipt','deletereceipt','uploadsave','displayreceipts','viewmorereceipts','listexpenses','addreceipttoexpense','viewmoreexpenses','cleardata','showreceiptspopup','listtrips','viewmoretrips','addexpensetotrip','add','edit','delete','view','Receipts'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:trips'));
                             $acl->allow('hrmanager', 'expenses:trips', array('index','addpopup','tripstatus','deleteexpense','downloadtrippdf','add','edit','delete','view','Trips'));
 
+		 $acl->addResource(new Zend_Acl_Resource('exit:allexitproc'));
+                            $acl->allow('hrmanager', 'exit:allexitproc', array('index','editpopup','updateexitprocess','assignquestions','add','edit','view','upload','uploadview','All Exit Procedures'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:configureexitqs'));
+                            $acl->allow('hrmanager', 'exit:configureexitqs', array('index','addpopup','add','edit','delete','view','upload','uploadview','Exit Interview Questions'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitproc'));
+                            $acl->allow('hrmanager', 'exit:exitproc', array('index','questions','savequestions','add','edit','view','upload','uploadview','Initiate/Check Status'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitprocsettings'));
+                            $acl->allow('hrmanager', 'exit:exitprocsettings', array('index','getdepartments','add','edit','delete','view','upload','uploadview','Settings'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exittypes'));
+                            $acl->allow('hrmanager', 'exit:exittypes', array('index','addpopup','add','edit','delete','view','upload','uploadview','Exit Types'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:processes'));
                             $acl->allow('hrmanager', 'default:processes', array('index','addpopup','editpopup','viewpopup','savecomments','displaycomments','savefeedback','index','addpopup','editpopup','viewpopup','delete','savecomments','displaycomments','savefeedback'));
 
@@ -1533,14 +1668,23 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:businessunits'));
                             $acl->allow('employee', 'default:businessunits', array('index','getdeptnames','view','Business Units'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:clients'));
+                            $acl->allow('employee', 'default:clients', array('index','addpopup','add','edit','delete','view','upload','uploadview','Clients'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('employee', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('employee', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
                             $acl->allow('employee', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','view','Departments'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinarymyincidents'));
+                            $acl->allow('employee', 'default:disciplinarymyincidents', array('index','saveemployeeappeal','getdisciplinaryincidentpdf','edit','view','My Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryteamincidents'));
+                            $acl->allow('employee', 'default:disciplinaryteamincidents', array('index','view','Team Incidents'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:employee'));
-                            $acl->allow('employee', 'default:employee', array('getemprequi','index','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
+                            $acl->allow('employee', 'default:employee', array('getemprequi','index','getmoreemployees','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:feedforwardemployee'));
                             $acl->allow('employee', 'default:feedforwardemployee', array('index','save','edit','view','Appraise Your Manager'));
@@ -1561,7 +1705,7 @@ protected function _getAcl()
 
                                 
 		 $acl->addResource(new Zend_Acl_Resource('default:manageremployeevacations'));
-                            $acl->allow('employee', 'default:manageremployeevacations', array('index','edit','view','Manager Employee Leaves'));
+                            $acl->allow('employee', 'default:manageremployeevacations', array('index','edit','view','Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:mydetails'));
                             $acl->allow('employee', 'default:mydetails', array('index','personaldetailsview','personal','communicationdetailsview','communication','skills','education','experience','leaves','holidays','salarydetailsview','certification','creditcarddetailsview','creditcard','visadetailsview','visa','medicalclaims','disabilitydetailsview','disability','dependency','workeligibilitydetailsview','workeligibility','additionaldetailsedit','jobhistory','documents','assetdetailsview','add','edit','delete','view','My Details'));
@@ -1579,10 +1723,16 @@ protected function _getAcl()
                             $acl->allow('employee', 'default:organisationinfo', array('index','edit_old','saveupdate','uploadpreview','validateorgstartdate','getcompleteorgdata','addorghead','Organization Info'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:pendingleaves'));
-                            $acl->allow('employee', 'default:pendingleaves', array('index','delete','view','My Leaves'));
+                            $acl->allow('employee', 'default:pendingleaves', array('index','delete','view','My Leave'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:policydocuments'));
+                            $acl->allow('employee', 'default:policydocuments', array('index','uploaddoc','deletedocument','addmultiple','uploadmultipledocs','view','View/Manage Policy Documents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:projects'));
+                            $acl->allow('employee', 'default:projects', array('index','viewpopup','editpopup','add','edit','delete','view','upload','uploadview','Projects'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:scheduleinterviews'));
-                            $acl->allow('employee', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Scheduled Interviews'));
+                            $acl->allow('employee', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Interviews'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:servicerequests'));
                             $servicerequests_add = 'yes';
@@ -1614,6 +1764,12 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('expenses:trips'));
                             $acl->allow('employee', 'expenses:trips', array('index','addpopup','tripstatus','deleteexpense','downloadtrippdf','add','edit','delete','view','Trips'));
 
+		 $acl->addResource(new Zend_Acl_Resource('exit:allexitproc'));
+                            $acl->allow('employee', 'exit:allexitproc', array('index','editpopup','updateexitprocess','assignquestions','add','edit','view','upload','uploadview','All Exit Procedures'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitproc'));
+                            $acl->allow('employee', 'exit:exitproc', array('index','questions','savequestions','add','edit','view','upload','uploadview','Initiate/Check Status'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:emppersonaldetails'));
                             $acl->allow('employee', 'default:emppersonaldetails', array('index','view','index','view','edit'));
 
@@ -1675,11 +1831,20 @@ protected function _getAcl()
                             $acl->allow('employee', 'default:apprreqcandidates', array('index','viewpopup'));
 }if($role == 6 )
            {
+		 $acl->addResource(new Zend_Acl_Resource('default:announcements'));
+                            $acl->allow('user', 'default:announcements', array('index','getdepts','uploadsave','uploaddelete','view','Announcements'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:businessunits'));
+                            $acl->allow('user', 'default:businessunits', array('index','getdeptnames','view','Business Units'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:clients'));
+                            $acl->allow('user', 'default:clients', array('index','addpopup','add','edit','delete','view','upload','uploadview','Clients'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('user', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('user', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
-		 $acl->addResource(new Zend_Acl_Resource('default:empscreening'));
-                            $acl->allow('user', 'default:empscreening', array('index','getemployeedata','getagencylist','getpocdata','forcedfullupdate','checkscreeningstatus','uploadfeedback','download','deletefeedback','edit','view','Employee/Candidate Screening'));
+		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
+                            $acl->allow('user', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','view','Departments'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:heirarchy'));
                             $acl->allow('user', 'default:heirarchy', array('index','addlist','editlist','saveadddata','saveeditdata','deletelist','Organization Hierarchy'));
@@ -1690,15 +1855,33 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:organisationinfo'));
                             $acl->allow('user', 'default:organisationinfo', array('index','edit_old','saveupdate','uploadpreview','validateorgstartdate','getcompleteorgdata','addorghead','Organization Info'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:projects'));
+                            $acl->allow('user', 'default:projects', array('index','viewpopup','editpopup','add','edit','delete','view','upload','uploadview','Projects'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:structure'));
                             $acl->allow('user', 'default:structure', array('index','Organization Structure'));
 
+		 $acl->addResource(new Zend_Acl_Resource('exit:allexitproc'));
+                            $acl->allow('user', 'exit:allexitproc', array('index','editpopup','updateexitprocess','assignquestions','add','edit','view','upload','uploadview','All Exit Procedures'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitproc'));
+                            $acl->allow('user', 'exit:exitproc', array('index','questions','savequestions','add','edit','view','upload','uploadview','Initiate/Check Status'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:processes'));
                             $acl->allow('user', 'default:processes', array('index','editpopup','viewpopup','savecomments','displaycomments','savefeedback'));
 }if($role == 7 )
            {
+		 $acl->addResource(new Zend_Acl_Resource('default:announcements'));
+                            $acl->allow('agency', 'default:announcements', array('index','getdepts','uploadsave','uploaddelete','view','Announcements'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:businessunits'));
+                            $acl->allow('agency', 'default:businessunits', array('index','getdeptnames','view','Business Units'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('agency', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('agency', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
+                            $acl->allow('agency', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','view','Departments'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:empscreening'));
                             $acl->allow('agency', 'default:empscreening', array('index','getemployeedata','getagencylist','getpocdata','forcedfullupdate','checkscreeningstatus','uploadfeedback','download','deletefeedback','edit','view','Employee/Candidate Screening'));
@@ -1740,6 +1923,9 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('default:businessunits'));
                             $acl->allow('sysadmin', 'default:businessunits', array('index','getdeptnames','view','Business Units'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:categories'));
+                            $acl->allow('sysadmin', 'default:categories', array('index','addnewcategory','add','edit','view','Manage Categories'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:cities'));
                             $cities_add = 'yes';
                                 if($this->id_param == '' && $cities_add == 'yes')
@@ -1749,26 +1935,41 @@ protected function _getAcl()
                                     $acl->allow('sysadmin','default:cities', array('index','getcitiescand','addpopup','addnewcity','add','delete','view','Cities'));
 
                                 
+		 $acl->addResource(new Zend_Acl_Resource('default:clients'));
+                            $acl->allow('sysadmin', 'default:clients', array('index','addpopup','add','edit','delete','view','upload','uploadview','Clients'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:countries'));
-                            $acl->allow('sysadmin', 'default:countries', array('index','saveupdate','getcountrycode','addpopup','addnewcountry','add','edit','delete','view','Countries'));
+                            $countries_add = 'yes';
+                                if($this->id_param == '' && $countries_add == 'yes')
+                                    $acl->allow('sysadmin','default:countries', array('index','saveupdate','getcountrycode','addpopup','addnewcountry','add','delete','view','Countries','edit'));
+
+                                else
+                                    $acl->allow('sysadmin','default:countries', array('index','saveupdate','getcountrycode','addpopup','addnewcountry','add','delete','view','Countries'));
 
+                                
 		 $acl->addResource(new Zend_Acl_Resource('default:currency'));
                             $acl->allow('sysadmin', 'default:currency', array('index','addpopup','gettargetcurrency','add','edit','delete','view','Currencies'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:currencyconverter'));
                             $acl->allow('sysadmin', 'default:currencyconverter', array('index','add','edit','delete','view','Currency Conversions'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('sysadmin', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('sysadmin', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
                             $acl->allow('sysadmin', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','view','Departments'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinarymyincidents'));
+                            $acl->allow('sysadmin', 'default:disciplinarymyincidents', array('index','saveemployeeappeal','getdisciplinaryincidentpdf','edit','view','My Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryteamincidents'));
+                            $acl->allow('sysadmin', 'default:disciplinaryteamincidents', array('index','view','Team Incidents'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:emailcontacts'));
                             $acl->allow('sysadmin', 'default:emailcontacts', array('index','getgroupoptions','getmailcnt','add','edit','delete','view','Email Contacts'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:employee'));
-                            $acl->allow('sysadmin', 'default:employee', array('getemprequi','index','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
+                            $acl->allow('sysadmin', 'default:employee', array('getemprequi','index','getmoreemployees','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:ethniccode'));
                             $acl->allow('sysadmin', 'default:ethniccode', array('index','saveupdate','addpopup','add','edit','delete','view','Ethnic Codes'));
@@ -1804,7 +2005,7 @@ protected function _getAcl()
                             $acl->allow('sysadmin', 'default:licensetype', array('index','add','edit','delete','view','License Types'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:manageremployeevacations'));
-                            $acl->allow('sysadmin', 'default:manageremployeevacations', array('index','edit','view','Manager Employee Leaves'));
+                            $acl->allow('sysadmin', 'default:manageremployeevacations', array('index','edit','view','Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:maritalstatus'));
                             $acl->allow('sysadmin', 'default:maritalstatus', array('index','saveupdate','addpopup','add','edit','delete','view','Marital Status'));
@@ -1834,19 +2035,25 @@ protected function _getAcl()
                             $acl->allow('sysadmin', 'default:organisationinfo', array('index','edit_old','saveupdate','uploadpreview','validateorgstartdate','getcompleteorgdata','addorghead','Organization Info'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:pendingleaves'));
-                            $acl->allow('sysadmin', 'default:pendingleaves', array('index','delete','view','My Leaves'));
+                            $acl->allow('sysadmin', 'default:pendingleaves', array('index','delete','view','My Leave'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:policydocuments'));
+                            $acl->allow('sysadmin', 'default:policydocuments', array('index','uploaddoc','deletedocument','addmultiple','uploadmultipledocs','add','edit','view','View/Manage Policy Documents'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:prefix'));
                             $acl->allow('sysadmin', 'default:prefix', array('index','saveupdate','addpopup','add','edit','delete','view','Prefixes'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:projects'));
+                            $acl->allow('sysadmin', 'default:projects', array('index','viewpopup','editpopup','add','edit','delete','view','upload','uploadview','Projects'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:racecode'));
                             $acl->allow('sysadmin', 'default:racecode', array('index','saveupdate','addpopup','add','edit','delete','view','Race Codes'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:roles'));
                             $acl->allow('sysadmin', 'default:roles', array('index','saveupdate','getgroupmenu','add','edit','delete','view','Roles & Privileges'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:scheduleinterviews'));
-                            $acl->allow('sysadmin', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Scheduled Interviews'));
+                            $acl->allow('sysadmin', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Interviews'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:servicerequests'));
                             $servicerequests_add = 'yes';
@@ -1876,26 +2083,41 @@ protected function _getAcl()
                             $acl->allow('sysadmin', 'default:timezone', array('index','saveupdate','addpopup','add','edit','delete','view','Time Zones'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:usermanagement'));
-                            $acl->allow('sysadmin', 'default:usermanagement', array('index','saveupdate','getemailofuser','add','edit','view','Manage External Users'));
+                            $acl->allow('sysadmin', 'default:usermanagement', array('index','saveupdate','getemailofuser','add','edit','view','External Users'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:vendors'));
+                            $acl->allow('sysadmin', 'default:vendors', array('index','addpopup','add','edit','delete','view','upload','uploadview','Vendors'));
 
 		 $acl->addResource(new Zend_Acl_Resource('assets:assetcategories'));
-                            $acl->allow('sysadmin', 'assets:assetcategories', array('index','addpopup','addsubcatpopup','assetuserlog','add','edit','delete','view','Assets Category'));
+                            $acl->allow('sysadmin', 'assets:assetcategories', array('index','addpopup','addsubcatpopup','assetuserlog','add','edit','delete','view','Asset Categories'));
 
 		 $acl->addResource(new Zend_Acl_Resource('assets:assets'));
-                            $acl->allow('sysadmin', 'assets:assets', array('index','addpopup','uploadsave','uploaddelete','getsubcategories','deleteimage','downloadimage','getemployeesdata','add','edit','delete','view','Assets'));
+                            $acl->allow('sysadmin', 'assets:assets', array('index','uploadsave','uploaddelete','getsubcategories','deleteimage','downloadimage','getemployeesdata','add','edit','delete','view','Assets'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:advances'));
                             $acl->allow('sysadmin', 'expenses:advances', array('index','getprojects','myadvances','viewmoreadvances','clearadvancesdata','addreturnpopup','add','edit','delete','view','Advances'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:employeeadvances'));
                             $acl->allow('sysadmin', 'expenses:employeeadvances', array('index','add','edit','delete','view','Employee Advances'));
 
+		 $acl->addResource(new Zend_Acl_Resource('expenses:expenses'));
+                            $acl->allow('sysadmin', 'expenses:expenses', array('index','clone','addpopup','uploadsave','uploaddelete','displayreceipts','addtrippopup','submitexpense','addreceiptimage','expensestatus','listreportingmangers','viewmoremanagers','forwardexpenseto','downloadexpensepdf','bulkexpenses','getcategories','getprojects','getcurrency','uploadedfiles','add','edit','delete','view','Expenses'));
+
+		 $acl->addResource(new Zend_Acl_Resource('expenses:myemployeeexpenses'));
+                            $acl->allow('sysadmin', 'expenses:myemployeeexpenses', array('index','add','edit','delete','view','My Employee Expenses'));
+
 		 $acl->addResource(new Zend_Acl_Resource('expenses:receipts'));
                             $acl->allow('sysadmin', 'expenses:receipts', array('index','downloadreceipt','downloadexpensereceipt','deletereceipt','uploadsave','displayreceipts','viewmorereceipts','listexpenses','addreceipttoexpense','viewmoreexpenses','cleardata','showreceiptspopup','listtrips','viewmoretrips','addexpensetotrip','add','edit','delete','view','Receipts'));
 
 		 $acl->addResource(new Zend_Acl_Resource('expenses:trips'));
                             $acl->allow('sysadmin', 'expenses:trips', array('index','addpopup','tripstatus','deleteexpense','downloadtrippdf','add','edit','delete','view','Trips'));
 
+		 $acl->addResource(new Zend_Acl_Resource('exit:allexitproc'));
+                            $acl->allow('sysadmin', 'exit:allexitproc', array('index','editpopup','updateexitprocess','assignquestions','add','edit','view','upload','uploadview','All Exit Procedures'));
+
+		 $acl->addResource(new Zend_Acl_Resource('exit:exitproc'));
+                            $acl->allow('sysadmin', 'exit:exitproc', array('index','questions','savequestions','add','edit','view','upload','uploadview','Initiate/Check Status'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:managemenus'));
                             $acl->allow('sysadmin', 'default:managemenus', array('index','save','index','save'));
 
@@ -1979,13 +2201,19 @@ protected function _getAcl()
                             $acl->allow('lead', 'default:businessunits', array('index','getdeptnames','view','Business Units'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('lead', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
+                        $acl->allow('lead', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork','employeeimageupdate'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
                             $acl->allow('lead', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','view','Departments'));
 
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinarymyincidents'));
+                            $acl->allow('lead', 'default:disciplinarymyincidents', array('index','saveemployeeappeal','getdisciplinaryincidentpdf','edit','view','My Incidents'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:disciplinaryteamincidents'));
+                            $acl->allow('lead', 'default:disciplinaryteamincidents', array('index','view','Team Incidents'));
+
 		 $acl->addResource(new Zend_Acl_Resource('default:employee'));
-                            $acl->allow('lead', 'default:employee', array('getemprequi','index','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
+                            $acl->allow('lead', 'default:employee', array('getemprequi','index','getmoreemployees','changeorghead','getdepartments','getpositions','getempreportingmanagers','makeactiveinactive','changereportingmanager','addemppopup','uploadexcel','getindividualempdetails','view','Employees'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:feedforwardemployee'));
                             $acl->allow('lead', 'default:feedforwardemployee', array('index','save','edit','view','Appraise Your Manager'));
@@ -2006,7 +2234,7 @@ protected function _getAcl()
 
                                 
 		 $acl->addResource(new Zend_Acl_Resource('default:manageremployeevacations'));
-                            $acl->allow('lead', 'default:manageremployeevacations', array('index','edit','view','Manager Employee Leaves'));
+                            $acl->allow('lead', 'default:manageremployeevacations', array('index','edit','view','Employee Leave'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:mydetails'));
                             $acl->allow('lead', 'default:mydetails', array('index','personaldetailsview','personal','communicationdetailsview','communication','skills','education','experience','leaves','holidays','salarydetailsview','certification','creditcarddetailsview','creditcard','visadetailsview','visa','medicalclaims','disabilitydetailsview','disability','dependency','workeligibilitydetailsview','workeligibility','additionaldetailsedit','jobhistory','documents','assetdetailsview','add','edit','delete','view','My Details'));
@@ -2024,10 +2252,13 @@ protected function _getAcl()
                             $acl->allow('lead', 'default:organisationinfo', array('index','edit_old','saveupdate','uploadpreview','validateorgstartdate','getcompleteorgdata','addorghead','Organization Info'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:pendingleaves'));
-                            $acl->allow('lead', 'default:pendingleaves', array('index','delete','view','My Leaves'));
+                            $acl->allow('lead', 'default:pendingleaves', array('index','delete','view','My Leave'));
+
+		 $acl->addResource(new Zend_Acl_Resource('default:policydocuments'));
+                            $acl->allow('lead', 'default:policydocuments', array('index','uploaddoc','deletedocument','addmultiple','uploadmultipledocs','view','View/Manage Policy Documents'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:scheduleinterviews'));
-                            $acl->allow('lead', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Scheduled Interviews'));
+                            $acl->allow('lead', 'default:scheduleinterviews', array('candidatepopup','index','downloadresume','getcandidates','edit','view','Interviews'));
 
 		 $acl->addResource(new Zend_Acl_Resource('default:servicerequests'));
                             $servicerequests_add = 'yes';
@@ -2047,6 +2278,12 @@ protected function _getAcl()
 		 $acl->addResource(new Zend_Acl_Resource('expenses:employeeadvances'));
                             $acl->allow('lead', 'expenses:employeeadvances', array('index','add','edit','delete','view','Employee Advances'));
 
+		 $acl->addResource(new Zend_Acl_Resource('expenses:expenses'));
+                            $acl->allow('lead', 'expenses:expenses', array('index','clone','addpopup','uploadsave','uploaddelete','displayreceipts','addtrippopup','submitexpense','addreceiptimage','expensestatus','listreportingmangers','viewmoremanagers','forwardexpenseto','downloadexpensepdf','bulkexpenses','getcategories','getprojects','getcurrency','uploadedfiles','add','edit','delete','view','Expenses'));
+
+		 $acl->addResource(new Zend_Acl_Resource('expenses:myemployeeexpenses'));
+                            $acl->allow('lead', 'expenses:myemployeeexpenses', array('index','add','edit','delete','view','My Employee Expenses'));
+
 		 $acl->addResource(new Zend_Acl_Resource('expenses:receipts'));
                             $acl->allow('lead', 'expenses:receipts', array('index','downloadreceipt','downloadexpensereceipt','deletereceipt','uploadsave','displayreceipts','viewmorereceipts','listexpenses','addreceipttoexpense','viewmoreexpenses','cleardata','showreceiptspopup','listtrips','viewmoretrips','addexpensetotrip','add','edit','delete','view','Receipts'));
 
@@ -2112,134 +2349,6 @@ protected function _getAcl()
 
 		 $acl->addResource(new Zend_Acl_Resource('default:apprreqcandidates'));
                             $acl->allow('lead', 'default:apprreqcandidates', array('index','viewpopup'));
-}if($role == 10 )
-           {
-		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('DHead', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:index'));
-                        $acl->allow('DHead', 'default:index', array('index','loginpopupsave','logout','clearsessionarray','forcelogout','browserfailure','sendpassword','updatecontactnumber','getstates','getstatesnormal','getcities','getcitiesnormal','getdepartments','getpositions','gettargetcurrency','calculatedays','calculatebusinessdays','calculatecalendardays','fromdatetodate','fromdatetodateorg','validateorgheadjoiningdate','medicalclaimdates','gettimeformat','chkcurrenttime','popup','createorremoveshortcut','sessiontour','getissuingauthority','setsessionval','checkisactivestatus','updatetheme','welcome','getmultidepts','getmultiemps'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:processes'));
-                            $acl->allow('DHead', 'default:processes', array('index','addpopup','editpopup','viewpopup','savecomments','displaycomments','savefeedback','index','addpopup','editpopup','viewpopup','delete','savecomments','displaycomments','savefeedback'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:interviewrounds'));
-                            $acl->allow('DHead', 'default:interviewrounds', array('index','addpopup','editpopup','viewpopup','index','addpopup','editpopup','viewpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empperformanceappraisal'));
-                            $acl->allow('DHead', 'default:empperformanceappraisal', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:emppayslips'));
-                            $acl->allow('DHead', 'default:emppayslips', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empbenefits'));
-                            $acl->allow('DHead', 'default:empbenefits', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:emprequisitiondetails'));
-                            $acl->allow('DHead', 'default:emprequisitiondetails', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empremunerationdetails'));
-                            $acl->allow('DHead', 'default:empremunerationdetails', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empsecuritycredentials'));
-                            $acl->allow('DHead', 'default:empsecuritycredentials', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:apprreqcandidates'));
-                            $acl->allow('DHead', 'default:apprreqcandidates', array('index','viewpopup','index','viewpopup'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:emppersonaldetails'));
-                            $acl->allow('DHead', 'default:emppersonaldetails', array('index','view','index','view','edit'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:employeedocs'));
-                            $acl->allow('DHead', 'default:employeedocs', array('index','view','save','update','uploadsave','uploaddelete','downloadfiles','index','view','save','delete','edit','update','uploadsave','uploaddelete','downloadfiles'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empcommunicationdetails'));
-                            $acl->allow('DHead', 'default:empcommunicationdetails', array('index','view','index','view','edit'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:trainingandcertificationdetails'));
-                            $acl->allow('DHead', 'default:trainingandcertificationdetails', array('index','view','addpopup','editpopup','viewpopup','index','edit','view','addpopup','editpopup','viewpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:experiencedetails'));
-                            $acl->allow('DHead', 'default:experiencedetails', array('index','view','addpopup','editpopup','viewpopup','index','edit','view','addpopup','editpopup','viewpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:educationdetails'));
-                            $acl->allow('DHead', 'default:educationdetails', array('index','view','addpopup','viewpopup','editpopup','index','edit','view','addpopup','viewpopup','editpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:medicalclaims'));
-                            $acl->allow('DHead', 'default:medicalclaims', array('index','addpopup','viewpopup','editpopup','view','index','edit','addpopup','viewpopup','editpopup','delete','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empleaves'));
-                            $acl->allow('DHead', 'default:empleaves', array('index','view','viewpopup','index','edit','view','viewpopup'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empskills'));
-                            $acl->allow('DHead', 'default:empskills', array('index','view','addpopup','viewpopup','editpopup','index','edit','view','addpopup','viewpopup','editpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:disabilitydetails'));
-                            $acl->allow('DHead', 'default:disabilitydetails', array('index','view','index','add','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:workeligibilitydetails'));
-                            $acl->allow('DHead', 'default:workeligibilitydetails', array('index','view','index','add','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empadditionaldetails'));
-                            $acl->allow('DHead', 'default:empadditionaldetails', array('index','view','addpopup','viewpopup','editpopup','index','edit','view','addpopup','viewpopup','editpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:visaandimmigrationdetails'));
-                            $acl->allow('DHead', 'default:visaandimmigrationdetails', array('index','view','addpopup','editpopup','viewpopup','index','edit','view','addpopup','editpopup','viewpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:creditcarddetails'));
-                            $acl->allow('DHead', 'default:creditcarddetails', array('index','view','index','add','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:dependencydetails'));
-                            $acl->allow('DHead', 'default:dependencydetails', array('index','view','addpopup','editpopup','viewpopup','index','edit','view','addpopup','editpopup','viewpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empholidays'));
-                            $acl->allow('DHead', 'default:empholidays', array('index','view','viewpopup','index','edit','view','viewpopup'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empjobhistory'));
-                            $acl->allow('DHead', 'default:empjobhistory', array('index','view','addpopup','viewpopup','editpopup','index','edit','view','addpopup','viewpopup','editpopup','delete'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:assetdetails'));
-                            $acl->allow('DHead', 'default:assetdetails', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empsalarydetails'));
-                            $acl->allow('DHead', 'default:empsalarydetails', array('index','view','index','edit','view'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:logmanager'));
-                            $acl->allow('DHead', 'default:logmanager', array('index','view','empnamewithidauto','index','view','empnamewithidauto'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:userloginlog'));
-                            $acl->allow('DHead', 'default:userloginlog', array('index','empnameauto','empidauto','empipaddressauto','empemailauto','index','empnameauto','empidauto','empipaddressauto','empemailauto'));
-}if($role == 11 )
-           {
-		 $acl->addResource(new Zend_Acl_Resource('default:announcements'));
-                            $acl->allow('ExAgency', 'default:announcements', array('index','getdepts','uploadsave','uploaddelete','view','Announcements'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:businessunits'));
-                            $acl->allow('ExAgency', 'default:businessunits', array('index','getdeptnames','view','Business Units'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:dashboard'));
-                        $acl->allow('ExAgency', 'default:dashboard', array('index','saveuserdashboard','getwidgtes','upgradeapplication','emailsettings','changepassword','editpassword','update','uploadpreview','viewprofile','viewsettings','savemenuwidgets','getmenuname','fetchmenuname','getnavids','getopeningpositondate','menuwork'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:departments'));
-                            $acl->allow('ExAgency', 'default:departments', array('index','viewpopup','editpopup','getdepartments','getempnames','view','Departments'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:empscreening'));
-                            $acl->allow('ExAgency', 'default:empscreening', array('index','getemployeedata','getagencylist','getpocdata','forcedfullupdate','checkscreeningstatus','uploadfeedback','download','deletefeedback','edit','view','Employee/Candidate Screening'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:heirarchy'));
-                            $acl->allow('ExAgency', 'default:heirarchy', array('index','addlist','editlist','saveadddata','saveeditdata','deletelist','Organization Hierarchy'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:index'));
-                        $acl->allow('ExAgency', 'default:index', array('index','loginpopupsave','logout','clearsessionarray','forcelogout','browserfailure','sendpassword','updatecontactnumber','getstates','getstatesnormal','getcities','getcitiesnormal','getdepartments','getpositions','gettargetcurrency','calculatedays','calculatebusinessdays','calculatecalendardays','fromdatetodate','fromdatetodateorg','validateorgheadjoiningdate','medicalclaimdates','gettimeformat','chkcurrenttime','popup','createorremoveshortcut','sessiontour','getissuingauthority','setsessionval','checkisactivestatus','updatetheme','welcome','getmultidepts','getmultiemps'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:organisationinfo'));
-                            $acl->allow('ExAgency', 'default:organisationinfo', array('index','edit_old','saveupdate','uploadpreview','validateorgstartdate','getcompleteorgdata','addorghead','Organization Info'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:structure'));
-                            $acl->allow('ExAgency', 'default:structure', array('index','Organization Structure'));
-
-		 $acl->addResource(new Zend_Acl_Resource('default:processes'));
-                            $acl->allow('ExAgency', 'default:processes', array('index','editpopup','viewpopup','savecomments','displaycomments','savefeedback'));
 }
 
      // setup acl in the registry for more

--- application/modules/default/views/scripts/businessunits/view.phtml ---
@@ -53,19 +53,6 @@ sapp_Helper::viewBody('nor','Street Address 3',(!empty($this->data['address3']))
 sapp_Helper::viewFooter();
 ?>
 				
-					<div class="new-form-ui-submit">
-						<?php //if(($this->editpermission == 'Yes')) { ?>
-						<!--<input type="submit" onclick="changeeditscreen('<?php //echo $this->controllername;?>',<?php //echo $this->id;?>);" value="Edit" />
-							<button onclick="window.location.href='<?php //echo BASE_URL; ?>businessunits';" type="button" >Cancel</button> -->
-					<?php ?>
-						   <?php //}
-						  // else{
-							?>
-							<!--<input type="button" onclick="window.location.href='<?php //echo BASE_URL; ?>businessunits';" type="button"  value="Back"  /> -->
-						   <?php //} ?>
-						
-					</div>
-			
 		
 		<?php 
 		if($this->deptData>0) { 

--- application/modules/default/views/scripts/candidatedetails/add.phtml ---
@@ -362,20 +362,9 @@ $msgarray = $candidate_details_view_helper->trimMessages($this->msgarray);
 <script type="text/javascript" language="javascript">
 var yearrange = <?php echo "'".YEAR.':'.date('Y')."'"; ?>;
 $(document).ready(function(){
-	var mobilevalidation=$('#errors-contact_number').html();
-	var emailvalidation=$('#errors-errors-emailid').html();
 
-	if((mobilevalidation != "" || mobilevalidation != 'undefined') )
-	{
-	
-		$('#div-candidate-form').hide();
-		$('#div-upload-resume').show();
-		$('input[name="resume-file"]').css('position', 'absolute');
-		$('#selected_option').val('upload-resume');
-		$('#submit-button2').hide();
-		$('#candidate-form').removeClass('act');
-	}
-	if(emailvalidation != "" || emailvalidation != 'undefined')
+	var  selected_option = $("#selected_option").val();
+	 if(selected_option == "upload-resume")
 	{
 		$('#div-candidate-form').hide();
 		$('#div-upload-resume').show();
@@ -384,6 +373,7 @@ $(document).ready(function(){
 		$('#submit-button2').hide();
 		$('#candidate-form').removeClass('act');
 	}
+
 	var reqValue = $('#source').val();
 	if(reqValue=='Vendor')
 	{
@@ -448,7 +438,7 @@ $(document).ready(function(){
     $(window).resize(function() {
         checkWidth();
     });
-    
+/*     
     $('#submit-button2').click(function(){
         $('.errors').remove();    
         
@@ -493,7 +483,7 @@ $(document).ready(function(){
             $.unblockUI();
             return false;
         }
-    });
+    }); */
     
 });//end of ready function
 </script>
\ No newline at end of file

--- application/modules/default/views/scripts/employee/add.phtml ---
@@ -348,7 +348,7 @@ if(!empty($this->msgarray) && isset($this->msgarray))
 				</div>
 				
 				<div class="new-form-ui">
-				  <label>Date of Leaving  <img class="tooltip" title="<?php echo DATE_DESCRIPTION;?>" src="<?php echo $this->baseUrl().'/public/media/';?>images/help.png"></label>
+				  <label>Date of Leaving  <img class="tooltip" title="Select left/resigned/suspended as the employment status to activate this field" src="<?php echo $this->baseUrl().'/public/media/';?>images/help.png"></label>
 				<div class="division"><?php echo $this->form->date_of_leaving; ?></div>				
 				<?php if(isset($this->msgarray['date_of_leaving'])){?>
 				   <span class="errors" id="errors-<?php echo $this->form->date_of_leaving->getId(); ?>"><?php echo $this->msgarray['date_of_leaving'];?></span>

--- application/modules/default/views/scripts/employee/edit.phtml ---
@@ -176,7 +176,7 @@ $report_opt = $this->report_opt;
                                 echo $this->form->disp_requi; ?></div>
                             </div>
                             
-                            <?php if($this->data['is_orghead'] == 0) {?>
+                            <?php if($this->data['is_orghead'] == 0) { ?>
 								<div class="new-form-ui">
 	                                <label class="required"><?php echo $this->form->emprole->getLabel(); ?></label>
 	                                <div class="division"><?php echo $this->form->emprole; ?>
@@ -299,7 +299,7 @@ $report_opt = $this->report_opt;
                         if($this->data['is_orghead'] == 0){
                         ?>
 				<div class="new-form-ui">
-				  <label>Date of Leaving <img class="tooltip" title="<?php echo DATE_DESCRIPTION;?>" src="<?php echo $this->baseUrl().'/public/media/';?>images/help.png"></label>
+				  <label>Date of Leaving <img class="tooltip" title="Select left/resigned/suspended as the employment status to activate this field" src="<?php echo $this->baseUrl().'/public/media/';?>images/help.png"></label>
 				<div class="division"><?php echo $this->form->date_of_leaving; ?></div>
 				<span class="errors" id="errors-date_of_leaving" style="display:none;"></span>
 				<?php if(isset($this->msgarray['date_of_leaving'])){?>

--- application/modules/default/views/scripts/employee/editappraisal.phtml ---
@@ -180,7 +180,7 @@
 				</div>
 				
 				<div class="new-form-ui">
-				  <label id="lbl_rm">Line Manager</label>
+				  <label id="lbl_rm">Reporting Manager</label>
 				<div class="division"><?php echo $this->form->reporting_manager; ?></div>
 				
 				<?php if(isset($this->msgarray['reporting_manager'])){?>
@@ -404,7 +404,7 @@ var yearrange = <?php echo "'".date("Y", strtotime("-30 years")).':'.date('Y')."
         $('#errors-reporting_manager').remove();
         if($.trim($('#reporting_manager').val()) == '')
         {
-            $('#reporting_manager').parent().append("<span class='errors' id='errors-reporting_manager'>Please select line manager.</span>");
+            $('#reporting_manager').parent().append("<span class='errors' id='errors-reporting_manager'>Please select reporting manager.</span>");
         }
         else
         {

--- application/modules/default/views/scripts/employee/getmoreemployees.ajax.phtml ---
@@ -1,5 +1,20 @@
   <script src="<?php echo EXPENSES_MEDIA_PATH;?>js/materialize.js"></script>  
-<?php $baseUrl = $this->serverUrl().$this->baseUrl();?>
+<?php 
+$auth = Zend_Auth::getInstance();
+if($auth->hasIdentity()){
+	$loginUserId = $auth->getStorage()->read()->id;
+	$loginuserRole = $auth->getStorage()->read()->emprole;
+	$loginuserGroup = $auth->getStorage()->read()->group_id;
+}
+ $baseUrl = $this->serverUrl().$this->baseUrl();
+  if($this->empflag=='myemployees')
+  {
+	  $roleflag= MYEMPLOYEES;
+  }
+  else{
+	  $roleflag= EMPLOYEE;
+  }
+?>
 <?php if($this->totalcount>0)  {?>
 
     
@@ -17,21 +32,29 @@ foreach($data as $emp)
                 <div class="li-actions"> <a class='dropdown-button dottedbtn' href='#' data-activates='actdbtn-<?php echo $emp['id'];?>'><i class="fa fa-ellipsis-v" aria-hidden="true"></i></a>
                     <!-- Dropdown Structure -->
                     <ul id='actdbtn-<?php echo $emp['id'];?>' class='dropdown-content'>
-                        <li><a href="<?php echo BASE_URL.'employee/view/id/'.$emp['id'];
+					 <?php 
+					  	
+						if(sapp_Global::_checkprivileges( $roleflag,$loginuserGroup,$loginuserRole,'view') == 'Yes'){?>
+								<li><a href="<?php echo BASE_URL.'employee/view/id/'.$emp['id'];
 							?>"><i class="fa fa-eye"></i> View</a></li>
-													<li><a href="<?php echo BASE_URL.'employee/edit/id/'.$emp['id'];
+					 <?php } ?>
+						   <?php if(sapp_Global::_checkprivileges($roleflag,$loginuserGroup,$loginuserRole,'edit') == 'Yes'){?>
+									<li><a href="<?php echo BASE_URL.'employee/edit/id/'.$emp['id'];
 							?>"><i class="fa fa-edit"></i> Edit</a></li>
+							 <?php } ?>
                  
                     </ul>
                 </div>
             </div>
+			<a href="<?php echo BASE_URL.'employee/view/id/'.$emp['id'];?>">
             <div class="li-body">
                 <ul>
                     <li><i class="fa fa-user" aria-hidden="true"></i><span><?php echo $emp['employeeId']; ?></span></li>
                     <li><i class="fa fa-envelope" aria-hidden="true"></i><span><?php echo $emp['emailaddress']; ?></span></li>
                     <li><i class="fa fa-phone" aria-hidden="true"></i><span><?php echo $emp['contactnumber'];?></span></li>
                 </ul>
             </div>
+			</a>
         </div>
 	
 	<?php

--- application/modules/default/views/scripts/employee/index.phtml ---
@@ -19,10 +19,10 @@
  *  Sentrifugo Support <support@sentrifugo.com>
  ********************************************************************************/
 ?>
-<script src="<?php echo EXPENSES_MEDIA_PATH;?>js/materialize.js"></script>  
-<link rel="stylesheet" href="<?php echo MEDIA_PATH?>css/screen.css">   
 
-<?php
+    <script src="<?php echo EXPENSES_MEDIA_PATH;?>js/materialize.js"></script>
+    <link rel="stylesheet" href="<?php echo MEDIA_PATH?>css/screen.css">
+    <?php
 $auth = Zend_Auth::getInstance();
 if($auth->hasIdentity()){
 	$loginUserId = $auth->getStorage()->read()->id;
@@ -31,11 +31,10 @@ if($auth->hasIdentity()){
 }
  $baseUrl = $this->serverUrl().$this->baseUrl();
 ?>
-
-<?php
+        <?php
 if (count($this->messages)) {?>
-	<div id="dispmsgemp" class="settingssuccess">
-		<?php 
+            <div id="dispmsgemp" class="settingssuccess">
+                <?php 
 			foreach ($this->messages as $message)
 			{
 				$flag = array();				
@@ -44,232 +43,209 @@ if (count($this->messages)) {?>
 				echo $message[$flag[0]];
 				echo "</div></div>";
 			} 
-		?>
-	</div>	
-	
-<?php }	?>
-
-<?php if(!empty($this->popConfigPermission))
+		?> </div>
+            <?php }	?>
+                <?php if(!empty($this->popConfigPermission))
     {
 ?>
-<div>
-
-<!-- For excel Upload -->
-<div class="profile-tabs-right-2">
-    <div class="flt_right">
-      	
-        <div class="actions_div">
-	<?php 
+                    <div>
+                        <!-- For excel Upload -->
+                        <div class="profile-tabs-right-2">
+                            <div class="flt_right">
+                                <div class="actions_div">
+                                    <?php 
 					  	
-		if(sapp_Global::_checkprivileges(EMPLOYEE,$loginuserGroup,$loginuserRole,'add') == 'Yes'){?>
-		<a href="<?php echo BASE_URL.'employee/add';?>" class="sprite addrecord">Add</a>
-	<?php 	} ?>
-            <span class="uploadbut_exel uploadbutsel flt_left marginfiv" id="upload_custom_div" >Import Employees</span>
-			<a target="_blank" href="<?php echo DOMAIN; ?>public/downloads/import_employees.xlsx" class="importformatlink flt_left">Import format</a>
-			<a target="_blank" href="<?php echo DOMAIN; ?>public/downloads/importguide.pdf" class="importformatlink flt_left">Help</a>
-            <div id="loaderimgprofile" style="display:none;"><img src="<?php echo DOMAIN; ?>public/media/images/loaderwhite_21X21.gif" style="width:21px; height: 21px; float: none; "/></div>								
-        </div>                 					
-    </div>
-    <input type="hidden" id="uploadimagepath" name="uploadimagepath" value=""/>
-    <input type="hidden" name="emp_excel" value=""/>							    	
-               				                        					
-</div>
-</div>
-
-<span id="error_message"></span>
-<div id="upload_error" style="display:none;clear:both;"></div>	
-<!-- End excel Upload -->
-<?php } ?>
-
-<div class="search_emp">
-<div class="new-form-ui" >
-	<div class="division">
-		<select name="search_val" id="search_val" onchange="getRolesList()">
-		<option value="">Select Search Category</option>
-		<option value="emp_name">Employee Name</option>
-		<option value="emp_id">Employee Id</option>
-		<option value="emp_role">Employee Role</option>
-		</select>
-	</div>
-</div>
-<div class="new-form-ui"  id="search_div" style="display:none" >
-	<div class="division">
-		<input type="text" placeholder="Search Value" name="search_str"  id="search_str">
-	</div>
-</div>
-	
-<div class="new-form-ui"  id="role_div" style="display:none" >
-	<div class="division">				
-		<select name="role_val"  id="role_id">
-		<option value="">Select Role</option>
-		
+		if(sapp_Global::_checkprivileges(EMPLOYEE,$loginuserGroup,$loginuserRole,'add') == 'Yes'){?> <a href="<?php echo BASE_URL.'employee/add';?>" class="sprite addrecord">Add</a>
+                                        <?php 	} ?> <span class="uploadbut_exel uploadbutsel flt_left marginfiv" id="upload_custom_div">Import Employees</span> <a target="_blank" href="<?php echo DOMAIN; ?>public/downloads/import_employees.xlsx" class="importformatlink flt_left">Import format</a> <a target="_blank" href="<?php echo DOMAIN; ?>public/downloads/importguide.pdf" class="importformatlink flt_left">Help</a>
+                                            <div id="loaderimgprofile" style="display:none;"><img src="<?php echo DOMAIN; ?>public/media/images/loaderwhite_21X21.gif" style="width:21px; height: 21px; float: none; " /></div>
+                                </div>
+                            </div>
+                            <input type="hidden" id="uploadimagepath" name="uploadimagepath" value="" />
+                            <input type="hidden" name="emp_excel" value="" /> </div>
+                    </div> <span id="error_message"></span>
+                    <div id="upload_error" style="display:none;clear:both;"></div>
+                    <!-- End excel Upload -->
+                    <?php } ?>
 					<?php 
+						if(!empty($this->dataArray[0])){ ?>
+                        <div class="search_emp">
+                            <div class="new-form-ui">
+                                <div class="division">
+                                    <select name="search_val" id="search_val" onchange="getRolesList()">
+                                        <option value="">Select Search Category</option>
+                                        <option value="emp_name">Employee Name</option>
+                                        <option value="emp_id">Employee Id</option>
+                                        <option value="emp_role">Employee Role</option>
+                                    </select>
+                                </div>
+                            </div>
+                            <div class="new-form-ui" id="search_div" style="display:none">
+                                <div class="division">
+                                    <input type="text" placeholder="Search Value" name="search_str" id="search_str"> </div>
+                            </div>
+                            <div class="new-form-ui" id="role_div" style="display:none">
+                                <div class="division">
+                                    <select name="role_val" id="role_id">
+                                        <option value="">Select Role</option>
+                                        <?php 
 					 foreach($this->roles_arr as $key => $roles_emp)
 					{ ?>
-					
-					 <option value="<?php echo $roles_emp['id'] ?>"><?php echo $roles_emp['rolename'] ?></option>
-						
-				<?PHP } ?>
-		</select>
-
-	</div>
-</div>
-<div class="new-form-ui" style="width: initial;">
-	<div class="division">
-		<button onclick="employeessearch();" type="button" class="actbtn_btn" style="margin: 0;">Search</button>
-	</div>
-</div>	
-</div>	
-<div id="employees_search" class="full-width">
-
-<?php if($this->totalcount>0) {?>
-
-    <div class="list-container" id="more_employees">
-    <?php 
-foreach($this->dataArray as $data)
-{
-foreach($data as $emp)
-{ 
-
-
-?>
-        <div class="list-item">
-            <div class="li-head">
-                <div class="li-avatar"> <img src="<?php echo $baseUrl; ?>/public/uploads/profile/<?php echo $emp['profileimg'];?>" onerror="this.src='<?php echo MEDIA_PATH; ?>images/profile_pic.png'"   width="54" height="54" /> </div>
-                <div class="li-emp-details"> <span class="emp-name"><?php echo $emp['userfullname']; ?></span> <span class="emp-designation"><?php echo $emp['emprole_name']; ?></span> <span class="emp-department"><?php echo $emp['department_name'];?></span> </div>
-                <div class="li-actions"> <a class='dropdown-button dottedbtn' href='#' data-activates='actdbtn-<?php echo $emp['id'];?>'><i class="fa fa-ellipsis-v" aria-hidden="true"></i></a>
-                    <!-- Dropdown Structure -->
-                    <ul id='actdbtn-<?php echo $emp['id'];?>' class='dropdown-content'>
-					  <?php 
+                                            <option value="<?php echo $roles_emp['id'] ?>">
+                                                <?php echo $roles_emp['rolename'] ?>
+                                            </option>
+                                            <?PHP } ?>
+                                    </select>
+                                </div>
+                            </div>
+                            <div class="new-form-ui" style="width: initial;">
+                                <div class="division">
+                                    <button onclick="employeessearch();" type="button" class="actbtn_btn" style="margin: 0;">Search</button>
+									<button onclick="clearSearchData();" type="button" class="actbtn_btn reset" style="margin-top: 0;">Clear</button>
+                                </div>
+                            </div>
+                        </div>
+						<?php } ?>
+                        <div id="employees_search" class="full-width">
+                            <?php if($this->totalcount>0) {?>
+                                <div class="list-container" id="more_employees">
+                                    <?php 
+										foreach($this->dataArray as $data)
+										{
+										foreach($data as $emp)
+										{ 
+
+
+										?>
+
+                                        <div class="list-item">
+                                            <div class="li-head">
+                                                <div class="li-avatar"> <img src="<?php echo $baseUrl; ?>/public/uploads/profile/<?php echo $emp['profileimg'];?>" onerror="this.src='<?php echo MEDIA_PATH; ?>images/profile_pic.png'" width="54" height="54" /> </div>
+                                                <div class="li-emp-details"> <span class="emp-name"><?php echo $emp['userfullname']; ?></span> <span class="emp-designation"><?php echo $emp['emprole_name']; ?></span> <span class="emp-department"><?php echo $emp['department_name'];?></span> </div>
+                                                <div class="li-actions"> <a class='dropdown-button dottedbtn' href='#' data-activates='actdbtn-<?php echo $emp['id'];?>'><i class="fa fa-ellipsis-v" aria-hidden="true"></i></a>
+                                                    <!-- Dropdown Structure -->
+                                                    <ul id='actdbtn-<?php echo $emp['id'];?>' class='dropdown-content'>
+                                                        <?php 
 					  	
 						if(sapp_Global::_checkprivileges(EMPLOYEE,$loginuserGroup,$loginuserRole,'view') == 'Yes'){?>
-                        <li><a href="<?php echo BASE_URL.'employee/view/id/'.$emp['id'];
+                                                            <li><a href="<?php echo BASE_URL.'employee/view/id/'.$emp['id'];
 							?>"><i class="fa fa-eye"></i> View</a></li>
-					  <?php } ?>
-					 <?php if(sapp_Global::_checkprivileges(EMPLOYEE,$loginuserGroup,$loginuserRole,'edit') == 'Yes'){?>
-						<li><a href="<?php echo BASE_URL.'employee/edit/id/'.$emp['id'];
+                                                            <?php } ?>
+                                                                <?php if(sapp_Global::_checkprivileges(EMPLOYEE,$loginuserGroup,$loginuserRole,'edit') == 'Yes'){?>
+                                                                    <li><a href="<?php echo BASE_URL.'employee/edit/id/'.$emp['id'];
 							?>"><i class="fa fa-edit"></i> Edit</a></li>
-					<?php } ?>
-                 
-                    </ul>
-                </div>
-            </div>
-            <div class="li-body">
-                <ul>
-                    <li><i class="fa fa-user" aria-hidden="true"></i><span><?php echo $emp['employeeId']; ?></span></li>
-                    <li><i class="fa fa-envelope" aria-hidden="true"></i><span><?php echo $emp['emailaddress']; ?></span></li>
-                    <li><i class="fa fa-phone" aria-hidden="true"></i><span><?php echo $emp['contactnumber'];?></span></li>
-                </ul>
-            </div>
-        </div>
-	
-	<?php
+                                                                    <?php } ?>
+                                                    </ul>
+                                                </div>
+                                            </div>
+											<a href="<?php echo BASE_URL.'employee/view/id/'.$emp['id'];?>">
+                                            <div class="li-body">
+                                                <ul>
+                                                    <li><i class="fa fa-user" aria-hidden="true"></i><span><?php echo $emp['employeeId']; ?></span></li>
+                                                    <li><i class="fa fa-envelope" aria-hidden="true"></i><span><?php echo $emp['emailaddress']; ?></span></li>
+                                                    <li><i class="fa fa-phone" aria-hidden="true"></i><span><?php echo $emp['contactnumber'];?></span></li>
+                                                </ul>
+                                            </div>
+											</a>
+                                        </div>
+                                        <?php
 } } }
 else
 {
 	echo "<p class='no-data'>No Data Found</p>";
 }
 ?>
-</div>
-
-
-</div>
-<!--<div id="employees" class="full-width"></div>-->
-
-<input type="hidden" name="limit" id="limit" value="<?php echo $this->limit;?>"/>
-<input type="hidden" name="offset" id="offset" value="<?php echo $this->offset;?>"/>
-<input type="hidden" name="count_remaining" id="count_remaining" value="<?php echo $this->remainingcount;?>"/>
-<input type="hidden" name="emp" id="emp" value="employees"/>
-<?php 
+                                </div>
+                        </div>
+                        <!--<div id="employees" class="full-width"></div>-->
+                        <input type="hidden" name="limit" id="limit" value="<?php echo $this->limit;?>" />
+                        <input type="hidden" name="offset" id="offset" value="<?php echo $this->offset;?>" />
+                        <input type="hidden" name="count_remaining" id="count_remaining" value="<?php echo $this->remainingcount;?>" />
+                        <input type="hidden" name="emp" id="emp" value="employees" />
+                        <?php 
 
 if($this->totalcount > $this->empcount) 
 {?>
-
-<div id="viewmorediv" onclick="viewmore();">
-       View More..(<?php echo $this->remainingcount .'';?> remaining)
-</div>
-<?php }?>
-
-
-<script language="JavaScript">
-
-$(document).ready(function(){
-<?php if (count($this->messages)) {?>
-      setTimeout(function(){
-			$('#dispmsgemp').fadeOut('slow');
-		},3000);
-
-<?php } ?>
-
-})
-
-</script>
-
-<?php 
+                            <div id="viewmorediv" onclick="viewmore();"> View More..(
+                                <?php echo $this->remainingcount .'';?> remaining) </div>
+                            <?php }?>
+                                <script language="JavaScript">
+                                    $(document).ready(function () {
+                                        <?php if (count($this->messages)) {?>
+                                        setTimeout(function () {
+                                            $('#dispmsgemp').fadeOut('slow');
+                                        }, 3000);
+                                        <?php } ?>
+                                    })
+                                </script>
+                                <?php 
 if($this->call != "ajaxcall")
 {
     if(!empty($this->popConfigPermission))
     {
 ?>
-<script type="text/javascript">
-
-var btnUpload = $('#upload_custom_div');
-new AjaxUpload(btnUpload, {
-
-	action :  base_url+'/employee/uploadexcel',
-	name   : 'emp_excel',  //we can rename it 
-	dataType: 'json',
-	onSubmit: function(file,ext){
-	if($("#upload_error").is(":visible"))
-	 $("#upload_error").hide();
-	  $("#loaderimgprofile").show();
-									 
-	},
-	onComplete: function(file, response){
-	    try
-            {
-                var result = JSON.parse(response);
-                if(result.result == 'success')
-                {                        
-                    $('#upload_error').show();
-                    $("#loaderimgprofile").hide();
-                    refreshgrid("employee","No","");
-                    $('#upload_error').html('<div  class="ml-alert-1-success"><div style="display:block;"><span class="style-1-icon success"></span>'+result.msg+'</div></div>');
-                    setTimeout(function()
-                    {
-                        $('#upload_error').fadeOut('slow');               
-                    },3000);
-                }
-                else
-                {
-                    $('#upload_error').show();
-                    $("#loaderimgprofile").hide();
-                    if(result.msg)
-                        $('#upload_error').html('<div  class="ml-alert-1-error"><div style="display:block;"><span class="style-1-icon error"></span>'+result.msg+'</div></div>');
-                    else
-                        $('#upload_error').html('<div  class="ml-alert-1-error"><div style="display:block;"><span class="style-1-icon error"></span>Please choose different file.</div></div>');
-                }
-            }
-            catch(e)
-            {
-                $('#upload_error').show();
-                $("#loaderimgprofile").hide();
-                $('#upload_error').html('<div  class="ml-alert-1-error"><div style="display:block;"><span class="style-1-icon error"></span>Something went wrong, please try again.</div></div>');
-            }
-	}	
-},'json');
-</script>
-<?php 
+                                    <script type="text/javascript">
+                                        var btnUpload = $('#upload_custom_div');
+                                        new AjaxUpload(btnUpload, {
+                                            action: base_url + '/employee/uploadexcel'
+                                            , name: 'emp_excel', //we can rename it 
+                                            dataType: 'json'
+                                            , onSubmit: function (file, ext) {
+                                                if ($("#upload_error").is(":visible")) $("#upload_error").hide();
+                                                $("#loaderimgprofile").show();
+                                            }
+                                            , onComplete: function (file, response) {
+                                                try {
+                                                    var result = JSON.parse(response);
+                                                    if (result.result == 'success') {
+                                                        $('#upload_error').show();
+                                                        $("#loaderimgprofile").hide();
+                                                        refreshgrid("employee", "No", "");
+                                                        $('#upload_error').html('<div  class="ml-alert-1-success"><div style="display:block;"><span class="style-1-icon success"></span>' + result.msg + '</div></div>');
+                                                        setTimeout(function () {
+                                                            $('#upload_error').fadeOut('slow');
+                                                        }, 3000);
+                                                    }
+                                                    else {
+                                                        $('#upload_error').show();
+                                                        $("#loaderimgprofile").hide();
+                                                        if (result.msg) $('#upload_error').html('<div  class="ml-alert-1-error"><div style="display:block;"><span class="style-1-icon error"></span>' + result.msg + '</div></div>');
+                                                        else $('#upload_error').html('<div  class="ml-alert-1-error"><div style="display:block;"><span class="style-1-icon error"></span>Please choose different file.</div></div>');
+                                                    }
+                                                }
+                                                catch (e) {
+                                                    $('#upload_error').show();
+                                                    $("#loaderimgprofile").hide();
+                                                    $('#upload_error').html('<div  class="ml-alert-1-error"><div style="display:block;"><span class="style-1-icon error"></span>Something went wrong, please try again.</div></div>');
+                                                }
+                                            }
+                                        }, 'json');
+                                    </script>
+                                    <?php 
 }
 }
 ?>
-
-<style>
-.search_emp {width: 42%;float: left;}
-.profile-tabs-right-2 {width: 58%;}
-.search_emp .new-form-ui {height: inherit; margin-bottom: 12px;}
-@media (min-width: 1280px) {
-.search_emp {width: 60%;}
-.profile-tabs-right-2 {width: 40%;}
-}
-</style>
\ No newline at end of file
+                                        <style>
+                                            .search_emp {
+                                                width: 42%;
+                                                float: left;
+                                            }
+                                            
+                                            .profile-tabs-right-2 {
+                                                width: 58%;
+                                            }
+                                            
+                                            .search_emp .new-form-ui {
+                                                height: inherit;
+                                                margin-bottom: 12px;
+                                            }
+                                            
+                                            @media (min-width: 1280px) {
+                                                .search_emp {
+                                                    width: 59%;
+                                                }
+                                                .profile-tabs-right-2 {
+                                                    width: 41%;
+                                                }
+                                            }
+                                        </style>
+										

--- application/modules/default/views/scripts/holidaygroups/view.phtml ---
@@ -59,7 +59,6 @@ sapp_Helper::viewFooter();
 				    ?>
 					<input type="button" onclick="window.location.href='<?php echo BASE_URL; ?>holidaygroups';" type="button"  value="Back"  />
     	           <?php } ?>
-		</div>
 	
 <!--<span id="error_message"></span>
  commented due to wrong display of error message.

--- application/modules/default/views/scripts/index/getdepartments.ajax.phtml ---
@@ -25,6 +25,8 @@ $options_data = "";
 $options_data .= sapp_Global::selectOptionBuilder('', 'Select Department');
 if($this->con == 'leavemanagement')
 {
+	$options_data_hr = "*";
+	$options_data_hr .= sapp_Global::selectOptionBuilder('', 'Select Hr Manager');
   if(!empty($this->uniquedepartmentids))
   {
 	   if($this->flag != 'true')
@@ -53,6 +55,20 @@ if($this->con == 'leavemanagement')
 		echo "nodepartments";
 		}
   }  
+   if(!empty($this->hremployees))
+  {
+	  
+			foreach ($this->hremployees as $employees)
+			{
+				$options_data_hr .= sapp_Global::selectOptionBuilder($employees['user_id'], utf8_encode($employees['userfullname']));
+			}
+			echo $options_data_hr;
+  }else
+  {
+	
+	  //echo "Hr manager not added yet for the selected business unit.";
+	   echo "*nohrmanagers";
+  }  
 
 }
 else if($this->con == 'appraisal_config')

--- application/modules/default/views/scripts/leavemanagement/add.phtml ---
@@ -127,6 +127,8 @@
 			<div class="division"><?php echo $this->form->hrmanager; ?></div>
 			<?php if(isset($this->msgarray['hrmanager'])){?>
 			   <span class="errors" id="errors-<?php echo $this->form->hrmanager->getId(); ?>"><?php echo $this->msgarray['hrmanager'];?></span>
+			<?php }else {?>
+			   <span class="errors" id="errors-<?php echo $this->form->hrmanager->getId(); ?>" style="display:none;"></span> 
 			<?php }?>
 			</div>
 					

--- application/modules/default/views/scripts/leavemanagement/edit.phtml ---
@@ -117,6 +117,8 @@ sapp_Global::generateClientValidations($this->form);?>
 			<div class="division"><?php echo $this->form->hrmanager; ?></div>
 			<?php if(isset($this->msgarray['hrmanager'])){?>
 			   <span class="errors" id="errors-<?php echo $this->form->hrmanager->getId(); ?>"><?php echo $this->msgarray['hrmanager'];?></span>
+			<?php  }else {?>
+			   <span class="errors" id="errors-<?php echo $this->form->hrmanager->getId(); ?>" style="display:none;"></span> 
 			<?php }?>
 			</div>		
 			<div class="new-form-ui textareaheight">

--- application/modules/default/views/scripts/myemployees/index.phtml ---
@@ -19,6 +19,7 @@
  *  Sentrifugo Support <support@sentrifugo.com>
  ********************************************************************************/
 ?>
+
 <script src="<?php echo EXPENSES_MEDIA_PATH;?>js/materialize.js"></script> 
 <link rel="stylesheet" href="<?php echo MEDIA_PATH?>css/screen.css">   
 <?php 
@@ -58,7 +59,8 @@ if($loginuserGroup==MANAGER_GROUP || $loginuserGroup==MANAGEMENT_GROUP || $login
 <?php } ?>
 <span id="error_message"></span>
 
-
+<?php 
+if(!empty($this->dataArray[0])){ ?>
 <div class="new-form-ui" >
 	<div class="division">
 		<select name="search_val" id="search_val" onchange="getRolesList()">
@@ -69,6 +71,7 @@ if($loginuserGroup==MANAGER_GROUP || $loginuserGroup==MANAGEMENT_GROUP || $login
 		</select>
 	</div>
 </div>
+<?php } ?>
 <div class="new-form-ui"  id="search_div" style="display:none" >
 	<div class="division">
 		<input type="text" placeholder="Search Value" name="search_str"  id="search_str">
@@ -92,13 +95,16 @@ if($loginuserGroup==MANAGER_GROUP || $loginuserGroup==MANAGEMENT_GROUP || $login
 
 	</div>
 </div>
+<?php 
+if(!empty($this->dataArray[0])){ ?>
 <div class="new-form-ui" style="width: initial;">
 	<div class="division">
 		<button onclick="employeessearch();" type="button" class="actbtn_btn" style="margin: 0;">Search</button>
+		<button onclick="clearSearchData();" type="button" class="actbtn_btn reset" style="margin-top: 0;">Clear</button>
 	</div>
 </div>	
 	
-
+<?php } ?> 
 <div id="employees_search" class="full-width">
 
 <?php if($this->totalcount>0) { ?>
@@ -112,7 +118,7 @@ if($loginuserGroup==MANAGER_GROUP || $loginuserGroup==MANAGEMENT_GROUP || $login
 
 
 ?>
-        <div class="list-item">
+        <div class="list-item" >
             <div class="li-head">
                 <div class="li-avatar"> <img src="<?php echo $baseUrl; ?>/public/uploads/profile/<?php echo $emp['profileimg'];?>" onerror="this.src='<?php echo MEDIA_PATH; ?>images/profile_pic.png'"   width="54" height="54" /> </div>
                 <div class="li-emp-details"> <span class="emp-name"><?php echo $emp['userfullname']; ?></span> <span class="emp-designation"><?php echo $emp['emprole_name']; ?></span> <span class="emp-department"><?php echo $emp['department_name'];?></span> </div>
@@ -133,13 +139,15 @@ if($loginuserGroup==MANAGER_GROUP || $loginuserGroup==MANAGEMENT_GROUP || $login
                     </ul>
                 </div>
             </div>
+			<a href="<?php echo BASE_URL.'employee/view/id/'.$emp['id'];?>">
             <div class="li-body">
                 <ul>
                     <li><i class="fa fa-user" aria-hidden="true"></i><span><?php echo $emp['employeeId']; ?></span></li>
                     <li><i class="fa fa-envelope" aria-hidden="true"></i><span><?php echo $emp['emailaddress']; ?></span></li>
                     <li><i class="fa fa-phone" aria-hidden="true"></i><span><?php echo $emp['contactnumber'];?></span></li>
                 </ul>
             </div>
+			</a>
         </div>
 	
 	<?php

--- application/modules/default/views/scripts/pendingleaves/index.phtml ---
@@ -39,7 +39,8 @@
 <?php if($this->call != 'ajaxcall'){ ?>
 	<span id="error_message"></span>
 <?php }?>
-<?php echo sapp_Helper::displayLeaveTypeDiv($this->leavesCountArray); ?>
+<?php 
+echo sapp_Helper::displayLeaveTypeDiv($this->leavesCountArray); ?>
 <?php 
 if($this->call == 'ajaxcall'){
 	$div = ''; $endDiv = ''; 

--- application/modules/default/views/scripts/sitepreference/index.phtml ---
@@ -63,7 +63,11 @@ if($permission == 'Yes')
 }
 ?>
  <?php 
+ $defaultDateFormat='';
+  $defaultTimeFormat='';
+ if(!empty($this->dataArray[0]['date_description']))
  $defaultDateFormat= $this->dataArray[0]['date_description'].". (Example: ".$this->dataArray[0]['date_example'].")";
+ if(!empty($this->dataArray[0]['time_description']))
  $defaultTimeFormat=$this->dataArray[0]['time_description'].". (Example: ".$this->dataArray[0]['time_example'].")";
 sapp_Helper::viewHeader();
 sapp_Helper::viewBody('alt','Default Date Format ',(!empty($defaultDateFormat))?$defaultDateFormat:"...",'Default Time Format',(!empty( $defaultTimeFormat))? $defaultTimeFormat:"...");

--- application/modules/exit/Bootstrap.php ---
@@ -0,0 +1,11 @@
+<?php
+
+class Exit_Bootstrap extends Zend_Application_Module_Bootstrap
+{
+	protected function _initAppAutoload() {
+
+		$auth= Zend_Auth::getInstance();
+		$storage = $auth->getStorage()->read();
+	}
+}
+

--- application/modules/exit/controllers/AllexitprocController.php ---
@@ -0,0 +1,929 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+/** 
+** controller used to list down all raised exit procedures based on logged in user id
+** super admin can view all exit procs and edit any segment in the proc
+**/
+class Exit_AllexitprocController extends Zend_Controller_Action
+{
+	private $options;
+	private $loggedInUser = '';
+	private $loggedInUserGroup = '';
+	private $loggedInUserRole = '';
+
+	public function preDispatch()
+	{
+		$ajaxContext = $this->_helper->getHelper('AjaxContext');
+		$ajaxContext->addActionContext('updateexitprocess', 'json')->initContext();
+	}
+	public function init()
+	{
+		$this->_options = $this->getInvokeArg('bootstrap')->getOptions();
+		
+		/** Instantiate exit proc settings model **/
+		$this->allExitProcsModel = new Exit_Model_Allexitprocs();
+		$this->exitProcModel = new Exit_Model_Exitproc();
+		$this->exitquestionsmodel = new Exit_Model_Exitquestions();
+		$this->exitquesresponse =	new Exit_Model_Questionsresponse();
+		/**
+		** Initiating zend auth object
+		** for getting logged in user id
+		**/
+		$auth = Zend_Auth::getInstance();
+		
+		if($auth->hasIdentity())
+		{
+			$this->loggedInUser = $auth->getStorage()->read()->id;
+			$this->loggedInUserRole = $auth->getStorage()->read()->emprole;
+			$this->loggedInUserGroup = $auth->getStorage()->read()->group_id;
+			$this->userfullname = $auth->getStorage()->read()->userfullname;
+			$this->reporting_manager = $auth->getStorage()->read()->reporting_manager;
+		}
+	}
+	public function indexAction()
+	{
+		/**
+		**	check for ajax call
+		**/
+		$call = $this->_getParam('call');
+		if($call == 'ajaxcall')
+				$this->_helper->layout->disableLayout();	
+		
+		/**
+		** capture request parameters 
+		**/
+		$objname = $this->_getParam('objname');
+		$refresh = $this->_getParam('refresh');
+		$dashboardcall = $this->_getParam('dashboardcall');
+		$context = $this->_getParam('context');
+		$data = array();
+		$searchQuery = '';
+		$searchArray = array();
+		$tablecontent='';
+		
+		// based on parameter diffrentiate grid display
+		$con =$this->_request->getParam('con');
+		if($con=='')
+		{
+			$con =	sapp_Global::_encrypt(1);
+		}
+		$status =  sapp_Global::_decrypt($con);
+		
+		/** check for refresh button event 
+		**  If yes, build default parameters
+		**	else, build parameters accordingly
+		**/
+		if($refresh == 'refresh')
+		{
+			if($dashboardcall == 'Yes')
+				$perPage = DASHBOARD_PERPAGE;
+			else	
+				$perPage = PERPAGE;
+
+			$sort = 'DESC';$by = 'e.modifieddate';$pageNo = 1;$searchData = '';$searchQuery = '';$searchArray='';
+		}
+		else 
+		{
+			/** build sort parameter **/
+			$sort = ($this->_getParam('sort') !='')? $this->_getParam('sort'):'DESC';
+
+			/** build order by parameter **/
+			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'e.modifieddate';
+			
+			/** get records per page parameter **/
+			if($dashboardcall == 'Yes')
+				$perPage = $this->_getParam('per_page',DASHBOARD_PERPAGE);
+			else 
+				$perPage = $this->_getParam('per_page',PERPAGE);
+
+			/** set page number parameter **/
+			$pageNo = $this->_getParam('page', 1);
+			
+			/** build search parameters **/
+			$searchData = $this->_getParam('searchData');	
+			$searchData = rtrim($searchData,',');					
+		}
+
+		/**
+		**	based on search, sort, pagination, order by parameters 
+		**  get data object to build exit proc settings grid
+		**/
+		$dataTmp = $this->allExitProcsModel->getGrid($sort, $by, $perPage, $pageNo, $searchData,$call,$dashboardcall,$context,'','','',$status);
+		array_push($data,$dataTmp);
+
+		//count of all exit records
+		$allcount=$this->allExitProcsModel->getAllExitProcs('count',$sort, $by, '', '','','',1);
+		$allexitcount= count($allcount);
+		
+		//count of approved exit records
+		$approvedcount=$this->allExitProcsModel->getAllExitProcs('count',$sort,$by, '', '','','',2);
+		$approvedexitcount= count($approvedcount);
+		
+		//count of rejected exit records
+		$rejectedcount=$this->allExitProcsModel->getAllExitProcs('count',$sort,$by, '', '','','',3);
+		$rejectedexitcount= count($rejectedcount);
+		
+		//count of pending exit records
+		$pendingcount=$this->allExitProcsModel->getAllExitProcs('count',$sort,$by, '', '','','',4);
+		$pendingexitcount= count($pendingcount);
+
+		/**
+		** send data objects to view
+		**/
+		$this->view->dataArray = $data;
+		$this->view->call = $call ;
+		$this->view->allcount = $allexitcount;	
+		$this->view->approvedcount = $approvedexitcount;
+		$this->view->rejectedexitcount = $rejectedexitcount;	
+		$this->view->pendingexitcount = $pendingexitcount;
+		$this->view->status = $con;			
+	
+		
+		/**
+		** send flash messages to view
+		**/
+		$this->view->messages = $this->_helper->flashMessenger->getMessages();
+	}
+
+	public function editAction()
+	{
+		/**
+		** check for logged in user role for add privileges
+		**/
+		if(sapp_Global::_checkprivileges(ALL_EXIT_PROCS,$this->loggedInUserGroup,$this->loggedInUserRole,'edit') != 'Yes'){
+				$this->view->ermsg = 'noprivileges';
+				exit;
+		} 
+		
+		/**
+		** capture record id to edit
+		**/
+		$id = (int)$this->_request->getParam('id');
+		$this->view->id = $id;
+		
+		$exitProcDetails = $this->allExitProcsModel->getExitProcDetails($id);
+
+
+		/**
+		** getting hr manager, sys admin, general admin, finance manager details - START
+		**/
+		
+		if(!empty($exitProcDetails))
+		{
+			$exitProcDetails = $exitProcDetails[0];
+			$other_manager='';
+			/* update form post values START*/
+			$status = "";
+			$comments = "";
+			$selected_status_value="";
+			$selected_comment_value="";
+			$is_valid_user = 0;
+			if($this->loggedInUser == $exitProcDetails['reporting_manager']){
+				$status = "l1m";
+				$comments = "l1mcomments";
+				$selected_status_value="l1_status";
+				$selected_comment_value="l1_comments";
+				$is_valid_user=1;
+				
+				
+				//check if l1 manager is matching with any setting confugured managers
+				//get employee reporting_manager
+				$emp_reporting_manager = $exitProcDetails['reporting_manager'];
+				
+				$configured_manager_arr = array('L2 manager'=>$exitProcDetails['l2_manager'],'Hr manager'=>$exitProcDetails['hr_manager'],'System admin'=>$exitProcDetails['sys_admin'],'General admin'=>$exitProcDetails['general_admin'],'Finance manager'=>$exitProcDetails['finance_manager']);
+				
+				
+				if(in_array($emp_reporting_manager, $configured_manager_arr))
+				{
+					$other_manager = array_search($emp_reporting_manager, $configured_manager_arr);
+				}
+				
+			}else if(!empty($exitProcDetails['l2_manager']) && ($this->loggedInUser == $exitProcDetails['l2_manager'] )){
+				$status = "l2m";
+				$comments = "l2mcomments";
+				$selected_status_value="l2_status";
+				$selected_comment_value="l2_comments";
+				$is_valid_user=1;
+				
+			}else if($this->loggedInUser == $exitProcDetails['hr_manager']){
+				$status = "hrm";
+				$comments = "hrmcomments";
+				$selected_status_value="hr_manager_status";
+				$selected_comment_value="hr_manager_comments";
+				$is_valid_user=1;
+				
+			}else if(!empty($exitProcDetails['sys_admin']) && ($this->loggedInUser == $exitProcDetails['sys_admin'])){
+				$status = "sysadm";
+				$comments = "sysadmcomments";
+				$selected_status_value="sys_admin_status";
+				$selected_comment_value="sys_admin_comments";
+				$is_valid_user=1;
+				
+			}else if(!empty($exitProcDetails['general_admin']) && ($this->loggedInUser == (int)$exitProcDetails['general_admin'] ))
+			{
+				$status = "gam";
+				$comments = "gamcomments";
+				$selected_status_value="gen_admin_status";
+				$selected_comment_value="gen_admin_comments";
+				$is_valid_user=1;
+			}else if(!empty($exitProcDetails['finance_manager']) && ($this->loggedInUser == (int)$exitProcDetails['finance_manager'])){
+				$status = "fm";
+				$comments = "fmcomments";
+				$selected_status_value="fin_admin_status";
+				$selected_comment_value="fin_admin_comments";
+				$is_valid_user=1;
+			}
+			
+			$this->view->status = $status;
+			$this->view->comments = $comments;
+			$this->view->selected_status_value = $selected_status_value;
+			$this->view->selected_comment_value = $selected_comment_value;
+			$this->view->is_valid_user = $is_valid_user;
+			$this->view->other_manager = $other_manager;
+			/* update form post values END*/
+
+			$empIdsStr = '';
+			if(!empty($exitProcDetails['hr_manager']))
+				$empIdsStr .= $exitProcDetails['hr_manager'];
+			if(!empty($exitProcDetails['sys_admin']))
+				$empIdsStr .= ",".$exitProcDetails['sys_admin'];
+			if(!empty($exitProcDetails['general_admin']))
+				$empIdsStr .= ",".$exitProcDetails['general_admin'];
+			if(!empty($exitProcDetails['finance_manager']))
+				$empIdsStr .= ",".$exitProcDetails['finance_manager'];
+			if(!empty($exitProcDetails['l2_manager']))//l2 manager condition added
+				$empIdsStr .= ",".$exitProcDetails['l2_manager'];
+			
+			$empIdsStr = trim($empIdsStr,",");
+			
+			$empIdsArr = explode(",",$empIdsStr);
+
+			array_push($empIdsArr, $exitProcDetails['reporting_manager']);
+			if(!empty($exitProcDetails['reporting_manager']))
+			{
+				$l2managerDetails = $this->exitProcModel->getEmployeeDetails($exitProcDetails['reporting_manager'],'one');
+				$this->view->l2managerDetails = $l2managerDetails;
+				array_push($empIdsArr,$l2managerDetails[0]['reporting_manager']);
+			}
+
+			if(in_array($this->loggedInUser,$empIdsArr) || ($this->loggedInUserGroup == MANAGEMENT_GROUP || $this->loggedInUserGroup == HR_GROUP) || $this->loggedInUserRole == SUPERADMINROLE)
+			{
+				$managersDataObj_tmp = $this->exitProcModel->getEmployeeDetails($empIdsStr,'multiple');
+				$managersDataObj = array();
+
+				if(!empty($managersDataObj_tmp))
+				{
+					foreach ($managersDataObj_tmp as &$row) {
+						$managersDataObj[$row['user_id']] = &$row;
+					}				
+				}
+				$this->view->managersDataObj = $managersDataObj;
+			
+			}
+			else
+			{
+				$this->view->ermsg = 'noprivileges';
+			}
+		}
+		/**
+		** getting hr manager, sys admin, general admin, finance manager details - END
+		**/
+		$this->view->exitProcDetails = $exitProcDetails;
+		$this->view->loggedInUser = $this->loggedInUser;
+		
+		if($this->getRequest()->getPost())
+		{
+			$this->save($managersDataObj,$exitProcDetails,$id);
+		}
+		$this->view->loginuserRole = $this->loggedInUserRole;
+		$this->view->loginuserGroup = $this->loggedInUserGroup;
+		/** retrieve exit proc history **/
+		$historyObj = $this->exitProcModel->getExitProcHistory($id);
+		$this->view->historyObj = $historyObj;
+	}
+	
+	public function save($managersDataObj,$exitProcDetails,$id)
+	{
+
+		if(!empty($this->loggedInUser))
+		{
+			$data = $msgarray = array(); 
+			$where = array('id=?' => $id);
+			
+			//array to set post values
+			$post_array = array();
+			
+			/**
+			** capture form data, check validations and return error / success messages - START
+			** if logged in user is superadmin, entire form is editabale, so all the form values are captured
+			** else the segment which is editable to logged in user is only captured
+			**/
+			$status = '';
+			
+			//check if l1 manager is matching with any other configured managers, if same update both statuses
+			$configured_manager_arr = array('l2_manager'=>$exitProcDetails['l2_manager'],'hr_manager'=>$exitProcDetails['hr_manager'],'sys_admin'=>$exitProcDetails['sys_admin'],'general_admin'=>$exitProcDetails['general_admin'],'finance_manager'=>$exitProcDetails['finance_manager']);
+				
+			$other_manager='';	
+			if(in_array($exitProcDetails['reporting_manager'], $configured_manager_arr))
+			{
+				$other_manager = array_search($exitProcDetails['reporting_manager'], $configured_manager_arr);
+			}
+
+			/** for l1 manager **/
+			if($this->loggedInUser == $exitProcDetails['reporting_manager'])
+			{
+				if(!empty($_POST['l1m']) && !empty($_POST['l1mcomments'])){
+					$data['l1_status'] = $_POST['l1m'];
+					$data['l1_comments'] = $_POST['l1mcomments'];
+							
+					$status = $_POST['l1m'];
+				}else{
+					if(empty($_POST['l1m']))
+						$msgarray['l1m'] = 'Please select status.';
+					else
+						$post_array['l1m']=$_POST['l1m'];
+					if(empty($_POST['l1mcomments']))
+						$msgarray['l1mcomments'] = 'Please enter comments.';	
+					else
+						$post_array['l1mcomments']=$_POST['l1mcomments'];
+				}
+				
+			}
+
+			/** for l2 manager **/	
+			if($this->loggedInUser == $exitProcDetails['l2_manager'])
+			{
+				if($other_manager!='' && $configured_manager_arr[$other_manager]==$exitProcDetails['l2_manager'])
+				{
+					$_POST['l2m'] =  $_POST['l1m'];
+					$_POST['l2mcomments'] =  $_POST['l1mcomments'];
+				}
+				if(!empty($_POST['l2m']) && !empty($_POST['l2mcomments']))
+				{
+					$data['l2_status'] = $_POST['l2m'];
+					$data['l2_comments'] = $_POST['l2mcomments'];
+	
+					$status = $_POST['l2m'];
+				}
+				else {
+					if(empty($_POST['l2m']))
+						$msgarray['l2m'] = 'Please select status.';
+					else
+						$post_array['l2m'] = $_POST['l2m'];
+					if(empty($_POST['l2mcomments']))
+						$msgarray['l2mcomments'] = 'Please enter comments.';	
+					else
+						$post_array['l2mcomments'] = $_POST['l2mcomments'];
+				}
+			}
+			/** for hr manager **/			
+			if($this->loggedInUser == $exitProcDetails['hr_manager'])
+			{
+				if($other_manager!='' && $configured_manager_arr[$other_manager]==$exitProcDetails['hr_manager'])
+				{
+					$_POST['hrm'] =  $_POST['l1m'];
+					$_POST['hrmcomments'] =  $_POST['l1mcomments'];
+				}
+				if(!empty($_POST['hrm']) && !empty($_POST['hrmcomments'])){
+					
+					$data['hr_manager_status'] = $_POST['hrm'];
+					$data['hr_manager_comments'] = $_POST['hrmcomments'];
+					
+					$status = $_POST['hrm'];
+				}
+				else {
+					if(empty($_POST['hrm']))
+						$msgarray['hrm'] = 'Please select status.';
+					else
+						$post_array['hrm'] = $_POST['hrm'];
+						
+					if(empty($_POST['hrmcomments']))
+						$msgarray['hrmcomments'] = 'Please enter comments.';	
+					else
+						$post_array['hrmcomments'] = $_POST['hrmcomments'];
+				}
+			}
+			
+
+			/** for system admin **/
+			if($this->loggedInUser == $exitProcDetails['sys_admin'])
+			{
+				if($other_manager!='' && $configured_manager_arr[$other_manager]==$exitProcDetails['sys_admin'])
+				{
+					$_POST['sysadm'] =  $_POST['l1m'];
+					$_POST['sysadmcomments'] =  $_POST['l1mcomments'];
+				}
+				if(!empty($_POST['sysadm']) && !empty($_POST['sysadmcomments'])){
+					$data['sys_admin_status'] = $_POST['sysadm'];
+					$data['sys_admin_comments'] = $_POST['sysadmcomments'];
+					
+					$status = $_POST['sysadm'];
+				}else {
+					if(empty($_POST['sysadm']))
+						$msgarray['sysadm'] = 'Please select status.';
+					else
+						$post_array['sysadm'] = $_POST['sysadm'];	
+					if(empty($_POST['sysadmcomments']))
+						$msgarray['sysadmcomments'] = 'Please enter comments.';	
+					else
+						$post_array['sysadmcomments'] = $_POST['sysadmcomments'];	
+				}
+				
+			}
+			
+
+			/** for general admin **/
+			if($this->loggedInUser == $exitProcDetails['general_admin'])
+			{
+				if($other_manager!='' && $configured_manager_arr[$other_manager]==$exitProcDetails['general_admin'])
+				{
+					$_POST['gam'] =  $_POST['l1m'];
+					$_POST['gamcomments'] =  $_POST['l1mcomments'];
+				}
+				if(!empty($_POST['gam']) && !empty($_POST['gamcomments'])){
+					$data['gen_admin_status'] = $_POST['gam'];
+					$data['gen_admin_comments'] = $_POST['gamcomments'];
+					
+					$status = $_POST['gam'];
+				}else{
+					if(empty($_POST['gam']))
+						$msgarray['gam'] = 'Please select status.';
+					else
+						$post_array['gam'] = $_POST['gam'];
+					if(empty($_POST['gamcomments']))
+						$msgarray['gamcomments'] = 'Please enter comments.';
+					else
+						$post_array['gamcomments'] = $_POST['gamcomments'];
+				}
+				
+			}
+
+			/** for finance manager **/	
+			if($this->loggedInUser == $exitProcDetails['finance_manager'])
+			{
+				if($other_manager!='' && $configured_manager_arr[$other_manager]==$exitProcDetails['finance_manager'])
+				{
+					$_POST['fm'] =  $_POST['l1m'];
+					$_POST['fmcomments'] =  $_POST['l1mcomments'];
+				}
+				if(!empty($_POST['fm']) && !empty($_POST['fmcomments'])){
+					
+					$data['fin_admin_status'] = $_POST['fm'];
+					$data['fin_admin_comments'] = $_POST['fmcomments'];
+					$status = $_POST['fm'];
+				}else{
+					if(empty($_POST['fm']))
+						$msgarray['fm'] = 'Please select status.';
+					else
+						$post_array['fm'] = $_POST['fm'];
+					if(empty($_POST['fmcomments']))
+						$msgarray['fmcomments'] = 'Please enter comments.';
+					else
+						$post_array['fmcomments'] = $_POST['fmcomments'];
+				}
+				
+			}
+			//$this->view->msgarray = $msgarray;
+			/**
+			** capture form data, check validations and return error / success messages - END
+			**/
+			
+			if($this->loggedInUserGroup == MANAGEMENT_GROUP || $this->loggedInUserGroup == HR_GROUP || $this->loggedInUserRole == SUPERADMINROLE){
+				$relieving_date = sapp_Global::change_date($_POST['relieving_date'],'database');
+				$data['relieving_date'] = $relieving_date;			
+					
+					
+			}
+			
+			/**
+			** updating exit proc data
+			**/
+			if(!empty($data) && empty($msgarray))
+			{
+				$data['modifiedby'] = $this->loggedInUser;
+				$data['modifieddate'] = gmdate("Y-m-d H:i:s");
+	
+
+				$res = $this->allExitProcsModel->updateExitProc($data,$where,$id);
+
+				if($res == 'update')
+				{
+					$this->_helper->getHelper('FlashMessenger')->addMessage(array('success' => 'Exit procedure has been updated successfully.'));
+					
+					/** insert into log manager table **/
+					$result = sapp_Global::logManager(ALL_EXIT_PROCS,2,$this->loggedInUser,$id);
+
+					/** insert into exit proc history - START **/
+					$history_data = array(
+						"exit_request_id" =>  $id ,
+						//"user_id" => $this->loggedInUser ,
+						"description" => "<name> has updated exit procedure on <createddate>",	
+						"createdby" => $this->loggedInUser ,
+						"createddate" => gmdate("Y-m-d H:i:s")
+					);
+					
+					$this->exitProcModel->exitProcHistory($history_data);
+					/** insert into exit proc history - END **/
+					
+					
+					/** notification mail - START **/
+					$processData = $this->allExitProcsModel->getExitProcessData($id);//function to get exit request data
+					$user_name = '';$email_address = '';
+					if(!empty($processData))
+					{
+						$userDetails = $this->exitProcModel->getUserEmail($processData[0]['employee_id']);
+						$user_name = $userDetails[0]['userfullname'];
+						$email_address = $userDetails[0]['emailaddress'];
+					}
+					
+					$view = $this->getHelper('ViewRenderer')->view;
+					$mail_content="Exit procedure has been ".$status." by ".$this->userfullname;
+					$this->view->mail_content = $mail_content;
+					$text = $view->render('exitmailtemplates/exitmailtemplate.phtml');
+					$options['subject'] = APPLICATION_NAME.': Exit Procedure Notification';
+					$options['header'] = 'Exit Procedure';
+					$options['toEmail'] = $email_address;
+					$options['toName'] = $user_name;
+					$options['message'] = $text;
+					$options['cron'] = 'yes';
+					$result = sapp_Global::_sendEmail($options);
+					
+					
+					
+					//send email to hr
+					
+					//get hr based on settings id
+					$settingsData = $this->exitProcModel->getSettingsData($processData[0]['exit_settings_id']);
+					$user_name = '';$email_address = '';
+					if(!empty($settingsData))
+					{
+						$userDetails = $this->exitProcModel->getUserEmail($settingsData[0]['hr_manager']);
+						$user_name = $userDetails[0]['userfullname'];
+						$email_address = $userDetails[0]['emailaddress'];
+					}
+					
+					$view = $this->getHelper('ViewRenderer')->view;
+					$mail_content="Exit procedure has been ".$status." by ".$this->userfullname;
+					$this->view->mail_content = $mail_content;
+					$text = $view->render('exitmailtemplates/exitmailtemplate.phtml');
+					$options['subject'] = APPLICATION_NAME.': Exit Procedure Notification';
+					$options['header'] = 'Exit Procedure';
+					$options['toEmail'] = $email_address;
+					$options['toName'] = $user_name;
+					$options['message'] = $text;
+					$options['cron'] = 'yes';
+					$result = sapp_Global::_sendEmail($options);
+					
+					/** notification mail - END **/
+					
+				}
+				else
+				{
+					$this->_helper->getHelper('FlashMessenger')->addMessage(array('error' => 'Failed to update exit procedure. Please try again.'));
+				}
+				
+				$this->_redirect('exit/allexitproc');
+			}else{
+				$this->view->msgarray = $msgarray;
+				$this->view->post_array = $post_array;
+			}
+		}
+	}
+	public function viewAction()
+	{
+		/**
+		** check for logged in user role for add privileges
+		**/
+		if(sapp_Global::_checkprivileges(ALL_EXIT_PROCS,$this->loggedInUserGroup,$this->loggedInUserRole,'view') != 'Yes'){
+				$this->view->ermsg = 'noprivileges';
+				return;
+		} 
+		$this->view->loggedInUserRole=$this->loggedInUserRole;
+		/**
+		** capture record id to edit
+		**/
+		$id = (int)$this->_request->getParam('id');
+		$this->view->id = $id;
+		$this->view->controllername = "allexitproc";
+
+		$exitProcDetails = $this->allExitProcsModel->getExitProcDetails($id);
+		
+		/**
+		** getting hr manager, sys admin, general admin, finance manager details - START
+		**/
+		if(!empty($exitProcDetails))
+		{
+
+			$exitProcDetails = $exitProcDetails[0];
+		
+			$empIdsStr = '';
+			if(!empty($exitProcDetails['hr_manager']))
+				$empIdsStr .= $exitProcDetails['hr_manager'];
+			if(!empty($exitProcDetails['sys_admin']))
+				$empIdsStr .= ",".$exitProcDetails['sys_admin'];
+			if(!empty($exitProcDetails['general_admin']))
+				$empIdsStr .= ",".$exitProcDetails['general_admin'];
+			if(!empty($exitProcDetails['finance_manager']))
+				$empIdsStr .= ",".$exitProcDetails['finance_manager'];
+			if(!empty($exitProcDetails['l2_manager']))
+				$empIdsStr .= ",".$exitProcDetails['l2_manager'];
+			
+			$empIdsStr = trim($empIdsStr,",");
+			
+
+			$empIdsArr = explode(",",$empIdsStr);
+
+			array_push($empIdsArr, $exitProcDetails['reporting_manager']);
+			if(!empty($exitProcDetails['reporting_manager']))
+			{
+				$l2managerDetails = $this->exitProcModel->getEmployeeDetails($exitProcDetails['reporting_manager'],'one');
+				$this->view->l2managerDetails = $l2managerDetails;
+				array_push($empIdsArr,$l2managerDetails[0]['reporting_manager']);
+			}
+
+			if(in_array($this->loggedInUser,$empIdsArr) || ($this->loggedInUserGroup == MANAGEMENT_GROUP || $this->loggedInUserGroup == HR_GROUP) || $this->loggedInUserRole == SUPERADMINROLE)
+			{
+				$managersDataObj_tmp = $this->exitProcModel->getEmployeeDetails($empIdsStr,'multiple');
+				$managersDataObj = array();
+
+				if(!empty($managersDataObj_tmp))
+				{
+					foreach ($managersDataObj_tmp as &$row) {
+						$managersDataObj[$row['user_id']] = &$row;
+					}				
+				}
+				$this->view->managersDataObj = $managersDataObj;
+			
+			}
+			else
+			{
+				$this->view->ermsg = 'noprivileges';
+			}
+		}
+		$historyObj = $this->exitProcModel->getExitProcHistory($id);
+		$this->view->historyObj = $historyObj;
+		/**
+		** getting hr manager, sys admin, general admin, finance manager details - END
+		**/
+		$this->view->exitProcDetails = $exitProcDetails;
+	}
+	//function to display popup
+	public function editpopupAction()
+	{
+		Zend_Layout::getMvcInstance()->setLayoutPath(APPLICATION_PATH."/layouts/scripts/popup/");
+		$auth = Zend_Auth::getInstance();
+		if($auth->hasIdentity())
+		{
+			$loginUserId = $auth->getStorage()->read()->id;
+		}
+		$id = $this->getRequest()->getParam('id');
+		$exitProcDetails=array();
+		$exitProcDetails = $this->allExitProcsModel->getExitProcDetails($id);
+		if(!empty($exitProcDetails))
+		{
+			$exitProcDetails = $exitProcDetails[0];
+		}
+		$this->view->exitProcDetails = $exitProcDetails;
+		$this->view->id = $id;
+		$this->view->controllername='allexitproc';
+	}
+	//function to update overall status
+	public function updateexitprocessAction()
+	{
+		$result_array['result'] = '';
+		$result_array['msg'] = '';
+		$data = array();
+		$msgarray = array();
+		$this->_helper->layout->disableLayout();
+		$id = $this->_request->getParam('id');
+		$status = $this->_request->getParam('status');
+		$comments = $this->_request->getParam('comments');
+		$relieving_date = $this->_request->getParam('relieving_date');
+		if(empty($status))
+			$msgarray['hrm'] = 'Please select status.';
+		if(empty($comments))
+			$msgarray['hrmcomments'] = 'Please enter comments.';	
+		if(!empty($status) && !empty($comments)){
+			$data = array(
+					'overall_status' =>   $status,
+					'overall_comments' => $comments			
+			);
+		}
+		$relieving_date = sapp_Global::change_date($relieving_date,'database');
+		$data['relieving_date'] = $relieving_date;		
+		
+		if(!empty($data) && empty($msgarray)){
+			$data['modifiedby'] = $this->loggedInUser;
+			$data['modifieddate'] = gmdate("Y-m-d H:i:s");
+			$where = array('id=?' => $id);
+			$res = $this->allExitProcsModel->updateExitProc($data,$where,$id);
+			if($res == 'update')
+			{
+				$result_array['result'] = 'success';
+				$result_array['msg'] = 'Exit procedure has been updated successfully.';
+				/** insert into log manager table **/
+				$result = sapp_Global::logManager(ALL_EXIT_PROCS,2,$this->loggedInUser,$id);
+
+				/** insert into exit proc history - START **/
+				$history_data = array(
+					"exit_request_id" =>  $id ,
+					//"user_id" => $this->loggedInUser ,
+					"description" => "<name> has updated exit procedure on <createddate>",	
+					"createdby" => $this->loggedInUser ,
+					"createddate" => gmdate("Y-m-d H:i:s")
+				);
+				
+				
+				/** notification mail - START **/
+					$processData = $this->allExitProcsModel->getExitProcessData($id);//function to get exit request data
+					$user_name = '';$email_address = '';
+					if(!empty($processData))
+					{
+						$userDetails = $this->exitProcModel->getUserEmail($processData[0]['employee_id']);
+						$user_name = $userDetails[0]['userfullname'];
+						$email_address = $userDetails[0]['emailaddress'];
+					}
+					
+					
+					$view = $this->getHelper('ViewRenderer')->view;
+					$mail_content="Exit procedure has been ".$status." by ".$this->userfullname;
+					$this->view->mail_content = $mail_content;
+					$text = $view->render('exitmailtemplates/exitmailtemplate.phtml');
+					$options['subject'] = APPLICATION_NAME.': Exit Procedure Notification';
+					$options['header'] = 'Exit Procedure';
+					$options['toEmail'] = $email_address;
+					$options['toName'] = $user_name;
+					$options['message'] = $text;
+					$options['cron'] = 'yes';
+					$result = sapp_Global::_sendEmail($options);
+					
+					
+					
+					//get hr based on settings id
+					$settingsData = $this->exitProcModel->getSettingsData($processData[0]['exit_settings_id']);
+					$user_name = '';$email_address = '';
+					if(!empty($settingsData))
+					{
+						$userDetails = $this->exitProcModel->getUserEmail($settingsData[0]['hr_manager']);
+						$user_name = $userDetails[0]['userfullname'];
+						$email_address = $userDetails[0]['emailaddress'];
+					}
+					
+					$view = $this->getHelper('ViewRenderer')->view;
+					$mail_content="Exit procedure has been ".$status." by ".$this->userfullname;
+					$this->view->mail_content = $mail_content;
+					$text = $view->render('exitmailtemplates/exitmailtemplate.phtml');
+					$options['subject'] = APPLICATION_NAME.': Exit Procedure Notification';
+					$options['header'] = 'Exit Procedure';
+					$options['toEmail'] = $email_address;
+					$options['toName'] = $user_name;
+					$options['message'] = $text;
+					$options['cron'] = 'yes';
+					$result = sapp_Global::_sendEmail($options);
+					
+					/** notification mail - END **/
+				
+				$this->exitProcModel->exitProcHistory($history_data);
+				/** insert into exit proc history - END **/
+			}
+			else
+			{
+				$result_array['result'] = 'failure';
+				$result_array['msg'] = 'Failed to update exit procedure. Please try again.';
+			}
+		}
+		$this->_helper->json($result_array);
+	}
+	//function to assign questions to employees after exit process has approved
+	public function assignquestionsAction()
+	{
+		$auth = Zend_Auth::getInstance();
+		if($auth->hasIdentity()){
+			$loginUserId = $auth->getStorage()->read()->id;
+			$loginuserRole = $auth->getStorage()->read()->emprole;
+			$loginuserGroup = $auth->getStorage()->read()->group_id;
+		}
+		$popConfigPermission = '';
+			
+		if(sapp_Global::_checkprivileges(EXIT_QUESTIONS,$loginuserGroup,$loginuserRole,'add') == 'Yes'){
+			$popConfigPermission = 'yes';
+		}
+	
+		$id = $this->_request->getParam('id');
+		// based on process id get data
+		$exitProcDetails = $this->allExitProcsModel->getExitProcDetails($id);
+		$questionsArr=array();
+		if(!empty($exitProcDetails))
+		{
+			$exitProcDetails = $exitProcDetails[0];
+			$this->view->exit_type_id = $exitProcDetails['exit_type_id'];
+			// get questions based on exit type id
+			$questionsArr =$this->exitquestionsmodel->getExitQuestionsByexitId($exitProcDetails['exit_type_id']);
+			
+		}
+		$question_response=array();
+		$assigned_ques = array();
+		$emp_response_array =array();
+		$assignedques_array=array();
+		if(!empty($exitProcDetails))
+		{
+			//based on user_id and process id get the data
+			$question_response = $this->exitquesresponse->getResponseData($exitProcDetails['employee_id'],$id);
+		}
+		if(!empty($question_response ))
+		{
+			$assigned_ques=explode(',',$question_response[0]['hr_qs']);
+			$emp_response_array = json_decode($question_response[0]['employee_response'],true);
+			$this->view->question_employee_response = $question_response[0]['employee_response'];
+			$assignedques_array=$this->exitquesresponse->getEmployeeQuestions($question_response[0]['hr_qs']);
+		}
+	
+		$this->view->emp_response_array = $emp_response_array;
+		$this->view->questionsArr = $questionsArr;
+		$this->view->checkArr = $assigned_ques;
+		$this->view->assignedques_array = $assignedques_array;
+		$this->view->popConfigPermission = $popConfigPermission;
+		if($this->getRequest()->getPost())
+		{
+
+				$selectedquestions = $this->getRequest()->getParam('check');
+				$qs_Arr = implode(',', $selectedquestions);
+				foreach($selectedquestions  as $key=>$val)
+				{
+
+					$update_data = array("isused"=>1,
+										"modifieddate"=>gmdate("Y-m-d H:i:s"),
+										"modifiedby"=>$loginUserId 
+										);
+					$update_where = array('id=?' => $val);	
+					$this->exitquestionsmodel->SaveorUpdateExitQuestionData($update_data,$update_where);
+				} 
+				// check record exits or not in main_exit_question_response table if exist update the record 
+				
+				if(count($question_response) == 0)
+				{
+
+					$data = array('user_id'=>$exitProcDetails['employee_id'],
+								 'exit_initiation_id'=>$id, 
+								 'hr_qs'=>$qs_Arr ,	
+								'createdby'=>$loginUserId,	
+								'createddate'=>gmdate("Y-m-d H:i:s")						
+						);
+					$where = '';  
+				}
+				else
+				{
+					// if uncheck the question update isused=0 in exit_questions table
+					foreach($assigned_ques  as $key=>$val)
+					{
+						 if (!in_array($val,$selectedquestions ))
+						 {							
+							 $update_data = array("isused"=>0,
+										"modifieddate"=>gmdate("Y-m-d H:i:s"),
+										"modifiedby"=>$loginUserId 
+										);
+							$update_where = array('id=?' => $val);								 
+							$this->exitquestionsmodel->SaveorUpdateExitQuestionData($update_data,$update_where);
+						 }
+						 
+						 
+					}
+					
+					$data = array(
+								 'hr_qs'=>$qs_Arr ,	
+								'modifiedby'=>$loginUserId,	
+								'modifieddate'=>gmdate("Y-m-d H:i:s")						
+						);
+					 $where = " user_id = '".$exitProcDetails['employee_id']."' and exit_initiation_id='".$id."' and isactive= 1 ";
+					
+				}
+				 
+				
+				$result=$this->exitquesresponse->SaveorUpdateQuestionsData($data,$where);
+				$this->_helper->getHelper("FlashMessenger")->addMessage(array("success"=>"Questions have been configured successfully."));	
+				
+				$this->_redirect('exit/allexitproc');	
+				
+		}
+	}
+	
+}
+?>
\ No newline at end of file

--- application/modules/exit/controllers/ConfigureexitqsController.php ---
@@ -0,0 +1,616 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+class Exit_ConfigureexitqsController extends Zend_Controller_Action
+{
+
+	private $options;
+
+	public function preDispatch()
+	{
+	}
+	public function init()
+	{
+		$this->_options = $this->getInvokeArg('bootstrap')->getOptions();
+		
+	}
+	public function indexAction()
+	{
+		$exitquestionsModel = new Exit_Model_Exitquestions();	
+        $call = $this->_getParam('call');
+		if($call == 'ajaxcall')
+				$this->_helper->layout->disableLayout();
+		
+		$view = Zend_Layout::getMvcInstance()->getView();		
+		$objname = $this->_getParam('objname');
+		$refresh = $this->_getParam('refresh');
+		$dashboardcall = $this->_getParam('dashboardcall');
+		$data = array();
+		$searchQuery = '';
+		$searchArray = array();
+		$tablecontent='';
+		
+		if($refresh == 'refresh')
+		{
+		    if($dashboardcall == 'Yes')
+				$perPage = DASHBOARD_PERPAGE;
+			else	
+				$perPage = PERPAGE;
+			$sort = 'DESC';$by = 'eq.modifieddate';$pageNo = 1;$searchData = '';$searchQuery = '';$searchArray='';
+		}
+		else 
+		{
+			$sort = ($this->_getParam('sort') !='')? $this->_getParam('sort'):'DESC';
+			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'eq.modifieddate';
+			if($dashboardcall == 'Yes')
+				$perPage = $this->_getParam('per_page',DASHBOARD_PERPAGE);
+			else 
+				$perPage = $this->_getParam('per_page',PERPAGE);
+			$pageNo = $this->_getParam('page', 1);
+			/** search from grid - START **/
+			$searchData = $this->_getParam('searchData');	
+			$searchData = rtrim($searchData,',');
+			/** search from grid - END **/
+		}
+				
+		$dataTmp = $exitquestionsModel->getGrid($sort, $by, $perPage, $pageNo, $searchData, $call, $dashboardcall);		 		
+					
+		array_push($data,$dataTmp);
+		$this->view->dataArray = $data;
+		$this->view->call = $call ;
+		$this->view->messages = $this->_helper->flashMessenger->getMessages();
+		
+	}
+	
+	
+	/**
+	**	this action is used to display add form
+	**  if post values are available will create new exit type
+	**	@parameters 
+	**		string exit type (mandatory)
+	**
+	**	@return parameters
+	**		@object success/failure messages		
+	**/
+	public function addAction()
+	{
+			$auth = Zend_Auth::getInstance();
+			if($auth->hasIdentity()){
+						$loginUserId = $auth->getStorage()->read()->id;
+						$loginuserRole = $auth->getStorage()->read()->emprole;
+						$loginuserGroup = $auth->getStorage()->read()->group_id;
+						
+			}
+			$callval = $this->getRequest()->getParam('call');
+			if($callval == 'ajaxcall')
+				$this->_helper->layout->disableLayout();
+			
+			$exitquestionsform = new Exit_Form_Exitquestions();
+			$exittypesModel = new Exit_Model_Exittypes();
+			$msgarray = array();
+			$popConfigPermission = array();
+			
+			if(sapp_Global::_checkprivileges(EXIT_QUESTIONS,$loginuserGroup,$loginuserRole,'add') == 'Yes'){
+				array_push($popConfigPermission,'exitquestions');
+			}
+
+			if(sapp_Global::_checkprivileges(EXIT_PROC_TYPES,$loginuserGroup,$loginuserRole,'add') == 'Yes'){
+					array_push($popConfigPermission,'exittypes');
+			}
+			
+			$exittypesData = $exittypesModel->getExittypesData();
+			
+				if(sizeof($exittypesData ) > 0)
+				{ 			
+					foreach ($exittypesData  as $ac){
+						$exitquestionsform->exit_type_id->addMultiOption($ac['id'],utf8_encode($ac['exit_type']));
+					}
+				}
+				else
+				{
+					$msgarray['exit_type_id'] = 'Exit types are not configured yet.';
+					$this->view->configuremsg = 'notconfigurable';
+				}
+			$this->view->popConfigPermission = $popConfigPermission;
+			$exitquestionsform->setAttrib('action',BASE_URL.'exit/configureexitqs/add');
+			$this->view->form = $exitquestionsform; 
+			$this->view->msgarray = $msgarray; 
+			$this->view->ermsg = '';
+				if($this->getRequest()->getPost()){
+					 $result = $this->add($exitquestionsform);	
+					 $this->view->msgarray = $result; 
+				}  		
+		
+	}
+	
+	
+	// edit exit questions data,if it in use it can not be edited.
+	
+	public function editAction()
+	{	
+
+	    $auth = Zend_Auth::getInstance();
+            if($auth->hasIdentity())
+            {
+                $loginUserId = $auth->getStorage()->read()->id;
+                $loginuserRole = $auth->getStorage()->read()->emprole;
+                $loginuserGroup = $auth->getStorage()->read()->group_id;
+            }
+	 	
+            $id = $this->getRequest()->getParam('id');
+            $callval = $this->getRequest()->getParam('call');
+            if($callval == 'ajaxcall')
+                $this->_helper->layout->disableLayout();
+		
+		$exitquestionsform = new Exit_Form_Exitquestions();
+		$exittypesModel = new Exit_Model_Exittypes();
+		$exitquestionsModel = new Exit_Model_Exitquestions();
+		$msgarray = array();
+		$popConfigPermission = array();
+		
+		if(sapp_Global::_checkprivileges(EXIT_QUESTIONS,$loginuserGroup,$loginuserRole,'edit') == 'Yes'){
+	 		array_push($popConfigPermission,'exitquestions');
+	 	}
+		$exitquestionsform->submit->setLabel('Update');
+		
+		try
+        {		
+			if($id)
+			{
+			    if(is_numeric($id) && $id>0)
+				{
+					$data = $exitquestionsModel->getExitQuestionbyID($id);
+					if(!empty($data))
+					{
+						$data = $data[0];
+						  
+						// When question is already question details can't be edited
+						if ($data['isused'] == 1) {
+							$this->view->ermsg = 'norecord';
+						} else {
+							$exittypesData = $exittypesModel->getExittypesData();
+					 		if(sizeof($exittypesData) > 0)
+				            { 			
+								foreach ($exittypesData as $ac){
+									$exitquestionsform->exit_type_id->addMultiOption($ac['id'],utf8_encode($ac['exit_type']));
+								}
+							}  
+							$exitquestionsform->populate($data);
+							$exitquestionsform->setDefault('exit_type_id',$data['exit_type_id']);
+							$exitquestionsform->setAttrib('action',BASE_URL.'exit/configureexitqs/edit/id/'.$id);
+	                        $this->view->data = $data;							
+						}
+					}else
+					{
+						$this->view->ermsg = 'norecord';
+					}
+				}
+                else
+				{
+					$this->view->ermsg = 'norecord';
+				}				
+			}
+			else
+			{
+				$this->view->ermsg = '';
+			}
+		}	
+		catch(Exception $e)
+		{
+			   $this->view->ermsg = 'nodata';
+		}	
+		$this->view->form = $exitquestionsform;
+		if($this->getRequest()->getPost()){
+      		$result = $this->save($exitquestionsform);	
+		    $this->view->msgarray = $result; 
+		}
+		$this->render('form');	
+	}
+	
+	// save exit questions
+	
+	public function save($exitquestionsform)
+	{
+	  $auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity()){
+				 $loginUserId = $auth->getStorage()->read()->id;
+				 $loginuserRole = $auth->getStorage()->read()->emprole;
+				 $loginuserGroup = $auth->getStorage()->read()->group_id;
+		} 
+		$exitquestionsModel = new Exit_Model_Exitquestions();
+		$msgarray = array();
+		  if($exitquestionsform->isValid($this->_request->getPost())){
+       try{
+            $id = $this->_request->getParam('id');
+            $exit_type_id = $this->_request->getParam('exit_type_id');
+            $question = trim($this->_request->getParam('question'));	
+			$description = trim($this->_request->getParam('description'));
+			$actionflag = '';
+			$tableid  = ''; 
+			   $data = array('exit_type_id'=>$exit_type_id,
+			                 'question'=>$question, 
+							 'description'=>($description!=''?$description:NULL),			   		   
+							 'modifiedby'=>$loginUserId,
+							 'modifieddate'=>gmdate("Y-m-d H:i:s")
+					);
+				if($id!=''){
+					$where = array('id=?'=>$id);  
+					$actionflag = 2;
+				}
+				else
+				{
+				
+					$data['createdby'] = $loginUserId;
+					$data['createddate'] = gmdate("Y-m-d H:i:s");
+					$data['isactive'] = 1;
+					$where = '';
+					$actionflag = 1;
+				}
+				$Id = $exitquestionsModel->SaveorUpdateExitQuestionData($data, $where);
+				if($Id == 'update')
+				{
+				   $tableid = $id;
+				   $this->_helper->getHelper("FlashMessenger")->addMessage(array("success"=>"Question updated successfully."));
+				}   
+				else
+				{
+				   $tableid = $Id; 	
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("success"=>"Questions added successfully."));					   
+				}   
+				$menuID = EXIT_QUESTIONS;
+				$result = sapp_Global::logManager($menuID,$actionflag,$loginUserId,$tableid);
+				$this->_redirect('exit/configureexitqs');	
+        }
+		catch(Exception $e)
+        {
+             $msgarray['exit_type_id'] = "Something went wrong, please try again later.";
+             return $msgarray;
+        }
+		}else
+		{
+			$messages = $exitquestionsform->getMessages();
+			foreach ($messages as $key => $val)
+				{
+					foreach($val as $key2 => $val2)
+					 {
+						$msgarray[$key] = $val2;
+						break;
+					 }
+				}
+			return $msgarray;	
+		}
+	
+	}
+	
+	public function add($exitquestionsform)
+	{
+	  $auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity()){
+				 $loginUserId = $auth->getStorage()->read()->id;
+				  $loginuserRole = $auth->getStorage()->read()->emprole;
+				 $loginuserGroup = $auth->getStorage()->read()->group_id;
+		} 
+	    $exitquestionsmodel = new Exit_Model_Exitquestions();	
+		$msgarray = array();
+		$errorflag = 'true';
+		$exit_type_id = $this->_request->getParam('exit_type_id');
+		$question_arr = $this->_request->getParam('question');
+		$quesArr = array_count_values($question_arr);
+		$description_arr = $this->_request->getParam('description');
+		if(!empty($question_arr))
+		{
+			for($i=0;$i<sizeof($question_arr);$i++)
+			{
+				$quesArr = array_count_values($question_arr);
+				if($question_arr[$i] == '') {
+					$msgarray['ques_name'][$i] = 'Please enter question.';
+					$errorflag = 'false';
+				} else if(!preg_match('/^[a-zA-Z0-9.\- ?\',\/#@$&*()!]+$/', $question_arr[$i])) {
+					$msgarray['ques_name'][$i] = 'Please enter valid question.';
+					$errorflag = 'false';
+				} 
+			}
+			$msgarray['requestsize'] = sizeof($question_arr);
+		}	
+		
+		  if($exitquestionsform->isValid($this->_request->getPost()) && $errorflag == 'true'){
+            try{
+            $id = $this->_request->getParam('id');
+            $exit_type_id = $this->_request->getParam('exit_type_id');
+			$actionflag = 1;
+			$tableid  = ''; 
+			$where = '';
+			for($i=0;$i<sizeof($question_arr);$i++)
+			{
+			   $data = array('exit_type_id'=>$exit_type_id,
+			                 'question'=>trim($question_arr[$i]), 
+							 'description'=>($description_arr[$i]!=''?trim($description_arr[$i]):NULL),
+							  'createdby' => $loginUserId,
+							  'modifiedby'=>$loginUserId,
+							  'modifieddate'=>gmdate("Y-m-d H:i:s"),
+							  'createddate'=> gmdate("Y-m-d H:i:s"),
+							  'isactive'=> 1
+					);
+				// save exit type questions 
+				$Id = $exitquestionsmodel->SaveorUpdateExitQuestionData($data, $where);
+				$tableid = $Id; 	
+				$menuID = EXIT_QUESTIONS;
+				$result = sapp_Global::logManager($menuID,$actionflag,$loginUserId,$tableid);
+			}
+				
+				$this->_helper->getHelper("FlashMessenger")->addMessage(array("success"=>"Questions added successfully."));
+				$this->_redirect('exit/configureexitqs');	
+                  }
+        catch(Exception $e)
+          {
+             $msgarray['exit_type_id'] = "Something went wrong, please try again.";
+             return $msgarray;
+          }
+		}else
+		{
+			$messages = $exitquestionsform->getMessages();
+			foreach ($messages as $key => $val)
+				{
+					foreach($val as $key2 => $val2)
+					 {
+						$msgarray[$key] = $val2;
+						break;
+					 }
+				}
+			return $msgarray;	
+		}
+	
+	}
+	
+	//view for exit questions
+	
+	 public function viewAction()
+	{	
+		$auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity())
+        {
+            $loginUserId = $auth->getStorage()->read()->id;
+            $login_group_id = $auth->getStorage()->read()->group_id;
+            $login_role_id = $auth->getStorage()->read()->emprole;
+        }
+		
+		$id = $this->getRequest()->getParam('id');
+		$callval = $this->getRequest()->getParam('call');
+		if($callval == 'ajaxcall')
+			$this->_helper->layout->disableLayout();
+		$objName = 'configureexitqs';
+		$exittypesModel = new Exit_Model_Exittypes();
+		$exitquestionsmodel = new Exit_Model_Exitquestions();
+		try
+		{
+		    if($id)
+			{
+			    if(is_numeric($id) && $id>0)
+				{
+					// get questions data based on id
+					$data = $exitquestionsmodel->getExitQuestionbyID($id);
+					$previ_data = sapp_Global::_checkprivileges(EXIT_QUESTIONS,$login_group_id,$login_role_id,'view');
+					
+					if(!empty($data))
+					{
+						$data = $data[0]; 
+						$exittypeData = $exittypesModel->getExittypeById($data['exit_type_id']);
+						if(sizeof($exittypeData) > 0)
+						{
+							$this->view->ermsg = ''; 
+	                    	$this->view->data = $data;
+							$this->view->previ_data = $previ_data;
+	                   	 	$this->view->id = $id;
+	                    	$this->view->controllername = $objName;
+	                    	$exittype_name = $exittypeData[0]['exit_type'];	
+	                    	$this->view->exittype_name = $exittype_name;	
+						}
+					}
+					else
+					{
+					   $this->view->ermsg = 'norecord';
+					}
+                } 
+                else
+				{
+				   $this->view->ermsg = 'norecord';
+				}				
+			}
+            else
+			{
+			   $this->view->ermsg = 'norecord';
+			} 	
+			$this->view->controllername =	$objName ;					
+		}
+		catch(Exception $e)
+		{
+			   $this->view->ermsg = 'nodata';
+		}
+							
+	}
+	
+	// delete questions if it is not used in exit process
+	public function deleteAction()
+	{
+	     $auth = Zend_Auth::getInstance();
+     		if($auth->hasIdentity()){
+					$loginUserId = $auth->getStorage()->read()->id;
+					$loginuserRole = $auth->getStorage()->read()->emprole;
+				 	$loginuserGroup = $auth->getStorage()->read()->group_id;
+				}
+		 $id = $this->_request->getParam('objid');
+		 // differentiate grid delete and view page delete based on delete flag
+		 $deleteflag= $this->_request->getParam('deleteflag');
+		 $messages['message'] = '';
+		 $messages['msgtype'] = '';
+		 $actionflag = 3;
+		    if($id)
+			{
+				$exitquestionsmodel = new Exit_Model_Exitquestions();
+				$questionsdata = $exitquestionsmodel->getExitQuestionbyID($id);
+				//if question is in use in exit process it can not be deleted
+				if($questionsdata[0]['isused'] == 0)	
+				{
+					  $data = array('isactive'=>0,'modifieddate'=>gmdate("Y-m-d H:i:s"),'modifiedby'=>$loginUserId);
+					  $where = array('id=?'=>$id);
+					  $Id = $exitquestionsmodel->SaveorUpdateExitQuestionData($data, $where);
+					    if($Id == 'update')
+						{
+							$menuID = EXIT_QUESTIONS;
+							$result = sapp_Global::logManager($menuID,$actionflag,$loginUserId,$id);
+												   
+							$messages['message'] = 'Question deleted successfully.';
+							$messages['msgtype'] = 'success';
+						}   
+						else
+						{
+		                   $messages['message'] = 'Something went wrong, please try again later.';
+		                   $messages['msgtype'] = 'error';
+		                }
+				  }else
+				  {
+				  	   $messages['message'] = 'Question cannot be deleted as it is being used in exit process.';
+	                   $messages['msgtype'] = 'error';
+				  } 				   
+			}
+			else
+			{ 
+			 $messages['message'] = 'Question cannot be deleted.';
+			 $messages['msgtype'] = 'error';
+			}
+			if($deleteflag==1)
+			{
+				if(	$messages['msgtype'] == 'error')
+				{
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("error"=>$messages['message'],"msgtype"=>$messages['msgtype'] ,'deleteflag'=>$deleteflag));
+				}
+				if(	$messages['msgtype'] == 'success')
+				{
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("success"=>$messages['message'],"msgtype"=>$messages['msgtype'],'deleteflag'=>$deleteflag));
+				}
+				
+			}
+			$this->_helper->json($messages);
+		
+	}
+	//function for add questions in popup
+	public function addpopupAction()
+	{
+		Zend_Layout::getMvcInstance()->setLayoutPath(APPLICATION_PATH."/layouts/scripts/popup/");
+		$auth = Zend_Auth::getInstance();
+		if($auth->hasIdentity()){
+			$loginUserId = $auth->getStorage()->read()->id;
+		}
+		
+		$isfrompopup = $this->getRequest()->getParam('isfrompopup');
+		$exit_type_id = $this->_request->getParam('exit_type_id');
+		$exitquestionsform = new Exit_Form_Exitquestions();
+		$exitquestionsform->setAction(BASE_URL.'exit/configureexitqs/addpopup');
+		$controllername = 'configureexitqs';
+		$this->view->controllername =$controllername ;
+		$this->view->isfrompopup=$isfrompopup;
+		$this->view->form = $exitquestionsform;
+		$this->view->exit_type_id = $exit_type_id;
+		
+		if($this->getRequest()->getPost()){
+			$exitquestionsmodel = new Exit_Model_Exitquestions();	
+			$msgarray = array();
+			$errorflag = 'true';
+			$exit_type_id = $this->_request->getParam('exit_type_id');
+			$question_arr = $this->_request->getParam('question');
+			$quesArr = array_count_values($question_arr);
+			$description_arr = $this->_request->getParam('description');
+			if(!empty($question_arr))
+			{
+				for($i=0;$i<sizeof($question_arr);$i++)
+				{
+					$quesArr = array_count_values($question_arr);
+					if($question_arr[$i] == '') {
+						$msgarray['ques_name'][$i] = 'Please enter question.';
+						$errorflag = 'false';
+					} else if(!preg_match('/^[a-zA-Z0-9.\- ?\',\/#@$&*()!]+$/', $question_arr[$i])) {
+						$msgarray['ques_name'][$i] = 'Please enter valid question.';
+						$errorflag = 'false';
+					} 
+				}
+				$msgarray['requestsize'] = sizeof($question_arr);
+			}	
+		
+		  if($exitquestionsform->isValid($this->_request->getPost()) && $errorflag == 'true'){
+            try{
+				$id = $this->_request->getParam('id');
+				$exit_type_id = $this->_request->getParam('exit_type_id');
+				$actionflag = 1;
+				$tableid  = ''; 
+				$where = '';
+				for($i=0;$i<sizeof($question_arr);$i++)
+				{
+				   $data = array('exit_type_id'=>$exit_type_id,
+								 'question'=>trim($question_arr[$i]), 
+								 'description'=>($description_arr[$i]!=''?trim($description_arr[$i]):NULL),
+								  'createdby' => $loginUserId,
+								  'modifiedby'=>$loginUserId,
+								  'modifieddate'=>gmdate("Y-m-d H:i:s"),
+								  'createddate'=> gmdate("Y-m-d H:i:s"),
+								  'isactive'=> 1
+						);
+					// save exit type questions 
+					$Id = $exitquestionsmodel->SaveorUpdateExitQuestionData($data, $where);
+					$tableid = $Id; 	
+					$menuID = EXIT_QUESTIONS;
+					$result = sapp_Global::logManager($menuID,$actionflag,$loginUserId,$tableid);
+				}
+					$questionsArr =$exitquestionsmodel->getExitQuestionsByexitId($exit_type_id);
+					
+					$this->view->eventact = 'added';
+					$close = 'close';
+					$this->view->popup=$close; 
+				
+          }
+			catch(Exception $e)
+          {
+             $msgarray['question'] = "Something went wrong, please try again.";
+             return $msgarray;
+          }
+		  
+		}
+			else
+			{
+				$messages = $exitquestionsform->getMessages();
+				foreach ($messages as $key => $val)
+				{
+					foreach($val as $key2 => $val2)
+					{
+						$msgarray[$key] = $val2;
+						break;
+					}
+				}
+				$this->view->msgarray = $msgarray;
+					
+			}
+		}
+		
+		
+	}
+	
+	
+}
+?>
\ No newline at end of file

--- application/modules/exit/controllers/ExitprocController.php ---
@@ -0,0 +1,532 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+/**
+** controller used to raise exit proc
+**/
+class Exit_ExitprocController extends Zend_Controller_Action
+{
+	private $exitProcModel;
+	private $options;
+	private $loggedInUser = '';
+	private $loggedInUserGroup = '';
+	private $loggedInUserRole = '';
+	
+	public function preDispatch()
+	{	
+		$ajaxContext = $this->_helper->getHelper('AjaxContext');
+		$ajaxContext->addActionContext('savequestions', 'json')->initContext();
+	
+	}
+	public function init()
+	{
+		$this->_options = $this->getInvokeArg('bootstrap')->getOptions();
+		/** Instantiate exit proc settings model **/
+		$this->exitProcModel = new Exit_Model_Exitproc();
+
+		/**
+		** Initiating zend auth object
+		** for getting logged in user id
+		**/
+		$auth = Zend_Auth::getInstance();
+		
+		if($auth->hasIdentity())
+		{
+			$this->loggedInUser = $auth->getStorage()->read()->id;
+			$this->loggedInUserRole = $auth->getStorage()->read()->emprole;
+			$this->loggedInUserGroup = $auth->getStorage()->read()->group_id;
+			$this->businessunit_id = $auth->getStorage()->read()->businessunit_id;
+			$this->department_id = $auth->getStorage()->read()->department_id;
+			$this->userfullname = $auth->getStorage()->read()->userfullname;
+			$this->is_org_head = $auth->getStorage()->read()->is_orghead;
+		}
+	}
+	public function indexAction()
+	{
+		/**
+		**	check for ajax call
+		**/
+		$call = $this->_getParam('call');
+		if($call == 'ajaxcall')
+				$this->_helper->layout->disableLayout();	
+		
+		/**
+		** capture request parameters 
+		**/
+		$objname = $this->_getParam('objname');
+		$refresh = $this->_getParam('refresh');
+		$dashboardcall = $this->_getParam('dashboardcall');
+		$context = $this->_getParam('context');
+		$data = array();
+		$searchQuery = '';
+		$searchArray = array();
+		$tablecontent='';
+		/** check for refresh button event 
+		**  If yes, build default parameters
+		**	else, build parameters accordingly
+		**/
+		if($refresh == 'refresh')
+		{
+			if($dashboardcall == 'Yes')
+				$perPage = DASHBOARD_PERPAGE;
+			else	
+				$perPage = PERPAGE;
+
+			$sort = 'DESC';$by = 'e.modifieddate';$pageNo = 1;$searchData = '';$searchQuery = '';$searchArray='';
+		}
+		else 
+		{
+			/** build sort parameter **/
+			$sort = ($this->_getParam('sort') !='')? $this->_getParam('sort'):'DESC';
+
+			/** build order by parameter **/
+			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'e.modifieddate';
+			
+			/** get records per page parameter **/
+			if($dashboardcall == 'Yes')
+				$perPage = $this->_getParam('per_page',DASHBOARD_PERPAGE);
+			else 
+				$perPage = $this->_getParam('per_page',PERPAGE);
+
+			/** set page number parameter **/
+			$pageNo = $this->_getParam('page', 1);
+			
+			/** build search parameters **/
+			$searchData = $this->_getParam('searchData');	
+			$searchData = rtrim($searchData,',');					
+		}
+
+		/**
+		**	based on search, sort, pagination, order by parameters 
+		**  get data object to build exit proc settings grid
+		**/
+		$dataTmp = $this->exitProcModel->getGrid($sort, $by, $perPage, $pageNo, $searchData,$call,$dashboardcall,$context);
+		array_push($data,$dataTmp);
+		
+		/**
+		** send data objects to view
+		**/
+		$this->view->dataArray = $data;
+		$this->view->call = $call ;
+		
+		/**
+		** send flash messages to view
+		**/
+		$this->view->messages = $this->_helper->flashMessenger->getMessages();
+	}
+
+	public function save($exitProc)
+	{
+		$exitType = $this->_request->getParam('exit_type');	
+		$comments = $this->_request->getParam('comments');	
+		$epSettingsObj = $this->exitProcModel->getSettings($this->businessunit_id,$this->department_id);
+		$msgarray = array();
+		$auth = Zend_Auth::getInstance();
+		//get login user reporting manager
+		$reporting_manager = ($auth->getStorage()->read()->reporting_manager)?$auth->getStorage()->read()->reporting_manager:'';
+		
+		$managersArray = array();
+		$ep_config_id ='';
+		$noticeperiod_days='';
+		if(!empty($epSettingsObj))
+		{
+			$ep_config_id = $epSettingsObj[0]['id'];
+			$managersArray = array($reporting_manager,$epSettingsObj[0]['l2_manager'],$epSettingsObj[0]['hr_manager'],$epSettingsObj[0]['sys_admin'],$epSettingsObj[0]['general_admin'],$epSettingsObj[0]['finance_manager']);
+			$noticeperiod_days = $epSettingsObj[0]['notice_period'];// notice period days
+		}
+
+		if($exitProc->isvalid($this->_request->getPost()) && !empty($ep_config_id))
+		{
+			//calculate relieving date based on notice period days
+			$d = new DateTime();
+			$d->modify("+$noticeperiod_days days"); // add notice period days to current date
+			$expecting_releaving_date = $d->format("Y-m-d");
+			
+			$year = date('Y', strtotime($expecting_releaving_date)); //get releaving date month and year
+			$month = date('m', strtotime($expecting_releaving_date));//get releaving date month and year
+			
+			$usersModel = new Timemanagement_Model_Users();
+			$empHolidaysWeekends = $usersModel->getEmployeeHolidaysNWeekends($this->loggedInUser,$year,$month); // get emp holidays and weekends
+			$holidays = $empHolidaysWeekends[0]['holiday_dates'];
+			$holidayDates = explode(',',$holidays); // emp holidays array in a releaving month
+			$start_Date = date("Y-m-01", strtotime($expecting_releaving_date));
+			$end_Date = date("Y-m-t", strtotime($expecting_releaving_date));
+			$empWeekends = $usersModel->getWeekend($start_Date,$end_Date,$this->department_id); //get emp weekends in a releaving month
+			$non_working_days = array_merge($holidayDates,$empWeekends); // total non working days in a releaving month
+			
+			$releaving_date = $expecting_releaving_date;
+			if(!empty($non_working_days))
+			{
+				for($i=1;$i<=7;$i++){
+					if(in_array($expecting_releaving_date,$non_working_days))// check if releaving day exist in non working day
+					{
+						//remove one day if exist
+						$releaving_date = date('Y-m-d',(strtotime ( "-1 day" , strtotime ( $expecting_releaving_date) ) ));
+						$expecting_releaving_date = $releaving_date;
+					}
+				}
+			}
+
+			
+				$data = array(
+					"employee_id" =>  $this->loggedInUser ,
+					"exit_settings_id" => $ep_config_id,
+					"exit_type_id" => $exitType,
+					"employee_comments" => $comments ,
+					"l1_status" => 'Pending',
+					"l2_status" => 'Pending',
+					"hr_manager_status" => 'Pending',
+					"sys_admin_status" => 'Pending',
+					"gen_admin_status" =>'Pending',
+					"fin_admin_status" => 'Pending',
+					"createdby" => $this->loggedInUser ,
+					"createddate" => gmdate("Y-m-d H:i:s") ,
+					"relieving_date" => $expecting_releaving_date
+				);
+			
+			$res = $this->exitProcModel->save($data);
+			if($res)
+			{
+				/** insert into log manager table **/
+				sapp_Global::logManager(INITIATE_EXIT_PROC,1,$this->loggedInUser,$res);
+				
+				/** insert into exit proc history - START **/
+				$history_data = array(
+					"exit_request_id" =>  $res ,
+					"description" => "<name> has initiated exit procedure on <createddate>",	
+					"createdby" => $this->loggedInUser ,
+					"createddate" => gmdate("Y-m-d H:i:s")
+				);
+				
+				$this->exitProcModel->exitProcHistory($history_data);
+				/** insert into exit proc history - END **/
+				
+				/** insert into exit main_exit_types - START **/
+				$this->exitTypesModel = new Exit_Model_Exittypes();
+				$update_data = array("isused"=>1,
+									"modifieddate"=>gmdate("Y-m-d H:i:s"),
+									"modifiedby"=>$this->loggedInUser 
+									);
+				$update_where = array('id=?' => $exitType);					
+				$this->exitTypesModel->SaveorUpdateExitTypesData($update_data,$update_where);
+				
+				/** insert into exit main_exit_types - END **/
+				
+				
+				
+				/** notification mail - START **/
+				$managers_email_array = array();
+				$email_array = array();
+				if(!empty($managersArray)){
+					foreach($managersArray as $userId){
+						if($userId!=''){
+							$email_array = $this->exitProcModel->getUserEmail($userId);
+							$userfullname = ($email_array[0]['userfullname'])?$email_array[0]['userfullname']:'';
+							$emailaddress = ($email_array[0]['emailaddress'])?$email_array[0]['emailaddress']:'';
+							$managers_email_array[$userfullname] = $emailaddress;
+						}
+					}
+				}
+				if(!empty($managers_email_array)){
+					foreach($managers_email_array as $user_name => $manager_email)
+					{
+						
+						
+						//$base_url = 'http://'.$this->getRequest()->getHttpHost() . $this->getRequest()->getBaseUrl();
+						
+						$view = $this->getHelper('ViewRenderer')->view;
+						$mail_content="Exit procedure has been initialized by ".$this->userfullname;
+						$this->view->mail_content = $mail_content;
+						$text = $view->render('exitmailtemplates/exitmailtemplate.phtml');
+						$options['subject'] = APPLICATION_NAME.': Exit Procedure Notification';
+						$options['header'] = 'Exit Procedure';
+						$options['toEmail'] = $manager_email;
+						$options['toName'] = $user_name;
+						$options['message'] = $text;
+						$options['cron'] = 'yes';
+						$result = sapp_Global::_sendEmail($options);
+						
+						
+					}
+				}
+				
+				/** notification mail - END **/
+				
+				$this->_helper->getHelper('FlashMessenger')->addMessage(array('success' => 'Employee exit procedure has been initiated successfully.'));
+				$this->_redirect('exit/exitproc/view/id/'.$res);
+			}
+			else
+			{
+				$this->_helper->getHelper('FlashMessenger')->addMessage(array('error' => 'Failed to initiate employee exit procedure. Please try again.'));
+				$this->_redirect('exit/exitproc');
+			}
+			
+			
+		}
+		else
+		{
+			//added condition for management group
+			if($this->loggedInUserGroup==MANAGEMENT_GROUP && empty($ep_config_id))
+				$msgarray['exit_type'] = 'You are not associated with any department so you can not initialize exit request.';
+			else if(empty($ep_config_id))
+				$msgarray['exit_type'] = 'Exit settings are not configured please contact to your HR.';
+				
+			$validationMsgs = $exitProc->getMessages();
+			foreach($validationMsgs as $key => $val)
+			{
+				foreach($val as $key2 => $val2)
+				{
+					$msgarray[$key] = $val2;
+					break;
+				}
+			}
+			$this->view->msgarray = $msgarray;
+		}
+	}
+	// function to show assigned exit questions
+	public function questionsAction()
+	{
+		$this->exitQnModel = new Exit_Model_Questionsresponse();
+		$id = $this->getRequest()->getParam('id');
+		$employee_questions_str_array = $this->exitQnModel->getEmployeeQuestionsData($this->loggedInUser,$id);
+		$employee_questions_array = array();
+		$emp_response_array = array();
+		$emp_comments = '';
+		if(!empty($employee_questions_str_array)){
+			$qustions_str = $employee_questions_str_array[0]['hr_qs'];
+			$emp_comments = ($employee_questions_str_array[0]['employee_response']!='')?$employee_questions_str_array[0]['employee_response']:'';
+			$employee_questions_array = $this->exitQnModel->getEmployeeQuestions($qustions_str);
+		}
+		if($emp_comments!='')
+			$emp_response_array = json_decode($emp_comments,true);
+		
+		$this->view->employee_questions_array = $employee_questions_array;
+		$this->view->exitprocessId = $id;
+		$this->view->emp_response_array = $emp_response_array;
+		$this->view->employee_id = $this->loggedInUser;
+		
+	}
+	public function viewAction()
+	{
+		//parameter to differntiate tabs
+		$extra_param ='employeedetails';
+		$this->view->flag = $extra_param ;
+		$id = (int)$this->_request->getParam('id');
+		/**
+		** display logged in user details - business unit, department, job title, position, L1 manager, L2 manager
+		**/
+		$empDetailsObj = $this->exitProcModel->getEmployeeDetails($this->loggedInUser,'one');
+		$l2managerDetails = '';
+		if(isset($empDetailsObj[0]))
+		{
+			$this->view->empDetailsObj = $empDetailsObj[0];
+			if(!empty($empDetailsObj[0]['reporting_manager']))
+			{
+				$l2managerDetails = $this->exitProcModel->getEmployeeDetails($empDetailsObj[0]['reporting_manager'],'one');
+			}
+		}
+		else
+		{
+			$this->view->empDetailsObj = array();
+		}
+
+		$this->view->l2managerDetails = $l2managerDetails;
+		$this->view->loggedInUser = $this->loggedInUser;
+		$this->view->loggedInUserGroup = $this->loggedInUserGroup;
+		
+		
+		/*array to display after exit process approved */
+		$tabsarray = array('employeedetails','questions');
+		$this->view->tabsarray = $tabsarray;
+		$this->view->objName = 'exitproc';
+		/**
+		** check if exit proc configurations exist for the logged-in user's department and/or business unit
+		**/
+		if($this->loggedInUser != SUPERADMIN)
+		{
+			$epSettingsObj = $this->exitProcModel->getSettings($this->businessunit_id,$this->department_id);
+			if(empty($epSettingsObj))
+			{
+				$this->view->ermsg = 'noConfig';
+				return;
+			}
+			else
+				$this->view->epSettingsObj = $epSettingsObj;
+		}
+
+		/**
+		** 1. check if logged in user has initiated any exit procs
+		** 2. if yes, display details and status
+		** 3. if no, display form to initiate exit proc
+		**/
+		$res = $this->exitProcModel->getExitProcDetails($this->loggedInUser,$id);
+;
+		if(!empty($res))
+		{
+			$this->view->context = 'status';			
+			$exitProc = new Exit_Form_Exitproc();
+			$this->view->form = $exitProc;
+			/**
+			** getting hr manager, sys admin, general admin, finance manager details - START
+			**/
+			$empIdsStr = '';
+			if(!empty($res[0]['hr_manager']))
+				$empIdsStr .= $res[0]['hr_manager'];
+			if(!empty($res[0]['l2_manager']))
+				$empIdsStr .= ",".$res[0]['l2_manager'];
+			if(!empty($res[0]['sys_admin']))
+				$empIdsStr .= ",".$res[0]['sys_admin'];
+			if(!empty($res[0]['general_admin']))
+				$empIdsStr .= ",".$res[0]['general_admin'];
+			if(!empty($res[0]['finance_manager']))
+				$empIdsStr .= ",".$res[0]['finance_manager'];
+			
+			$empIdsStr = trim($empIdsStr,",");
+			
+			$managersDataObj_tmp = $this->exitProcModel->getEmployeeDetails($empIdsStr,'multiple');
+			$managersDataObj = array();
+
+			if(!empty($managersDataObj_tmp))
+			{
+				foreach ($managersDataObj_tmp as &$row) {
+					$managersDataObj[$row['user_id']] = &$row;
+				}				
+			}
+			/**
+			** getting hr manager, sys admin, general admin, finance manager details - END
+			**/
+			
+			/** retrieve exit proc history **/
+			
+			$exitProcId = $res[0]['id'];
+			$ep_userId = $res[0]['employee_id'];
+			$historyObj = $this->exitProcModel->getExitProcHistory($exitProcId);
+			$this->view->historyObj = $historyObj;
+
+			$this->view->managersDataObj = $managersDataObj;		
+			$this->view->exitProcDetails = $res[0];			
+		}
+	
+		$this->view->messages = $this->_helper->flashMessenger->getMessages();
+	}
+	//function to initiate exit process
+	public function addAction()
+	{
+		$this->view->context = 'raise';
+		$exitProc = new Exit_Form_Exitproc();
+		$this->view->form = $exitProc;
+		$exitProc->setAttrib('action',BASE_URL.'exit/exitproc/add');
+		
+		if($this->is_org_head==1){
+			$this->view->ermsg = 'noConfig';
+			return;
+		}
+		
+		if($this->loggedInUser != SUPERADMIN && $this->is_org_head!=1)
+		{
+			$epSettingsObj = $this->exitProcModel->getSettings($this->businessunit_id,$this->department_id);
+			if(empty($epSettingsObj))
+			{
+				$this->view->ermsg = 'noConfig';
+				return;
+			}
+			
+		}
+		//get is employee valid to initialize new request
+		$emp_exit_details = $this->exitProcModel->getEmpRaisedRequest($this->loggedInUser);
+		$this->view->not_valid_for_add = count($emp_exit_details);
+			
+		/**
+		** display exit types
+		**/
+		$exitTypes =  $this->exitProcModel->getExitTypes();
+		$exitProc->exit_type->addMultiOption('','Select Exit Type');
+		if(!empty($exitTypes))
+		{
+			foreach($exitTypes as $exitType)
+			{
+				$exitProc->exit_type->addMultiOption($exitType['id'],utf8_encode($exitType['exit_type']));
+			}
+		}	
+
+		if($this->loggedInUser != SUPERADMIN && $this->getRequest()->getPost())
+		{
+			$this->save($exitProc);
+		}	
+		$this->view->messages = $this->_helper->flashMessenger->getMessages();
+	}
+	//function to save employee comments
+	public function savequestionsAction()
+	{
+		$this->exitQnModel = new Exit_Model_Questionsresponse();
+		$exitprocessId = $this->getRequest()->getParam('exitprocessId');
+		$employee_id = $this->getRequest()->getParam('employee_id');
+		$employee_comments = $this->getRequest()->getParam('emp_comment');
+		$encoded_emp_comments = json_encode($employee_comments,true);	
+		$questions_array = array('employee_response'=>$encoded_emp_comments,
+								'modifiedby'=>$this->loggedInUser,
+								'modifieddate'=>gmdate("Y-m-d H:i:s"));
+		$questions_where = array('exit_initiation_id=?' => $exitprocessId,'user_id=?'=>$employee_id);
+		$result = $this->exitQnModel->SaveorUpdateQuestionsData($questions_array,$questions_where);	
+		if($result=='update')
+		{
+			$msg = 'saved';
+			$this->_helper->getHelper('FlashMessenger')->addMessage(array('success' => 'Exit procedure answers saved successfully.'));
+			/** notification mail - START **/
+			$this->allExitProcsModel = new Exit_Model_Allexitprocs();
+					$processData = $this->allExitProcsModel->getExitProcessData($exitprocessId);//function to get exit request data
+					$settingsID = $processData[0]['exit_settings_id'];
+					
+					//get hr based on settings id
+					$settingsData = $this->exitProcModel->getSettingsData($settingsID);
+					$user_name = '';$email_address = '';
+					if(!empty($settingsData))
+					{
+						$userDetails = $this->exitProcModel->getUserEmail($settingsData[0]['hr_manager']);
+						$user_name = $userDetails[0]['userfullname'];
+						$email_address = $userDetails[0]['emailaddress'];
+					}
+					
+					$view = $this->getHelper('ViewRenderer')->view;
+					$mail_content="Exit procedure questions has been answered by ".$this->userfullname;
+					$this->view->mail_content = $mail_content;
+					$text = $view->render('exitmailtemplates/exitmailtemplate.phtml');
+					$options['subject'] = APPLICATION_NAME.': Exit Procedure Notification';
+					$options['header'] = 'Exit Procedure';
+					$options['toEmail'] = $email_address;
+					$options['toName'] = $user_name;
+					$options['message'] = $text;
+					$options['cron'] = 'yes';
+					$result = sapp_Global::_sendEmail($options);
+					
+					/** notification mail - END **/
+			
+		}
+		else{
+			$msg = 'err';
+			$this->_helper->getHelper('FlashMessenger')->addMessage(array('error' => 'Exit procedure answers failed to add'));
+		}
+			
+		
+		$this->_helper->json(array('msg'=>$msg));
+	}
+
+}
+?>
\ No newline at end of file

--- application/modules/exit/controllers/ExitprocsettingsController.php ---
@@ -0,0 +1,782 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+/**
+** controller used to configure exit proc settings
+**/
+class Exit_ExitprocsettingsController extends Zend_Controller_Action
+{
+	private $epSettingsModel;
+	private $options;
+	private $loggedInUser = '';
+	private $loggedInUserGroup = '';
+	private $loggedInUserRole = '';
+	
+	public function preDispatch()
+	{
+		/**
+		** for ajax calls
+		**/
+		$ajaxContext = $this->_helper->getHelper('AjaxContext');
+		$ajaxContext->addActionContext('getdepartments','json')->initContext();
+	}
+	
+	public function init()
+	{
+		$this->_options = $this->getInvokeArg('bootstrap')->getOptions();
+		
+		/** Instantiate exit proc settings model **/
+		$this->epSettingsModel = new Exit_Model_Exitprocsettings();
+		$this->allExitProcsModel = new Exit_Model_Allexitprocs();
+		/**
+		** Initiating zend auth object
+		** for getting logged in user id
+		**/
+		$auth = Zend_Auth::getInstance();
+		
+		if($auth->hasIdentity())
+		{
+			$this->loggedInUser = $auth->getStorage()->read()->id;
+			$this->loggedInUserRole = $auth->getStorage()->read()->emprole;
+			$this->loggedInUserGroup = $auth->getStorage()->read()->group_id;
+		}
+	}
+
+	public function indexAction()
+	{
+		/**
+		**	check for ajax call
+		**/
+		$call = $this->_getParam('call');
+		if($call == 'ajaxcall')
+				$this->_helper->layout->disableLayout();	
+		
+		/**
+		** capture request parameters 
+		**/
+		$objname = $this->_getParam('objname');
+		$refresh = $this->_getParam('refresh');
+		$dashboardcall = $this->_getParam('dashboardcall');
+		$context = $this->_getParam('context');
+		$data = array();
+		$searchQuery = '';
+		$searchArray = array();
+		$tablecontent='';	
+		
+		/** check for refresh button event 
+		**  If yes, build default parameters
+		**	else, build parameters accordingly
+		**/
+		if($refresh == 'refresh')
+		{
+			if($dashboardcall == 'Yes')
+				$perPage = DASHBOARD_PERPAGE;
+			else	
+				$perPage = PERPAGE;
+
+			$sort = 'DESC';$by = 'e.modifieddate';$pageNo = 1;$searchData = '';$searchQuery = '';$searchArray='';
+		}
+		else 
+		{
+			/** build sort parameter **/
+			$sort = ($this->_getParam('sort') !='')? $this->_getParam('sort'):'DESC';
+
+			/** build order by parameter **/
+			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'e.modifieddate';
+			
+			/** get records per page parameter **/
+			if($dashboardcall == 'Yes')
+				$perPage = $this->_getParam('per_page',DASHBOARD_PERPAGE);
+			else 
+				$perPage = $this->_getParam('per_page',PERPAGE);
+
+			/** set page number parameter **/
+			$pageNo = $this->_getParam('page', 1);
+			
+			/** build search parameters **/
+			$searchData = $this->_getParam('searchData');	
+			$searchData = rtrim($searchData,',');					
+		}
+
+		/**
+		**	based on search, sort, pagination, order by parameters 
+		**  get data object to build exit proc settings grid
+		**/
+		$dataTmp = $this->epSettingsModel->getGrid($sort, $by, $perPage, $pageNo, $searchData,$call,$dashboardcall,$context);
+		array_push($data,$dataTmp);
+
+		/**
+		** send data objects to view
+		**/
+		$this->view->dataArray = $data;
+		$this->view->call = $call ;
+		
+		/**
+		** send flash messages to view
+		**/
+		$this->view->messages = $this->_helper->flashMessenger->getMessages();
+	}
+	
+	public function viewAction()
+	{
+		$auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity())
+        {
+            $loginUserId = $auth->getStorage()->read()->id;
+            $login_group_id = $auth->getStorage()->read()->group_id;
+            $login_role_id = $auth->getStorage()->read()->emprole;
+        }
+		
+		
+		/**
+		** capture record id to view
+		**/
+		$id = (int)$this->_request->getParam('id');
+		$objName = 'exitprocsettings';
+
+		if($id)
+		{
+			if(is_numeric($id) && $id>0)
+			{
+				// get details based on id
+				$res = $this->epSettingsModel->getExitProcSettingsDetails($id);
+				$previ_data = sapp_Global::_checkprivileges(EXIT_PROC_SETTINGS,$login_group_id,$login_role_id,'view');
+				if(!empty($res))
+				{
+					$this->view->data=$res[0];
+					$this->view->id = $id;
+					$this->view->previ_data = $previ_data;
+					
+				}
+				else
+				{
+					$this->view->ermsg = 'norecord';
+				}
+				
+			}
+			else{
+				$this->view->ermsg = 'norecord';
+			}
+			
+		}
+		else
+		{
+		   $this->view->ermsg = 'norecord';
+		} 	
+		$this->view->controllername =	$objName ;	
+	}
+	public function addAction()
+	{
+		/**
+		** check for logged in user role for add privileges
+		**/
+		if(sapp_Global::_checkprivileges(EXIT_PROC_SETTINGS,$this->loggedInUserGroup,$this->loggedInUserRole,'add') != 'Yes'){
+				$this->view->ermsg = 'noprivileges';
+				return;
+		} 
+
+		/**
+		** Initiating exit proc settings form
+		** and assigning action
+		**/
+		$epSettingsForm = new Exit_Form_Exitprocsettings();
+		$epSettingsForm->setAttrib('action',BASE_URL.'exit/exitprocsettings/add');
+		$this->view->form = $epSettingsForm;
+	
+		/**
+		** populate business units on page load
+		**/
+		$epSettingsForm->businessunit_id->addMultiOption('','Select Business Unit');
+		$businessUnitsObj = $this->epSettingsModel->getBusinessUnits();
+		if(!empty($businessUnitsObj))
+		{
+			foreach($businessUnitsObj as $businessUnit)
+			{
+				$epSettingsForm->businessunit_id->addMultiOption($businessUnit['id'],utf8_encode($businessUnit['unitname']));
+			}
+		}	
+
+		if($this->getRequest()->getPost())
+		{
+			$this->save($epSettingsForm,'add');
+		}
+	}
+	
+	public function editAction()
+	{
+		/**
+		** check for logged in user role for add privileges
+		**/
+		if(sapp_Global::_checkprivileges(EXIT_PROC_SETTINGS,$this->loggedInUserGroup,$this->loggedInUserRole,'edit') != 'Yes'){
+				$this->view->ermsg = 'noprivileges';
+				return;
+		} 
+		
+		/**
+		** capture record id to edit
+		**/
+		$id = (int)$this->_request->getParam('id');
+		$this->view->id = $id;
+		$msgarray = array(); 
+		if($id)
+		{
+			$res = $this->epSettingsModel->getExitProcSettingsDetails($id);
+			
+			if(empty($res))
+			{
+				$this->view->ermsg = 'nodata';
+				return;
+			}
+			if(!empty($res))
+			{
+				$businessunit_id = !empty($res[0]['businessunit_id'])? $res[0]['businessunit_id']:'';
+				$department_id =  !empty($res[0]['department_id'])? $res[0]['department_id']:'';
+				$l2_manager =  !empty($res[0]['l2_manager'])? $res[0]['l2_manager']:'';
+				$hr_manager = !empty($res[0]['hr_manager'])? $res[0]['hr_manager']:'';
+				$sys_admin = !empty($res[0]['sys_admin'])? $res[0]['sys_admin']:'';
+				$general_admin =  !empty($res[0]['general_admin'])? $res[0]['general_admin']:'';
+				$finance_manager = !empty($res[0]['finance_manager'])? $res[0]['finance_manager']:'';		
+			}
+			
+			/**
+			** Initiating exit proc settings form
+			** and assigning action
+			**/
+			$epSettingsForm = new Exit_Form_Exitprocsettings();
+			$epSettingsForm->setAttrib('action',BASE_URL.'exit/exitprocsettings/edit/id/'.$id);
+			$this->view->form = $epSettingsForm;
+			$epSettingsForm->submit->setLabel('Update');
+			if(!empty($res))
+			{
+				$epSettingsForm->populate($res[0]);
+			}
+			/**
+			** populate business units on page load
+			**/
+			$epSettingsForm->businessunit_id->addMultiOption('','Select Business Unit');
+			$businessUnitsObj = $this->epSettingsModel->getBusinessUnits($businessunit_id);
+			if(!empty($businessUnitsObj))
+			{
+				foreach($businessUnitsObj as $businessUnit)
+				{
+					$epSettingsForm->businessunit_id->addMultiOption($businessUnit['id'],utf8_encode($businessUnit['unitname']));
+				}
+				$epSettingsForm->setDefault('businessunit_id',$businessunit_id);
+			}	
+
+			/**
+			** populate departments on page load
+			**/
+			$epSettingsForm->department_id->addMultiOption('','Select Department');
+			$departmentsObj = $this->epSettingsModel->getDepartments($businessunit_id,$department_id,'all');
+			if(!empty($departmentsObj))
+			{
+				foreach($departmentsObj as $departments)
+				{
+					$epSettingsForm->department_id->addMultiOption($departments['id'],utf8_encode($departments['deptname']));
+				}
+				$epSettingsForm->setDefault('department_id',$department_id);
+			}	
+
+			/**
+			** populate hr manager on page load
+			**/
+			$hrOptions = $this->epSettingsModel->getEmployeesDataByRole(HR_GROUP,$businessunit_id,$department_id,"");
+			if(count($hrOptions) > 0)
+			{
+				foreach($hrOptions as $hrm)
+				{
+					$epSettingsForm->hr_manager->addMultiOption($hrm['user_id'],utf8_encode($hrm['userfullname']));
+				}
+				$epSettingsForm->setDefault('hr_manager',$hr_manager);
+			}
+			
+			/** fill l2 manager on page load **/
+			$l2Options = $this->epSettingsModel->getEmployeesDataByRole(array(MANAGEMENT_GROUP,HR_GROUP,MANAGER_GROUP,SYSTEMADMIN_GROUP,EMPLOYEE_GROUP),$businessunit_id,$department_id,'multiple');
+			if(count($l2Options) > 0)
+			{
+				foreach($l2Options as $l2m)
+				{
+					$epSettingsForm->l2_manager->addMultiOption($l2m['user_id'],utf8_encode($l2m['userfullname']));
+				}
+				$epSettingsForm->setDefault('l2_manager',$l2_manager);
+			}
+
+			/** fill system admin data **/
+			$sysAdminOptions = $this->epSettingsModel->getEmployeesDataByRole(SYSTEMADMIN_GROUP,$businessunit_id,$department_id, "");
+			if(count($sysAdminOptions) > 0)
+			{
+				foreach($sysAdminOptions as $sysAdmin)
+				{
+					$epSettingsForm->sys_admin->addMultiOption($sysAdmin['user_id'],utf8_encode($sysAdmin['userfullname']));
+				}
+				$epSettingsForm->setDefault('sys_admin',$sys_admin);
+			}
+			/* else
+			{
+				$msgarray['sys_admin'] = 'No employees';
+			} */
+
+			/** fill general admin data **/
+			$generalAdminOptions = $this->epSettingsModel->getEmployeesDataByRole(array(MANAGER_GROUP,EMPLOYEE_GROUP),$businessunit_id, $department_id,'multiple');
+			if(count($generalAdminOptions) > 0)
+			{
+				foreach($generalAdminOptions as $generalAdmin)
+				{
+					$epSettingsForm->general_admin->addMultiOption($generalAdmin['user_id'],utf8_encode($generalAdmin['userfullname']));
+				}
+				$epSettingsForm->setDefault('general_admin',$general_admin);
+			}
+			/* else
+			{
+				$msgarray['general_admin'] = 'No employees';
+			}	 */		
+
+			/** fill finance manager data **/
+			$financeManagerOptions = $this->epSettingsModel->getEmployeesDataByRole(array(HR_GROUP,MANAGER_GROUP,EMPLOYEE_GROUP),$businessunit_id, $department_id,'multiple');
+			if(count($financeManagerOptions) > 0)
+			{
+				foreach($financeManagerOptions as $financeManager)
+				{
+					$epSettingsForm->finance_manager->addMultiOption($financeManager['user_id'],utf8_encode($financeManager['userfullname']));
+				}
+				$epSettingsForm->setDefault('finance_manager',$finance_manager);
+			}
+			/* else
+			{
+				$msgarray['finance_manager'] = 'No employees';
+			} */
+
+		 /**
+		 settings can not be edited after initializing the exit process.
+		 if all records are approved or rejected then
+		 we can edit **/
+			$result=$this->allExitProcsModel->getExitsettingsProcDetails($id,'edit');
+			
+			if(count($result)>0)
+			{
+				$this->view->ermsg = 'noedit';
+				$epSettingsForm->businessunit_id->setAttrib("disabled", "disabled");
+				$epSettingsForm->department_id->setAttrib("disabled", "disabled");
+				$epSettingsForm->hr_manager->setAttrib("disabled", "disabled");
+				$epSettingsForm->l2_manager->setAttrib("disabled", "disabled");
+				$epSettingsForm->sys_admin->setAttrib("disabled", "disabled");
+				$epSettingsForm->general_admin->setAttrib("disabled", "disabled");
+				$epSettingsForm->finance_manager->setAttrib("disabled", "disabled");
+				$epSettingsForm->notice_period->setAttrib("readonly", "readonly");
+				$epSettingsForm->removeElement("submit");
+			}
+			
+			$this->view->msgarray = $msgarray;
+			$this->view->result = $result;
+			if($this->getRequest()->getPost())
+			{
+				$this->save($epSettingsForm,'edit',$id);
+			}
+		}		
+		else
+		{
+			$this->view->ermsg = 'invalidURL';
+		}
+	}
+
+	public function save($epSettingsForm,$con,$id = '')
+	{
+		$businessunit_id = $this->_request->getParam('businessunit_id');
+		$department_id = $this->_request->getParam('department_id');
+		
+		//check duplicate employees
+		$employee_array = array('l2_manager'=>$this->_request->getParam('l2_manager'),'hr_manager'=>$this->_request->getParam('hr_manager'),'sys_admin'=>$this->_request->getParam('sys_admin'),'general_admin'=>$this->_request->getParam('general_admin'),'finance_manager'=>$this->_request->getParam('finance_manager'));
+		$duplicate_arr = $new_arr = array();
+		foreach ($employee_array as $role => $value) {
+			if($value!=''){
+			  if (!isset($new_arr[$value])) {
+				 $new_arr[$value] = $role;
+			  } else {
+				if (isset($duplicate_arr[$value])) {
+				   $duplicate_arr[$value][] = $role;
+				} else {
+				   $duplicate_arr[$value] = array($role);
+				   // Comment out the previous line, and uncomment the following line to
+				   // include the initial key in the duplicate_arr.
+				   // $duplicate_arr[$val] = array($new_arr[$val], $key);
+				}
+			  }
+			} 
+		}
+		$duplicate_exist = 0;
+		if(count($duplicate_arr)>0){
+			$duplicate_exist = 1;
+			foreach($duplicate_arr as $val_arr)
+			{
+				foreach($val_arr as $dup_val){
+					$msgarray[$dup_val] = 'Employee has already been selected.';
+				}
+			}
+			//$this->view->msgarray = $msgarray;
+		}
+		if($epSettingsForm->isvalid($this->_request->getPost()) && !$duplicate_exist)
+		{
+			
+			/** capture form values **/
+			$l2_manager =  $this->_request->getParam('l2_manager');
+			$hr_manager = $this->_request->getParam('hr_manager');
+			$sys_admin = $this->_request->getParam('sys_admin');
+			$general_admin = $this->_request->getParam('general_admin');
+			$finance_manager = $this->_request->getParam('finance_manager');
+			$notice_period = $this->_request->getParam('notice_period');
+			
+			/** prepare data to insert into database **/
+			if($con == 'add')
+			{
+				$data = array(
+							'businessunit_id' => $businessunit_id,
+							'department_id' => $department_id,
+							//'config_arr' => "",
+							'l2_manager' => $l2_manager,
+							'hr_manager' => $hr_manager,
+							'sys_admin' => $sys_admin,
+							'general_admin' => $general_admin,
+							'finance_manager' => $finance_manager,
+							'notice_period' =>$notice_period,
+							'modifiedby'=> $this->loggedInUser,
+							'modifieddate'=> gmdate("Y-m-d H:i:s"),
+							'createdby'=> $this->loggedInUser,
+							'createddate'=> gmdate("Y-m-d H:i:s"),
+							'isactive' => 1
+				);
+				
+				$res = $this->epSettingsModel->saveExitProcSettings($data,'', $con);
+			}
+			
+			else if($con == 'edit')
+			{
+				$data = array(
+							//'config_arr' => "",
+							'l2_manager' => $l2_manager,
+							'hr_manager' => $hr_manager,
+							'sys_admin' => $sys_admin,
+							'general_admin' => $general_admin,
+							'finance_manager' => $finance_manager,
+							'notice_period' =>$notice_period,
+							'modifiedby'=> $this->loggedInUser,
+							'modifieddate'=> gmdate("Y-m-d H:i:s")						
+				);
+				
+				$where = array( 'id =?' => $id);
+				$res = $this->epSettingsModel->saveExitProcSettings($data, $where, $con);
+			}
+			if($res)
+			{
+				if($con == 'add')
+				{
+					/** insert into log manager table **/
+					sapp_Global::logManager(EXIT_PROC_SETTINGS,1,$this->loggedInUser,$res);
+			
+					$msg = 'Exit procedure settings added successfully.';
+				}
+				else
+				{
+					/** insert into log manager table **/
+					sapp_Global::logManager(EXIT_PROC_SETTINGS,2,$this->loggedInUser,$id);
+					
+					$msg = 'Exit procedure settings updated successfully.';
+				}
+				$this->_helper->getHelper('FlashMessenger')->addMessage(array('success' => $msg));
+			}
+			else
+			{	
+				if($con == 'add') $msg = 'Failed to add exit procedure settings. Please try again.';
+				else $msg = 'Failed to update exit procedure settings. Please try again.';
+				$this->_helper->getHelper('FlashMessenger')->addMessage(array('error' => $msg));
+			}	
+
+			$this->_redirect('exit/exitprocsettings');
+		}	
+		else
+		{
+			$validationMsgs = $epSettingsForm->getMessages();
+			foreach($validationMsgs as $key => $val)
+			{
+				foreach($val as $key2 => $val2)
+				{
+					$msgarray[$key] = $val2;
+					break;
+				}
+			}
+			$this->view->msgarray = $msgarray;
+		}
+		if($businessunit_id && $con == 'add')
+		{
+			$hrOptions = $sysAdminOptions = $generalAdminOptions = $financeManagerOptions = '';
+
+			/** fill departments data **/
+			$departmentsObj = $this->epSettingsModel->getDepartments($businessunit_id);
+			if(count($departmentsObj) > 0)
+			{
+				foreach($departmentsObj as $dept)
+				{
+					$epSettingsForm->department_id->addMultiOption($dept['id'],utf8_encode($dept['deptname']));
+				}
+				$epSettingsForm->setDefault('department_id',$department_id);
+			}
+
+			/** fill hr managers data **/
+			$hrOptions = $this->epSettingsModel->getEmployeesDataByRole(HR_GROUP,$businessunit_id,$department_id,"");
+			if(count($hrOptions) > 0)
+			{
+				foreach($hrOptions as $hrm)
+				{
+					$epSettingsForm->hr_manager->addMultiOption($hrm['user_id'],utf8_encode($hrm['userfullname']));
+				}
+			}
+
+			/** fill l2 managers data **/
+			$l2Options = $this->epSettingsModel->getEmployeesDataByRole(array(MANAGEMENT_GROUP,HR_GROUP,MANAGER_GROUP,SYSTEMADMIN_GROUP,EMPLOYEE_GROUP),$businessunit_id,$department_id,'multiple');
+			if(count($l2Options) > 0)
+			{
+				foreach($l2Options as $l2m)
+				{
+					$epSettingsForm->l2_manager->addMultiOption($l2m['user_id'],utf8_encode($l2m['userfullname']));
+				}
+			}
+			
+			/** fill system admin data **/
+			$sysAdminOptions = $this->epSettingsModel->getEmployeesDataByRole(SYSTEMADMIN_GROUP,$businessunit_id,$department_id, "");
+			if(count($sysAdminOptions) > 0)
+			{
+				foreach($sysAdminOptions as $sysAdmin)
+				{
+					$epSettingsForm->sys_admin->addMultiOption($sysAdmin['user_id'],utf8_encode($sysAdmin['userfullname']));
+				}
+			}
+
+			/** fill general admin data **/
+			$generalAdminOptions = $this->epSettingsModel->getEmployeesDataByRole(array(MANAGER_GROUP,EMPLOYEE_GROUP),$businessunit_id, $department_id,'multiple');
+			if(count($generalAdminOptions) > 0)
+			{
+				foreach($generalAdminOptions as $generalAdmin)
+				{
+					$epSettingsForm->general_admin->addMultiOption($generalAdmin['user_id'],utf8_encode($generalAdmin['userfullname']));
+				}
+			}			
+
+			/** fill finance manager data **/
+			$financeManagerOptions = $this->epSettingsModel->getEmployeesDataByRole(array(HR_GROUP,MANAGER_GROUP,EMPLOYEE_GROUP),$businessunit_id, $department_id,'multiple');
+			if(count($financeManagerOptions) > 0)
+			{
+				foreach($financeManagerOptions as $financeManager)
+				{
+					$epSettingsForm->finance_manager->addMultiOption($financeManager['user_id'],utf8_encode($financeManager['userfullname']));
+				}
+			}			
+		}
+	}
+	
+	public function deleteAction()
+	{
+		$messages = array('message' => '','msgtype' => '');
+
+		/**
+		** check for logged in user role for delete privileges
+		**/
+		if(sapp_Global::_checkprivileges(EXIT_PROC_SETTINGS,$this->loggedInUserGroup,$this->loggedInUserRole,'delete') != 'Yes'){
+				$messages['message'] = 'You are not authorized to delete exit procedure setting.';
+				$messages['msgtype'] = 'error';
+				$this->_helper->json($messages);
+				return;
+		} 
+
+		
+		/**
+		** capture exit proc setting id 
+		**/
+		$id = $this->_request->getParam('objid');
+		$id = (int)$id;
+	
+		$deleteflag=$this->_request->getParam('deleteflag');
+		if(!empty($id))
+		{
+			/** prepare data object and where clause 
+			** to update exit proc setting details in database
+			**/
+			//to check records are there not for that particular exit_setiins_id
+			$result=$this->allExitProcsModel->getExitsettingsProcDetails($id);
+			if(count($result)==0)
+			{
+				$data = array(
+						'isactive'=> 0,
+						'modifiedby'=> $this->loggedInUser,
+						'modifieddate'=> gmdate("Y-m-d H:i:s")
+				);
+				$where = array('id=?' => $id);
+				$res = $this->epSettingsModel->saveExitProcSettings($data,$where,'edit');
+
+				if($res)
+				{
+					/** insert into log manager table **/
+					sapp_Global::logManager(EXIT_PROC_SETTINGS,3,$this->loggedInUser,$id);
+
+					$messages['message'] = 'Exit procedure setting deleted successfully.';
+					$messages['msgtype'] = 'success';
+				}
+				else
+				{
+					$messages['message'] = 'Exit procedure setting is not deleted.';
+					$messages['msgtype'] = 'error';
+				}
+			}
+			else{
+				$messages['message'] = 'Exit procedure settings cannot be deleted as exit process has been initialized.';
+				$messages['msgtype'] = 'error';
+			}
+		}
+		else
+		{
+			$messages['message'] = 'Exit procedure setting is not deleted.';
+			$messages['msgtype'] = 'error';
+		}
+		// delete success message after delete in view
+			if($deleteflag==1)
+			{
+				if(	$messages['msgtype'] == 'error')
+				{
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("error"=>$messages['message'],"msgtype"=>$messages['msgtype'] ,'deleteflag'=>$deleteflag));
+				}
+				if(	$messages['msgtype'] == 'success')
+				{
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("success"=>$messages['message'],"msgtype"=>$messages['msgtype'],'deleteflag'=>$deleteflag));
+				}
+			}
+		$this->_helper->json($messages);
+	}
+	public function getdepartmentsAction()
+	{
+		$bunit_id = (int)$this->_request->getParam('bunitId');
+		$l2Options = $hrOptions = $sysAdminOptions = $generalAdminOptions = $financeManagerOptions = '';
+		$departmentsmodel = new Default_Model_Departments();
+		$options = "<option value=''>Select Department</option>";
+		// get configured department ids from settings table
+		$departmentidsArr =  $this->epSettingsModel->getActiveDepartmentIds();
+		$depatrmentidstr = '';
+		$newarr = array();
+		
+			if(!empty($departmentidsArr))
+			{
+				$where = '';
+				for($i=0;$i<sizeof($departmentidsArr);$i++)
+				{
+					$newarr1[] = array_push($newarr, $departmentidsArr[$i]['deptid']);
+
+				}
+				$depatrmentidstr = implode(",",$newarr);
+				foreach($newarr as $deparr)
+				{
+					$where.= " id!= $deparr AND ";
+				}
+				$where = trim($where," AND");
+				$querystring = "Select d.id,d.deptname from main_departments as d where d.unitid=$bunit_id and d.isactive=1 and $where  ";
+				$querystring .= "  order by d.deptname";
+				$uniquedepartmentids = $departmentsmodel->getUniqueDepartments($querystring);
+				/* if(empty($uniquedepartmentids))
+				$flag = 'true';
+					
+				$this->view->uniquedepartmentids=$uniquedepartmentids; */
+				
+				
+					if(count($uniquedepartmentids) > 0)
+					{
+						foreach($uniquedepartmentids as $dept)
+						{
+							$options .= "<option value='".$dept['id']."'>".$dept['deptname']."</option>";
+						}
+					}
+					else
+					{
+						$options = "allconfigured";
+					}
+				
+				
+			}
+			else{
+				$departmentsObj = $this->epSettingsModel->getDepartments($bunit_id);
+				
+					if(count($departmentsObj) > 0)
+					{
+						foreach($departmentsObj as $dept)
+						{
+							$options .= "<option value='".$dept['id']."'>".$dept['deptname']."</option>";
+						}
+					}
+					else
+					{
+						$options = "nodepartments";
+					}
+				
+			}
+		
+		$dept_id='';
+		$l2Options = $this->getEmployees('L2 Manager',array(MANAGEMENT_GROUP,HR_GROUP,MANAGER_GROUP,SYSTEMADMIN_GROUP,EMPLOYEE_GROUP),$bunit_id,$dept_id,'multiple');
+		$hrOptions = $this->getEmployees('HR Manager',HR_GROUP,$bunit_id,$dept_id);
+		$sysAdminOptions = $this->getEmployees('System Admin',SYSTEMADMIN_GROUP,$bunit_id,$dept_id);
+		$generalAdminOptions = $this->getEmployees('General Admin',array(MANAGER_GROUP,EMPLOYEE_GROUP),$bunit_id,$dept_id,'multiple');
+		$financeManagerOptions = $this->getEmployees('Finance Manager',array(HR_GROUP,MANAGER_GROUP,EMPLOYEE_GROUP),$bunit_id,$dept_id,'multiple');
+
+		$this->_helper->json(array(
+									'options' => $options,
+									'l2Options' => $l2Options,
+									'hrOptions' => $hrOptions,
+									'sysAdminOptions' => $sysAdminOptions,
+									'generalAdminOptions' => $generalAdminOptions,
+									'financeManagerOptions' => $financeManagerOptions
+								));
+	}
+	
+	/**
+	** function to retrieve employees in the dropdown
+	** input parameter : 
+	**	@@ param 1 - label to display in the drop down (Select ....)
+	**	@@ param 2 - role groups to select employees, can be single or multiple (array)
+	**	@@ param 3 - business unit id
+	**  @@ param 4 - department id
+	**  @@ param 5 - flag (one/multiple), based on role group parameter
+	** output parameter :
+	**	returns options html for dropdown
+	**/
+	public function getEmployees($labelStr,$empRole,$bunit_id,$dept_id='',$con='')
+	{
+		$employeeOptions = "<option value=''>Select ".$labelStr."</option>";
+		
+		$hrManagerObj = $this->epSettingsModel->getEmployeesDataByRole($empRole,$bunit_id, $dept_id,$con);
+		if(count($hrManagerObj) > 0)
+		{
+			foreach($hrManagerObj as $hrm)
+			{
+				$employeeOptions .= "<option value='".$hrm['user_id']."'>".$hrm['userfullname']."</option>";
+			}
+		}
+		else
+		{
+			$employeeOptions = "no".str_replace(" ","",$labelStr);
+		}
+		return $employeeOptions;
+	}
+}
+?>
\ No newline at end of file

--- application/modules/exit/controllers/ExittypesController.php ---
@@ -0,0 +1,562 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+class Exit_ExittypesController extends Zend_Controller_Action
+{
+	private $exittypesModel;
+	private $options;
+	private $loggedInUser = '';
+	private $loggedInUserGroup = '';
+	private $loggedInUserRole = '';
+	
+	public function preDispatch()
+	{
+	}
+	public function init()
+	{
+		$this->_options = $this->getInvokeArg('bootstrap')->getOptions();
+		
+		/** Instantiate exit type model **/
+		$this->exittypesModel = new Exit_Model_Exittypes();
+
+		/**
+		** Initiating zend auth object
+		** for getting logged in user id
+		**/
+		$auth = Zend_Auth::getInstance();
+		
+		if($auth->hasIdentity())
+		{
+			$this->loggedInUser = $auth->getStorage()->read()->id;
+			$this->loggedInUserRole = $auth->getStorage()->read()->emprole;
+			$this->loggedInUserGroup = $auth->getStorage()->read()->group_id;
+		}
+	}
+	public function indexAction()
+	{
+
+		$exittypeModel = new Exit_Model_Exittypes();
+        $call = $this->_getParam('call');
+		if($call == 'ajaxcall')
+				$this->_helper->layout->disableLayout();
+		
+		$view = Zend_Layout::getMvcInstance()->getView();		
+		$objname = $this->_getParam('objname');
+		$refresh = $this->_getParam('refresh');
+		$dashboardcall = $this->_getParam('dashboardcall');
+		$data = array();
+		$searchQuery = '';
+		$searchArray = array();
+		$tablecontent='';
+		
+		if($refresh == 'refresh')
+		{
+		    if($dashboardcall == 'Yes')
+				$perPage = DASHBOARD_PERPAGE;
+			else	
+				$perPage = PERPAGE;
+			$sort = 'DESC';$by = 'et.modifieddate';$pageNo = 1;$searchData = '';$searchQuery = '';$searchArray='';
+		}
+		else 
+		{
+			$sort = ($this->_getParam('sort') !='')? $this->_getParam('sort'):'DESC';
+			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'et.modifieddate';
+			if($dashboardcall == 'Yes')
+				$perPage = $this->_getParam('per_page',DASHBOARD_PERPAGE);
+			else 
+				$perPage = $this->_getParam('per_page',PERPAGE);
+			$pageNo = $this->_getParam('page', 1);
+			/** search from grid - START **/
+			$searchData = $this->_getParam('searchData');	
+			$searchData = rtrim($searchData,',');
+			/** search from grid - END **/
+		}
+				
+		$dataTmp = $exittypeModel->getGrid($sort, $by, $perPage, $pageNo, $searchData, $call, $dashboardcall);		 		
+					
+		array_push($data,$dataTmp);
+		$this->view->dataArray = $data;
+		$this->view->call = $call ;
+		$this->view->messages = $this->_helper->flashMessenger->getMessages();
+	
+		
+	}
+	
+	/**
+	**	this action is used to display add form
+	**  if post values are available will create new exit type
+	**	@parameters 
+	**		string exit type (mandatory)
+	**
+	**	@return parameters
+	**		@object success/failure messages		
+	**/
+	public function addAction()
+	{
+	
+		
+		 $auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity()){
+					$loginUserId = $auth->getStorage()->read()->id;
+					$loginuserRole = $auth->getStorage()->read()->emprole;
+					$loginuserGroup = $auth->getStorage()->read()->group_id;
+		}
+		$callval = $this->getRequest()->getParam('call');
+		if($callval == 'ajaxcall')
+			$this->_helper->layout->disableLayout();
+		
+		$msgarray = array();
+		$addExittypesForm = new Exit_Form_Exittypes();
+		$addExittypesForm->setAttrib('action',BASE_URL.'exit/exittypes/add');
+		$this->view->form = $addExittypesForm; 
+		$this->view->msgarray = $msgarray; 
+		$this->view->ermsg = '';
+		$this->view->popuppage = 'no';
+		if($this->getRequest()->getPost())
+		{
+			 if($addExittypesForm->isValid($this->_request->getPost()))
+			{ 
+				
+				/** capture form values **/
+				$exitType = $this->_request->getParam('exit_type');
+				$description = $this->_request->getParam('description');
+
+				/** prepare data to insert into database **/
+				$data = array(
+						'exit_type' => $exitType,
+						'description' => $description,
+						'isused'=> 0, //default value
+						'isactive'=> 1, //default value
+						'modifiedby'=> $this->loggedInUser,
+						'createdby' => $this->loggedInUser,
+						'modifieddate'=> gmdate("Y-m-d H:i:s"),
+						'createddate'=> gmdate("Y-m-d H:i:s")
+				);
+				$where = '';
+				$res = $this->exittypesModel->SaveorUpdateExitTypesData($data,$where );
+
+				if($res)
+				{
+					/** insert into log manager table **/
+					sapp_Global::logManager(EXIT_PROC_TYPES,1,$this->loggedInUser,$res);
+					
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("success" => "Exit type added successfully."));
+				}
+				else
+				{
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("error" => "Failed to add new exit type. Please try again."));
+				}
+
+				$this->_redirect('exit/exittypes');
+			}
+			 else
+			{
+				
+				$validationMsgs = $addExittypesForm->getMessages();
+				foreach($validationMsgs as $key => $val)
+				{
+					foreach($val as $key2 => $val2)
+					{
+						$msgarray[$key] = $val2;
+						break;
+					}
+				}
+				$this->view->msgarray = $msgarray;
+			} 
+		}	
+	}
+
+	/**
+	**	this action is used to display edit form
+	**  @input exit type id
+	**  if post values are available will edit exit type
+	**	@parameters 
+	**		string exit type (mandatory)
+	**
+	**	@return parameteres
+	**		@object success/failure messages		
+	**/
+	public function editAction()
+	{
+	
+		/**
+		** check for logged in user role for edit privileges
+		**/
+		if(sapp_Global::_checkprivileges(EXIT_PROC_TYPES,$this->loggedInUserGroup,$this->loggedInUserRole,'edit') != 'Yes'){
+				$this->view->ermsg = 'noprivileges';
+				return;
+		} 
+
+		/**
+		** capture exit type id 
+		**/
+		$id = (int) $this->_request->getParam('id');
+		
+		if(is_numeric($id) && $id > 0)
+		{
+			/**
+			** Instantiate exit type form
+			**/
+			$editExittypeForm = new Exit_Form_Exittypes();
+			$this->view->form = $editExittypeForm;
+
+			/**
+			** get exit type data based on id
+			** populate data to form controls
+			**/
+			$editExittypeForm->submit->setLabel('Update');
+			$res = $this->exittypesModel->getExittypeById($id);
+			if(!empty($res))
+			{
+				
+					$data = $res[0];
+					  
+				  // When exit type is already used category details can't be edited
+				  if ($data['isused'] == 1) {
+					$this->view->ermsg = 'norecord';
+				  } else {
+					$editExittypeForm->populate($data);
+					$editExittypeForm->setAttrib('action',BASE_URL.'exit/exittypes/edit/id/'.$id);
+					$this->view->data = $data;
+				  }
+				  
+				if($this->getRequest()->getPost())
+				{
+					if($editExittypeForm->isValid($this->_request->getPost()))
+					{
+						/** capture form values **/
+						$exit_type = $this->_request->getParam('exit_type');
+						$description = $this->_request->getParam('description');
+
+						/** prepare data object and where clause **/
+						$data = array(
+								'exit_type' => $exit_type,
+								'description' =>$description,
+								'isactive'=> 1, //default value
+								'modifiedby'=> $this->loggedInUser,
+								'modifieddate'=> gmdate("Y-m-d H:i:s"),
+								
+						);
+						$where = array('id=?' => $id);
+
+						/** update exit type details **/
+						$res = $this->exittypesModel->SaveorUpdateExitTypesData($data,$where);
+						
+						if($res)
+						{
+							/** insert into log manager table **/
+							sapp_Global::logManager(EXIT_PROC_TYPES,2,$this->loggedInUser,$id);
+
+							$this->_helper->getHelper("FlashMessenger")->addMessage(array("success" => "Exit type updated successfully."));
+						}
+						else
+						{
+							$this->_helper->getHelper("FlashMessenger")->addMessage(array("error" => "Failed to update exit type. Please try again."));
+						}
+
+						$this->_redirect('exit/exittypes');
+					}
+					else
+					{
+						$validationMsgs = $editExittypeForm->getMessages();
+						foreach($validationMsgs as $key => $val)
+						{
+							foreach($val as $key2 => $val2)
+							{
+								$msgarray[$key] = $val2;
+								break;
+							}
+						}
+						$this->view->msgarray = $msgarray;
+					}
+					$this->view->ermsg = '';
+				}
+			}
+			else
+			{
+				$this->view->ermsg = 'nodata';
+			}
+		}	
+		else
+		{
+			$this->view->ermsg = 'invalidUrl';
+		}
+	}
+
+	/**
+	**	this action is used to display view form
+	**  @input exit type id
+	**/
+	public function viewAction()
+	{
+		$auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity())
+        {
+            $loginUserId = $auth->getStorage()->read()->id;
+            $login_group_id = $auth->getStorage()->read()->group_id;
+            $login_role_id = $auth->getStorage()->read()->emprole;
+        }
+        
+		$id = $this->getRequest()->getParam('id');
+		$callval = $this->getRequest()->getParam('call');
+		if($callval == 'ajaxcall')
+			$this->_helper->layout->disableLayout();
+		$objName = 'exittypes';
+		
+		try
+		{
+		    if($id)
+			{
+			    if(is_numeric($id) && $id>0)
+				{
+					$exittypesModel = new Exit_Model_Exittypes();
+					$exitquestionsmodel = new Exit_Model_Exitquestions();
+					
+					$data = $exittypesModel->getExittypeById($id);
+					$previ_data = sapp_Global::_checkprivileges(EXIT_PROC_TYPES,$login_group_id,$login_role_id,'view');
+
+                   
+					if(!empty($data))
+					{
+						$data = $data[0]; 
+						$this->view->ermsg = ''; 
+                    	$this->view->data = $data;
+						$this->view->previ_data = $previ_data;
+                   	 	$this->view->id = $id;
+                    	$this->view->controllername = $objName;
+                    	
+					}else
+					{
+					   $this->view->ermsg = 'norecord';
+					}
+                } 
+                else
+				{
+				   $this->view->ermsg = 'norecord';
+				}				
+			}
+            else
+			{
+			   $this->view->ermsg = 'norecord';
+			} 
+				$this->view->controllername = $objName;			
+		}
+		catch(Exception $e)
+		{
+			   $this->view->ermsg = 'nodata';
+		}	
+	}
+
+	/**
+	**	this action is used to delete
+	**  @input exit type id
+	**/
+	
+	public function deleteAction()
+	{
+	     $auth = Zend_Auth::getInstance();
+     		if($auth->hasIdentity()){
+					$loginUserId = $auth->getStorage()->read()->id;
+				}
+		 $id = $this->_request->getParam('objid');
+		$deleteflag= $this->_request->getParam('deleteflag');
+		 $messages['message'] = '';
+		 $messages['msgtype'] = '';	
+		 $actionflag = 3;
+		    if($id)
+			{
+				$exittypesModel = new Exit_Model_Exittypes();
+				$exitquestionsmodel = new Exit_Model_Exitquestions();
+				$exittypedata = $exittypesModel->getExittypeById($id);
+			
+			  if($exittypedata[0]['isused'] == 0)
+			  {
+				
+				$QuesData = $exitquestionsmodel->getExitQuestionsByexitId($id);
+				$d=array();
+				foreach($QuesData as $key => $value)
+				{
+ 
+					$d[] = $value['id'];
+				}
+				$d=implode(',',$d);
+				
+				if(sizeof($QuesData) == 0)
+				{				
+				  $data = array('isactive'=>0,'modifiedby'=>$loginUserId,'modifieddate'=>gmdate("Y-m-d H:i:s"));
+				  $where = array('id=?'=>$id);
+				  $Id = $exittypesModel->SaveorUpdateExitTypesData($data, $where);
+				   
+				    if($Id == 'update')
+					{
+						$menuID = EXIT_PROC_TYPES;
+						$result = sapp_Global::logManager($menuID,$actionflag,$loginUserId,$id);
+						/***
+						** commented on 29-04-2015 by sapplica
+						** need to integrate mail template
+							$configmail = sapp_Global::send_configuration_mail('Category',$appCategorydata[0]['category_name']);	
+						***/					   
+						$messages['message'] = 'Exit Type deleted successfully.';
+						$messages['msgtype'] = 'success';
+					}   
+					else
+					{
+	                   $messages['message'] = 'Exit Type cannot be deleted.';
+	                   $messages['msgtype'] = 'error';
+	                }
+				} 
+				/* else {
+					$messages['message'] = 'Exit Type cannot be deleted as there are active questions assigned to it.';
+				 	$messages['msgtype'] = 'error';
+			  	} */
+			  	if(sizeof($QuesData)> 0)
+			  	{ 
+			  		
+			  	 $data = array('isactive'=>0,'modifiedby'=>$loginUserId,'modifieddate'=>gmdate("Y-m-d H:i:s"));
+				  $where = array('id=?'=>$id);
+				  $Id = $exittypesModel->SaveorUpdateExitTypesData($data, $where);
+			  			
+			  	  $exitquestionsmodel->UpdateExitQuestionData($d);
+			  		if($Id == 'update')
+			  		{
+			  			$menuID = EXIT_PROC_TYPES;
+			  			$result = sapp_Global::logManager($menuID,$actionflag,$loginUserId,$id);
+			  			/***
+			  			 ** commented on 29-04-2015 by sapplica
+			  			 ** need to integrate mail template
+			  			 $configmail = sapp_Global::send_configuration_mail('Category',$appCategorydata[0]['category_name']);
+			  			***/
+			  			$messages['message'] = 'Exit Type deleted successfully.';
+			  			$messages['msgtype'] = 'success';
+			  		}
+			  		else
+			  		{
+			  			$messages['message'] = 'Exit Type cannot be deleted.';
+			  			$messages['msgtype'] = 'error';
+			  		}
+			  	}
+			  } 
+			  else {
+				$messages['message'] = 'Exit Type cannot be deleted as it is being used in exit process.';
+			 	$messages['msgtype'] = 'error';
+			  }
+			}
+			else
+			{ 
+			 $messages['message'] = 'Exit Type cannot be deleted.';
+			 $messages['msgtype'] = 'error';
+			}
+			if($deleteflag==1)
+			{
+				if(	$messages['msgtype'] == 'error')
+				{
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("error"=>$messages['message'],"msgtype"=>$messages['msgtype'] ,'deleteflag'=>$deleteflag));
+				}
+				if(	$messages['msgtype'] == 'success')
+				{
+					$this->_helper->getHelper("FlashMessenger")->addMessage(array("success"=>$messages['message'],"msgtype"=>$messages['msgtype'],'deleteflag'=>$deleteflag));
+				}
+				
+			}
+			$this->_helper->json($messages);		
+	}
+	
+   //add exit types in popup in exit questions add page
+	public function addpopupAction()
+	{
+		Zend_Layout::getMvcInstance()->setLayoutPath(APPLICATION_PATH."/layouts/scripts/popup/");
+		$auth = Zend_Auth::getInstance();
+		if($auth->hasIdentity()){
+			$loginUserId = $auth->getStorage()->read()->id;
+		}
+		$id = $this->getRequest()->getParam('id');
+
+		$msgarray = array();
+		$controllername = 'exittypes';
+		$exittypeForm = new Exit_Form_Exittypes();
+		$exittypesModel = new Exit_Model_Exittypes();
+		$exittypeForm->setAction(BASE_URL.'exit/exittypes/addpopup');
+		 if($this->getRequest()->getPost()){
+			if($exittypeForm->isValid($this->_request->getPost())){
+			$id = $this->_request->getParam('id');
+            $exittype_name = $this->_request->getParam('exit_type');	
+			$description = $this->_request->getParam('description');
+			$actionflag = '';
+			$tableid  = ''; 
+			   $data = array('exit_type'=>$exittype_name, 
+							 'description'=>$description,
+							 'modifiedby'=>$loginUserId,
+							  'modifiedby'=>$loginUserId,
+							  'modifieddate'=>gmdate("Y-m-d H:i:s")
+					);
+					
+				
+				if($id!=''){
+					$where = array('id=?'=>$id);  
+					$actionflag = 2;
+				}
+				else
+				{
+					$data['createdby'] = $loginUserId;
+					$data['createddate'] = gmdate("Y-m-d H:i:s");
+					$data['isactive'] = 1;
+					$where = '';
+					$actionflag = 1;
+				}
+				$Id = $exittypesModel->SaveorUpdateExitTypesData($data, $where);
+				$tableid = $Id;
+				$menuID = EXIT_PROC_TYPES;
+				$result = sapp_Global::logManager($menuID,$actionflag,$loginUserId,$tableid);
+
+				$exittypesData = $exittypesModel->getExittypesData();
+				$opt ='';
+				foreach($exittypesData as $record){
+					$opt .= sapp_Global::selectOptionBuilder($record['id'], utf8_encode($record['exit_type']));
+				}
+				$this->view->exittypeData = $opt;
+					
+				$this->view->eventact = 'added';
+				$close = 'close';
+				$this->view->popup=$close;
+			}else
+			{
+				$messages = $exittypeForm->getMessages();
+				foreach ($messages as $key => $val)
+				{
+					foreach($val as $key2 => $val2)
+					{
+						$msgarray[$key] = $val2;
+                           break;
+					}
+				}
+				$this->view->msgarray = $msgarray;
+			}
+		} 
+		$this->view->controllername = $controllername;
+		$this->view->form = $exittypeForm;
+		$this->view->ermsg = '';
+		$this->view->popuppage = 'yes';
+		$this->render('add');	
+		
+	}
+	
+}
+?>
\ No newline at end of file

--- application/modules/exit/forms/Exitproc.php ---
@@ -0,0 +1,69 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Form_Exitproc extends Zend_Form
+{
+	public function init()
+	{
+		$this->setMethod('post');
+		$this->setAttrib('id','exitProcFrm');
+		$this->setAttrib('name','exitProcFrm');
+		//$this->setAttrib('action',BASE_URL.'exit/exitproc/save');
+
+		/*$user_id = new Zend_Form_Element_Select('user_id');
+		$user_id->setAttrib('id','user_id');
+		$user_id->setAttrib('name','user_id');
+		$user_id->setRequired(true);
+		$user_id->addValidator('NotEmpty',false,array("messages"=>'Please select an employee'));*/
+		
+		$auth = Zend_Auth::getInstance();
+		$user_id='';
+		if($auth->hasIdentity())
+		{
+			$user_id = $auth->getStorage()->read()->id;
+		}
+		$exitType = new Zend_Form_Element_Select('exit_type');
+		$exitType->setAttrib('id','exit_type');
+		$exitType->setAttrib('name','exit_type');
+		$exitType->setRequired(true);
+		$exitType->addValidator('NotEmpty',false,array("messages"=>'Please enter exit type.'));
+		$exitType->addValidator(new Zend_Validate_Db_NoRecordExists(
+                                                                array('table' => 'main_exit_process',
+                                                                'field' => 'exit_type_id',
+                                                                'exclude'=>'employee_id='.$user_id.' and overall_status!="Approved"  and overall_status!="Rejected"'
+                                                                )));
+		$exitType->getValidator('Db_NoRecordExists')->setMessage('Exit procedure has already been initialized with this type. ');														
+					
+		$comments = new Zend_Form_Element_Textarea('comments');
+		$comments->setAttrib('id','comments');
+		$comments->setAttrib('name','comments');
+		$comments->setAttrib('onkeyup', 'removeValidation()');
+		$comments->setRequired(true);
+		$comments->addValidator('NotEmpty',false,array("messages"=>'Please enter comments.'));
+
+		$submitBtn = new Zend_Form_Element_Submit('submit');
+		$submitBtn->setAttrib('id','submitBtn');
+		$submitBtn->setLabel('Initiate');
+
+		$this->addElements(array($exitType,$comments,$submitBtn));
+		$this->setElementDecorators(array('ViewHelper'));
+	}
+}
+?>
\ No newline at end of file

--- application/modules/exit/forms/Exitprocsettings.php ---
@@ -0,0 +1,138 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Form_Exitprocsettings extends Zend_Form
+{
+	public function init()
+	{
+		$this->setMethod('post');
+		$this->setAttrib('id','epSettingsFrm');
+		$this->setAttrib('name','epSettingsFrm');
+
+		/*$auth = Zend_Auth::getInstance();
+		if($auth->hasIdentity())
+		{
+			$loginUserId = $auth->getStorage()->read()->id;
+            $businessunit_id = $auth->getStorage()->read()->businessunit_id;
+            $department_id = $auth->getStorage()->read()->department_id; 
+            $loginuserRole = $auth->getStorage()->read()->emprole;
+            $loginuserGroup = $auth->getStorage()->read()->group_id;
+		}
+		
+		if($loginuserRole != SUPERADMINROLE && $loginuserGroup != MANAGEMENT_GROUP)
+        {
+        */
+			$businessunit_id = new Zend_Form_Element_Hidden('bunit_id');
+            $department_id = new Zend_Form_Element_Hidden('dept_id');
+
+            $businessunit_id = new Zend_Form_Element_Select('businessunit_id');
+            $businessunit_id->setLabel("Business Unit");
+			$businessunit_id->setRequired(true);
+			$businessunit_id->setRegisterInArrayValidator(false);
+			$businessunit_id->addValidator('NotEmpty', false, array('messages' => 'Please select business unit.'));
+                       
+            $department_id = new Zend_Form_Element_Select('department_id');
+            $department_id->setLabel("Department");
+            $department_id->setRequired(true);
+			$department_id->setRegisterInArrayValidator(false);
+			$department_id->addMultiOptions(array('' => 'Select Department'));   
+			$department_id->addValidator('NotEmpty', false, array('messages' => 'Please select department.'));
+
+			
+        /*}
+		else
+        {
+            $businessunit_id = new Zend_Form_Element_Select('businessunit_id');
+            $businessunit_id->setLabel("Business Unit");                        
+            $businessunit_id->setRegisterInArrayValidator(false);
+            $businessunit_id->setRequired(true);
+            $businessunit_id->addValidator('NotEmpty', false, array('messages' => 'Please select business unit'));
+            
+            $department_id = new Zend_Form_Element_Select('department_id');
+            $department_id->setLabel("Department");                        
+            $department_id->setRegisterInArrayValidator(false);
+			$department_id->addMultiOptions(array('' => 'Select Department'));            
+        }
+
+		$l1_manager = new Zend_Form_Element_Checkbox('l1_manager');
+		$l1_manager->setLabel("L1 Manager");
+		$l1_manager->setAttrib('disabled','disabled'); */
+       
+		$l2_manager = new Zend_Form_Element_Select('l2_manager');
+		$l2_manager->setLabel("L2 Manager");
+        $l2_manager->addMultiOptions(array('' => 'Select L2 Manager'));
+		$l2_manager->setRegisterInArrayValidator(false);
+		$l2_manager->setRequired(true);
+		$l2_manager->addValidator('NotEmpty', false, array('messages' => 'Please select l2 manager.'));		
+
+		$hr_manager = new Zend_Form_Element_Select('hr_manager');
+		$hr_manager->setLabel("HR Manager");
+        $hr_manager->addMultiOptions(array('' => 'Select HR Manager'));
+		$hr_manager->setRegisterInArrayValidator(false);
+		$hr_manager->setRequired(true);
+		$hr_manager->addValidator('NotEmpty', false, array('messages' => 'Please select hr manager.'));		
+
+		$sys_admin = new Zend_Form_Element_Select('sys_admin');
+		$sys_admin->setLabel("System Admin");
+        $sys_admin->setAttrib('class', 'selectoption');
+        $sys_admin->addMultiOptions(array('' => 'Select System Admin'));
+		$sys_admin->setRegisterInArrayValidator(false);
+		
+		$general_admin = new Zend_Form_Element_Select('general_admin');
+		$general_admin->setLabel("General Admin");
+        $general_admin->setAttrib('class', 'selectoption');
+        $general_admin->addMultiOptions(array('' => 'Select General Admin'));
+		$general_admin->setRegisterInArrayValidator(false);
+		
+
+		$finance_manager = new Zend_Form_Element_Select('finance_manager');
+		$finance_manager->setLabel("Finance Manager");
+        $finance_manager->setAttrib('class', 'selectoption');
+        $finance_manager->addMultiOptions(array('' => 'Select Finance Manager'));
+		$finance_manager->setRegisterInArrayValidator(false);
+		
+		$notice_period = new Zend_Form_Element_Text('notice_period');
+		$notice_period->setRequired(true);
+		$notice_period->setAttrib('maxLength',3);
+		$notice_period->addValidator('NotEmpty', false, array('messages' => 'Please enter notice period.'));	
+		$notice_period->addFilter(new Zend_Filter_StringTrim());
+		
+		$notice_period->addValidator("regex",true,array(
+                           'pattern'=>'/^([0-9]+?)+$/',
+                           
+                           'messages'=>array(
+                                   'regexNotMatch'=>'Please enter only numbers.'
+                           )
+        ));
+		$notice_period->addValidator("greaterThan",true,array(
+                           'min'=>0,                                           
+                           'messages'=>array(
+                                   'notGreaterThan'=>'Notice period cannot be zero.'
+                           )
+        ));			
+		$submitBtn = new Zend_Form_Element_Submit('submit');
+		$submitBtn->setAttrib('id','submitbutton');
+		$submitBtn->setLabel('Save');
+
+		$this->addElements(array($businessunit_id,$department_id, $hr_manager,$l2_manager,  $sys_admin, $general_admin, $finance_manager,$notice_period,$submitBtn));
+		$this->setElementDecorators(array('ViewHelper'));
+	}
+}
+?>
\ No newline at end of file

--- application/modules/exit/forms/Exitquestions.php ---
@@ -0,0 +1,80 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+class Exit_Form_Exitquestions extends Zend_Form
+{
+	public function init()
+	{
+		$this->setMethod('post');
+		
+		$this->setAttrib('id', 'formid');
+		$this->setAttrib('name', 'exitquestions');
+
+
+        $id = new Zend_Form_Element_Hidden('id');
+		
+		$exittypes = new Zend_Form_Element_Select('exit_type_id');
+		$exittypes->setLabel("Exit Type");
+        $exittypes->setAttrib('class', 'selectoption');
+        $exittypes->addMultiOption('','Select exit type');
+        $exittypes->setRegisterInArrayValidator(false);
+        $exittypes->setRequired(true);
+		$exittypes->addValidator('NotEmpty', false, array('messages' => 'Please select exit type.'));
+		
+		$postid = Zend_Controller_Front::getInstance()->getRequest()->getParam('id');
+		if($postid !='')
+		{
+			$question = new Zend_Form_Element_Text("question");
+			$question->setLabel('Question');
+			$question->setAttrib('maxLength', 100);
+			$question->addFilter(new Zend_Filter_StringTrim());
+			$question->setRequired(true);
+	        $question->addValidator('NotEmpty', false, array('messages' => 'Please enter question.'));
+			$question->addValidator("regex",true,array(                           
+	                           'pattern'=>'/^[a-zA-Z0-9.\- ?\',\/#@$&*()!]+$/',
+	                           'messages'=>array(
+	                               'regexNotMatch'=>'Please enter valid question.'
+	                           )
+	        	));
+	       
+			$description = new Zend_Form_Element_Textarea('description');
+			$description->setLabel("Description");
+	        $description->setAttrib('rows', 10);
+	        $description->setAttrib('cols', 50);
+			$description ->setAttrib('maxlength', '200');
+		}
+
+        $submit = new Zend_Form_Element_Submit('submit');
+		$submit->setAttrib('id', 'submitbutton');
+		$submit->setLabel('Save'); 
+		
+		$submitadd = new Zend_Form_Element_Button('submitbutton');
+		$submitadd->setAttrib('id', 'submitbuttons');
+		$submitadd->setAttrib('onclick', 'validatequestiononsubmit(this)');
+		$submitadd->setLabel('Save');
+		
+		if($postid !='')
+			 $this->addElements(array($id,$exittypes,$question,$description,$submit));
+	    else		 
+		 	$this->addElements(array($id,$exittypes,$submitadd));
+         $this->setElementDecorators(array('ViewHelper')); 
+	}
+}
\ No newline at end of file

--- application/modules/exit/forms/Exittypes.php ---
@@ -0,0 +1,63 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+class Exit_Form_Exittypes extends Zend_Form
+{
+	public function init()
+	{
+		$this->setMethod('post');
+		$this->setAttrib('id','epexittypes');
+		$this->setAttrib('name','epexittypes');
+
+		$exitType = new Zend_Form_Element_Text('exit_type');
+		$exitType->setAttrib('id','exit_type');
+		$exitType->setAttrib('name','exit_type');
+		$exitType->setAttrib('maxlength','30');
+		$exitType->addFilter(new Zend_Filter_StringTrim());
+		$exitType->setRequired(true);
+		$exitType->addValidator('NotEmpty',false,array("messages"=>'Please enter exit type.'));
+		$exitType->addValidator('regex',true,array(
+			'pattern'=>'/^[a-zA-Z0-9.\- ?\',\/#@$&*()!+]+$/', 
+			'messages'=>array('regexNotMatch'=>'Please enter valid exit type.')
+		));
+		$exitType->addValidator(new Zend_Validate_Db_NoRecordExists(
+			array(
+				'table' => 'main_exit_types',
+				'field' => 'exit_type',
+				'exclude' => 'id!="'.Zend_Controller_Front::getInstance()->getRequest()->getParam('id').'" and isactive = 1'
+			)	
+		));
+		$exitType->getValidator('Db_NoRecordExists')->setMessage('Exit type already exists.');
+
+		$description = new Zend_Form_Element_Textarea('description');
+        $description->setAttrib('rows', 10);
+        $description->setAttrib('cols', 50);
+		$description ->setAttrib('maxlength', '200');
+		
+		$submitBtn = new Zend_Form_Element_Submit('submit');
+		$submitBtn->setAttrib('id','submitBtn');
+		$submitBtn->setLabel('Save');
+
+		$this->addElements(array($exitType,$submitBtn,$description));
+		$this->setElementDecorators(array('ViewHelper'));
+	}
+}
+?>
\ No newline at end of file

--- application/modules/exit/models/Allexitprocs.php ---
@@ -0,0 +1,306 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Model_Allexitprocs extends Zend_Db_Table_Abstract
+{
+	protected $_name = 'main_exit_process';
+	private $db;
+	private $searchArray = array();
+	private $loggedInUser = '';
+	private $loggedInUserGroup = '';
+	private $loggedInUserRole = '';
+	
+	public function init()
+	{
+		$this->db = Zend_Db_Table::getDefaultAdapter();
+
+		/**
+		** Initiating zend auth object
+		** for getting logged in user id
+		**/
+		$auth = Zend_Auth::getInstance();
+		
+		if($auth->hasIdentity())
+		{
+			$this->loggedInUser = $auth->getStorage()->read()->id;
+			$this->loggedInUserRole = $auth->getStorage()->read()->emprole;
+			$this->loggedInUserGroup = $auth->getStorage()->read()->group_id;
+			$this->department_id = $auth->getStorage()->read()->department_id;
+			$this->is_org_head = $auth->getStorage()->read()->is_orghead;
+		}
+	}
+	
+	public function getGrid($sort,$by,$perPage,$pageNo,$searchData,$call,$dashboardcall,$a='',$b='',$c='',$d='',$status = '')
+	{
+		$searchQuery = '';
+       // $searchArray = array();
+        $data = array();
+
+		if($searchData != '' && $searchData!='undefined')
+			{
+				$searchValues = json_decode($searchData);
+				foreach($searchValues as $key => $val)
+				{
+					if(empty($a))
+					{
+						if($key=='initiateddate')
+							$searchQuery .= " date(e.".'createddate'.") = '".  sapp_Global::change_date($val,'database')."' AND ";
+						else if($key=='overall_status')
+							$searchQuery .= " e.".$key." like '%".$val."%' AND ";
+						else if($key=='exit_type')
+							$searchQuery .= " et.".$key." like '%".$val."%' AND ";
+						else if($key=='individual_status'){
+							$searchQuery .="case 
+										when emp.reporting_manager =".$this->loggedInUser." then e.l1_status LIKE '%".$val."%'
+										when econfig.l2_manager =".$this->loggedInUser." then e.l2_status LIKE '%".$val."%'
+										when econfig.hr_manager =".$this->loggedInUser." then e.hr_manager_status LIKE '%".$val."%'
+										when econfig.sys_admin =".$this->loggedInUser." then e.sys_admin_status LIKE '%".$val."%'
+										when econfig.finance_manager =".$this->loggedInUser." then e.fin_admin_status LIKE '%".$val."%'
+										when econfig.general_admin =".$this->loggedInUser." then e.gen_admin_status LIKE '%".$val."%' end ";
+						
+						}
+						else	
+							$searchQuery .= " emp.".$key." like '%".$val."%' AND ";
+					}
+					$this->searchArray[$key] = $val;
+				}
+				$searchQuery = rtrim($searchQuery," AND");					
+			}
+		$objName = 'allexitproc';
+
+		if($this->loggedInUserRole != SUPERADMINROLE && $this->is_org_head!=1){
+			$tableFields = array('action'=>'Action','userfullname'=>'Employee','employeeId'=>'Employee ID','businessunit_name'=>'Business Unit','department_name'=>'Department','exit_type'=>'Exit Type','overall_status'=>'Overall Status','individual_status'=>'Individual Status','initiateddate' => 'Initiated Date');
+		}else{
+			$tableFields = array('action'=>'Action','userfullname'=>'Employee','employeeId'=>'Employee ID','businessunit_name'=>'Business Unit','department_name'=>'Department','exit_type'=>'Exit Type','overall_status'=>'Overall Status','initiateddate' => 'Initiated Date');
+		}
+
+		$tablecontent = $this->getAllExitProcs('grid',$sort, $by, $pageNo, $perPage,$searchQuery,$a,$status);     
+		
+		
+		/**
+		** check if logged in user acts as a l2 manager for any of the raised exit procedures
+		**/
+		$l2mData = $this->getExitProcsByL2Manager('grid',$sort, $by, $pageNo, $perPage,$searchQuery,$a);
+
+		
+		$dataTmp = array(
+			'sort' => $sort,
+			'by' => $by,
+			'pageNo' => $pageNo,
+			'perPage' => $perPage,				
+			'tablecontent' => $tablecontent,
+			'l2mData' => $l2mData,
+			'objectname' => $objName,
+			'extra' => array(),
+			'tableheader' => $tableFields,
+			'jsGridFnName' => 'getAjaxgridData',
+			'jsFillFnName' => '',
+			'searchArray' => $this->searchArray,
+			'add' =>'add',
+			'call'=>$call,
+			'dashboardcall'=>$dashboardcall,
+			'search_filters' => array(
+					'initiateddate' =>array('type'=>'datepicker')					
+				)
+		);
+		return $dataTmp;
+	}
+	public function getAllExitProcs($con,$sort='', $by='', $pageNo='', $perPage='',$searchQuery='',$conText = '',$status = '')
+	{	
+		try
+		{
+			$configWhere = "";
+			$select = "";
+			// to show all records to manager, super admin	
+			//if($this->loggedInUser != SUPERADMIN)
+			if($this->loggedInUserRole != SUPERADMINROLE && $this->is_org_head!=1)
+			{
+				$configWhere = " AND econfig.isactive = 1 AND ( emp.reporting_manager = ".$this->loggedInUser." OR econfig.l2_manager = ".$this->loggedInUser." OR econfig.hr_manager = ".$this->loggedInUser." OR econfig.sys_admin = ".$this->loggedInUser." OR econfig.general_admin = ".$this->loggedInUser." OR econfig.finance_manager = ".$this->loggedInUser.")";
+		
+			}
+		
+			$columns = 'e.*';				
+			$where = " e.employee_id != ".$this->loggedInUser;
+			
+			if($searchQuery)
+				$where .= " AND ".$searchQuery;
+			
+			
+			/**based on status value displaying grid
+			$status=1 //all records
+			$status=2 // approved records
+			$status=3 // rejected records
+			$status=4 // pending records
+			**/
+			
+			if($status==1)//all records
+			{
+				$where .= " AND e.overall_status in (1,2,3) ";
+			}
+			else if($status==2)// approved records
+			{
+				$where .= " AND e.overall_status in (2) ";
+			}
+			else if($status==3)// rejected records
+			{
+				$where .= " AND e.overall_status in (3) ";
+			}
+			else
+			{
+				$where .= " AND e.overall_status in (1) ";
+			}
+			if($this->loggedInUserRole != SUPERADMINROLE && $this->is_org_head!=1){
+				$res = $this->select()
+				->setIntegrityCheck(false)
+
+				->from(array('e' => $this->_name),array('e.id',$columns,'date(e.createddate) as initiateddate','individual_status'=>new Zend_Db_Expr('case when emp.reporting_manager ='.$this->loggedInUser.' then e.l1_status
+							when econfig.l2_manager ='.$this->loggedInUser.' then e.l2_status
+							when econfig.hr_manager='.$this->loggedInUser.' then e.hr_manager_status
+							when econfig.sys_admin='.$this->loggedInUser.' then e.sys_admin_status
+							when econfig.finance_manager='.$this->loggedInUser.' then e.fin_admin_status
+							when econfig.general_admin='.$this->loggedInUser.' then e.gen_admin_status else "--" end')))
+				->joinInner(array('emp'=> 'main_employees_summary'),'e.employee_id = emp.user_id',array('emp.userfullname','emp.businessunit_name','emp.department_name','emp.employeeId','emp.reporting_manager'))
+				->joinInner(array('et'=> 'main_exit_types'),'et.id = e.exit_type_id',array('et.exit_type'));
+			}else{
+				$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('e' => $this->_name),array('e.id','date(e.createddate) as initiateddate',$columns))
+				->joinInner(array('emp'=> 'main_employees_summary'),'e.employee_id = emp.user_id',array('emp.userfullname','emp.businessunit_name','emp.department_name','emp.employeeId','emp.reporting_manager'))
+				->joinInner(array('et'=> 'main_exit_types'),'et.id = e.exit_type_id',array('et.exit_type'));
+			}
+			
+			if(!empty($configWhere))
+				$res = $res->joinInner(array('econfig' => 'main_exit_settings'),'econfig.id = e.exit_settings_id',array('econfig.createddate as created_date','econfig.l2_manager','econfig.hr_manager','econfig.sys_admin','econfig.general_admin','econfig.finance_manager'));
+			
+			//echo $res;exit;
+
+				$res = $res->where($where.$configWhere);
+				$res = $res->order("$by $sort");
+			if($con == 'grid' && !empty($pageNo) && !empty($perPage))
+			{
+				$this->select()->limitPage($pageNo, $perPage);
+			}
+			if($con == 'grid')
+			{
+				return $res;
+			}		
+			else
+			{
+				return $this->fetchAll($res)->toArray();
+			}
+		}
+		catch(Exception $e)
+		{
+			print_r($e);
+		}
+	}
+	
+	
+
+	public function getExitProcsByL2Manager($con,$sort='', $by='', $pageNo='', $perPage='',$searchQuery='',$conText = '')
+	{
+		try
+		{
+			$columns = 'e.*';
+			$where = "e.isactive = 1";
+			
+			if($searchQuery)
+				$where .= " AND ".$searchQuery;
+		
+			$res = "";
+		
+			if($con == 'grid' && !empty($pageNo) && !empty($perPage))
+			{
+				$this->select()->limitPage($pageNo, $perPage);
+			}
+
+			if($con == 'grid')
+			{
+				return $res;
+			}
+			else
+			{
+				return $this->fetchAll($res)->toArray();
+			}
+		}
+		catch(Exception $e)
+		{
+			//print_r($e);
+		}
+	}
+
+	public function getExitProcDetails($exitProcId)
+	{
+		if($exitProcId)
+		{
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('ep' => $this->_name),'ep.*')
+				->joinInner(array('u' => 'main_employees_summary'),'u.user_id = ep.employee_id',array('u.userfullname','u.businessunit_id','u.businessunit_name','u.department_id','u.department_name','u.employeeId','u.date_of_joining','u.jobtitle_name','u.position_name','u.reporting_manager','u.reporting_manager_name'))
+				->joinInner(array('econfig' => 'main_exit_settings'),'econfig.businessunit_id = u.businessunit_id AND econfig.department_id = u.department_id',array('econfig.id as econfigId','econfig.businessunit_id','econfig.department_id','econfig.l2_manager','econfig.hr_manager','econfig.sys_admin','econfig.general_admin','econfig.finance_manager'))
+				->joinInner(array('etypes' => 'main_exit_types'),'etypes.id = ep.exit_type_id',array('etypes.exit_type'))
+				->where('ep.id = '.$exitProcId);
+
+			return $this->fetchAll($res)->toArray();
+		
+		}
+	}
+
+	public function updateExitProc($data,$where,$id)
+	{
+		if(!empty($data) && !empty($where))
+		{
+			$this->update($data,$where);
+			return 'update';
+		}
+		else
+			return 'failed';
+	}
+
+	//get the details based on exit_setting_id
+	public function getExitsettingsProcDetails($id,$con='')
+	{
+		
+		if($con=='')
+		{
+			$where='ep.exit_settings_id='.$id;
+		}
+		else
+		{
+			$where='ep.exit_settings_id='.$id.' AND ep.overall_status ="pending"';
+		}
+		 $select = $this->select()
+    					   ->setIntegrityCheck(false)	
+                           ->from(array('ep'=>$this->_name),array('ep.*'))
+						   ->where($where);	 				   				
+		return $this->fetchAll($select)->toArray(); 
+	}
+
+	//function to get exit process initialization data
+	public function getExitProcessData($id)
+	{
+		$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('ep' => $this->_name),'ep.*')
+				->where('ep.id = '.$id);
+		return $this->fetchAll($res)->toArray();
+	}
+}
+?>
\ No newline at end of file

--- application/modules/exit/models/Exitproc.php ---
@@ -0,0 +1,283 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Model_Exitproc extends Zend_Db_Table_Abstract
+{
+	protected $_name = 'main_exit_process';
+	private $db;
+	private $searchArray = array();
+
+	public function init()
+	{
+		$this->db = Zend_Db_Table::getDefaultAdapter();
+		$auth = Zend_Auth::getInstance();
+		
+		if($auth->hasIdentity())
+		{
+			$this->loggedInUser = $auth->getStorage()->read()->id;
+			$this->loggedInUserRole = $auth->getStorage()->read()->emprole;
+			$this->loggedInUserGroup = $auth->getStorage()->read()->group_id;
+		}
+	}
+	
+	public function getExitProcDetails($userId='',$process_id)
+	{
+		$cond='';
+		$join = '';
+		if($process_id!='')
+		{
+			$cond = ' AND ep.id = '.$process_id;
+			$join = ' AND econfig.id = ep.exit_settings_id'; 
+		}
+		if(!empty($userId))
+		{
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('ep' => $this->_name),'ep.*')
+				->joinInner(array('u' => 'main_employees_summary'),'u.user_id = ep.employee_id',array('u.businessunit_id','u.department_id'))
+				->joinInner(array('et' => 'main_exit_types'),'et.id = ep.exit_type_id',array('et.exit_type'))
+				->joinInner(array('econfig' => 'main_exit_settings'),'econfig.businessunit_id = u.businessunit_id AND econfig.department_id = u.department_id'.$join,array('econfig.id as econfigId','econfig.businessunit_id','econfig.department_id','econfig.l2_manager','econfig.hr_manager','econfig.sys_admin','econfig.general_admin','econfig.finance_manager'))
+				->where('ep.employee_id ='.$userId.' AND u.isactive = 1'.$cond);
+				//->order('ep.id DESC')
+				//->limit('0,1');
+			return $this->fetchAll($res)->toArray();
+		}
+	}
+
+	public function getExitTypes()
+	{
+		$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('et' => 'main_exit_types'),'et.*')
+				->where('et.isactive = 1');
+
+			return $this->fetchAll($res)->toArray();
+	}
+
+	public function getEmployeeDetails($userId = '',$con='')
+	{
+		if($userId == SUPERADMIN)
+		{
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('emp' => 'main_users'),'emp.*')
+				->where('emp.id ='.$userId.' AND emp.isactive = 1');				
+
+			return $this->fetchAll($res)->toArray();
+		}
+		else if(!empty($userId) && $con == 'one')
+		{
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('emp' => 'main_employees_summary'),'emp.*')
+				->where('emp.user_id ='.$userId.' AND emp.isactive = 1');				
+
+			return $this->fetchAll($res)->toArray();
+		}
+		else if(!empty($userId) && $con == 'multiple')
+		{
+			$where = ' AND emp.user_id IN ('.$userId.')';
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('emp' => 'main_employees_summary'),'emp.*')
+				->where('emp.isactive = 1 '.$where);				
+
+			return $this->fetchAll($res)->toArray();
+		}
+		
+	}
+
+	public function save($data, $where = '')
+	{
+		if(empty($where))
+		{
+			$this->insert($data);
+			$id = $this->getAdapter()->lastInsertId($this->_name);
+			return $id;
+		}
+	}
+
+	public function getSettings($businessunit_id,$department_id)
+	{	
+		$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('epConfig' => 'main_exit_settings'),'epConfig.*')
+				->where('epConfig.isactive = 1 AND epConfig.businessunit_id = '.$businessunit_id.' AND epConfig.department_id = '.$department_id);
+
+		return $this->fetchAll($res)->toArray();
+	}	
+
+	public function exitProcHistory($historyData)
+	{
+		if(!empty($historyData))
+		{
+				$this->db->insert('main_exit_history',$historyData);
+				$id = $this->getAdapter()->lastInsertId('main_exit_history');
+				return $id;
+		}
+	}
+
+	public function getExitProcHistory($exitProcId)
+	{
+		if($exitProcId)
+		{
+			$qry = $this->select()
+					->setIntegrityCheck(false)
+					->from(array('eph' => 'main_exit_history'),'eph.*')
+					->join(array('e' => 'main_users'),'e.id = eph.createdby',array('e.userfullname','e.profileimg'))
+					->where('eph.exit_request_id = '.$exitProcId);
+
+			return $this->fetchAll($qry)->toArray();			
+		}
+	}
+	public function getGrid($sort,$by,$perPage,$pageNo,$searchData,$call,$dashboardcall,$a='',$b='',$c='',$d='')
+	{
+		$searchQuery = '';
+       // $searchArray = array();
+        $data = array();
+
+		if($searchData != '' && $searchData!='undefined')
+			{
+				$searchValues = json_decode($searchData);
+				foreach($searchValues as $key => $val)
+				{
+					if(empty($a))
+					{
+						if($key=='initiateddate')
+							$searchQuery .= " date(e.".'createddate'.") = '".  sapp_Global::change_date($val,'database')."' AND ";
+						elseif($key=='exit_type')	
+							$searchQuery .= " econfig.".$key." like '%".$val."%' AND ";
+						elseif($key=='overall_status')
+							$searchQuery .= " e.".$key." like '%".$val."%' AND ";
+						else
+							$searchQuery .= " emp.".$key." like '%".$val."%' AND ";
+					}
+					$this->searchArray[$key] = $val;
+				}
+				$searchQuery = rtrim($searchQuery," AND");					
+			}
+		$objName = 'exitproc';
+
+		$tableFields = array('action'=>'Action','businessunit_name'=>'Business Unit','department_name'=>'Department','exit_type'=>'Exit Type','overall_status'=>'Overall Status','initiateddate' => 'Initiated Date');
+
+		$tablecontent = $this->getExitProcs('grid',$sort, $by, $pageNo, $perPage,$searchQuery,$a);     
+		
+		
+
+		
+		$dataTmp = array(
+			'sort' => $sort,
+			'by' => $by,
+			'pageNo' => $pageNo,
+			'perPage' => $perPage,				
+			'tablecontent' => $tablecontent,
+			'objectname' => $objName,
+			'extra' => array(),
+			'tableheader' => $tableFields,
+			'jsGridFnName' => 'getAjaxgridData',
+			'jsFillFnName' => '',
+			'searchArray' => $this->searchArray,
+			'add' =>'add',
+			'call'=>$call,
+			'dashboardcall'=>$dashboardcall,
+			'search_filters' => array(
+					'initiateddate' =>array('type'=>'datepicker')					
+				)
+		);
+		return $dataTmp;
+	}
+	public function getExitProcs($con,$sort='', $by='', $pageNo='', $perPage='',$searchQuery='',$conText = '')
+	{	
+		try
+		{
+			$configWhere = "";
+
+			if($this->loggedInUser != SUPERADMIN)
+			{
+				$configWhere = " AND econfig.isactive = 1 ";
+			}
+			$columns = 'e.*';
+			$where = " e.employee_id = ".$this->loggedInUser;
+			
+			if($searchQuery)
+				$where .= " AND ".$searchQuery;
+		
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('e' => $this->_name),array('e.id','date(e.createddate) as initiateddate',$columns))
+				->joinInner(array('emp'=> 'main_employees_summary'),'e.employee_id = emp.user_id',array('emp.userfullname','emp.businessunit_name','emp.department_name','emp.employeeId','emp.reporting_manager'));
+			if(!empty($configWhere))
+				$res = $res->joinInner(array('econfig' => 'main_exit_types'),'econfig.id = e.exit_type_id',array('econfig.createddate as created_date','econfig.exit_type as exit_type'));
+
+				$res = $res->where($where.$configWhere);
+				$res = $res->order("$by $sort");
+			if($con == 'grid' && !empty($pageNo) && !empty($perPage))
+			{
+				$this->select()->limitPage($pageNo, $perPage);
+			}
+			if($con == 'grid')
+			{
+				return $res;
+			}
+			else
+			{
+				return $this->fetchAll($res)->toArray();
+			}
+		}
+		catch(Exception $e)
+		{
+			print_r($e);
+		}
+	}
+	//function to get user_email to send mails
+	public function getUserEmail($userId)
+	{
+		$qry = $this->select()
+					->setIntegrityCheck(false)
+					->from(array('mu' => 'main_users'),'mu.*')
+					->where('mu.id = '.$userId);
+
+			return $this->fetchAll($qry)->toArray();
+	}
+	//function to get settings data
+	public function getSettingsData($settingId)
+	{
+		$qry = $this->select()
+					->setIntegrityCheck(false)
+					->from(array('mes' => 'main_exit_settings'),'mes.*')
+					->where('mes.id = '.$settingId);
+
+			return $this->fetchAll($qry)->toArray();
+	}
+	//function to get employee raised requests
+	public function getEmpRaisedRequest($emp_id)
+	{
+		$qry = $this->select()
+					->setIntegrityCheck(false)
+					->from(array('mep' => 'main_exit_process'),'mep.*')
+					->where('mep.employee_id = '.$emp_id.' and mep.overall_status="Pending"');
+
+		return $this->fetchAll($qry)->toArray();
+	}
+
+}
+
+
+?>
\ No newline at end of file

--- application/modules/exit/models/Exitprocsettings.php ---
@@ -0,0 +1,410 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Model_Exitprocsettings extends Zend_Db_Table_Abstract
+{
+	protected $_name = 'main_exit_settings';
+	private $db;
+
+
+	public function init()
+	{
+		$this->db = Zend_Db_Table::getDefaultAdapter();
+	}
+	
+	public function getGrid($sort,$by,$perPage,$pageNo,$searchData,$call,$dashboardcall,$a='',$b='',$c='',$d='')
+	{
+		$searchQuery = '';
+		$searchArray = array();
+		$data = array();
+		if($searchData != '' && $searchData!='undefined')
+			{
+				$searchValues = json_decode($searchData);
+				foreach($searchValues as $key => $val)
+				{
+					$searchArray[$key] = $val;
+				}
+								
+			}
+			
+		$objName = 'exitprocsettings';
+		
+		$tableFields = array('action'=>'Action','businessunit_id'=>'Business Unit','department_id'=>'Department','l2_manager'=>'L2 Manager','hr_manager'=>'HR Manager','sys_admin'=>'System Admin','general_admin'=>'General Admin','finance_manager'=>'Finance Manager');
+
+		$tablecontent = $this->getExitprocSettings('grid',$sort, $by, $pageNo, $perPage,$searchQuery,$a,$searchArray);     
+
+		/** retrieve names array **/
+		$tmpRes = $tablecontent;
+		$empDetailsObj = $buDetailsObj = $deptDetailsObj = '';
+		$tmpResObj = $this->fetchAll($tmpRes)->toArray();
+		if(count($tmpResObj) > 0)
+		{
+			$lineManager1 = $lineManager2 = $employeesStr = $businessUnitsStr = $departmentsStr = '';
+			
+			for($e = 0; $e < sizeof($tmpResObj); $e++)
+			{
+				$employeesStr .= $tmpResObj[$e]['hr_manager'].","; 
+				if(!empty($tmpResObj[$e]['l2_manager']))
+					$employeesStr .= $tmpResObj[$e]['l2_manager'].",";
+				if(!empty($tmpResObj[$e]['sys_admin']))
+					$employeesStr .= $tmpResObj[$e]['sys_admin'].",";
+				if(!empty($tmpResObj[$e]['general_admin']))
+					$employeesStr .= $tmpResObj[$e]['general_admin'].","; 
+				if(!empty($tmpResObj[$e]['finance_manager']))
+					$employeesStr .= $tmpResObj[$e]['finance_manager'].",";
+
+				$businessUnitsStr .= $tmpResObj[$e]['businessunit_id'].","; 
+				$departmentsStr .= $tmpResObj[$e]['department_id'].",";
+			}
+			
+			if(empty($sort)) 
+				$sort = 'ASC';
+
+			if(!empty($employeesStr))
+			{
+				$employeesStr = rtrim($employeesStr,",");
+
+				$empDetailsQuery = $this->select()
+								->setIntegrityCheck(false)
+								->from(array('emp' => 'main_employees_summary'),array('emp.user_id','emp.userfullname','emp.profileimg', 'emp.jobtitle_name'))
+								->where('emp.user_id IN ('.$employeesStr.') AND emp.isactive = 1 ')
+								->order("emp.userfullname");
+
+				$empDetailsObj_tmp = $this->fetchAll($empDetailsQuery)->toArray();
+
+				foreach ($empDetailsObj_tmp as &$row) {
+					$empDetailsObj[$row['user_id']] = &$row;
+				}
+
+			}
+			if(!empty($businessUnitsStr))
+			{
+				$businessUnitsStr = rtrim($businessUnitsStr,",");
+
+				$buDetailsQuery = $this->select()
+								->setIntegrityCheck(false)
+								->from(array('bu' => 'main_businessunits'),array('bu.id','bu.unitname'))
+								->where('bu.id IN ('.$businessUnitsStr.') AND bu.isactive = 1 ')
+								->order("bu.unitname");
+
+				$buDetailsObj_tmp = $this->fetchAll($buDetailsQuery)->toArray();
+				foreach ($buDetailsObj_tmp as &$row) {
+					$buDetailsObj[$row['id']] = &$row;
+				}
+			}
+			if(!empty($departmentsStr))
+			{
+				$departmentsStr = rtrim($departmentsStr,",");
+
+				$deptDetailsQuery = $this->select()
+								->setIntegrityCheck(false)
+								->from(array('d' => 'main_departments'),array('d.id','d.deptname'))
+								->where('d.id IN ('.$departmentsStr.') AND d.isactive = 1 ')
+								->order("d.deptname");
+
+				$deptDetailsObj_tmp = $this->fetchAll($deptDetailsQuery)->toArray();
+				foreach ($deptDetailsObj_tmp as &$row) {
+					$deptDetailsObj[$row['id']] = &$row;
+				}
+			}			
+		}
+		$dataTmp = array(
+			'sort' => $sort,
+			'by' => $by,
+			'pageNo' => $pageNo,
+			'perPage' => $perPage,				
+			'tablecontent' => $tablecontent,
+			'objectname' => $objName,
+			'extra' => array(),
+			'tableheader' => $tableFields,
+			'jsGridFnName' => 'getAjaxgridData',
+			'jsFillFnName' => '',
+			'searchArray' => $searchArray,
+			'add' =>'add',
+			'call'=>$call,
+			'dashboardcall'=>$dashboardcall,
+			'empDetailsObj' => $empDetailsObj,
+			'buDetailsObj' => $buDetailsObj,
+			'deptDetailsObj' => $deptDetailsObj,
+		);
+		return $dataTmp;
+	}
+
+	public function getExitprocSettings($con,$sort='', $by='', $pageNo='', $perPage='',$searchQuery='',$conText = '',$searchArray=array())
+	{
+	
+		try
+		{
+			$columns = 'e.*';
+			$where = "e.isactive = 1";
+			
+			if($conText)
+			{
+				$searchQuery1 = $searchQuery2 = $searchQuery3 = $searchQuery4 = $searchQuery5 = $searchQuery6 = $searchQuery7 ='';
+				
+				if(!empty($searchArray))
+				{
+					foreach($searchArray as $key => $val)
+					{
+						
+						if($key == 'businessunit_id'){
+							$searchQuery1 = " b.id = e.businessunit_id AND b.unitname  like '%".$val."%' AND b.isactive = 1 ";
+						}
+						else if($key == 'department_id'){
+							$searchQuery2 = " d.id = e.department_id AND d.deptname  like '%".$val."%' AND d.isactive = 1 ";
+						}
+						else if($key == 'l2_manager')
+						{
+							$searchQuery7 = " l2.user_id = e.l2_manager AND l2.userfullname  like '%".$val."%' AND l2.isactive = 1 ";	
+						}
+						else if($key == 'hr_manager')
+						{
+							$searchQuery3 = " hr.user_id = e.hr_manager AND hr.userfullname  like '%".$val."%' AND hr.isactive = 1 ";
+						}							
+						else if($key == 'sys_admin')
+						{
+							$searchQuery4 = " sy.user_id = e.sys_admin AND sy.userfullname  like '%".$val."%' AND sy.isactive = 1 ";	
+						}
+						else if($key == 'general_admin')
+						{
+							$searchQuery5 = " ga.user_id = e.general_admin AND ga.userfullname  like '%".$val."%' AND ga.isactive = 1 ";
+						}
+								
+						else if($key == 'finance_manager')
+						{
+							$searchQuery6 = " fm.user_id = e.finance_manager AND fm.userfullname  like '%".$val."%' AND fm.isactive = 1 ";	
+						}
+					}
+				}
+				else
+				{
+
+				}
+			
+			 $res = $this->select()
+					 ->setIntegrityCheck(false)
+					 ->from(array('e' => $this->_name),array($columns));
+					
+				if(!empty($searchQuery1))
+				{
+				
+					$res = $res->joinInner(array('b' => 'main_businessunits'),$searchQuery1,array());
+				}
+				if(!empty($searchQuery2))
+				{
+					$res = $res->joinInner(array('d' => 'main_departments'),$searchQuery2,array());
+				}
+				if(!empty($searchQuery3))
+				{
+					$res = $res->joinInner(array('hr' => 'main_employees_summary'),$searchQuery3,array());
+				}
+				if(!empty($searchQuery7))
+				{
+					$res = $res->joinInner(array('l2' => 'main_employees_summary'),$searchQuery7,array());
+				}
+				if(!empty($searchQuery4))
+				{
+					$res = $res->joinInner(array('sy' => 'main_employees_summary'),$searchQuery4,array());
+				}
+				if(!empty($searchQuery5))
+				{
+					$res = $res->joinInner(array('ga' => 'main_employees_summary'),$searchQuery5,array());
+				}
+				if(!empty($searchQuery6))
+				{
+					$res = $res->joinInner(array('fm' => 'main_employees_summary'),$searchQuery6,array());
+				}
+				
+				 $res = $res->where($where)
+					->order("$by $sort")
+					->limitPage($pageNo, $perPage);
+			}	
+			else
+			{
+			
+			 $res = $this->select()
+					->setIntegrityCheck(false)
+					->from(array('e' => $this->_name),array('e.id',$columns))
+					->where($where)
+					->order("$by $sort")
+					->limitPage($pageNo, $perPage);
+			}
+		
+			if($con == 'grid' && !empty($pageNo) && !empty($perPage))
+			{
+				$this->select()->limitPage($pageNo, $perPage);
+			}
+
+			if($con == 'grid')
+			{
+				return $res;
+			}
+			else
+			{
+				return $this->fetchAll($res)->toArray();
+			}
+		}
+		catch(Exception $e)
+		{
+			//print_r($e);
+		}
+	}
+	
+	public function getExitProcSettingsById($id)
+	{
+		if($id)
+		{
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('e' => $this->_name),array('e.*'))
+				->where('e.id=?',$id);
+
+			return $this->fetchAll($res)->toArray();
+		}
+	}
+	//function for get the data based on setting id 
+	public function getExitProcSettingsDetails($id)
+	{
+	
+		if($id)
+		{
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('e' => $this->_name),array('e.*'))
+				->joinLeft(array('b' => 'main_businessunits'),'b.id=e.businessunit_id',array('b.unitname as unitname'))
+				->joinLeft(array('d' => 'main_departments'),'d.id=e.department_id',array('d.deptname as deptname'))
+				->joinLeft(array('esl' => 'main_employees_summary'),'esl.user_id=e.l2_manager',array('esl.userfullname as l2manager_userfullname'))
+				->joinLeft(array('esh' => 'main_employees_summary'),'esh.user_id=e.hr_manager',array('esh.userfullname as hrmanager_userfullname'))
+				->joinLeft(array('esa' => 'main_employees_summary'),'esa.user_id=e.sys_admin',array('esa.userfullname as sysadmin_userfullname'))
+				->joinLeft(array('esg' => 'main_employees_summary'),'esg.user_id=e.general_admin',array('esg.userfullname as generaladmin_userfullname'))
+				->joinLeft(array('esf' => 'main_employees_summary'),'esf.user_id=e.finance_manager',array('esf.userfullname as finacemanager_userfullname'))
+				->where('e.id=?',$id);
+
+			return $this->fetchAll($res)->toArray();
+		}
+	}
+
+	public function getBusinessUnits($bunitId = '')
+	{
+		$where = 'b.isactive = 1';
+		if(!empty($bunitId))
+		{
+			$where .= ' AND b.id = '.$bunitId;
+		}
+		$res = $this->select()
+				->distinct()
+				->setIntegrityCheck(false)
+				->from(array('b' => 'main_businessunits'),array('b.id','b.unitname'))
+				->where($where);
+
+		return $this->fetchAll($res)->toArray();
+		
+	}
+
+	public function getDepartments($bunitId, $deptId = '', $con='')
+	{
+		if($con == 'all')
+		{
+			$where = (!empty($deptId)) ? ' AND d.id = '.$deptId :"";
+			$res = $this->select()
+				->setIntegrityCheck(false)
+				->from(array('d' => 'main_departments'),array('d.*'))
+				->where('d.isactive = 1 and unitid = '.$bunitId.$where);
+			return $this->fetchAll($res)->toArray();
+		}
+		else
+		{
+			$db = Zend_Db_Table::getDefaultAdapter();
+			$qry = 'select  distinct d.id,d.deptname from main_departments d where d.isactive = 1 and d.unitid = '.$bunitId;
+			$result = $db->query($qry)->fetchAll();
+			return $result;
+		}
+	}
+
+	public function getEmployeesDataByRole($empGroup,$bunitId, $deptId,$con='')
+	{
+		$where = 'e.isactive = 1';
+		
+		/* if($deptId)
+			$where .= ' AND e.department_id = '.$deptId; */
+
+		if($empGroup && !empty($con)){
+			$grpStr = implode(", ",$empGroup);
+			$where .= ' AND r.group_id IN ('.$grpStr.')';
+		}
+		else if($empGroup && empty($con))
+			$where .= ' AND r.group_id = '.$empGroup;
+
+		$res = $this->select()
+			->setIntegrityCheck(false)
+			->from(array('e' => 'main_employees_summary'),array('e.user_id','e.userfullname','e.profileimg', 'e.jobtitle_name'))
+			->joinInner(array('r' => 'main_roles'),'r.id = e.empRole',array())
+			->where($where.' AND e.businessunit_id = '.$bunitId);
+		
+		return $this->fetchAll($res)->toArray();
+	}
+
+	public function getEmployeesDataById($ids,$con='')
+	{
+		$where = 'e.isactive = 1';
+		
+		if(!empty($con))
+		{
+			$idsStr = implode(", ",$ids);
+			$where .= ' AND e.user_id IN ('.$idsStr.')';
+		}
+		else
+		{
+			$where .= ' AND e.user_id = '.$ids;
+		}
+
+		$res = $this->select()
+			->setIntegrityCheck(false)
+			->from(array('e' => 'main_employees_summary'),array('e.user_id','e.userfullname','e.profileimg', 'e.jobtitle_name'))
+			->where($where);
+		
+		return $this->fetchAll($res)->toArray();
+	}
+	
+	public function saveExitProcSettings($data,$where = '', $con = '')
+	{
+		if($con == 'add' && !empty($data))
+		{
+			$this->insert($data);
+			$id = $this->getAdapter()->lastInsertId($this->_name);
+			return $id;
+		}
+		else if($con == 'edit' && !empty($where))
+		{
+			$this->update($data,$where);
+			return 'update';
+		}
+	}
+	public function getActiveDepartmentIds()
+	{
+	  $select = $this->select()
+    					   ->setIntegrityCheck(false)	
+                           ->from(array('l'=>'main_exit_settings'),array('deptid'=>'l.department_id'))
+						   ->where('l.isactive = 1');  		   					   				
+		return $this->fetchAll($select)->toArray(); 
+	}
+	
+}
+?>
\ No newline at end of file

--- application/modules/exit/models/Exitquestions.php ---
@@ -0,0 +1,183 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Model_Exitquestions extends Zend_Db_Table_Abstract
+{
+	protected $_name = 'main_exit_questions';
+	private $db;
+
+	public function init()
+	{
+		$this->db = Zend_Db_Table::getDefaultAdapter();
+	}
+	
+	public function addExittype($data)
+	{
+		
+		if(!empty($data))
+		{
+			$this->insert($data);
+			$id = $this->getAdapter()->lastInsertId($this->_name);
+			return $id;
+		}
+	}
+
+	/**
+	** function to retrieve exit type
+	** @con = 'add' gets active exit type 
+	** @con = 'cnt' gets active exit type count
+	** @con = 'grid' gets active exit type data
+	**/
+	public function getExitquestions($con,$sort='', $by='', $pageNo='', $perPage='',$searchQuery='')
+	{
+		 
+		 $auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity())
+        {		
+            $loginuserRole = $auth->getStorage()->read()->emprole;
+            $loginuserGroup = $auth->getStorage()->read()->group_id;
+     	}
+        $where = "eq.isactive = 1 and et.isactive=1";
+        if($searchQuery)
+            $where .= " AND ".$searchQuery;
+       /*  if($loginuserRole != 1)
+        {
+            if($loginuserGroup != MANAGER_GROUP)
+                $where .= " AND (aq.createdby_group in ( ".$loginuserGroup.") or aq.createdby_group is null ) ";
+            else 
+                $where .= " AND (aq.createdby_group in ( ".$loginuserGroup.") ) ";
+        }
+		 */
+        $db = Zend_Db_Table::getDefaultAdapter();		
+		
+		$exitQuestionsData = $this->select()
+                                ->setIntegrityCheck(false)	
+                                ->from(array('eq'=>'main_exit_questions'),array('eq.*'))
+                                ->joinInner(array('et'=>'main_exit_types'), 'eq.exit_type_id = et.id', array('exit_type' => 'et.exit_type'))
+                                ->where($where)
+                                ->order("$by $sort") 
+                                ->limitPage($pageNo, $perPage); 
+        return $exitQuestionsData;  
+	}
+
+	public function getGrid($sort,$by,$perPage,$pageNo,$searchData,$call,$dashboardcall,$a='',$b='',$c='',$d='')
+	{
+		$searchQuery = '';
+        $searchArray = array();
+        $data = array();
+		
+		if($searchData != '' && $searchData!='undefined')
+			{
+				$searchValues = json_decode($searchData);
+				foreach($searchValues as $key => $val)
+				{
+					if(isset($key) && $key == "exit_type")
+					{
+						$searchQuery .= " et.".$key." like '%".($val)."%' AND ";
+					}
+					else
+					{
+						$searchQuery .= " eq.".$key." like '%".($val)."%' AND ";
+					}
+					$searchArray[$key] = $val;
+				}
+				$searchQuery = rtrim($searchQuery," AND");					
+			}
+			
+		$objName = 'configureexitqs';
+		
+		$tableFields = array('action'=>'Action','exit_type'=>'Exit type','question'=>'Question','description'=>'Description');
+		
+		$tablecontent = $this->getExitquestions('grid',$sort, $by, $pageNo, $perPage,$searchQuery);     
+		$dataTmp = array(
+			'sort' => $sort,
+			'by' => $by,
+			'pageNo' => $pageNo,
+			'perPage' => $perPage,				
+			'tablecontent' => $tablecontent,
+			'objectname' => $objName,
+			'extra' => array(),
+			'tableheader' => $tableFields,
+			'jsGridFnName' => 'getAjaxgridData',
+			'jsFillFnName' => '',
+			'searchArray' => $searchArray,
+			'add' =>'add',
+			'call'=>$call,
+			'dashboardcall'=>$dashboardcall,
+		);
+		return $dataTmp;
+	}
+	public function SaveorUpdateExitQuestionData($data, $where)
+	{
+	    if($where != ''){
+			$this->update($data, $where);
+			return 'update';
+		} else {
+			$this->insert($data);
+			$id=$this->getAdapter()->lastInsertId('main_exit_questions');
+			return $id;
+		}	
+	}
+	//get questions data based on id
+	public function getExitQuestionbyID($id)
+	{
+		$auth = Zend_Auth::getInstance();
+     	if($auth->hasIdentity()){
+		
+		$loginuserRole = $auth->getStorage()->read()->emprole;
+		$loginuserGroup = $auth->getStorage()->read()->group_id;
+     	}
+		$where = 'eq.isactive = 1 AND eq.id='.$id.' ';
+		
+            /* if($loginuserRole != 1)
+            {
+                if($loginuserGroup != MANAGER_GROUP)
+                    $where .= " AND (aq.createdby_group = ".$loginuserGroup." or aq.createdby_group is null) ";
+                else 
+                    $where .= " AND (aq.createdby_group = ".$loginuserGroup." ) ";
+            }
+			 */
+	    $select = $this->select()
+						->setIntegrityCheck(false)
+						->from(array('eq'=>'main_exit_questions'),array('eq.*'))
+					    ->where($where);
+		return $this->fetchAll($select)->toArray();	
+	}
+	//get questions related to exit type
+	public function getExitQuestionsByexitId($id)
+	{
+	    $select = $this->select()
+						->setIntegrityCheck(false)
+						->from(array('eq'=>'main_exit_questions'),array('eq.*'))
+					    ->where('eq.isactive = 1 AND eq.exit_type_id='.$id.' ')
+						 ->order('eq.modifieddate DESC') ;
+		return $this->fetchAll($select)->toArray();	
+	}
+		// update questions to isactive=0 when we delete  exit types
+	public function UpdateExitQuestionData($data)
+	{
+       
+		$db = Zend_Db_Table::getDefaultAdapter();
+	    $qry = "update main_exit_questions set isactive=0 where id in ($data)";
+		$db->query($qry);
+        
+	}
+}
+?>
\ No newline at end of file

--- application/modules/exit/models/Exittypes.php ---
@@ -0,0 +1,130 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Model_Exittypes extends Zend_Db_Table_Abstract
+{
+	protected $_name = 'main_exit_types';
+	private $db;
+
+	public function init()
+	{
+		$this->db = Zend_Db_Table::getDefaultAdapter();
+	}
+	
+	/**
+	** function to retrieve exit type
+	** @con = 'add' gets active exit type 
+	** @con = 'cnt' gets active exit type count
+	** @con = 'grid' gets active exit type data
+	**/
+	public function getExittypes($con,$sort='', $by='', $pageNo='', $perPage='',$searchQuery='')
+	{
+		$where = "et.isactive = 1";
+		if($searchQuery)
+			$where .= " AND ".$searchQuery;
+		$db = Zend_Db_Table::getDefaultAdapter();		
+		
+		$res = $this->select()
+    					   ->setIntegrityCheck(false)	
+                           ->from(array('et'=>'main_exit_types'),array('et.*'))
+                           ->where($where)
+    					   ->order("$by $sort") 
+    					   ->limitPage($pageNo, $perPage);
+		return $res ; 
+		
+	}
+
+	public function getGrid($sort,$by,$perPage,$pageNo,$searchData,$call,$dashboardcall,$a='',$b='',$c='',$d='')
+	{
+		$searchQuery = '';
+        $searchArray = array();
+        $data = array();
+		
+		if($searchData != '' && $searchData!='undefined')
+			{
+				$searchValues = json_decode($searchData);
+				foreach($searchValues as $key => $val)
+				{
+							$searchQuery .= " ".$key." like '%".($val)."%' AND ";
+                           $searchArray[$key] = $val;
+				}
+				$searchQuery = rtrim($searchQuery," AND");					
+			}
+			
+	
+			
+		$objName = 'exittypes';
+		
+		$tableFields = array('action'=>'Action','exit_type'=>'Exit Type','description'=>'Description');
+		
+		$tablecontent = $this->getExittypes('grid',$sort, $by, $pageNo, $perPage,$searchQuery);     
+		$dataTmp = array(
+			'sort' => $sort,
+			'by' => $by,
+			'pageNo' => $pageNo,
+			'perPage' => $perPage,				
+			'tablecontent' => $tablecontent,
+			'objectname' => $objName,
+			'extra' => array(),
+			'tableheader' => $tableFields,
+			'jsGridFnName' => 'getAjaxgridData',
+			'jsFillFnName' => '',
+			'searchArray' => $searchArray,
+			'add' =>'add',
+			'call'=>$call,
+			'dashboardcall'=>$dashboardcall,
+		);
+		return $dataTmp;
+	}
+ 
+	// get all exit type data 
+	public function getExittypesData()
+	{
+	    $select = $this->select()
+						->setIntegrityCheck(false)
+						->from(array('ac'=> $this->_name),array('ac.*'))
+					    ->where('ac.isactive = 1');
+		return $this->fetchAll($select)->toArray();
+	
+	}
+	// get exit type data based on id
+	public function getExittypeById($id)
+	{
+	    $select = $this->select()
+						->setIntegrityCheck(false)
+						->from(array('ac'=>'main_exit_types'),array('ac.*'))
+					    ->where('ac.isactive = 1 AND ac.id='.$id.' ');
+		return $this->fetchAll($select)->toArray();
+	
+	}
+	//save or update exit types
+	public function SaveorUpdateExitTypesData($data, $where)
+	{
+	    if($where != ''){
+			$this->update($data, $where);
+			return 'update';
+		} else {
+			$this->insert($data);
+			$id=$this->getAdapter()->lastInsertId('main_exit_types');
+			return $id;
+		}	
+	}
+}
+?>
\ No newline at end of file

--- application/modules/exit/models/Questionsresponse.php ---
@@ -0,0 +1,74 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+class Exit_Model_Questionsresponse extends Zend_Db_Table_Abstract
+{
+	protected $_name = 'main_exit_questions_response';
+	private $db;
+	
+	public function init()
+	{
+		$this->db = Zend_Db_Table::getDefaultAdapter();
+	}
+	
+	public function SaveorUpdateQuestionsData($data, $where)
+	{
+	    if($where != ''){
+			$this->update($data, $where);
+			return 'update';
+		} else {
+			$this->insert($data);
+			$id=$this->getAdapter()->lastInsertId('main_exit_questions_response');
+			return $id;
+		}	
+	}
+	//get the data based on user_id and process id 
+	public function getResponseData($empid,$process_id)
+	{
+		$select = $this->select()
+						->setIntegrityCheck(false)
+						->from(array('eq'=>$this->_name),array('eq.*'))
+					    ->where('eq.isactive = 1 AND eq.user_id='.$empid.' AND eq.exit_initiation_id='.$process_id);
+		return $this->fetchAll($select)->toArray();	
+	}
+
+	//function to get employee question ids
+	public function getEmployeeQuestionsData($emp_id,$process_id){
+		$select = $this->select()
+					->setIntegrityCheck(false)	
+                    ->from(array('eqr'=>'main_exit_questions_response'),array('eqr.*'))
+                    ->where("eqr.isactive = 1 AND eqr.exit_initiation_id = ".$process_id." AND eqr.user_id = ".$emp_id);
+                           
+		return $this->fetchAll($select)->toArray();    
+	}
+	//function to get employee questions data
+	public function getEmployeeQuestions($question_ids)
+	{
+		$select = $this->select()
+				   ->setIntegrityCheck(false)	
+				   ->from(array('eq'=>'main_exit_questions'),array('eq.id','eq.question','eq.description'))
+				   ->where("eq.isactive = 1 AND eq.id in (".$question_ids.")");
+                           
+		return $this->fetchAll($select)->toArray();  
+	}
+}
+
+
+?>
\ No newline at end of file

--- application/modules/exit/views/scripts/allexitproc/assignquestions.phtml ---
@@ -0,0 +1,179 @@
+<?php 
+
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+?>
+<?php if(!empty($this->question_employee_response)) { 
+echo sapp_Helper::exitProcessFinalView($this->assignedques_array,$this->emp_response_array);
+}else{ ?>
+ <div class="cofig_title" style="margin-left: 0px;padding-top: 0px;">Configured Questions for Employee</div>
+
+<?php 
+if(!empty($this->questionsArr))
+	{				
+?>
+<?php if(isset($this->popConfigPermission) && $this->popConfigPermission=='yes') { ?>
+ 
+	  <span class="addnewqs" onclick="displaydeptform('<?php echo BASE_URL.'exit/configureexitqs/addpopup/exit_type_id/'.$this->exit_type_id; ?>','Exit Questions');"> +Add New Question </span>
+	 
+ <?php 
+			
+	}
+ ?>
+		<form name="assignquestions" id="formid" action="" method="post" style="padding-top: 20px;" class="steps_questions">					
+		<div id="questiondiv" class="qstnscrldiv">
+			<div class="total-form-controller_" id="parentqsdiv">		
+				<table width="100%" border="0" cellspacing="0" cellpadding="0" style="clear:both;margin: 0px; width: 100%;" class="requisition-table employee_appraisal-table">
+				 <tr>
+				   <th class="check_field"><input type="checkbox" class ="selectallcls" name="selectall" value="selectall" id="selectall">Check All</th>
+				   <th class="question_field">Questions</th>
+				  
+				 </tr>
+		 <?php foreach($this->questionsArr as $key => $question)
+		 		{
+		 			$check = '';
+		 			if(!empty($this->checkArr))
+		 			{
+			 			if(in_array($question['id'], $this->checkArr))
+			 			{
+			 			   $check = 'checked';
+			 			} 
+						
+		 			}
+		 ?>
+				 <tr id="questiontr_<?php echo $question['id'];?>">
+				 
+					   <td class="check_field"><input type="checkbox" class ="checkallcls" ques_id ="<?php echo $question['id'];?>" id="check_<?php echo $question['id'];?>" name="check[]" value="<?php echo $question['id'];?>" <?php echo $check;?> onclick="checkchildtd(this)"></td>
+					   
+					   <td class="question_field" id="queshtml_<?php echo $question['id'];?>">
+						   <div>
+								<span class="appri_ques"><?php echo $question['question']; ?></span>
+								<span class="appri_desc"><?php echo $question['description']; ?></span>
+						   </div>
+					   </td>
+					  
+				 </tr>
+			<?php
+		 		} 
+				?>		 
+				 
+				</table>
+					
+					<input type="hidden" id="questioncount" name="questioncount" value="<?php echo sizeof($this->questionsArr);?>">
+			</div>
+
+		</div>
+		<div class="new-form-ui-submit" style="margin-top: 20px;">	
+			<button name="submitbutton" id="submitbuttons" type="button" onclick="saveInitilize(1)">Save</button>
+			<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/allexitproc';" type="button" id="Cancel" name="Cancel">Cancel</button>
+		</div>	
+			
+		
+	
+	</form>	<div class="clear"></div>
+			
+<?php 
+}else 
+{ ?>
+		<div style="clear: both;position: relative;top: 17px;width: 92%;" class="ml-alert-1-error">
+		<div class="style-1-icon error"></div>
+		Questions are not configured. <a href="<?php echo BASE_URL.'exit/configureexitqs/add'?>" style="color:#A31414;text-decoration: none;font-weight: bold;">Click here </a> to configure questions.
+		</div>
+<?php } ?>
+
+<?php } ?>
+
+<div id="configureexitqsContainer"  style="display: none; overflow: auto;">
+	<div class="heading">
+		<a href="javascript:void(0)">
+	    <img src="<?php echo $this->baseUrl().'/public/media/';?>images/close.png" name="" align="right" border="0" hspace="3" vspace="5" class="closeAttachPopup" style="margin: -24px 8px 0 0;"> </a>
+	</div>
+
+	<iframe id="configureexitqsCont" class="business_units_iframe" frameborder="0"></iframe>
+</div>
+<script type="text/javascript">
+$(document).ready(function()
+{
+	 $('#questiondiv').alternateScroll({ 'horizontal-bar-class': 'styled-h-bar'});
+	var allCheckBox = $("[class='checkallcls']");	
+	var count_checked = allCheckBox.filter(":checked").length;
+	
+	var questioncount = $("#questioncount").val(); 
+	if(count_checked == questioncount)
+	{
+		$("#selectall").prop('checked', true);
+	}	
+	
+});
+ $('#selectall').click(function(event) {  
+	$('.checkallcls').prop('checked',$(this).prop('checked'));		  
+}); 
+function checkchildtd(ele)
+{
+	
+	var id = $(ele).attr('ques_id');
+	var allCheckBox = $("[class='checkallcls']");	
+	var count_checked = allCheckBox.filter(":checked").length;
+	var questioncount = $("#questioncount").val(); 
+
+	if(!$(ele).prop('checked'))
+	{
+		$("#selectall").prop('checked',$(ele).prop('checked'));
+		
+	}else
+	{
+		if(count_checked == questioncount)
+		{
+			 $("#selectall").prop('checked',$(ele).prop('checked'));
+		}	
+		
+	}
+
+}
+function saveInitilize(flag)
+{
+	
+	var allCheckBox = $("[class='checkallcls']");	
+	var count_checked = allCheckBox.filter(":checked").length; 
+	if(count_checked > 0)
+	{
+		if(flag == 1)
+		{
+			//msg= '<span class="alert_info_span"> You are trying to configure the questions. </span>';
+			msg= '<span class="alert_info_span"> Questions cannot be edited if you have configured. Do you wish to continue?</span>';
+			
+		}	
+
+		jConfirm(msg, "Confirm ", function(r) {
+			if(r==true)
+			{
+				$.blockUI({ width:'50px',message: $("#spinner").html() });
+				$("#formid").submit();
+			}
+		});
+		
+	}
+	else
+	{
+		jAlert("Please select atleast one question to proceed.");
+	}
+}
+
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/allexitproc/edit.phtml ---
@@ -0,0 +1,225 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+if($this->ermsg == 'noprivileges')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>You are not authorized to access this page</div>
+
+<?php
+}
+else if($this->ermsg == 'nodata')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>No data found</div>
+
+<?php
+}
+else if($this->ermsg == 'invalidURL')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>Invalid URL</div>
+
+<?php
+}
+else
+{
+if($this->other_manager!=''){ ?>
+	 <div class="ml-alert-1-info"><div class="style-1-icon info"></div>You are configured as 'Role(<?php echo $this->other_manager;?>)'. If you update status both statuses will be updated.</div>
+	 
+	 
+	 
+<?php } ?>
+<form id="frm" name="frm" action="" method="POST">
+<!-- added comment and status update-->
+<?php if($this->is_valid_user==1) { 
+$readonly = '';
+if($this->exitProcDetails[$this->selected_status_value]=='Approved') {
+	$readonly = 'disabled';
+}
+?>
+<table border="0" cellspacing="0" cellpadding="0" class="requisition-table view-table-data">
+	<tr class="req-bg-form">
+    	<td><span class="head_txt"><label class="required">Status: </label></span></td>
+        <td><span class="head_txt"> <label class="required">Comments: </label></span></td>
+		<?php if($this->loginuserRole == SUPERADMINROLE || $this->loginuserGroup == HR_GROUP || $this->loginuserGroup == MANAGEMENT_GROUP) {?>
+        <td><span class="head_txt">Relieving Date: </span></td>
+		<?php } ?>
+      </tr>
+      <tr class="req-no-form" valign="top">
+		<td style="vertical-align: top;"><select id="<?php echo $this->status;?>" name="<?php echo $this->status;?>" <?php echo $readonly?> onchange="removeValidation();">
+		<option value="">Select Status</option>
+		<option value="Approved">Approved</option>
+		<option value="Rejected">Rejected</option>
+		</select>
+		       <?php if(isset($this->msgarray[$this->status])){?>
+				<span class="errors" id="errors-<?php echo $this->status;?>" style="display: block; float:none;"><?php echo $this->msgarray[$this->status];?></span>
+		<?php }?>
+		<?php if(!isset($this->msgarray[$this->status])){?>
+			<script>$('#<?php echo $this->status; ?> option:contains("<?php echo $this->exitProcDetails[$this->selected_status_value]; ?>")').attr('selected','selected');
+			</script>
+		<?php } ?>
+			<script>
+			<?php if(!empty($this->post_array[$this->status])) {?>
+			$('#<?php echo $this->status; ?> option:contains("<?php echo $this->post_array[$this->status]; ?>")').attr('selected','selected');
+			<?php } ?>
+				function removeValidation(){
+					if($("#<?php echo $this->status; ?>").val()==''){
+						$('#errors-<?php echo $this->status; ?>').text('Please select status');
+					}else{
+						$('#errors-<?php echo $this->status; ?>').text('');
+					}
+				}
+			</script>
+		</td>
+		
+		<td style="vertical-align: top;" class="table-textarea"><textarea onkeyup="removeText();" <?php echo $readonly?> id="<?php echo $this->comments;?>" name="<?php echo $this->comments;?>"  class="is-maxlength" maxlength="250" cols="50" rows="2" style="resize: none;"><?php if(!isset($this->msgarray[$this->comments])){ echo (!empty($this->exitProcDetails[$this->selected_comment_value])?$this->exitProcDetails[$this->selected_comment_value]:""); }?></textarea>
+        <?php if(isset($this->msgarray[$this->comments])){?>
+				<span class="errors" id="errors-<?php echo $this->comments;?>" style="display: block; float:none;"><?php echo $this->msgarray[$this->comments];?></span>
+		<?php }?><script>
+		$('#<?php echo $this->comments;?>').maxlength();
+		<?php if(!empty($this->post_array[$this->comments])) {?>
+		$('#<?php echo $this->comments;?>').val('<?php echo $this->post_array[$this->comments];?>');
+		<?php } ?>
+		function removeText(){
+			if($("#<?php echo $this->comments;?>").val()==''){
+				$('#errors-<?php echo $this->comments;?>').text('Please enter comments');
+			}else{
+				$('#errors-<?php echo $this->comments;?>').text('');
+			}
+		}
+		</script>
+        </td>
+		
+		
+		
+		<?php if($this->loginuserRole == SUPERADMINROLE || $this->loginuserGroup == HR_GROUP || $this->loginuserGroup == MANAGEMENT_GROUP) {?>
+		
+		<td style="vertical-align: top;">
+        <div class="new-form-ui" style="height:auto;"><div class="division">
+		<input type="text" name="relieving_date" id="relieving_date"  class="brdr_none" readonly value="<?php echo sapp_Global::change_date( $this->exitProcDetails['relieving_date'],'view');?>"/></div></div>
+		</td>
+		<?php } ?>
+	</tr>
+</table>
+<br/>
+<?php if($this->exitProcDetails[$this->selected_status_value]!='Approved') {?>
+<div class="new-form-ui-submit">
+
+	<input type="submit" value="Update" id="submitButton" name = "submitButton" />
+	
+	<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/allexitproc';" id="Cancel" name="Cancel" type="button" >Cancel</button>
+</div>
+<br/>
+<br/>
+<?php } ?>
+<?php } ?>
+
+
+	
+<div class="separetor-heading">Employee Details</div>
+<?php 
+sapp_Helper::viewHeader();
+
+sapp_Helper::viewBody('alt','Business Unit',(isset($this->exitProcDetails['businessunit_name']) && $this->exitProcDetails['businessunit_name'] != 'No Business Unit')? $this->exitProcDetails['businessunit_name']: "...",'Department',(isset($this->exitProcDetails['department_name']))? $this->exitProcDetails['department_name']: "...");
+
+sapp_Helper::viewBody('nor','Employee',(isset($this->exitProcDetails['userfullname']))? $this->exitProcDetails['userfullname']: "...",'Employee ID',isset($this->exitProcDetails['employeeId'])? $this->exitProcDetails['employeeId']: "...");
+sapp_Helper::viewBody('alt','Job Title',(isset($this->exitProcDetails['jobtitle_name']))? $this->exitProcDetails['jobtitle_name']: "...",'Joining Date',isset($this->exitProcDetails['date_of_joining'])? sapp_Global::change_date($this->exitProcDetails['date_of_joining'],'view'): "...");
+sapp_Helper::viewFooter();
+?>
+<div class="separetor-heading mrgetop10">Exit Procedure Details</div>
+<?php 
+sapp_Helper::viewHeader();
+sapp_Helper::viewBody('alt','Exit Type',(isset($this->exitProcDetails['exit_type']))?$this->exitProcDetails['exit_type']: "...",'Raised on',isset($this->exitProcDetails['createddate'])? sapp_Global::change_date($this->exitProcDetails['createddate'],"view") : "...");
+
+sapp_Helper::viewBody('nor','Comments',isset($this->exitProcDetails['overall_comments'])? $this->exitProcDetails['overall_comments'] : "...",'Process Status',isset($this->exitProcDetails['overall_status'])? $this->exitProcDetails['overall_status'] : "...");
+
+sapp_Helper::viewBody('alt','Relieving Date',isset($this->exitProcDetails['relieving_date'])? sapp_Global::change_date($this->exitProcDetails['relieving_date'],'view') : "...",'','');
+
+sapp_Helper::viewFooter();
+?>
+<?php
+sapp_Helper::viewHeader();
+sapp_Helper::viewBody('alt','L1 Manager',isset($this->exitProcDetails['reporting_manager_name'])? $this->exitProcDetails['reporting_manager_name']: "...",'Status',isset($this->exitProcDetails['l1_status'])? $this->exitProcDetails['l1_status']: "...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['l1_comments'])?$this->exitProcDetails['l1_comments']:"...",'','');
+if(!empty($this->exitProcDetails['l2_manager'])){
+	
+sapp_Helper::viewBody('alt','L2 Manager',isset($this->managersDataObj[$this->exitProcDetails['l2_manager']])? $this->managersDataObj[$this->exitProcDetails['l2_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['l2_status'])?$this->exitProcDetails['l2_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['l2_comments'])?$this->exitProcDetails['l2_comments']:"...",'','');
+
+}
+sapp_Helper::viewBody('alt','HR Manager',isset($this->managersDataObj[$this->exitProcDetails['hr_manager']])? $this->managersDataObj[$this->exitProcDetails['hr_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['hr_manager_status'])?$this->exitProcDetails['hr_manager_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['hr_manager_comments'])?$this->exitProcDetails['hr_manager_comments']:"...",'','');
+
+if(!empty($this->exitProcDetails['sys_admin'])){
+sapp_Helper::viewBody('alt','System Admin',isset($this->managersDataObj[$this->exitProcDetails['sys_admin']])? $this->managersDataObj[$this->exitProcDetails['sys_admin']]['userfullname']: "...",'Status',isset($this->exitProcDetails['sys_admin_status'])?$this->exitProcDetails['sys_admin_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['sys_admin_comments'])?$this->exitProcDetails['sys_admin_comments']:"...",'','');
+}
+if(!empty($this->exitProcDetails['general_admin'])){
+sapp_Helper::viewBody('alt','General Admin',isset($this->managersDataObj[$this->exitProcDetails['general_admin']])? $this->managersDataObj[$this->exitProcDetails['general_admin']]['userfullname']: "...",'Status',isset($this->exitProcDetails['gen_admin_status'])?$this->exitProcDetails['gen_admin_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['gen_admin_comments'])?$this->exitProcDetails['gen_admin_comments']:"...",'','');
+}
+if(!empty($this->exitProcDetails['finance_manager'])){
+sapp_Helper::viewBody('alt','Finance Manager',isset($this->managersDataObj[$this->exitProcDetails['finance_manager']])? $this->managersDataObj[$this->exitProcDetails['finance_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['fin_admin_status'])?$this->exitProcDetails['fin_admin_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['fin_admin_comments'])?$this->exitProcDetails['fin_admin_comments']:"...",'','');
+}
+sapp_Helper::viewFooter();
+?>
+
+
+
+
+
+<br/>
+
+
+
+
+</form>
+<script>
+	$('#relieving_date').datepicker({
+        showOn:'both',
+		//minDate: 0,
+	    //yearRange: yearrange,
+        dateFormat: '<?php echo DATEFORMAT_JS;?>',
+        buttonImage: "<?php echo $this->baseUrl("public/media/images/cal.jpg");?>",
+        buttonImageOnly: true,
+        buttonText: "",
+        changeMonth: true,
+        changeYear: true ,
+        showButtonPanel: true ,
+		deletelStr:'<i class="fa fa-times-circle"></i>',
+        onClose:function(){
+				$('#relieving_date').trigger('blur');
+        	/*  $(this).trigger('blur');
+             var msg = "";
+             if(this.id == 'to_date')
+                 msg = "To date should be greater than From date.";
+             else 
+                 msg = "From date should be less than To date.";
+             from_to_date_validation('from_date','to_date',this,msg); */
+        }
+		
+    });	
+	</script>
+<?php 
+}//end of else
+?>
\ No newline at end of file

--- application/modules/exit/views/scripts/allexitproc/editpopup.phtml ---
@@ -0,0 +1,177 @@
+<div id="exit_success_div" class="ml-alert-1-success" style="display:none;">
+	<div class="style-1-icon success"></div>
+</div>
+<div class="ml-alert-1-info m1-info-set"><div class="style-1-icon info"></div>This is the final exit procedure status. </div>
+<form id="frm" name="frm" action="" method="POST">
+<div class="requisitions-block_ appri_view_step_1" style="padding-bottom: 10px;">
+
+
+<!-- added comment and status update-->
+<table border="0" cellspacing="0" cellpadding="0" class="requisition-table view-table-data">
+	<tr class="req-bg-form">
+    	<td><span class="head_txt"> <label class="required">Status: </label></span></td>
+        <?php $readonly=''; if($this->exitProcDetails['overall_status']=='Approved') {$readonly = 'readonly';}?>
+		<td><span class="head_txt"> <label class="required">Comments: </label></span></td>
+        <td><span class="head_txt">Relieving Date: </span></td>
+        </tr>
+       <tr class="req-no-form">
+		<td><select id="overallstatus" name="overallstatus" onchange="removeValidation(this);">
+		<?php if($this->exitProcDetails['overall_status']=='Approved'){ ?>
+			<option value="Approved">Approved</option>
+		<?php } else if($this->exitProcDetails['overall_status']=='Rejected'){ ?>
+			<option value="Approved">Approved</option>
+			<option value="Rejected">Rejected</option>
+		<?php } else { ?>
+			<option value="">Select Status</option>
+			<option value="Approved">Approved</option>
+			<option value="Rejected">Rejected</option>
+		<?php } ?>
+		
+		</select>
+		<span class="errors" id="errors-overallstatus"><?php echo $this->msgarray['overallstatus'];?></span>
+		<script>$('#overallstatus option:contains("<?php echo $this->exitProcDetails['overall_status']; ?>")').attr('selected','selected'); </script>
+		</td>
+		
+		<td class="table-textarea"><textarea onkeyup="removeText(this);" <?php echo $readonly;?> id="overallcomments" name="overallcomments" class="is-maxlength" maxlength="250" cols="30" rows="2"  style="resize: none;"><?php echo (!empty($this->exitProcDetails['overall_comments'])?$this->exitProcDetails['overall_comments']:""); ?></textarea>
+        <span class="errors" id="errors-overallcomments"><?php echo $this->msgarray['overallcomments'];?></span>
+		<script>$('#overallcomments').maxlength();</script>	</td>
+		<td>
+        <div class="new-form-ui" style="height:auto;"><div class="division">
+		<input type="text" name="relieving_date" id="relieving_date" readonly value="<?php echo sapp_Global::change_date( $this->exitProcDetails['relieving_date'],'view');?>"/></div></div>
+		</td>
+	</tr>
+</table>
+<br/>
+<!--<div class="new-form-ui-submit">
+	<input type="type" value="Update" id="submitButton" name = "submitButton" onclick="updateexitprocessdetails('<?php //echo $this->id?>','<?php //echo $this->controllername; ?>');"/>
+	<button onclick="window.location.href='<?php //echo BASE_URL; ?>exit/allexitproc';" id="Cancel" name="Cancel" type="button" >Cancel</button>
+</div>-->
+
+    		<?php if($this->exitProcDetails['overall_status']!='Approved'){ ?>
+<div class="new-form-ui-submit"><input type="button" onclick="updateexitprocessdetails('<?php echo $this->id?>','<?php echo $this->controllername; ?>');" value="Update" id="submitbuttons" name="submits">
+ <button onclick="closeiframepopup('allexitproc','cancel');"  type="button" >Cancel</button></div>
+<br/>
+<br/>
+			<?php } ?>
+
+<div class="cofig_title" style="margin-left: 0px; padding-top: 0px;padding-bottom: 10px;">Employee Details </div>
+<table width="100%" border="0" cellspacing="0" cellpadding="0" class="requisition-table view-table-data">
+		<tr class="req-bg-form">
+			<td width="20%"><span class="head_txt">Business Unit </span></td>
+			<td width="30%"><?php echo (isset($this->exitProcDetails['businessunit_name']) && $this->exitProcDetails['businessunit_name'] != 'No Business Unit')? $this->exitProcDetails['businessunit_name']: "..."; ?></td>
+			<td width="20%"><span class="head_txt">Department </span></td>
+			<td width="30%"><?php echo isset($this->exitProcDetails['department_name'])? $this->exitProcDetails['department_name']: "..."; ?></td>
+		</tr>
+		<tr  class="req-no-form">
+			<td><span class="head_txt">Employee </span></td>
+			<td><?php echo isset($this->exitProcDetails['userfullname'])? $this->exitProcDetails['userfullname']: "..."; ?></td>			
+			<td><span class="head_txt">Employee ID </span></td>
+			<td><?php echo isset($this->exitProcDetails['employeeId'])? $this->exitProcDetails['employeeId']: "..."; ?></td>			
+		</tr>
+		<tr  class="req-bg-form">
+			<td><span class="head_txt">Job Title </span></td>
+			<td><?php echo isset($this->exitProcDetails['jobtitle_name'])? $this->exitProcDetails['jobtitle_name']: "..."; ?></td>
+			<td><span class="head_txt">Joining Date </span></td>
+			<td><?php echo isset($this->exitProcDetails['date_of_joining'])? sapp_Global::change_date($this->exitProcDetails['date_of_joining'],'view'): "..."; ?></td>
+			
+		</tr>
+</table><br/>
+<div class="cofig_title" style="margin-left: 0px; padding-top: 0px;padding-bottom: 10px;">Exit Procedure Details </div>
+		<table width="100%" border="0" cellspacing="0" cellpadding="0" class="requisition-table view-table-data">
+			<tr  class="req-bg-form">
+				<td width="20%"><span class="head_txt">Exit Type </span></td>
+				<td width="30%"><?php echo $this->exitProcDetails['exit_type']; ?></td>
+				<td width="20%"><span class="head_txt">Raised on</span></td>
+				<td width="30%"><?php echo isset($this->exitProcDetails['createddate'])? sapp_Global::change_date($this->exitProcDetails['createddate'],"view") : "..."; ?></td>
+			</tr>
+			<tr  class="req-no-form">
+				<td ><span class="head_txt">Comments </span></td>
+				<td colspan="3"> <?php  echo isset($this->exitProcDetails['overall_comments'])? $this->exitProcDetails['overall_comments'] : "..."; ?></td>
+			
+			</tr>
+			
+		</table>
+</div>
+</div>
+</form>
+<script type="text/javascript">
+//function to close request
+function updateexitprocessdetails(exitid,controllername)
+{
+	if(!exitid)
+	{
+		return false;
+	}	
+	var is_valid = 1;
+	if($("#overallcomments").val()==''){
+		$('#errors-overallcomments').text('Please enter comments.');
+		var is_valid = 0;
+	}if($("#overallstatus").val()==''){
+		$('#errors-overallstatus').text('Please select status.');
+		var is_valid = 0;
+	}
+	if(is_valid)
+	{
+		$('#errors-overallcomments').text();
+		$.ajax({
+			url: base_url+"/exit/allexitproc/updateexitprocess/format/html",
+			type : 'POST',	
+			data: {
+				id: exitid,
+				status: $("#overallstatus").val(),
+				comments: $("#overallcomments").val(),
+				relieving_date: $("#relieving_date").val(),
+			},
+			dataType: 'json',
+			success : function(result){	
+				$.unblockUI();
+				if(result['result'] == 'success'){
+					$("#exit_success_div").show();
+					$("#exit_success_div").prepend(result['msg']);
+				}
+				setTimeout(function(){
+					closeiframepopup(controllername,''); 
+				},2000);
+			}
+		});
+	}else{
+		return false;
+	}
+}
+</script>
+<script>
+//function to remove validation message for select box
+	function removeValidation(id){
+		if($("#overallstatus").val()==''){
+			$('#errors-overallstatus').text('Please select status.');
+		}else{
+			$('#errors-overallstatus').text('');
+		}
+	}
+	//function to remove validation message for textarea
+	function removeText(val){
+		if($("#overallcomments").val()==''){
+			$('#errors-overallcomments').text('Please enter comments.');
+		}else{
+			$('#errors-overallcomments').text('');
+		}
+	}
+	$('#relieving_date').datepicker({
+        showOn:'both',
+		//minDate: 0,
+	    //yearRange: yearrange,
+        dateFormat: '<?php echo DATEFORMAT_JS;?>',
+        buttonImage: "<?php echo $this->baseUrl("public/media/images/cal.jpg");?>",
+        buttonImageOnly: true,
+        buttonText: "",
+        changeMonth: true,
+        changeYear: true ,
+        showButtonPanel: true ,
+		deletelStr:'<i class="fa fa-times-circle"></i>',
+        onClose:function(){
+				$('#relieving_date').trigger('blur');
+        	
+        }
+		
+    });	
+	</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/allexitproc/index.phtml ---
@@ -0,0 +1,114 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+ $auth = Zend_Auth::getInstance();
+if($auth->hasIdentity())
+{
+	$loginUserId = $auth->getStorage()->read()->id;
+	$loginuserGroup = $auth->getStorage()->read()->group_id;
+	$loginuserRole = $auth->getStorage()->read()->emprole;
+}
+if (count($this->messages)) 
+ {
+ ?>
+	<div id="dispmsgepsettings" class="settingssuccess">
+ <?php 
+	foreach ($this->messages as $message)
+	{
+		if(!empty($message))
+		{
+			$flag = array_keys($message);
+			echo "<div id='messageData' class='ml-alert-1-$flag[0]'><div style='display:block;'><span class='style-1-icon $flag[0]'></span>";
+			echo $message[$flag[0]];
+			echo "</div></div>";
+		}
+	} 
+?>   
+	</div>	
+<?php 
+} 
+?>
+<?php echo sapp_Helper::popup_helper('allexitproc');?>
+<span id="error_message"></span>
+
+<?php 
+if($this->call != 'ajaxcall'){
+if($loginuserRole == SUPERADMINROLE || $loginuserGroup == HR_GROUP || $loginuserGroup == MANAGEMENT_GROUP)
+{
+?>
+<div class="count_new_dis_par"  title="Overall Status Count">
+<div  class="count_new_dis" id="all_rec" onClick="displayallexitdata('<?php echo sapp_Global::_encrypt(1);?>','allexitproc');"><span>All</span><br><label><?php echo $this->allcount;?></label></div>
+<div  class="count_new_dis" id="pending_rec" onClick="displayallexitdata('<?php echo sapp_Global::_encrypt(4);?>','allexitproc');"><span>Pending</span><br><label><?php echo $this->pendingexitcount;?></label></div>
+<div  class="count_new_dis" id="approved_rec" onClick="displayallexitdata('<?php echo sapp_Global::_encrypt(2);?>','allexitproc');"><span>Approved</span><br><label><?php echo $this->approvedcount;?></label></div>
+<div  class="count_new_dis" id="rejected_rec" onClick="displayallexitdata('<?php echo sapp_Global::_encrypt(3);?>','allexitproc');"><span>Rejected</span><br><label><?php echo $this->rejectedexitcount;?></label></div>
+</div>
+<?php 
+}
+}
+?>
+
+<?php
+
+if($this->call == 'ajaxcall'){
+	$div = ''; $endDiv = ''; 
+} else { 
+	$div = '<div id="grid_'.$this->dataArray[0]['objectname'].'" class="all-grid-control">'; $endDiv = '</div>';
+}
+	echo $div.'<div id="msg" style="display:none;font-style: oblique; font-weight: bold; color: green;""></div>'.$this->grid($this->dataArray[0]).$endDiv;
+?>
+<script type='text/javascript'>
+$(document).ready(function(){
+<?php if (count($this->messages)) {?>
+      setTimeout(function(){
+			$('#dispmsgepsettings').fadeOut('slow');
+		},3000);
+<?php } 
+?>
+});
+<?php 
+if($this->status == sapp_Global::_encrypt(1)){ ?>
+
+        $('#all_rec').addClass('count_new_dis_active');
+   
+<?php }?>
+<?php if($this->status == sapp_Global::_encrypt(2)){ ?>
+
+        $('#approved_rec').addClass('count_new_dis_active');
+   
+<?php }?>
+<?php if($this->status == sapp_Global::_encrypt(3)){ ?>
+
+        $('#rejected_rec').addClass('count_new_dis_active');
+   
+<?php }?>
+<?php if($this->status == sapp_Global::_encrypt(4)){ ?>
+
+        $('#pending_rec').addClass('count_new_dis_active');
+   
+<?php }?>
+function displayallexitdata(id,controllername)
+{
+	if(id)
+	{
+	 window.location.href = base_url+'/exit/'+controllername+'/index/con/'+id;
+	}
+}
+
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/allexitproc/view.phtml ---
@@ -0,0 +1,135 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+if($this->ermsg == 'noprivileges')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>You are not authorized to access this page</div>
+
+<?php
+}
+else if($this->ermsg == 'nodata')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>No data found</div>
+
+<?php
+}
+else if($this->ermsg == 'invalidURL')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>Invalid URL</div>
+
+<?php
+}
+else
+{
+?>
+	<?php if($this->loggedInUserRole!=SUPERADMINROLE && $this->exitProcDetails['overall_status']=='Pending'){ ?>
+		<div class="new-form-ui-submit "  style="margin-top: 0px; float: right; width: auto; margin-left: 0px; ">
+		   
+				<?php             	
+					$msgtitle = $this->controllername.'_delete';
+					sapp_Helper::editdeleteForView(ALL_EXIT_PROCS,$this->controllername,$this->id,$msgtitle); 
+				 ?>		
+			
+		</div>
+	<?php } ?>
+		
+
+<div class="separetor-heading">Employee Details</div>
+<?php 
+sapp_Helper::viewHeader();
+
+sapp_Helper::viewBody('alt','Business Unit',(isset($this->exitProcDetails['businessunit_name']) && $this->exitProcDetails['businessunit_name'] != 'No Business Unit')? $this->exitProcDetails['businessunit_name']: "...",'Department',(isset($this->exitProcDetails['department_name']))? $this->exitProcDetails['department_name']: "...");
+
+sapp_Helper::viewBody('nor','Employee ID',(isset($this->exitProcDetails['employeeId']))? $this->exitProcDetails['employeeId']: "...",'Joining Date',(isset($this->exitProcDetails['date_of_joining']))? sapp_Global::change_date($this->exitProcDetails['date_of_joining'],'view'): "...");
+sapp_Helper::viewBody('alt','Job Title',(isset($this->exitProcDetails['jobtitle_name']))? $this->exitProcDetails['jobtitle_name']: "...",'Position',isset($this->exitProcDetails['position_name'])? $this->exitProcDetails['position_name']: "...");
+sapp_Helper::viewFooter();
+?>
+<div class="separetor-heading mrgetop10">Exit Procedure Details</div>
+<?php 
+sapp_Helper::viewHeader();
+sapp_Helper::viewBody('alt','Exit Type',(isset($this->exitProcDetails['exit_type']))?$this->exitProcDetails['exit_type']: "...",'Raised on',isset($this->exitProcDetails['createddate'])? sapp_Global::change_date($this->exitProcDetails['createddate'],"view") : "...");
+
+sapp_Helper::viewBody('nor','Comments',isset($this->exitProcDetails['overall_comments'])? $this->exitProcDetails['overall_comments'] : "...",'Process Status',isset($this->exitProcDetails['overall_status'])? $this->exitProcDetails['overall_status'] : "...");
+
+sapp_Helper::viewBody('alt','Relieving Date',isset($this->exitProcDetails['relieving_date'])? sapp_Global::change_date($this->exitProcDetails['relieving_date'],'view') : "...",'','');
+
+sapp_Helper::viewFooter();
+?>
+<?php
+sapp_Helper::viewHeader();
+sapp_Helper::viewBody('alt','L1 Manager',isset($this->exitProcDetails['reporting_manager_name'])? $this->exitProcDetails['reporting_manager_name']: "...",'Status',isset($this->exitProcDetails['l1_status'])? $this->exitProcDetails['l1_status']: "...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['l1_comments'])?$this->exitProcDetails['l1_comments']:"...",'','');
+if(!empty($this->exitProcDetails['l2_manager'])){
+	
+sapp_Helper::viewBody('alt','L2 Manager',isset($this->managersDataObj[$this->exitProcDetails['l2_manager']])? $this->managersDataObj[$this->exitProcDetails['l2_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['l2_status'])?$this->exitProcDetails['l2_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['l2_comments'])?$this->exitProcDetails['l2_comments']:"...",'','');
+
+}
+sapp_Helper::viewBody('alt','HR Manager',isset($this->managersDataObj[$this->exitProcDetails['hr_manager']])? $this->managersDataObj[$this->exitProcDetails['hr_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['hr_manager_status'])?$this->exitProcDetails['hr_manager_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['hr_manager_comments'])?$this->exitProcDetails['hr_manager_comments']:"...",'','');
+
+if(!empty($this->exitProcDetails['sys_admin'])){
+sapp_Helper::viewBody('alt','System Admin',isset($this->managersDataObj[$this->exitProcDetails['sys_admin']])? $this->managersDataObj[$this->exitProcDetails['sys_admin']]['userfullname']: "...",'Status',isset($this->exitProcDetails['sys_admin_status'])?$this->exitProcDetails['sys_admin_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['sys_admin_comments'])?$this->exitProcDetails['sys_admin_comments']:"...",'','');
+}
+if(!empty($this->exitProcDetails['general_admin'])){
+sapp_Helper::viewBody('alt','General Admin',isset($this->managersDataObj[$this->exitProcDetails['general_admin']])? $this->managersDataObj[$this->exitProcDetails['general_admin']]['userfullname']: "...",'Status',isset($this->exitProcDetails['gen_admin_status'])?$this->exitProcDetails['gen_admin_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['gen_admin_comments'])?$this->exitProcDetails['gen_admin_comments']:"...",'','');
+}
+if(!empty($this->exitProcDetails['finance_manager'])){
+sapp_Helper::viewBody('alt','Finance Manager',isset($this->managersDataObj[$this->exitProcDetails['finance_manager']])? $this->managersDataObj[$this->exitProcDetails['finance_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['fin_admin_status'])?$this->exitProcDetails['fin_admin_status']:"...");
+sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['fin_admin_comments'])?$this->exitProcDetails['fin_admin_comments']:"...",'','');
+}
+sapp_Helper::viewFooter();
+?>
+<div class="cofig_title" style="margin-left: 0px; padding-top: 10px;padding-bottom: 10px;">Process History</div>
+<table width="100%" border="0" cellspacing="0" cellpadding="0" class="requisition-table view-table-data">
+	<?php 
+	for($h=0;$h < sizeof($this->historyObj); $h++)
+	{
+	?>
+		<tr class="req-no-form">
+			<td>
+				<img width="28" height="28" border="0" src="<?php echo DOMAIN; ?>public/uploads/profile/<?php echo $this->historyObj[$h]['profileimg'];?>" onerror="this.src='<?php echo MEDIA_PATH; ?>images/profile_pic.png';" />
+		<?php 
+			
+			$tmpHistoryStr1 = str_replace('<name>',$this->historyObj[$h]['userfullname'],$this->historyObj[$h]['description']);
+			$tmpCreatedDateStr = sapp_Global::getDisplayDate($this->historyObj[$h]['createddate']);
+			$tmpHistoryStr2 = str_replace('<createddate>',$tmpCreatedDateStr, $tmpHistoryStr1);
+			echo $tmpHistoryStr2;
+		?>
+			</td>
+		</tr>
+	<?php
+	}
+	?>
+</table>
+<br/>
+<!--<div class="new-form-ui-submit">
+	<input type="button" onclick="window.location.href='<?php //echo BASE_URL; ?>exit/allexitproc/edit/id/<?php //echo $this->id; ?>';" value="Edit" />
+	<button onclick="window.location.href='<?php//echo BASE_URL; ?>exit/allexitproc';" id="Cancel" name="Cancel" type="button" >Cancel</button>
+</div>-->
+<?php 
+}//end of else
+?>

--- application/modules/exit/views/scripts/configureexitqs/add.phtml ---
@@ -0,0 +1,197 @@
+<?php 
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+if($this->ermsg !='')
+		{
+?>
+     <div class="ml-alert-1-info m1-info-set"><div class="style-1-icon info"></div>No data found.</div>
+<?php }else
+{
+ sapp_Global::generateClientValidations($this->form);
+ $request = Zend_Controller_Front::getInstance();
+ $actionName = $request->getRequest()->getActionName();
+ 	if($actionName == 'view')
+ 	  $viewclass = 'view-form-detail';
+ 	else
+ 	  $viewclass = '';  
+
+ 	 $popupArr = array(); 
+ 	  if(!empty($this->popConfigPermission)) 
+ 	 {
+ 	 		if(in_array('exittypes',$this->popConfigPermission))
+ 	 		{
+ 	 			
+ 	 			$popupArr['popup_url'] = 'exit/exittypes/addpopup';
+ 	 			$popupArr['popup_disp_name'] = 'Exit Type';
+ 	 			$popupArr['popup_link_name'] = 'Add Exit Type';
+ 	 		}
+ 	 }	   
+
+ ?>
+<div id="error_message" style="display:none;"></div>
+<form name="<?php echo $this->form->getName(); ?>" id="<?php echo $this->form->getId(); ?>" action="<?php echo $this->form->getAction();?>" method="<?php echo $this->form->getMethod(); ?>">
+		<?php echo $this->form->id; ?>
+        <div class="total-form-controller <?php echo $viewclass;?>">
+		<?php if($this->isfrompopup != 'yes'){ ?>
+			<?php echo sapp_Helper::sd_form_helper($this->msgarray, $this->form, 'exit_type_id','', '','required',$popupArr);?>
+			<?php } else{ ?>
+					<input type="hidden" name="exit_type_id" value='<?php echo $this->exit_type_id; ?>' id="exit_type_id"/>	
+			<?php }?>
+			<div id="multi_dept_div">
+			<?php if(!$_POST){?>
+				<div id='parent_0' class="add_request" >
+				
+					<div class="new-form-ui ">
+		            <label class="required">Question <img class="tooltip" title="Special characters allowed are - ? ' . , / # @ $ & * ( ) !" src="<?php echo $this->baseUrl().'/public/media/';?>images/help.png"></label>
+		            	<div class="division">
+							<input type="text" maxlength="100" value="" id="question_0" name="question[]" class='cls_service_request_name' onblur='validatequestionname(this)' onkeyup='validatequestionname(this)'>                            
+						</div>
+		        	</div>
+				
+		        	
+		        	<div class="new-form-ui textareaheight">
+		            <label class="">Description </label>
+			            <div class="division">
+							<textarea maxlength="200" cols="50" rows="10" id="description_0" name="description[]" ></textarea>
+					    </div>
+		        	</div>
+	        	</div>
+				
+	        	<span id="add-candidate"><span class="sprite candidate-new" onclick="addAppQuestionDiv()">Add New Question</span></span>
+				
+	        <?php }?>
+	        	
+         	</div>
+           	
+        	<input type="hidden" value="0" id="idcount"/>	
+		
+		<span id="errors-maxdiv" class="errors"></span>		
+
+		<div class="new-form-ui-submit mrgetop60">
+			<?php echo $this->form->submitbutton; ?>
+			<?php if($actionName == 'view'){?>
+				<input type="button" onclick="changeeditscreen('<?php echo $this->controllername;?>',<?php echo $this->id;?>);" value="Edit" />
+			<?php }?>
+			<?php  if(!empty($this->isfrompopup) && $this->isfrompopup=='yes') {?>
+					<button onclick="closeiframepopup('<?php echo $this->controllername;?>','cancel');" type="button" >Cancel</button>
+			<?php }else{ ?>
+					<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/configureexitqs';" type="button" id="Cancel" name="Cancel">Cancel</button>
+			<?php } ?>
+		</div>
+	</div>
+</form>
+
+	<?php echo sapp_Helper::popup_helper('exittypes');?>
+	
+<?php }?>
+
+
+<script type="text/javascript">
+
+function validatequestiononsubmit(ele)
+{
+    var parentdivlength = $('div[id^=parent]').length;
+    var re = /^[a-zA-Z0-9\- ?'.,\/#@$&*()!]+$/;
+    var errorcount = 0;
+    var exittypeid = $('#exit_type_id').val();
+    $('#errors-exit_type_id').remove();
+   	/* var values = $("input[name='service_request_name\\[\\]']").map(function(){return $(this).val();}).get(); */ 
+	if(parentdivlength > 0)
+    {                    
+        $('.add_request').each(function(i){                            
+            var ele= $(this).find('.cls_service_request_name');                            
+            var elementid = $(ele).attr('id');
+
+            var reqValue = $(ele).val();
+            $('#errors-'+elementid).remove();
+            if($(ele).val() == '')
+            {
+                $(ele).parent().append("<span class='errors' id='errors-"+elementid+"'>Please enter question.</span>");
+                errorcount++;
+            }
+            else if(!re.test(reqValue))
+            {
+                $(ele).parent().append("<span class='errors' id='errors-"+elementid+"'>Please enter valid question.</span>");
+                errorcount++;
+            }
+            else
+            {
+            	$('#errors-'+elementid).remove();
+            }
+        });
+    }
+    if(exittypeid == '')
+    {
+        $('#exit_type_id').after("<span class='errors' id='errors-exit_type_id'>Please select exit type.</span>");
+    }
+    else
+    {
+        $('#errors-exit_type_id').remove();
+    }	
+
+    if(errorcount == 0 && exittypeid !='')
+    {
+        $.blockUI({ width:'50px',message: $("#spinner").html() });
+        document.getElementById("formid").submit();
+    }
+}
+
+
+$(document).ready(function() {
+	$("[id^=description]").maxlength();
+	var counter = 0;
+	<?php if($_POST){
+		    if(isset($this->msgarray['requestsize'])){
+		    	for($i=0;$i<$this->msgarray['requestsize'];$i++)
+		    	{
+	?>
+					var html = '';
+					html+="<div id='parent_<?php echo $i;?>' class='add_request' >";
+					html+="<div class='new-form-ui clearb'>";
+					html+="<label class='required'>Question </label>";
+					html+="<div class='division'><input type='text' maxlength='100' value='<?php echo $_POST['question'][$i]?>' id='question_<?php echo $i;?>' name='question[]' class='cls_service_request_name' onblur='validatequestionname(this)' onkeyup='validatequestionname(this)'>";
+					<?php if(isset($this->msgarray['ques_name'][$i])){?>
+					html+="<span id='errors-question_<?php echo $i;?>' class='errors'><?php echo $this->msgarray['ques_name'][$i];?></span>";
+					<?php }?>
+					html+="</div>";
+					html+="</div>";
+					html+="<div class='new-form-ui clearb textareaheight'>";
+					html+="<label>Description</label>";
+					html+="<div class='division'><textarea maxlength='200' cols='50' rows='10' id='description_<?php echo $i;?>' name='description[]'><?php echo ($_POST['description'][$i]!=''?$_POST['description'][$i]:'');?></textarea></div>";
+					html+="</div>";
+					<?php if($i ==0){?>
+					html+="</div>";
+					html+="<span id='add-candidate'><span class='sprite candidate-new' onclick='addAppQuestionDiv()'>Add New Question</span></div>";
+					<?php }else{?>
+					html+="<div class='division'><span class='sprite remove-new remove-entry' title='Remove' onclick='removeDiv(<?php echo $i;?>)'></span></div>";
+					html+="</div>";
+					<?php }?>
+					$('#multi_dept_div').append(html);
+					counter++;
+					$("[id^=description]").maxlength();
+					
+	<?php } ?>
+			$('#idcount').val(counter);
+	<?php }}?>
+	
+});
+
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/configureexitqs/addpopup.phtml ---
@@ -0,0 +1,35 @@
+
+<?php if($this->popup == 'close') { ?>	
+	<div class="ml-alert-1-success">
+	<div class="style-1-icon success"></div>
+	Questions <?php echo $this->eventact; ?> successfully.
+	</div>
+
+	<?php } else { ?>
+
+	<?php 
+	$domain_url = APPLICATION_PATH;
+		include($domain_url.'/modules/exit/views/scripts/configureexitqs/add.phtml');
+		
+	}
+	?>
+	<script language='javascript' type='text/javascript'>
+
+	<?php if($this->popup != '') { ?>
+	 setTimeout(function(){
+	  closeiframeAddPopup("",'<?php echo $this->controllername; ?>','','');  					
+	},3000);
+	parent.window.location.reload();
+	<?php } ?>
+	</script>
+<script type='text/javascript'>
+	$(document).ready(function() { 
+		<?php if (count($this->messages)) {?>
+			  setTimeout(function(){
+					$('#popupmessage').fadeOut('slow');	
+				},3000);
+				
+		<?php } ?>
+		
+	});
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/configureexitqs/form.phtml ---
@@ -0,0 +1,72 @@
+<?php 
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+ if (count($this->messages)) {?>
+	<div id="dispmsgemp" class="settingssuccess">
+		<?php 
+			foreach ($this->messages as $message)
+			{
+				$flag = array();				
+				$flag = array_keys($message);
+				echo "<div id='messageData' class='ml-alert-1-$flag[0]'><div style='display:block;'><span class='style-1-icon $flag[0]'></span>";
+				echo $message[$flag[0]];
+				echo "</div></div>";
+			} 
+		?>
+	</div>	
+	
+<?php }
+if($this->ermsg !='')
+		{
+?>
+     <div class="ml-alert-1-info m1-info-set"><div class="style-1-icon info"></div>No data found.</div>
+<?php }else
+{
+ sapp_Global::generateClientValidations($this->form);
+ $request = Zend_Controller_Front::getInstance();
+ $actionName = $request->getRequest()->getActionName();
+ 	if($actionName == 'view')
+ 	  $viewclass = 'view-form-detail';
+ 	else
+ 	  $viewclass = '';  
+
+ 	 $departmentArr = array(); 
+ 	
+ ?>
+<div id="error_message" style="display:none;"></div>
+<form name="<?php echo $this->form->getName(); ?>" id="<?php echo $this->form->getId(); ?>" action="<?php echo $this->form->getAction();?>" method="<?php echo $this->form->getMethod(); ?>">
+		<?php echo $this->form->id; ?>
+        <div class="total-form-controller <?php echo $viewclass;?>">
+			<?php echo sapp_Helper::sd_form_helper($this->msgarray, $this->form, 'exit_type_id','', '','required',$departmentArr);?>
+			<?php echo sapp_Helper::sd_form_helper($this->msgarray, $this->form, 'question',"Special characters allowed are - ? &#39; . , / # @ $ & * ( ) !", '','required',array());?>
+			<?php echo sapp_Helper::sd_form_helper($this->msgarray, $this->form, 'description','', 'textareaheight','',array());?>
+					
+		<div class="new-form-ui-submit">
+		<?php echo $this->form->submit; ?>
+		<?php if($actionName == 'view'){?>
+			<input type="button" onclick="changeeditscreen('<?php echo $this->controllername;?>',<?php echo $this->id;?>);" value="Edit" />
+		<?php }?>
+		<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/configureexitqs';" type="button" id="Cancel" name="Cancel">Cancel</button>
+		</div>
+	</div>
+</form>
+
+	
+<?php }?>
\ No newline at end of file

--- application/modules/exit/views/scripts/configureexitqs/index.phtml ---
@@ -0,0 +1,63 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+ if (count($this->messages)) 
+ {
+ ?>
+	<div id="dispmsgexittypes" class="settingssuccess">
+ <?php 
+	foreach ($this->messages as $message)
+	{
+		if(!empty($message))
+		{
+			$flag = array_keys($message);
+			echo "<div id='messageData' class='ml-alert-1-$flag[0]'><div style='display:block;'><span class='style-1-icon $flag[0]'></span>";
+			echo $message[$flag[0]];
+			echo "</div></div>";
+		}
+	} 
+?>   
+	</div>	
+<?php 
+} 
+?>
+<span id="error_message"></span>
+
+
+<?php
+
+if($this->call == 'ajaxcall'){
+	$div = ''; $endDiv = ''; 
+} else { 
+	$div = '<div id="grid_'.$this->dataArray[0]['objectname'].'" class="all-grid-control">'; $endDiv = '</div>';
+}
+	echo $div.'<div id="msg" style="display:none;font-style: oblique; font-weight: bold; color: green;""></div>'.$this->grid($this->dataArray[0]).$endDiv;
+?>
+<script type='text/javascript'>
+$(document).ready(function(){
+<?php if (count($this->messages)) {?>
+      setTimeout(function(){
+			$('#dispmsgexittypes').fadeOut('slow');
+		},3000);
+<?php } 
+?>
+});
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/configureexitqs/view.phtml ---
@@ -0,0 +1,69 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+?>
+<?php 
+
+if($this->ermsg != '')
+{
+?>
+<div class="ml-alert-1-info m1-info-set-2">
+    <div class="style-1-icon info"></div>
+       No data found.
+</div>
+<?php 
+}
+else 
+{
+$data = $this->data;
+$id = $this->id;
+$previ_data = $this->previ_data;
+$exittype_name = $this->exittype_name;
+
+?>
+<?php 
+if($this->ermsg == '')  { ?>
+
+    
+		<?php
+		if($previ_data == 'Yes')
+		{
+		?>
+		<div class="new-form-ui-submit "  style="margin-top: 0px; float: right; width: auto; margin-left: 0px; ">
+		   
+				<?php if($data['isused'] == 0) {             	
+						$msgtitle = $this->controllername.'_delete';
+						sapp_Helper::editdeleteForView(EXIT_QUESTIONS,$this->controllername,$this->id,$msgtitle); 
+					} ?>		
+			
+		</div>
+		<?php 
+		}
+		?>
+	
+   <?php 
+sapp_Helper::viewHeader();
+sapp_Helper::viewBody('alt','Exit type',(!empty( $exittype_name))? $exittype_name:"...",'Question',(!empty($this->data['question']))?$this->data['question']:"...");
+sapp_Helper::viewBody('nor','Description',(!empty($this->data['description']))?$this->data['description']:"...",'','');
+sapp_Helper::viewFooter();
+?>
+
+
+<?php } }?>
\ No newline at end of file

--- application/modules/exit/views/scripts/exitmailtemplates/exitmailtemplate.phtml ---
@@ -0,0 +1,12 @@
+
+<div style='padding: 0; text-align: left; font-size:14px; font-family:Arial, Helvetica, sans-serif;'>				
+<span style='color:#3b3b3b;'>Hi,</span><br />
+<div style='padding:20px 0 0 0;color:#3b3b3b;'><?php echo $this->mail_content?></div>
+<div style='padding:20px 0 10px 0;'>Please <a href="<?php echo BASE_URL?>" target='_blank' style='color:#b3512f;'>click here</a> to login  to your <b><?php echo APPLICATION_NAME?></b> account to check the details.</div>
+</div> 
+
+
+
+	  
+
+	  

--- application/modules/exit/views/scripts/exitproc/add.phtml ---
@@ -0,0 +1,48 @@
+<?php if($this->ermsg == 'noConfig'){ // exit proc settings are not configured
+?>
+<div class="ml-alert-1-info m1-info-set"><div class="style-1-icon info"></div>Exit procedure settings are not configured yet for your department. Please contact your HR. </div>
+<?php } else if($this->not_valid_for_add>0){ ?>
+	<div class="ml-alert-1-info m1-info-set"><div class="style-1-icon info"></div>You cannot raise a new request, as a request is already in progress. </div>
+<?php }else {
+	sapp_Global::generateClientValidations($this->form);
+	?>
+<div class="cofig_title" style="margin-left: 0px; padding-top: 10px;padding-bottom: 10px;">Exit Procedure Details </div>
+	<form id="<?php echo $this->form->getId();?>" name="<?php echo $this->form->getName();?>" action="<?php echo $this->form->getAction();?>" method="<?php echo $this->form->getMethod();?>">
+		 <div class="total-form-controller">
+			<div class="new-form-ui clearb">
+				<label class="required">Exit Type</label>
+				<div class="division"><?php echo $this->form->exit_type; ?></div>
+				<span class="errors" id="errors-<?php echo $this->form->exit_type->getId(); ?>">
+				<?php if(isset($this->msgarray['exit_type'])){?>
+				<?php echo $this->msgarray['exit_type'];?>
+				<?php }?>
+				</span>
+			</div>	
+			<div class="new-form-ui clearb">
+				<label class="required">Comments</label>
+				<div class="division"><?php echo $this->form->comments; ?></div>
+				<span class="errors" id="errors-<?php echo $this->form->comments->getId(); ?>">
+				<?php if(isset($this->msgarray['comments'])){?>
+				<?php echo $this->msgarray['comments'];?>
+				<?php } ?>
+				</span>
+			</div>	
+		</div>
+		<div class="new-form-ui-submit">
+			<?php echo $this->form->submit; ?>
+			
+				<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/exitproc';" id="Cancel" name="Cancel" type="button" >Cancel</button>
+		</div>
+	</form>
+<?php } ?>	
+<script>
+function removeValidation(){
+	var val = $('#comments').val();
+	if(val!=''){
+		$("#errors-comments").text();
+	}else{
+		$("#errors-comments").text('Please enter comments.');
+	}
+}
+</script>
+	
\ No newline at end of file

--- application/modules/exit/views/scripts/exitproc/index.phtml ---
@@ -0,0 +1,65 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+if (count($this->messages)) 
+ {
+	 
+ ?>
+	<div id="dispmsgepsettings" class="settingssuccess">
+ <?php 
+	foreach ($this->messages as $message)
+	{
+		if(!empty($message))
+		{
+			$flag = array_keys($message);
+			echo "<div id='messageData' class='ml-alert-1-$flag[0]'><div style='display:block;'><span class='style-1-icon $flag[0]'></span>";
+			echo $message[$flag[0]];
+			echo "</div></div>";
+		}
+	} 
+?>   
+	</div>	
+<?php 
+} 
+?>
+<?php echo sapp_Helper::popup_helper('allexitproc');?>
+<span id="error_message"></span>
+
+<?php
+
+if($this->call == 'ajaxcall'){
+	$div = ''; $endDiv = ''; 
+} else { 
+	$div = '<div id="grid_'.$this->dataArray[0]['objectname'].'" class="all-grid-control">'; $endDiv = '</div>';
+}
+	echo $div.'<div id="msg" style="display:none;font-style: oblique; font-weight: bold; color: green;""></div>'.$this->grid($this->dataArray[0]).$endDiv;
+?>
+<script type='text/javascript'>
+$(document).ready(function(){
+<?php if (count($this->messages)) {?>
+      setTimeout(function(){
+			$('#dispmsgepsettings').fadeOut('slow');
+		},3000);
+<?php } 
+?>
+});
+
+
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/exitproc/questions.phtml ---
@@ -0,0 +1,144 @@
+<?php //if employee answered the hr questions
+if(!empty($this->emp_response_array)) { 
+echo sapp_Helper::exitProcessFinalView($this->employee_questions_array,$this->emp_response_array);
+ } else { ?>
+	
+<div class="total-form-controller view-form-detail">
+<div id='msg_error'></div>
+<form name="questions_form" id="questions_form" method="post" action="">
+<div class="total-form-controller view-form-detail employee_appraisal_view">
+<table width="100%" border="0" cellspacing="0" cellpadding="0" style="clear:both;" class="employee_appraisal-table">
+	<thead>
+		<tr>
+			<th>Question</th>
+			<th>Comments</th>
+		</tr>
+	</thead>
+	<tbody>
+	<?php 
+	
+	$tmpQuestionsFlag = 0;
+	if(!empty($this->employee_questions_array) && count($this->employee_questions_array)>0) { ?>
+		<?php 
+			foreach ($this->employee_questions_array as $qd)
+			{
+					$tmpQuestionsFlag = 1;
+		?>						
+					<tr>
+						<td>
+							<div>
+								<span class="appri_ques"><?php echo $qd['question'];?></span>
+								<span class="appri_desc"><?php echo $qd['description'];?></span>
+							</div>
+						</td>
+						
+						<td>
+							<textarea onkeyup="removeValidationMessage(this)"  class="app_req_field appri_textarea" name="emp_comment[<?php echo $qd['id'];?>]" id="emp_comment_<?php echo $qd['id'];?>" rows="2" cols="15"><?php if(isset($this->emp_response_array[$qd['id']])){echo $this->emp_response_array[$qd['id']];}?></textarea>
+						</td>
+					</tr>				
+		<?php 	
+			} 
+	}
+			if($tmpQuestionsFlag == 0)
+			{
+		?>
+				<tr>
+					<td colspan="2">
+						<div class="no-data">
+							Questions are not configured.
+						</div>											
+					</td>
+				</tr>
+		<?php
+			}
+		?>
+		
+	</tbody>
+</table>
+
+</div>
+<?php if($tmpQuestionsFlag == 1) {?>
+<div class="new-form-ui-submit" style="margin-top: 20px;">
+<input type="hidden" name="exitprocessId" id="exitprocessId" value="<?php echo $this->exitprocessId;?>">
+				<input type="hidden" name="employee_id" id="employee_id" value="<?php echo $this->employee_id;?>">
+	<input type="button" value="Save" onclick="saveQuestionsDetails('submit');"/>
+	<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/exitproc/';" type="button" >Cancel</button>
+</div>
+<?php } ?>
+</form>
+</div>
+<script type="text/javascript">
+function saveQuestionsDetails(flag){
+		if(validateQuestionsForm(flag)){
+			var msg= '<span class="alert_info_span"> Answers cannot be edited once you save.Do you wish to continue?  </span>';
+			jConfirm(msg, "Confirm ", function(r) {
+				if(r==true)
+				{
+					$.blockUI({ width:'50px',message: $("#spinner").html() });
+					$('#questions_form').submit();
+				}
+			});
+			//$.blockUI({ width:'50px',message: $("#spinner").html() });
+			//$('#questions_form').submit();
+		}
+	}
+//function to check validations
+function validateQuestionsForm(flag)
+{
+	if(flag == 'submit')
+		{
+			var req_count = 0;   
+			var errorarray = [];
+            var html = '';   
+            $('.errors').remove();      
+		    $('.appri_textarea').each(function(){
+                var qval = $(this).val();
+                var qid = $(this).prop('id');
+                if(qval == '')
+                {
+					req_count++;
+	                $('#'+qid).parent().append("<span class='errors errors_"+qid+"' id='err-"+qid+"'>Please enter comments.</span>");
+	                if ($.inArray(2, errorarray) == -1) {
+	                    	errorarray.push(2);
+	                }
+					
+                }
+            });
+		    if(req_count == 0)
+		    	return true;
+		    else
+		    {    
+		    	return false;
+		    }	
+		}else{
+			return true;
+		}
+}
+//function to remove validation messages
+function removeValidationMessage(ele) {
+		if($(ele).val() || $(ele).prev().val()) {
+			var eleid = $(ele).attr('id');
+			$("#err-"+eleid).remove();
+		}
+}	
+function showResponse(responseText, statusText, xhr)  {
+		$.each(responseText, function() {
+			$('#msg_error').html('');
+			if(responseText['msg'] == "saved")
+				window.location = base_url+"/exit/exitproc";
+			else
+				$('#msg_error').html(responseText['msg']);
+		});
+}
+$(document).ready(function(){
+	
+	$("#questions_form").attr('action',base_url+"/exit/exitproc/savequestions");
+	var options = { 
+			dataType : 'json', 
+			success : showResponse 
+		}; 
+	$('#questions_form').ajaxForm(options);
+});
+</script>
+
+<?php } ?>
\ No newline at end of file

--- application/modules/exit/views/scripts/exitproc/view.phtml ---
@@ -0,0 +1,129 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+ if (count($this->messages)) 
+ {
+	 
+ ?>
+	<div id="dispmsgepsettings" class="settingssuccess">
+ <?php 
+	foreach ($this->messages as $message)
+	{
+		if(!empty($message))
+		{
+			$flag = array_keys($message);
+			echo "<div id='messageData' class='ml-alert-1-$flag[0]'><div style='display:block;'><span class='style-1-icon $flag[0]'></span>";
+			echo $message[$flag[0]];
+			echo "</div></div>";
+		}
+	} 
+?>   
+	</div>	
+<?php 
+}
+if($this->ermsg == 'invalidUrl')
+{
+?>
+	<div class="ml-alert-1-info m1-info-set"><div class="style-1-icon info"></div> Invalid URL </div>
+<?php
+}
+else
+{	
+	//}	
+
+	/**
+	** build employee details from employee summary table
+	** for superadmin, build employee details from users table
+	**/
+	if(!empty($this->empDetailsObj) || $this->loggedInUser == SUPERADMIN)
+	{
+?>
+		<div class="separetor-heading">Exit Procedure Details</div>
+		<?php 
+		sapp_Helper::viewHeader();
+		sapp_Helper::viewBody('alt','Exit Type',(isset($this->exitProcDetails['exit_type']))?$this->exitProcDetails['exit_type']: "...",'Raised on',isset($this->exitProcDetails['createddate'])? sapp_Global::change_date($this->exitProcDetails['createddate'],"view") : "...");
+
+		sapp_Helper::viewBody('nor','Comments',isset($this->exitProcDetails['overall_comments'])? $this->exitProcDetails['overall_comments'] : "...",'Process Status',isset($this->exitProcDetails['overall_status'])? $this->exitProcDetails['overall_status'] : "...");
+
+		sapp_Helper::viewBody('alt','Relieving Date',isset($this->exitProcDetails['relieving_date'])? sapp_Global::change_date($this->exitProcDetails['relieving_date'],'view') : "...",'','');
+
+		sapp_Helper::viewFooter();
+		?>
+<?php
+	sapp_Helper::viewHeader();
+	sapp_Helper::viewBody('alt','L1 Manager',isset($this->empDetailsObj['reporting_manager_name'])? $this->empDetailsObj['reporting_manager_name']: "...",'Status',isset($this->exitProcDetails['l1_status'])? $this->exitProcDetails['l1_status']: "...");
+	sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['l1_comments'])?$this->exitProcDetails['l1_comments']:"...",'','');
+	if(!empty($this->exitProcDetails['l2_manager'])){
+		
+	sapp_Helper::viewBody('alt','L2 Manager',isset($this->managersDataObj[$this->exitProcDetails['l2_manager']])? $this->managersDataObj[$this->exitProcDetails['l2_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['l2_status'])?$this->exitProcDetails['l2_status']:"...");
+	sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['l2_comments'])?$this->exitProcDetails['l2_comments']:"...",'','');
+
+	}
+	sapp_Helper::viewBody('alt','HR Manager',isset($this->managersDataObj[$this->exitProcDetails['hr_manager']])? $this->managersDataObj[$this->exitProcDetails['hr_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['hr_manager_status'])?$this->exitProcDetails['hr_manager_status']:"...");
+	sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['hr_manager_comments'])?$this->exitProcDetails['hr_manager_comments']:"...",'','');
+
+	if(!empty($this->exitProcDetails['sys_admin'])){
+	sapp_Helper::viewBody('alt','System Admin',isset($this->managersDataObj[$this->exitProcDetails['sys_admin']])? $this->managersDataObj[$this->exitProcDetails['sys_admin']]['userfullname']: "...",'Status',isset($this->exitProcDetails['sys_admin_status'])?$this->exitProcDetails['sys_admin_status']:"...");
+	sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['sys_admin_comments'])?$this->exitProcDetails['sys_admin_comments']:"...",'','');
+	}
+	if(!empty($this->exitProcDetails['general_admin'])){
+	sapp_Helper::viewBody('alt','General Admin',isset($this->managersDataObj[$this->exitProcDetails['general_admin']])? $this->managersDataObj[$this->exitProcDetails['general_admin']]['userfullname']: "...",'Status',isset($this->exitProcDetails['gen_admin_status'])?$this->exitProcDetails['gen_admin_status']:"...");
+	sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['gen_admin_comments'])?$this->exitProcDetails['gen_admin_comments']:"...",'','');
+	}
+	if(!empty($this->exitProcDetails['finance_manager'])){
+	sapp_Helper::viewBody('alt','Finance Manager',isset($this->managersDataObj[$this->exitProcDetails['finance_manager']])? $this->managersDataObj[$this->exitProcDetails['finance_manager']]['userfullname']: "...",'Status',isset($this->exitProcDetails['fin_admin_status'])?$this->exitProcDetails['fin_admin_status']:"...");
+	sapp_Helper::viewBody('nor','Comments',!empty($this->exitProcDetails['fin_admin_comments'])?$this->exitProcDetails['fin_admin_comments']:"...",'','');
+	}
+	sapp_Helper::viewFooter();
+?>
+		<div class="cofig_title" style="margin-left: 0px; padding-top: 10px;padding-bottom: 10px;">Process History</div>
+		<table width="100%" border="0" cellspacing="0" cellpadding="0" class="requisition-table view-table-data">
+			<?php 
+			for($h=0;$h < sizeof($this->historyObj); $h++)
+			{
+			?>
+				<tr class="req-no-form">
+					<td>
+						<img width="28" height="28" border="0" src="<?php echo DOMAIN; ?>public/uploads/profile/<?php echo $this->historyObj[$h]['profileimg']?>" onerror="this.src='<?php echo MEDIA_PATH; ?>images/profile_pic.png';" />
+				<?php 
+					
+					$tmpHistoryStr1 = str_replace('<name>',$this->historyObj[$h]['userfullname'],$this->historyObj[$h]['description']);
+					$tmpCreatedDateStr = sapp_Global::getDisplayDate($this->historyObj[$h]['createddate']);
+					$tmpHistoryStr2 = str_replace('<createddate>',$tmpCreatedDateStr, $tmpHistoryStr1);
+					echo $tmpHistoryStr2;
+				?>
+					</td>
+				</tr>
+			<?php
+			}
+			?>
+		</table>
+
+<?php
+	}
+
+	
+?>
+<?php
+	
+?>
+<?php
+}
+?>

--- application/modules/exit/views/scripts/exitprocsettings/add.phtml ---
@@ -0,0 +1,330 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+if($this->ermsg == 'noprivileges')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>You are not authorized to access this page</div>
+
+<?php
+}
+else
+{
+
+sapp_Global::generateClientValidations($this->form);
+
+?>
+<form name="<?php echo $this->form->getName();?>" id="<?php echo $this->form->getId(); ?>" action="<?php echo $this->form->getAction();?>" method="<?php echo $this->form->getMethod();?>">
+        <div class="total-form-controller">
+		<div class="new-form-ui clearb">
+			<label class="required">Business unit</label>
+			<div class="division"><?php echo $this->form->businessunit_id; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->businessunit_id->getId(); ?>">
+			<?php if(isset($this->msgarray['businessunit_id'])){?>
+			<?php echo $this->msgarray['businessunit_id'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label class="required">Department</label>
+			<div class="division"><?php echo $this->form->department_id; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->department_id->getId(); ?>">
+			<?php if(isset($this->msgarray['department_id'])){?>
+			<?php echo $this->msgarray['department_id'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<!-- 
+		<div class="new-form-ui clearb">
+			<label>L1 Manager</label>
+			<div class="division"><?php //echo $this->form->l1_manager; ?></div>
+			<span class="errors" id="errors-<?php //echo $this->form->l1_manager->getId(); ?>">
+			<?php //if(isset($this->msgarray['l1_manager'])){?>
+			<?php //echo $this->msgarray['l1_manager'];?>
+			<?php //}?>
+			</span>
+		</div> -->
+		<div class="new-form-ui clearb">
+			<label class="required">HR Manager</label>
+			<div class="division"><?php echo $this->form->hr_manager; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->hr_manager->getId(); ?>">
+			<?php if(isset($this->msgarray['hr_manager'])){?>
+			<?php echo $this->msgarray['hr_manager'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<!--<div class="clear fullwidth"></div>-->
+		<div class="new-form-ui clearb">
+			<label class="required">L2 Manager</label>
+			<div class="division"><?php echo $this->form->l2_manager; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->l2_manager->getId(); ?>">
+			<?php if(isset($this->msgarray['l2_manager'])){?>
+			<?php echo $this->msgarray['l2_manager'];?>
+			<?php } ?>
+			</span>
+			<!--<span class="errors"  id="test"></span>-->
+		</div>
+		
+		<div class="new-form-ui clearb">
+			<label>System Admin</label>
+			<div class="division"><?php echo $this->form->sys_admin; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->sys_admin->getId(); ?>">
+			<?php if(isset($this->msgarray['sys_admin'])){?>
+			<?php echo $this->msgarray['sys_admin'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label>General Admin</label>
+			<div class="division"><?php echo $this->form->general_admin; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->general_admin->getId(); ?>">
+			<?php if(isset($this->msgarray['general_admin'])){?>
+			<?php echo $this->msgarray['general_admin'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label>Finance Manager</label>
+			<div class="division"><?php echo $this->form->finance_manager; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->finance_manager->getId(); ?>">
+			<?php if(isset($this->msgarray['finance_manager'])){?>
+			<?php echo $this->msgarray['finance_manager'];?>
+			<?php }?>
+			</span>
+		</div>
+		<div class="new-form-ui clearb">
+			<label class="required">Notice Period <img class="tooltip" title="Number of days including holidays and weekends" src="<?php echo $this->baseUrl().'/public/media/';?>images/help.png"></label>
+			<div class="division"><?php echo $this->form->notice_period; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->notice_period->getId(); ?>">
+			<?php if(isset($this->msgarray['notice_period'])){?>
+			<?php echo $this->msgarray['notice_period'];?>
+			<?php }?>
+			</span>
+		</div>		
+	</div>
+	<div class="new-form-ui-submit">
+		<?php echo $this->form->submit; ?>
+		<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/exitprocsettings';" id="Cancel" name="Cancel" type="button" >Cancel</button>
+	</div>
+</form>
+<?php 
+}//end of else
+?>
+<script type="text/javascript">
+
+
+$(document).ready(function(){
+	$('#businessunit_id').change(function(){
+		var bunitVal = $(this).val();
+		$('span[id^="errors-"]').empty();
+		if(bunitVal!='')
+		{
+			$.ajax({
+				url:base_url+"/exit/exitprocsettings/getdepartments",
+				type : 'POST',
+				data :'bunitId='+bunitVal,
+				dataType : 'json',
+				beforeSend: function(){
+					$("#department_id").before("<div id='loader1'></div>");
+					$("#loader1").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+
+					$("#l2_manager").before("<div id='loader6'></div>");
+					$("#loader6").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+
+					$("#hr_manager").before("<div id='loader2'></div>");
+					$("#loader2").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+
+					$("#sys_admin").before("<div id='loader3'></div>");
+					$("#loader3").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+
+					$("#general_admin").before("<div id='loader4'></div>");
+					$("#loader4").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+
+					$("#finance_manager").before("<div id='loader5'></div>");
+					$("#loader5").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+				},
+				success:function(data){
+					if($.trim(data.options) == 'nodepartments')
+					{
+						$('#errors-department_id').html('No departments.');
+					}
+					else if($.trim(data.options) == 'allconfigured')
+					{
+						$('#errors-department_id').html('All departments are configured.');
+					}
+					else
+					{
+						/** fill departments data **/
+						$('#department_id').find('option').remove();
+						$('#department_id').html(data.options);
+						$('#s2id_department_id').find('a.select2-choice').find('span').html('Select Department');
+						$('#errors-department_id').empty();
+					}
+					/** fill hr managers data **/
+					$('#hr_manager').find('option').remove();
+					if($.trim(data.hrOptions) == 'noHRManager')
+						$('#errors-hr_manager').html('No employees.');
+					else
+						fillHRData(data);
+					/** fill l2 managers data **/
+					$('#l2_manager').find('option').remove();
+					if($.trim(data.l2Options) == 'noL2Manager')
+						$('#errors-l2_manager').html('No employees.');
+					else
+						fillL2Data(data);
+
+					/** fill system admin data **/
+					$('#sys_admin').find('option').remove();
+					if($.trim(data.sysAdminOptions) == 'noSystemAdmin')
+						$('#errors-sys_admin').html('No employees.');
+					else
+						fillSysAdminData(data);
+
+					/** fill general admin data **/
+					$('#general_admin').find('option').remove();
+					if($.trim(data.generalAdminOptions) == 'noGeneralAdmin')
+						$('#errors-general_admin').html('No employees.');
+					else
+						fillGeneralAdminData(data);
+
+					/** fill finance manager data **/
+					$('#finance_manager').find('option').remove();
+					if($.trim(data.financeManagerOptions) == 'noFinanceManager')
+						$('#errors-finance_manager').html('No employees.');
+					else
+						fillFinanceManagerData(data);
+
+					$('div[id^="loader"]').remove();
+				}
+			});		
+		}
+	});
+
+/*  */
+
+//duplicate checking
+
+var arr = [ "l2_manager", "hr_manager", "sys_admin", "general_admin", "finance_manager" ];
+$('#l2_manager').change(function(){
+	$('#errors-l2_manager').remove();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='l2_manager'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#l2_manager').val())
+			{
+				//$('#errors-l2_manager').html('Employee has already been selected');
+				 $('#l2_manager').after("<span class='errors' id='errors-l2_manager'>Employee has already been selected.</span>");
+			}
+		}
+	});
+});
+$('#hr_manager').change(function(){
+	$('#errors-hr_manager').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='hr_manager'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#hr_manager').val())
+			{
+				$('#errors-hr_manager').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+$('#sys_admin').change(function(){
+	$('#errors-sys_admin').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='sys_admin'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#sys_admin').val())
+			{
+				$('#errors-sys_admin').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+$('#general_admin').change(function(){
+	$('#errors-general_admin').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='general_admin'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#general_admin').val())
+			{
+				$('#errors-general_admin').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+$('#finance_manager').change(function(){
+	$('#errors-finance_manager').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='finance_manager'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#finance_manager').val())
+			{
+				$('#errors-finance_manager').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+
+});
+
+/** fill l2 managers data **/
+function fillL2Data(data)
+{
+	$('#l2_manager').html(data.l2Options);
+	$('#s2id_l2_manager').find('a.select2-choice').find('span').html('Select L2 Manager');
+	$('#errors-l2_manager').empty();
+}
+
+/** fill hr managers data **/
+function fillHRData(data)
+{
+	$('#hr_manager').html(data.hrOptions);
+	$('#s2id_hr_manager').find('a.select2-choice').find('span').html('Select HR Manager');
+	$('#errors-hr_manager').empty();
+}
+
+/** fill system admin data **/
+function fillSysAdminData(data)
+{
+	$('#sys_admin').html(data.sysAdminOptions);
+	$('#s2id_sys_admin').find('a.select2-choice').find('span').html('Select System Admin');
+	$('#errors-sys_admin').empty();
+}
+
+/** fill general admin data **/
+function fillGeneralAdminData(data)
+{
+	$('#general_admin').html(data.generalAdminOptions);
+	$('#s2id_general_admin').find('a.select2-choice').find('span').html('Select General Admin');
+	$('#errors-general_admin').empty();
+}
+
+/** fill finance manager data **/
+function fillFinanceManagerData(data)
+{
+	$('#finance_manager').html(data.financeManagerOptions);
+	$('#s2id_finance_manager').find('a.select2-choice').find('span').html('Select Finance Manager');
+	$('#errors-finance_manager').empty();
+}
+
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/exitprocsettings/edit.phtml ---
@@ -0,0 +1,211 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+if($this->ermsg == 'noprivileges')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>You are not authorized to access this page</div>
+
+<?php
+}
+else if($this->ermsg == 'nodata')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>No data found</div>
+
+<?php
+}
+
+else if($this->ermsg == 'invalidURL')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>Invalid URL</div>
+
+<?php
+}
+else
+{
+	if($this->ermsg == 'noedit')
+	{
+	?>
+		 <div class="ml-alert-1-info"><div class="style-1-icon info"></div>Exit procedure settings cannot be edited as exit process has been initialized.</div>
+
+	<?php
+	}
+
+sapp_Global::generateClientValidations($this->form);
+
+?>
+<form name="<?php echo $this->form->getName();?>" id="<?php echo $this->form->getId(); ?>" action="<?php echo $this->form->getAction();?>" method="<?php echo $this->form->getMethod();?>">
+        <div class="total-form-controller">
+		<div class="new-form-ui clearb">
+			<label class="required">Business unit</label>
+			<div class="division"><?php echo $this->form->businessunit_id; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->businessunit_id->getId(); ?>">
+			<?php if(isset($this->msgarray['businessunit_id'])){?>
+			<?php echo $this->msgarray['businessunit_id'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label class="required">Department</label>
+			<div class="division"><?php echo $this->form->department_id; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->department_id->getId(); ?>">
+			<?php if(isset($this->msgarray['department_id'])){?>
+			<?php echo $this->msgarray['department_id'];?>
+			<?php }?>
+			</span>
+		</div>	
+	
+		<div class="new-form-ui clearb">
+			<label class="required">HR Manager</label>
+			<div class="division"><?php echo $this->form->hr_manager; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->hr_manager->getId(); ?>">
+			<?php if(isset($this->msgarray['hr_manager'])){?>
+			<?php echo $this->msgarray['hr_manager'];?>
+			<?php }?>
+			</span>
+		</div>
+		<!--<div class="clear fullwidth"></div>-->
+		<div class="new-form-ui clearb">
+			<label class="required">L2 Manager</label>
+			<div class="division"><?php echo $this->form->l2_manager; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->l2_manager->getId(); ?>">
+			<?php if(isset($this->msgarray['l2_manager'])){?>
+			<?php echo $this->msgarray['l2_manager'];?>
+			<?php } ?>
+			</span>
+		</div>			
+		
+		<div class="new-form-ui clearb">
+			<label>System Admin</label>
+			<div class="division"><?php echo $this->form->sys_admin; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->sys_admin->getId(); ?>">
+			<?php if(isset($this->msgarray['sys_admin'])){?>
+			<?php echo $this->msgarray['sys_admin'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label>General Admin</label>
+			<div class="division"><?php echo $this->form->general_admin; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->general_admin->getId(); ?>">
+			<?php if(isset($this->msgarray['general_admin'])){?>
+			<?php echo $this->msgarray['general_admin'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label>Finance Manager</label>
+			<div class="division"><?php echo $this->form->finance_manager; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->finance_manager->getId(); ?>">
+			<?php if(isset($this->msgarray['finance_manager'])){?>
+			<?php echo $this->msgarray['finance_manager'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label class="required">Notice Period<img class="tooltip" title="Number of days including holidays and weekends" src="<?php echo $this->baseUrl().'/public/media/';?>images/help.png"></label>
+			<div class="division"><?php echo $this->form->notice_period; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->notice_period->getId(); ?>">
+			<?php if(isset($this->msgarray['notice_period'])){?>
+			<?php echo $this->msgarray['notice_period'];?>
+			<?php }?>
+			</span>
+		</div>	
+	</div>
+	<div class="new-form-ui-submit">
+		<?php echo $this->form->submit; ?>
+	<?php if(count($this->result)==0)
+			{ ?>
+		<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/exitprocsettings';" id="Cancel" name="Cancel" type="button" >Cancel</button>
+			<?php } ?>
+	</div>
+</form>
+<?php 
+}//end of else
+?>
+<script>
+//duplicate checking
+$(document).ready(function(){
+var arr = [ "l2_manager", "hr_manager", "sys_admin", "general_admin", "finance_manager" ];
+$('#l2_manager').change(function(){
+	$('#errors-l2_manager').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='l2_manager'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#l2_manager').val())
+			{
+				$('#errors-l2_manager').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+$('#hr_manager').change(function(){
+	$('#errors-hr_manager').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='hr_manager'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#hr_manager').val())
+			{
+				$('#errors-hr_manager').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+$('#sys_admin').change(function(){
+	$('#errors-sys_admin').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='sys_admin'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#sys_admin').val())
+			{
+				$('#errors-sys_admin').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+$('#general_admin').change(function(){
+	$('#errors-general_admin').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='general_admin'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#general_admin').val())
+			{
+				$('#errors-general_admin').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+$('#finance_manager').change(function(){
+	$('#errors-finance_manager').empty();
+	jQuery.each( arr, function( i, val ) {
+		if(val!='finance_manager'){
+			var value = $( "#" + val ).val();
+			if(value!='' && value==$('#finance_manager').val())
+			{
+				$('#errors-finance_manager').html('Employee has already been selected.');
+			}
+		}
+	});
+});
+});
+</script>

--- application/modules/exit/views/scripts/exitprocsettings/index.phtml ---
@@ -0,0 +1,64 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+ if (count($this->messages)) 
+ {
+ ?>
+	<div id="dispmsgepsettings" class="settingssuccess">
+ <?php 
+	foreach ($this->messages as $message)
+	{
+		if(!empty($message))
+		{
+			$flag = array_keys($message);
+			echo "<div id='messageData' class='ml-alert-1-$flag[0]'><div style='display:block;'><span class='style-1-icon $flag[0]'></span>";
+			echo $message[$flag[0]];
+			echo "</div></div>";
+		}
+	} 
+?>   
+	</div>	
+<?php 
+} 
+?>
+<span id="error_message"></span>
+
+<?php
+
+if($this->call == 'ajaxcall'){
+	$div = ''; $endDiv = ''; 
+} else { 
+	$div = '<div id="grid_'.$this->dataArray[0]['objectname'].'" class="all-grid-control">'; $endDiv = '</div>';
+}
+	echo $div.'<div id="msg" style="display:none;font-style: oblique; font-weight: bold; color: green;""></div>'.$this->gridep($this->dataArray[0]).$endDiv;
+?>
+<script type='text/javascript'>
+$(document).ready(function(){
+<?php if (count($this->messages)) {?>
+      setTimeout(function(){
+			$('#dispmsgepsettings').fadeOut('slow');
+		},3000);
+<?php } 
+?>
+});
+
+
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/exitprocsettings/view.phtml ---
@@ -0,0 +1,65 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+ ?>
+<?php 
+
+if($this->ermsg != '')
+{
+?>
+<div class="ml-alert-1-info m1-info-set-2">
+    <div class="style-1-icon info"></div>
+       No data found.
+</div>
+<?php 
+}
+else
+{
+?>
+		<?php
+		if($this->previ_data == 'Yes')
+		{
+		?>
+		<div class="new-form-ui-submit "  style="margin-top: 0px; float: right; width: auto; margin-left: 0px; ">
+		   
+				<?php             	
+					$msgtitle = $this->controllername.'_delete';
+					sapp_Helper::editdeleteForView(EXIT_PROC_SETTINGS,$this->controllername,$this->id,$msgtitle); 
+				 ?>		
+			
+		</div>
+		<?php 
+		}
+		?>
+
+<?php sapp_Helper::viewHeader();
+sapp_Helper::viewBody('alt','Business Unit',(!empty( $this->data['unitname']))?  $this->data['unitname']:"...",'Department',(!empty($this->data['deptname']))?$this->data['deptname']:"...");
+
+sapp_Helper::viewBody('nor','L2 Manager',(!empty($this->data['l2manager_userfullname']))? $this->data['l2manager_userfullname']:"...",'Hr Manager',(!empty($this->data['hrmanager_userfullname']))?$this->data['hrmanager_userfullname']:"...");
+
+sapp_Helper::viewBody('alt','System Admin',(!empty($this->data['sysadmin_userfullname']))? $this->data['sysadmin_userfullname']:"...",'General Admin',(!empty($this->data['generaladmin_userfullname']))?$this->data['generaladmin_userfullname']:"...");
+
+sapp_Helper::viewBody('nor','Finance Manager',(!empty($this->data['finacemanager_userfullname']))? $this->data['finacemanager_userfullname']:"...",'Notice Period',(!empty($this->data['notice_period']))?$this->data['notice_period']:"...");
+
+
+sapp_Helper::viewFooter();
+
+}//end of else
+?>

--- application/modules/exit/views/scripts/exittypes/add.phtml ---
@@ -0,0 +1,87 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+if($this->ermsg == 'noprivileges')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>You are not authorized to access this page</div>
+
+<?php
+}
+else
+{
+	if($this->popup == 'close') { ?> 	
+			<div class="ml-alert-1-success">
+			<div class="style-1-icon success"></div>
+			Exit Type <?php echo $this->eventact; ?> successfully.
+			</div>
+		
+		<?php 	 }else{
+	 
+
+sapp_Global::generateClientValidations($this->form);
+
+?>
+<form name="<?php echo $this->form->getName();?>" id="<?php echo $this->form->getId(); ?>" action="<?php echo $this->form->getAction();?>" method="<?php echo $this->form->getMethod();?>" >
+        <div class="total-form-controller">
+		<div class="new-form-ui clearb">
+			<label class="required">Exit Type</label>
+   			<span id="no-results"></span>
+			<div class="division"><?php echo $this->form->exit_type; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->exit_type->getId(); ?>">
+			<?php if(isset($this->msgarray['exit_type'])){?>
+			<?php echo $this->msgarray['exit_type'];?>
+			<?php }?>
+			</span>
+		</div>	
+		<div class="new-form-ui clearb">
+			<label>Description</label>
+   			<span id="no-results"></span>
+			<div class="division"><?php echo $this->form->description; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->description->getId(); ?>">
+			<?php if(isset($this->msgarray['description'])){?>
+			<?php echo $this->msgarray['description'];?>
+			<?php }?>
+			</span>
+		</div>		
+			
+	</div>
+	 
+
+	<div class="new-form-ui-submit">
+		<?php echo $this->form->submit; ?>
+		<?php if($this->popuppage != 'yes'){ ?>
+		<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/exittypes';"  type="button" >Cancel</button>
+		<?php } else { ?>
+		 <button onclick="closeiframepopup('exittypes','cancel');"  type="button" >Cancel</button>
+		<?php } ?>
+	</div>
+</form>
+
+<?php 
+}
+}//end of else
+?>
+<script type="text/javascript">
+<?php if($this->popup != '') { ?>
+  closeiframeAddPopup("<?php echo $this->exittypeData ;?>",'<?php echo $this->controllername; ?>','exit_type_id','Exit Type'); 					
+<?php } ?>
+</script>

--- application/modules/exit/views/scripts/exittypes/edit.phtml ---
@@ -0,0 +1,84 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+if($this->ermsg == 'invalidUrl')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>	Invalid URL</div>
+
+<?php
+}
+else if($this->ermsg == 'nodata')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>	No data found</div>
+
+<?php
+}
+else if($this->ermsg == 'noprivileges')
+{
+?>
+     <div class="ml-alert-1-info"><div class="style-1-icon info"></div>You are not authorized to access this page</div>
+
+<?php
+}
+if($this->ermsg !='')
+		{
+?>
+     <div class="ml-alert-1-info m1-info-set"><div class="style-1-icon info"></div>No data found.</div>
+<?php }
+else
+{
+	sapp_Global::generateClientValidations($this->form);
+
+?>
+
+<form name="<?php echo $this->form->getName();?>" id="<?php echo $this->form->getId(); ?>" action="<?php echo $this->form->getAction();?>" method="<?php echo $this->form->getMethod();?>" onsubmit="return validateForm();">
+        <div class="total-form-controller">
+		<div class="new-form-ui clearb">
+			<label class="required">Exit Type</label>
+			<span id="no-results"></span>
+			<div class="division"><?php echo $this->form->exit_type; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->exit_type->getId(); ?>">
+			<?php if(isset($this->msgarray['exit_type'])){?>
+			<?php echo $this->msgarray['exit_type'];?>
+			<?php }?></span>
+			
+		</div>
+		<div class="new-form-ui clearb">
+			<label>Description</label>
+   			<span id="no-results"></span>
+			<div class="division"><?php echo $this->form->description; ?></div>
+			<span class="errors" id="errors-<?php echo $this->form->description->getId(); ?>">
+			<?php if(isset($this->msgarray['description'])){?>
+			<?php echo $this->msgarray['description'];?>
+			<?php }?>
+			</span>
+		</div>		
+	</div>
+	<div class="new-form-ui-submit">
+		<?php echo $this->form->submit; ?>
+		<button onclick="window.location.href='<?php echo BASE_URL; ?>exit/exittypes';" id="Cancel" name="Cancel" type="button" >Cancel</button>
+	</div>
+
+</form>
+
+<?php } ?>
\ No newline at end of file

--- application/modules/exit/views/scripts/exittypes/index.phtml ---
@@ -0,0 +1,63 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+
+ if (count($this->messages)) 
+ {
+ ?>
+	<div id="dispmsgexittypes" class="settingssuccess">
+ <?php 
+	foreach ($this->messages as $message)
+	{
+		if(!empty($message))
+		{
+			$flag = array_keys($message);
+			echo "<div id='messageData' class='ml-alert-1-$flag[0]'><div style='display:block;'><span class='style-1-icon $flag[0]'></span>";
+			echo $message[$flag[0]];
+			echo "</div></div>";
+		}
+	} 
+?>   
+	</div>	
+<?php 
+} 
+?>
+<span id="error_message"></span>
+
+
+<?php
+
+if($this->call == 'ajaxcall'){
+	$div = ''; $endDiv = ''; 
+} else { 
+	$div = '<div id="grid_'.$this->dataArray[0]['objectname'].'" class="all-grid-control">'; $endDiv = '</div>';
+}
+	echo $div.'<div id="msg" style="display:none;font-style: oblique; font-weight: bold; color: green;""></div>'.$this->grid($this->dataArray[0]).$endDiv;
+?>
+<script type='text/javascript'>
+$(document).ready(function(){
+<?php if (count($this->messages)) {?>
+      setTimeout(function(){
+			$('#dispmsgexittypes').fadeOut('slow');
+		},3000);
+<?php } 
+?>
+});
+</script>
\ No newline at end of file

--- application/modules/exit/views/scripts/exittypes/view.phtml ---
@@ -0,0 +1,68 @@
+<?php
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+?>
+<?php 
+
+if($this->nodata != '')
+{
+?>
+<div class="ml-alert-1-info m1-info-set-2">
+    <div class="style-1-icon info"></div>
+       No data found.
+</div>
+<?php 
+}
+else 
+{
+$data = $this->data;
+$id = $this->id;
+$previ_data = $this->previ_data;
+
+?>
+<?php 
+if($this->ermsg == '')  { ?>
+
+   <?php
+    if($previ_data == 'Yes')
+    {
+    ?>
+	<div class="new-form-ui-submit "  style="margin-top: 0px; float: right; width: auto; margin-left: 0px; ">
+
+		<?php if($data['isused'] == 0) {
+			
+		$msgtitle = $this->controllername.'_delete';
+		sapp_Helper::editdeleteForView(EXIT_PROC_TYPES,$this->controllername,$this->id,$msgtitle); 
+		} ?>
+	</div>
+    <?php 
+    }
+    ?>
+
+   <?php 
+sapp_Helper::viewHeader();
+sapp_Helper::viewBody('alt','Exit Type ',(!empty($this->data['exit_type']))?$this->data['exit_type']:"...",'Description',(!empty($this->data['description']))?$this->data['description']:"...");
+sapp_Helper::viewFooter();
+?>
+   
+ 
+   </div>
+
+<?php } }?>
\ No newline at end of file

--- application/modules/exit/views/scripts/partials/pagination.phtml ---
@@ -0,0 +1,118 @@
+<?php 
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2014 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+?>
+
+<?php 
+if(isset($this->empscreen_lastpage) && !empty($this->empscreen_lastpage)){
+$this->last = $this->empscreen_lastpage;
+}
+?>
+<div class="table-btm">
+<?php 	$employeeTabs = array('employee','dependencydetails','creditcarddetails','visaandimmigrationdetails','workeligibilitydetails','disabilitydetails','empcommunicationdetails','empskills','empleaves','empholidays','medicalclaims','educationdetails','experiencedetails','trainingandcertificationdetails','emppersonaldetails','myemployees','empperformanceappraisal','emppayslips','empbenefits','emprenumerationdetails','emprequisitiondetails','empadditionaldetails','empsecuritycredentials');	
+
+
+if ($this->pageCount):	
+	$request = Zend_Controller_Front::getInstance();
+	$controllerName = $request->getRequest()->getControllerName();
+	$actionName = $request->getRequest()->getActionName();
+	$show = 'yes';
+	if($controllerName == 'employee' && $actionName == 'index')
+		$show = 'no';
+	if($controllerName == 'myemployees' && $actionName == 'index')
+		$show = 'no';
+?>
+		
+	<div class="table-buttons">
+		<input type='button' title="Refresh" onclick='refreshgrid("<?php echo $this->objname; ?>","<?php echo $this->dashboardcall; ?>","<?php echo $this->pd_category_id; ?>");' value='Refresh Grid' class="sprite refresh-grid" />
+		<?php if($show == 'yes'){?>
+        <input type='button' title="Search" onclick='opensearch("<?php echo $this->objname;?>");' value='Toggle Search' class="sprite togglesearch" />
+        <?php }?>
+		<input type='hidden' value="<?php echo $this->con;?>" id="formGridId" />
+		<input type='hidden' value="<?php echo $this->dashboardcall; ?>" id='dashboardcall' />
+		<input type='hidden' value="<?php echo $this->sortname; ?>" id='sortval_<?php echo $this->objname;?>' />
+		<input type='hidden' value="<?php echo $this->by; ?>" id='byval_<?php echo $this->objname;?>' />
+		<input type='hidden' value="<?php echo $this->pd_category_id; ?>" id='pd_category_id_<?php echo $this->objname;?>' />
+     </div>   
+     <div class="table-buttons table-buttons-duplicate">
+		<input type='button' title="Refresh" onclick='refreshgrid("<?php echo $this->objname; ?>","<?php echo $this->dashboardcall; ?>","<?php echo $this->pd_category_id; ?>");' value='Refresh Grid' class="sprite refresh-grid" />
+		<?php if($show == 'yes'){?>
+        <input type='button' title="Search" onclick='opensearch("<?php echo $this->objname;?>");' value='Toggle Search' class="sprite togglesearch" />
+        <?php }?>
+     </div>
+<div class="pagination_block">
+	<div class="records_block">
+		<div class="page_txt">
+        <span>Records per page</span>
+		<div class="records_number-drop-down">			
+			<select class="records_input_<?php echo $this->objname;?> table_inputs not_appli clearall fltleft" id="perpage_<?php echo $this->objname;?>" name="perpage_<?php echo $this->objname;?>" onchange="javascript:<?php echo $this->jsGridFnName;?>('<?php echo $this->objname;?>','<?php echo $this->dashboardcall; ?>')">
+				<option value="10" <?php echo ($this->perPage == 10)?"selected":"" ;?>>10</option>
+				<option value="20" <?php echo ($this->perPage == 20)?"selected":"" ;?>>20</option>
+				<option value="50" <?php echo ($this->perPage == 50)?"selected":"" ;?>>50</option>
+				<option value="100" <?php echo ($this->perPage == 100)?"selected":"" ;?>>100</option>
+				<option value="150" <?php echo ($this->perPage == 150)?"selected":"" ;?>>150</option>
+				<option value="200" <?php echo ($this->perPage == 200)?"selected":"" ;?>>200</option>
+			</select>
+		</div>
+			<input type="hidden" id="objname" value="<?php echo $this->objname; ?>" />			
+         </div>    
+			<div class="page_txt" style="display:none;">
+				<span>Page</span> 
+				<div class="records_number"><input type="text" class="gotopage_input_<?php echo $this->objname;?>" value="<?php echo $this->current; ?>" name="gotopage"></div>
+					<input type="button" value="&rsaquo;" class="sprite  records_go_btn" onclick="javascript:<?php echo $this->jsGridFnName;?>('<?php echo $this->objname;?>','<?php echo $this->dashboardcall; ?>')">			
+			</div>
+		
+	</div>
+	<?php if($this->last > 1) { ?>
+	<div class="pagination_view">
+		<div class="pagination" id="pagination_<?php echo $this->objname; ?>">
+			<a href="#" class="first" data-action="first"><span class="sprite first-1"></span></a>
+			<a href="#" class="previousNew" data-action="previous"><span class="sprite prev-1"></span></a>
+			<input type="text" readonly="readonly" id="pagenotext" data-max-page="40" />
+			<a href="#" class="nextNew" data-action="next"><span class="sprite next-1"></span></a>
+			<a href="#" class="last" data-action="last"><span class="sprite last-1"></span></a>
+        </div>
+	</div>
+	<?php } ?>
+</div>
+<?php elseif(!empty($this->searchArray)) : ?>
+	<div class="table-buttons">    	
+        <input type='button' onclick='refreshgrid("<?php echo $this->objname; ?>","<?php echo $this->dashboardcall; ?>","<?php echo $this->pd_category_id; ?>");' value='Refresh Grid' class="sprite refresh-grid" />		
+		<input type='hidden' value="<?php echo $this->con;?>" id="formGridId" />
+		<input type='hidden' value="<?php echo $this->dashboardcall; ?>" id='dashboardcall' />
+     </div>
+     <div class="table-buttons table-buttons-duplicate">    	
+        <input type='button' onclick='refreshgrid("<?php echo $this->objname; ?>","<?php echo $this->dashboardcall; ?>","<?php echo $this->pd_category_id; ?>");' value='Refresh Grid' class="sprite refresh-grid" />		
+     </div> 	 
+<?php  endif; ?>	 
+</div>
+<script type='text/javascript'>
+<?php if($this->last > 1) { ?>
+$('#pagination_<?php echo $this->objname; ?>').jqPagination({
+    link_string	: '/?page={page_number}',
+    current_page    : parseInt(<?php echo $this->current;?>),
+    max_page	: parseInt(<?php echo $this->last?>),
+    paged		: function(page) {          
+			$(".gotopage_input_"+"<?php echo $this->objname;?>").val(page);
+		   <?php echo $this->jsGridFnName;?>('<?php echo $this->objname;?>','<?php echo $this->dashboardcall; ?>')
+    }
+});
+<?php } ?>
+</script>
\ No newline at end of file

--- application/modules/timemanagement/controllers/NotificationsController.php ---
@@ -270,7 +270,15 @@ public function getnotificationsAction()
 		$employeeLeaves = $usersModel->getEmpLeaves($loginUserId,$employeeDOJ['date_of_joining'],$weekend_date);
 		$getWeekends = $usersModel->getWeekend($employeeDOJ['date_of_joining'],$weekend_date,$department_id);
 		$between_days=array();
-		$between_days = sapp_Global::createDateRangeArray($employeeDOJ['date_of_joining'],$weekend_date);
+		
+		$doj_date = strtotime($employeeDOJ['date_of_joining']);
+		$created_date = strtotime($employeeDOJ['createddate']);
+		if($created_date < $doj_date)		
+			$between_days = sapp_Global::createDateRangeArray($employeeDOJ['date_of_joining'],$weekend_date);
+		else
+			$between_days = sapp_Global::createDateRangeArray($employeeDOJ['createddate'],$weekend_date);
+
+		//$between_days = sapp_Global::createDateRangeArray($employeeDOJ['date_of_joining'],$weekend_date);
 		$holidayDatesArr =  array();
 		if( isset($loginUserId) && $loginUserId !=''){
 			$holidaydatesmodel = new Default_Model_Holidaydates();
@@ -441,7 +449,6 @@ public function getnotificationsAction()
 				$yet_to_submit_dates[$key] = $valu;
 			}
 		}
-
 		if($type == 'all')
 		{
 			$this->view->dataArray = $display_dates_array;

--- application/modules/timemanagement/controllers/ReportsController.php ---
@@ -50,6 +50,7 @@ public function preDispatch()
 		$ajaxContext->addActionContext('projectsreports', 'html')->initContext();
 		$ajaxContext->addActionContext('getempduration', 'html')->initContext();
 		$ajaxContext->addActionContext('getprojecttaskduration', 'html')->initContext();
+		$ajaxContext->addActionContext('getpdftime', 'html')->initContext();
 	}
 
 	public function init()
@@ -88,24 +89,17 @@ public function employeereportsAction(){
 
 		$reportsmodel = new Timemanagement_Model_Reports();
 		$projid = ($this->_request->getParam('projectId') != "undefined" && $this->_request->getParam('projectId') != "all")?$this->_request->getParam('projectId'):"";
-
 		$year_first_day = '01-01-'.date('Y');
 		$today = date('m-d-Y');
-
 		$start_date = ($this->_getParam('start_date')!='' && $this->_getParam('start_date')!='undefined')? $this->_getParam('start_date'):$year_first_day;
 		$end_date = ($this->_getParam('end_date')!='' && $this->_getParam('end_date')!='undefined')? $this->_getParam('end_date'):date('Y-m-d');
-		
 		$start_date = sapp_Global::change_date($start_date,'database');
 		$end_date = sapp_Global::change_date($end_date,'database');
-
 		$org_start_date = $start_date;
 		$org_end_date = $end_date;
-
-		// if($start_date != '')
-		// $start_date = $start_date;
-		// if($end_date != '')
-		// $end_date = $end_date;
-
+		//pdf and excel flags 
+		$is_pdf = ($this->_getParam('is_pdf')!='' && $this->_getParam('is_pdf')!='undefined')? $this->_getParam('is_pdf'):"";
+		$is_excel = ($this->_getParam('is_excel')!='' && $this->_getParam('is_excel')!='undefined')? $this->_getParam('is_excel'):"";
 		$call = $this->_getParam('call');
 
 		if($call == 'ajaxcall')
@@ -115,7 +109,6 @@ public function employeereportsAction(){
 		$objname = $this->_getParam('objname');
 		$refresh = $this->_getParam('refresh');
 		$dashboardcall = $this->_getParam('dashboardcall');
-
 		$data = array();
 		$searchQuery = '';
 		$searchArray = array();
@@ -127,12 +120,12 @@ public function employeereportsAction(){
 			$perPage = DASHBOARD_PERPAGE;
 			else
 			$perPage = PERPAGE;
-			$sort = 'DESC'; $by = 'et.modified'; $pageNo = 1; $searchData = ''; $searchQuery = '';$searchArray='';
+			$sort = 'DESC'; $by = 'e.userfullname'; $pageNo = 1; $searchData = ''; $searchQuery = '';$searchArray='';
 		}
 		else
 		{
 			$sort = ($this->_getParam('sort') !='')? $this->_getParam('sort'):'DESC';
-			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'et.modified';
+			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'e.userfullname';
 			if($dashboardcall == 'Yes')
 			$perPage = $this->_getParam('per_page',DASHBOARD_PERPAGE);
 			else
@@ -144,18 +137,74 @@ public function employeereportsAction(){
 			$searchData = rtrim($searchData,',');
 			/** search from grid - END **/
 		}
-		$param = $this->_getParam('selected_period_hidden');
-		$projectsdata = $reportsmodel->getEmployeeReportsbyProjectId($sort, $by, $perPage, $pageNo, $searchData,
-		$call, $dashboardcall, $start_date, $end_date, $projid,$org_start_date,$org_end_date,$param);
 
-		array_push($data,$projectsdata);
-		$this->view->dataArray = $data;
-		$this->view->call = $call ;
-		$this->view->start_date = ($this->_getParam('start_date')!='')? $this->_getParam('start_date'):$year_first_day;
-		$this->view->end_date = ($this->_getParam('end_date')!='')? $this->_getParam('end_date'):$today;
-		//$this->view->count=$paginator->getTotalItemCount();
-		$this->view->selcetedproj =$projid;
-		$this->view->selected_period_hidden = ($this->_getParam('selected_period_hidden')!='')? $this->_getParam('selected_period_hidden'):'';
+		$param = $this->_getParam('selected_period_hidden');
+		//if pdf or excel
+		if(!empty($is_pdf) || !empty($is_excel))
+		{
+			//sorting order, sorting column and pagination parameters
+			$sort = ($this->_getParam('sort_order') !='')? $this->_getParam('sort_order'):'DESC';
+			$by = ($this->_getParam('sort_by')!='')? $this->_getParam('sort_by'):'e.userfullname';
+			$perPage = $this->_getParam('per_page',PERPAGE);
+			$pageNo = $this->_getParam('page_no', 1);
+			$searchData = $this->_getParam('search_data_pdf');
+			$searchData = rtrim($searchData,',');
+			$searchQuery = '';
+			$searchArray = array();
+			//build search parameters
+			if($searchData != '' && $searchData!='undefined')
+			{
+				$searchValues = json_decode($searchData);
+				foreach($searchValues as $key => $val)
+				{
+					$searchQuery .= " ".$key." like '%".$val."%' AND ";
+					$searchArray[$key] = $val;
+				}
+				$searchQuery = rtrim($searchQuery," AND");
+			}
+			$this->_helper->layout->disableLayout();
+			//getting the employee reports data
+			$result = $reportsmodel->getEmployeeReportsData($sort, $by, $pageNo, $perPage, $searchQuery,$start_date, $end_date, $projid, $param,1);	
+			//for pdf
+			if(!empty($is_pdf))
+			{
+				$view = $this->getHelper('ViewRenderer')->view;
+	            $this->view->reportsdata = $result;
+	            $text = $view->render('reports/reportspdf.phtml');
+	            require_once 'application/modules/default/library/MPDF57/mpdf.php';
+	            $mpdf=new mPDF('', 'A4', 12, 'Arial', 10, 10, 12, 12, 6, 6);
+	            $mpdf->SetDisplayMode('fullpage');
+	            $mpdf->list_indent_first_level = 0;
+	            $mpdf->SetDisplayMode('fullpage');
+	            $mpdf->pagenumSuffix = '';
+	            $mpdf->nbpgPrefix = ' of ';
+	            $mpdf->nbpgSuffix = '';
+	            $mpdf->AddPage();
+	            $mpdf->WriteHTML($text);
+	            $mpdf->Output('timereport'.'.pdf','D');
+			}
+			//for excel
+			else if(!empty($is_excel))
+			{
+				$cols_param_arr = array('userfullname' => 'Employee','duration' => 'Hours');
+				sapp_Global::export_to_excel($result,$cols_param_arr,"EmployeesReport.xlsx");
+			}
+            exit;
+		}
+		else //for report grid
+		{
+			$projectsdata = $reportsmodel->getEmployeeReportsbyProjectId($sort, $by, $perPage, $pageNo, $searchData,
+			$call, $dashboardcall, $start_date, $end_date, $projid,$org_start_date,$org_end_date,$param);
+			array_push($data,$projectsdata);
+			$this->view->dataArray = $data;
+			$this->view->call = $call ;
+			$this->view->start_date = ($this->_getParam('start_date')!='')? $this->_getParam('start_date'):$year_first_day;
+			$this->view->end_date = ($this->_getParam('end_date')!='')? $this->_getParam('end_date'):$today;
+			$this->view->selcetedproj =$projid;
+			$this->view->sort =$sort;
+			$this->view->by =$by;
+			$this->view->selected_period_hidden = ($this->_getParam('selected_period_hidden')!='')? $this->_getParam('selected_period_hidden'):'';
+		}
 			
 	}
 
@@ -165,21 +214,15 @@ public function projectsreportsAction(){
 		$empid = ($this->_request->getParam('emp_id') != "undefined" && $this->_request->getParam('emp_id') != "all") ?$this->_request->getParam('emp_id'):"";
 		$year_first_day = '01-01-'.date('Y');
 		$today = date('m-d-Y');
-
 		$start_date = ($this->_getParam('start_date')!='' && $this->_getParam('start_date')!='undefined')? $this->_getParam('start_date'):$year_first_day;
 		$end_date = ($this->_getParam('end_date')!='' && $this->_getParam('end_date')!='undefined')? $this->_getParam('end_date'):date('Y-m-d');
-		
 		$start_date = sapp_Global::change_date($start_date,'database');
 		$end_date = sapp_Global::change_date($end_date,'database');
-		
 		$org_start_date = $start_date;
 		$org_end_date = $end_date;
-
-		// if($start_date != '')
-		// $start_date = $start_date.' 00:00:00';
-		// if($end_date != '')
-		// $end_date = $end_date.' 23:59:59';
-
+		//pdf and excel flags 
+		$is_pdf = ($this->_getParam('is_pdf')!='' && $this->_getParam('is_pdf')!='undefined')? $this->_getParam('is_pdf'):"";
+		$is_excel = ($this->_getParam('is_excel')!='' && $this->_getParam('is_excel')!='undefined')? $this->_getParam('is_excel'):"";
 		$call = $this->_getParam('call');
 
 		if($call == 'ajaxcall'){
@@ -190,7 +233,6 @@ public function projectsreportsAction(){
 		$objname = $this->_getParam('objname');
 		$refresh = $this->_getParam('refresh');
 		$dashboardcall = $this->_getParam('dashboardcall');
-
 		$data = array();
 		$searchQuery = '';
 		$searchArray = array();
@@ -202,12 +244,12 @@ public function projectsreportsAction(){
 			$perPage = DASHBOARD_PERPAGE;
 			else
 			$perPage = PERPAGE;
-			$sort = 'DESC'; $by = 'et.modified'; $pageNo = 1; $searchData = ''; $searchQuery = '';$searchArray='';
+			$sort = 'DESC'; $by = 'p.project_name'; $pageNo = 1; $searchData = ''; $searchQuery = '';$searchArray='';
 		}
 		else
 		{
 			$sort = ($this->_getParam('sort') !='')? $this->_getParam('sort'):'DESC';
-			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'et.modified';
+			$by = ($this->_getParam('by')!='')? $this->_getParam('by'):'p.project_name';
 			if($dashboardcall == 'Yes')
 			$perPage = $this->_getParam('per_page',DASHBOARD_PERPAGE);
 			else
@@ -220,19 +262,72 @@ public function projectsreportsAction(){
 			/** search from grid - END **/
 		}
 		$param = $this->_getParam('selected_period_hidden');
-		$employeedata = $reportsmodel->getProjectReportsbyEmployeeId($sort, $by, $perPage, $pageNo, $searchData,
-		$call, $dashboardcall, $start_date, $end_date, $empid,$org_start_date,$org_end_date,$param);
-
-		//print_r($employeedata);
-		//exit();
-		array_push($data,$employeedata);
-		$this->view->dataArray = $data;
-		$this->view->call = $call ;
-		$this->view->start_date = ($this->_getParam('start_date')!='')? $this->_getParam('start_date'):$year_first_day;
-		$this->view->end_date = ($this->_getParam('end_date')!='')? $this->_getParam('end_date'):$today;
-		//$this->view->count=$paginator->getTotalItemCount();
-		$this->view->selcetedemp =$empid;
-		$this->view->selected_period_hidden = ($this->_getParam('selected_period_hidden')!='')? $this->_getParam('selected_period_hidden'):'';
+		//if pdf or excel
+		if(!empty($is_pdf) || !empty($is_excel))
+		{
+			$this->_helper->layout->disableLayout();
+			//sorting order, sorting column and pagination parameters
+			$sort = ($this->_getParam('sort_order') !='')? $this->_getParam('sort_order'):'DESC';
+			$by = ($this->_getParam('sort_by')!='')? $this->_getParam('sort_by'):'p.project_name';
+			$perPage = $this->_getParam('per_page',PERPAGE);
+			$pageNo = $this->_getParam('page_no', 1);
+			$searchData = $this->_getParam('search_data_pdf');
+			$searchData = rtrim($searchData,',');
+			$searchQuery = '';
+			$searchArray = array();
+			//build search parameters
+			if($searchData != '' && $searchData!='undefined')
+			{
+				$searchValues = json_decode($searchData);
+				foreach($searchValues as $key => $val)
+				{
+					$searchQuery .= " ".$key." like '%".$val."%' AND ";
+					$searchArray[$key] = $val;
+				}
+				$searchQuery = rtrim($searchQuery," AND");
+			}
+			//getting the employee reports data
+			$result = $reportsmodel->getProjectReportsData($sort, $by, $pageNo, $perPage, $searchQuery, $start_date, $end_date, $empid, $param,1);
+			//for pdf
+			if(!empty($is_pdf))
+			{
+				$view = $this->getHelper('ViewRenderer')->view;
+	            $this->view->reportsdata = $result;
+	            $this->view->flag = 1;
+	            $text = $view->render('reports/reportspdf.phtml');
+	            require_once 'application/modules/default/library/MPDF57/mpdf.php';
+	            $mpdf=new mPDF('', 'A4', 14, '', 10, 10, 12, 12, 6, 6);
+	            $mpdf->SetDisplayMode('fullpage');
+	            $mpdf->list_indent_first_level = 0;
+	            $mpdf->SetDisplayMode('fullpage');
+	            $mpdf->pagenumSuffix = '';
+	            $mpdf->nbpgPrefix = ' of ';
+	            $mpdf->nbpgSuffix = '';
+	            $mpdf->AddPage();
+	            $mpdf->WriteHTML($text);
+	            $mpdf->Output('timereport'.'.pdf','D');
+	        }
+	        elseif (!empty($is_excel)) //for excel
+	        {
+				$cols_param_arr = array('project_name' => 'Project','project_type' => 'Project Type','duration'=>'Duration');
+				sapp_Global::export_to_excel($result,$cols_param_arr,"ProjectsReport.xlsx");	        	
+	        }
+            exit;
+		}
+		else //for reports grid
+		{		
+			$employeedata = $reportsmodel->getProjectReportsbyEmployeeId($sort, $by, $perPage, $pageNo, $searchData,
+			$call, $dashboardcall, $start_date, $end_date, $empid,$org_start_date,$org_end_date,$param);
+
+			array_push($data,$employeedata);
+			$this->view->dataArray = $data;
+			$this->view->call = $call ;
+			$this->view->start_date = ($this->_getParam('start_date')!='')? $this->_getParam('start_date'):$year_first_day;
+			$this->view->end_date = ($this->_getParam('end_date')!='')? $this->_getParam('end_date'):$today;
+			//$this->view->count=$paginator->getTotalItemCount();
+			$this->view->selcetedemp =$empid;
+			$this->view->selected_period_hidden = ($this->_getParam('selected_period_hidden')!='')? $this->_getParam('selected_period_hidden'):'';
+		}
 
 	}
 	public function getempdurationAction()

--- application/modules/timemanagement/models/Reports.php ---
@@ -138,7 +138,7 @@ public function getEmployeeReportsbyProjectId($sort, $by, $perPage, $pageNo, $se
 	 *
 	 * @return array $EmployeeReportsData
 	 */
-	public function getEmployeeReportsData($sort, $by, $pageNo, $perPage, $searchQuery,$start_date, $end_date, $projid, $param="")
+	public function getEmployeeReportsData($sort, $by, $pageNo, $perPage, $searchQuery,$start_date, $end_date, $projid, $param="",$flag="")
 	{
 		$andwhere = ' AND (1=1)';
 		if($start_date != "")
@@ -249,6 +249,10 @@ public function getEmployeeReportsData($sort, $by, $pageNo, $perPage, $searchQue
 					   ->group('et.emp_id')
 					   ->limitPage($pageNo, $perPage);
 					   //echo $select;
+		if(!empty($flag))
+		{
+			return $this->fetchAll($select)->toArray(); 
+		}
 		return $select;
 	}
 	
@@ -306,7 +310,7 @@ function getProjectReportsbyEmployeeId($sort, $by, $perPage, $pageNo, $searchDat
 		
 	}
 	
-	function getProjectReportsData($sort, $by, $pageNo, $perPage, $searchQuery, $start_date, $end_date, $empid, $param=""){
+	function getProjectReportsData($sort, $by, $pageNo, $perPage, $searchQuery, $start_date, $end_date, $empid, $param="",$flag=""){
 		
 		$andwhere = " AND (1=1)";
 		if($start_date != "")
@@ -415,7 +419,10 @@ function getProjectReportsData($sort, $by, $pageNo, $perPage, $searchQuery, $sta
 		->order("$by $sort")
 		->group('p.id')
 		->limitPage($pageNo, $perPage);
-
+		if(!empty($flag))
+		{
+			return $this->fetchAll($select)->toArray(); 
+		}
 		//echo $select;//exit;
 		return $select;
 	}

--- application/modules/timemanagement/views/scripts/reports/reportspdf.phtml ---
@@ -0,0 +1,59 @@
+<!DOCTYPE html>
+<html lang="en">
+
+<head>
+    <meta charset="UTF-8">
+    <title>TIME PDF</title>
+</head>
+
+<body>
+<table  cellspacing="0" cellpadding="0" style="width: 100%; font-family: Arial">
+	<tr>
+		<td style="width: 50%; font-size: 22px;"><?php echo (!empty($this->flag) && $this->flag == 1)?'Project Reports':'Employee Reports'; ?></td>
+		<td style="width: 50%; font-size: 14px; text-align: right;;"><?php echo date('F jS, Y')?></td>
+	</tr>
+</table>
+<table cellspacing="0" cellpadding="12" border="0" style="margin-top: 16px; border: 1px solid #cfcfcf; font-family: Arial; font-size: 12px; border-collapse: collapse;">
+<?php
+	if(!empty($this->reportsdata))
+	{
+		if(!empty($this->flag) && $this->flag == 1)
+		{
+		?>
+			<tr style="font-weight: bold;">
+				<th style="border-right: 1px solid #cfcfcf; text-align: left;padding-top: 6px; padding-bottom: 6px; letter-spacing: .5px;">PROJECT</th>
+				<th style="border-right: 1px solid #cfcfcf; text-align: left;padding-top: 6px; padding-bottom: 6px; letter-spacing: .5px;">PROJECTTYPE</th>
+				<th>HOURS</th>
+			</tr>
+			<?php $i = 1; foreach($this->reportsdata as $data) { ?>
+			    <tr <?php echo ($i%2 != 0)?'style="background: #f8f8f8;"':'';?> >
+			        <td style="border-right: 1px solid #cfcfcf; border-top: 1px solid #cfcfcf;padding-top: 6px; padding-bottom: 6px;"><?php echo !empty($data['project_name'])?$data['project_name']:'';?></td>
+			        <td style="border-right: 1px solid #cfcfcf; border-top: 1px solid #cfcfcf;padding-top: 6px; padding-bottom: 6px;"><?php echo !empty($data['project_type'])?$data['project_type']:'';?></td>
+			        <td style="border-top: 1px solid #cfcfcf;padding-top: 6px; padding-bottom: 6px;"><?php echo !empty($data['duration'])?$data['duration']:'';?></td>
+			    </tr>
+			<?php $i++; } 
+		}
+		else
+		{
+		?>
+			<tr style="font-weight: bold;">
+				<th style="border-right: 1px solid #cfcfcf; text-align: left;padding-top: 6px; padding-bottom: 6px;letter-spacing: .5px;">EMPLOYEE</th>
+				<th style="text-align: left;padding-top: 6px;  padding-bottom: 6px;letter-spacing: .5px;">HOURS</th>
+			</tr>
+			<?php $i = 1; foreach($this->reportsdata as $data) { ?>
+			    <tr <?php echo ($i%2 != 0)?'style="background: #f8f8f8;"':'';?> >
+			        <td style="border-right: 1px solid #cfcfcf; border-top: 1px solid #cfcfcf;padding-top: 6px; padding-bottom: 6px;"><?php echo !empty($data['userfullname'])?$data['userfullname']:'';?></td>
+			        <td style="border-top: 1px solid #cfcfcf;padding-top: 6px; padding-bottom: 6px;"><?php echo !empty($data['duration'])?$data['duration']:'';?></td>
+			    </tr>
+			<?php  $i++; } ?>			
+	<?php
+		}
+	}
+	else
+	{
+
+	}
+?>
+</table>
+</body>
+</html>
\ No newline at end of file

--- application/modules/timemanagement/views/scripts/reports/tmreport.phtml ---
@@ -20,6 +20,7 @@
  ********************************************************************************/
 ?>
 <style>
+.export_links{display: none;}
 </style>
 <script type="text/javascript">
 $(document).ready(function(){
@@ -75,30 +76,76 @@ function getProjectReports(){
 	var end_date = $('#end_date').val();
 	var emp_id = $('#idselemp').val();
 	var selected_period_hidden = $("#selected_period_hidden").attr('value');
-	$.ajax({
-    	url: base_url+"/timemanagement/reports/projectsreports/format/html",   
-        type : 'POST',	
-        dataType:'html',
-        data :'emp_id='+emp_id+'&start_date='+start_date+'&end_date='+end_date+'&selected_period_hidden='+selected_period_hidden,
-        success : function(response){
-        	$("#idacc_content").html(response);  
-        }
-    });
+	var is_pdf = $('#is_pdf').val();
+	var is_excel = $('#is_excel').val();
+	if(is_pdf == 1 || is_excel == 1)
+	{
+		var sort_order = $('#sort_order').val(); 
+		var sort_by = $('#sort_by').val(); 
+		var page_no = $('#page_no').val(); 
+		var per_page = $('#per_page').val();	
+		var search_data_pdf = $('#search_data_pdf').val();	
+		$('#is_pdf').val('0');
+		$('#is_excel').val('0');
+		$('#sort_order').val('');
+		$('#sort_by').val('');
+		$('#page_no').val('');
+		$('#per_page').val('');		
+		$('#search_data_pdf').val('');		
+		window.location.href = base_url+"/timemanagement/reports/projectsreports/"+'emp_id/'+emp_id+'/start_date/'+start_date+'/end_date/'+end_date+'/selected_period_hidden/'+selected_period_hidden+'/is_pdf/'+is_pdf+'/is_excel/'+is_excel+'/sort_order/'+sort_order+'/sort_by/'+sort_by+'/page_no/'+page_no+'/search_data_pdf/'+search_data_pdf;
+	}
+	else
+	{
+		$.ajax({
+	    	url: base_url+"/timemanagement/reports/projectsreports/format/html",   
+	        type : 'POST',	
+	        dataType:'html',
+	        data :'emp_id='+emp_id+'&start_date='+start_date+'&end_date='+end_date+'&selected_period_hidden='+selected_period_hidden,
+	        success : function(response){
+	        	$("#idacc_content").html(response);  
+	        	$(".export_links").show(); 
+	        }
+	    });
+	}
 }
+
 function getEmployeeReports(){
 	var projid = $('#idselproj').val();
 	var start_date = $('#start_date').val();
 	var end_date = $('#end_date').val();
 	var selected_period_hidden = $("#selected_period_hidden").attr('value');
-	$.ajax({
-    	url: base_url+"/timemanagement/reports/employeereports/format/html",   
-        type : 'POST',	
-        dataType:'html',
-        data :'projectId='+projid+'&start_date='+start_date+'&end_date='+end_date+'&selected_period_hidden='+selected_period_hidden,
-        success : function(response){
-        	$("#idacc_content").html(response);  
-        }
-    });
+	var is_pdf = $('#is_pdf').val();
+	var is_excel = $('#is_excel').val();
+
+	if(is_pdf == 1 || is_excel == 1)
+	{
+		var sort_order = $('#sort_order').val(); 
+		var sort_by = $('#sort_by').val(); 
+		var page_no = $('#page_no').val(); 
+		var per_page = $('#per_page').val();
+		var search_data_pdf = $('#search_data_pdf').val();	
+		$('#is_pdf').val('0');
+		$('#is_excel').val('0');
+		$('#sort_order').val('');
+		$('#sort_by').val('');
+		$('#page_no').val('');
+		$('#per_page').val('');
+		window.location.href = base_url+"/timemanagement/reports/employeereports/"+'projectId/'+projid+'/start_date/'+start_date+'/end_date/'+end_date+'/selected_period_hidden/'+selected_period_hidden+'/is_pdf/'+is_pdf+'/is_excel/'+is_excel+'/sort_order/'+sort_order+'/sort_by/'+sort_by+'/page_no/'+page_no+'/per_page/'+per_page+'/search_data_pdf/'+search_data_pdf;
+	}
+	else
+	{
+		$.ajax({
+	    	url: base_url+"/timemanagement/reports/employeereports/format/html",   
+	        type : 'POST',	
+	        dataType:'html',
+	        data :'projectId='+projid+'&start_date='+start_date+'&end_date='+end_date+'&selected_period_hidden='+selected_period_hidden+'&is_pdf='+is_pdf,
+	        success : function(response){
+	        	$("#idacc_content").html(response);
+	        	$(".export_links").show(); 
+	        }
+	    });		
+	}
+	
 }
 
 getEmployeeReports();
@@ -122,15 +169,44 @@ function getOnchangeDates()
 	var start_date = $('#start_date').val();
 	var end_date = $('#end_date').val();
 	var selected_period_hidden = $("#selected_period_hidden").attr('value');
-	$.ajax({
-    	url: urladd,   
-        type : 'POST',	
-        dataType:'html',
-        data :data+'&start_date='+start_date+'&end_date='+end_date+'&selected_period_hidden='+selected_period_hidden,
-        success : function(response){
-        	$("#idacc_content").html(response);  
-        }
-    });
+	var is_pdf = $('#is_pdf').val();
+	var is_excel = $('#is_excel').val();
+	if(is_pdf == 1 || is_excel == 1)
+	{	
+		$('#is_pdf').val('0');
+		$('#is_excel').val('0');
+		var sort_order = $('#sort_order').val(); 
+		var sort_by = $('#sort_by').val(); 
+		var page_no = $('#page_no').val(); 
+		var per_page = $('#per_page').val();
+		$('#sort_order').val('');
+		$('#sort_by').val('');
+		$('#page_no').val('');
+		$('#per_page').val('');		
+		$('#search_data_pdf').val('');			
+		var search_data_pdf = $('#search_data_pdf').val();			
+		if(reportsView == "employee")
+		{
+			window.location.href = base_url+"/timemanagement/reports/employeereports/"+'projectId/'+projid+'/start_date/'+start_date+'/end_date/'+end_date+'/selected_period_hidden/'+selected_period_hidden+'/is_pdf/'+is_pdf+'/is_excel/'+is_excel+'/sort_order/'+sort_order+'/sort_by/'+sort_by+'/page_no/'+page_no+'/per_page/'+per_page+'/search_data_pdf/'+search_data_pdf;
+		}
+		else
+		{
+			window.location.href = base_url+"/timemanagement/reports/projectsreports/"+'emp_id/'+emp_id+'/start_date/'+start_date+'/end_date/'+end_date+'/selected_period_hidden/'+selected_period_hidden+'/is_pdf/'+is_pdf+'/is_excel/'+is_excel+'/sort_order/'+sort_order+'/sort_by/'+sort_by+'/page_no/'+page_no+'/per_page/'+per_page+'/search_data_pdf/'+search_data_pdf;
+		}
+	}
+	else
+	{	
+		$.ajax({
+	    	url: urladd,   
+	        type : 'POST',	
+	        dataType:'html',
+	        data :data+'&start_date='+start_date+'&end_date='+end_date+'&selected_period_hidden='+selected_period_hidden,
+	        success : function(response){
+	        	$("#idacc_content").html(response); 
+	        	$(".export_links").show(); 
+	        }
+	    });
+	}
 }
 
 function tm_from_to_date_validation(from_date_id,to_date_id,obj,message)
@@ -164,12 +240,28 @@ function tm_from_to_date_validation(from_date_id,to_date_id,obj,message)
 <input type="hidden" id="start_hidden" name="start_hidden"  maxlength="30" size="20" value="<?php echo $this->start_date;?>">  
 <input type="hidden" id="end_hidden" name="end_hidden"  maxlength="30" size="20" value="<?php echo $this->end_date;?>"> 
 <input type="hidden" id="period_flag" name="period_flag" value="projreports"/>
+<input type="hidden" id="is_pdf" name="is_pdf" value="0"/>
+<input type="hidden" id="is_excel" name="is_excel" value="0"/>
+<input type="hidden" id="sort_order" name="sort_order" value="" />
+<input type="hidden" id="sort_by" name="sort_by" value="" />
+<input type="hidden" id="page_no" name="page_no" value="" />
+<input type="hidden" id="per_page" name="per_page" value="" />
+<input type="hidden" id="search_data_pdf" name="search_data_pdf" value="" />
+
 
 	<?php //echo Zend_Registry::get('tm_role');
 //echo DATEFORMAT_JS;
  echo $this->reportsheader('timemanagementreport');
 	?>
-<div class="left-config-ctrl">
+<div class="export-links">
+       
+    <div class="fltright export_links">
+		<div class="sprite export-xls" name="excel" id="excel">Export to Excel</div>
+		<div class="sprite export-pdf" name="pdf" id="pdf">Export to PDF</div>
+	</div>
+	<?php //}?>
+</div>	
+<div class="left-config-ctrl" id="filters_div">
     <div class="heading-name-1">Generate Custom Report</div>
 	<div class="control_option">
 		<ul id="empproject" class="toggle_btn mont_week">
@@ -227,7 +319,7 @@ function tm_from_to_date_validation(from_date_id,to_date_id,obj,message)
 		    </div>
 	    </div>
 	</div>
-	</div>
+</div>
 	
 
 <div class="right-config-ctrl">
@@ -318,5 +410,41 @@ $(document).ready(function(){
 	    if (!selData.id) return selData.text; 
 	    return  "<span>" + selData.text + "</span><div class='seldivimg'></div>";
 	}
+
+	$("#pdf").click(function(){
+		var report = $("#reportsView").val();
+		$("#is_pdf").val('1');		
+		var period = $("#selected_period_hidden").val();
+		if(period.trim().length > 0 && (report == 'employee' || report == 'projects'))
+		{
+			getOnchangeDates();
+		}
+		else if(report == 'employee')
+		{
+			getEmployeeReports();
+		}
+		else
+		{
+			getProjectReports();
+		}
+	});
+
+	$("#excel").click(function(){
+		var report = $("#reportsView").val();
+		$("#is_excel").val('1');		
+		var period = $("#selected_period_hidden").val();
+		if(period.trim().length > 0 && (report == 'employee' || report == 'projects'))
+		{
+			getOnchangeDates();
+		}
+		else if(report == 'employee')
+		{
+			getEmployeeReports();
+		}
+		else
+		{
+			getProjectReports();
+		}
+	});
 });
 </script>
\ No newline at end of file

--- application/views/scripts/index/index.phtml ---
@@ -0,0 +1,43 @@
+<style>
+    a:link,
+    a:visited
+    {
+        color: #0398CA;
+    }
+
+    span#zf-name
+    {
+        color: #91BE3F;
+    }
+
+    div#welcome
+    {
+        color: #FFFFFF;
+        background-image: url(http://framework.zend.com/images/bkg_header.jpg);
+        width:  600px;
+        height: 400px;
+        border: 2px solid #444444;
+        overflow: hidden;
+        text-align: center;
+    }
+
+    div#more-information
+    {
+        background-image: url(http://framework.zend.com/images/bkg_body-bottom.gif);
+        height: 100%;
+    }
+</style>
+<div id="welcome">
+    <h1>Welcome to the <span id="zf-name">Zend Framework!</span></h1>
+
+    <h3>This is your project's main page</h3>
+
+    <div id="more-information">
+        <p><img src="http://framework.zend.com/images/PoweredBy_ZF_4LightBG.png" /></p>
+        <p>
+            Helpful Links: <br />
+            <a href="http://framework.zend.com/">Zend Framework Website</a> |
+            <a href="http://framework.zend.com/manual/en/">Zend Framework Manual</a>
+        </p>
+    </div>
+</div>
\ No newline at end of file

--- index.php ---
@@ -18,7 +18,7 @@
  *
  *  Sentirfugo Support <support@sentrifugo.com>
  ********************************************************************************/
-defined('CODEVERSION')|| define('CODEVERSION', '3.1.1');
+defined('CODEVERSION')|| define('CODEVERSION', '3.2');
 $filepath = 'install/index.php';
 if(file_exists($filepath))
 {

--- public/constants.php ---
@@ -23,6 +23,7 @@
 ini_set('display_startup_errors', 1);
 ini_set('display_errors', 1);
 
+
 $os_string = php_uname('s');
 
 if (strpos(strtoupper($os_string), 'WIN')!==false)
@@ -223,12 +224,18 @@
 defined('MY_INCIDENT')|| define('MY_INCIDENT', 204);
 defined('TEAM_INCIDENT')|| define('TEAM_INCIDENT', 205);
 defined('CLIENTS')|| define('CLIENTS', 208);
+defined('EXIT_QUESTIONS')|| define('EXIT_QUESTIONS', 210);
 // Controllers which are not there in main_menu
 defined('VIEWSETTINGS')|| define('VIEWSETTINGS', 'VIEWSETTINGS');
 defined('DASHBOARD')|| define('DASHBOARD', 'DASHBOARD');
 defined('LOGMANAGER')|| define('LOGMANAGER', 'LOGMANAGER');
 defined('USERLOGINLOG')|| define('USERLOGINLOG', 'USERLOGINLOG');
 
+/*Exit procedure menus*/
+defined('EXITINITIALSTATUS')|| define('EXITINITIALSTATUS', 180);
+defined('EXITPROCEDURE')|| define('EXITPROCEDURE', 177);
+
+
 //Manage Moduels Array
 defined('MANAGE_MODULE_ARRAY')|| define('MANAGE_MODULE_ARRAY', serialize (array(TIMEMANAGEMENT,RESOURCEREQUISITION,BGCHECKS,REPORTS,SERVICEDESK,PERFORMANCEAPPRAISAL)));
 // Employee documents 
@@ -362,6 +369,7 @@
 defined('VISAANDIMMIGRATIONDETAILS_DELETE')|| define('VISAANDIMMIGRATIONDETAILS_DELETE','visa and immigration details');
 
 defined('EXITTYPES_DELETE')|| define('EXITTYPES_DELETE','exit type');
+defined('CONFIGUREEXITQS_DELETE')|| define('CONFIGUREEXITQS_DELETE','exit type questions');
 defined('EXITPROCSETTINGS_DELETE')|| define('EXITPROCSETTINGS_DELETE','exit procedure setting');
 defined('ALLEXITPROC_DELETE')|| define('ALLEXITPROC_DELETE','exit procedure');
 
@@ -373,7 +381,8 @@
 defined('DISCIPLINARYINCIDENT_DELETE')|| define('DISCIPLINARYINCIDENT_DELETE','disciplinary incident');
 defined('DISCIPLINARYVIOLATION_DELETE')|| define('DISCIPLINARYVIOLATION_DELETE','Violation Type');
 defined('DISCIPLINARYALLINCIDENTS_DELETE')|| define('DISCIPLINARYALLINCIDENTS_DELETE','Violation Type');
-
+defined('EXITTYPES_DELETE')|| define('EXITTYPES_DELETE','exittypes');
+defined('EXITPROC_DELETE')|| define('EXITPROC_DELETE','exitproc');
 
 defined('ASSETS_DELETE')|| define('ASSETS_DELETE','asset');
 defined('ASSETCATEGORIES_DELETE')|| define('ASSETCATEGORIES_DELETE','asset category');
@@ -581,7 +590,7 @@
 defined('PROJECTRESOURCES_DELETE')|| define('PROJECTRESOURCES_DELETE','project resource'); 
 defined('EMPLOYEEPROJECTS_DELETE')|| define('EMPLOYEEPROJECTS_DELETE','employee projects delete'); 
 defined('LEADPROJECTS_DELETE')|| define('LEADPROJECTS_DELETE','lead projects delete'); 
-
+defined('EXIT_MEDIA_PATH') || define('EXIT_MEDIA_PATH', $domainurl.'/public/media/exit/');
 //==========================END FOR TIME MANAGEMENT CONSTANTS=============================
 /**
  * EXPENSES CONSTANTS GOES FROM HERE 

--- public/media/css/screen.css ---
@@ -9,7 +9,7 @@
 }
 
 
-/* Columns */
+/*  Columns */
 
 .col-main {
     width: 65%;

--- public/media/css/style.css ---
@@ -2144,6 +2144,8 @@ padding: 3px 8px; resize:none; line-height: 20px; outline:none; overflow-y: auto
 -moz-border-radius:5px;
 -webkit-border-radius:5px;
 border-radius:5px;*/ }
+.table-textarea textarea{  font-family: 'Roboto Regular',sans-serif; font-size: 13px;border:1px solid #c6c6c6;padding:4px;color: #333 !important;}
+.table-textarea textarea:hover{border:1px solid #c6c6c6;}
 .requisition-table .new-form-ui textarea, .requisition-table .appri_textarea, .requisition-table .textarea_two_appri { width:85%;}
 
 .employee_appraisal-table textarea.appri_textarea, .employee_appraisal-table textarea.appri_textarea_new{ background:#fff; cursor:auto;   width: 87%;}

--- public/media/css/tablecss.css ---
@@ -147,6 +147,7 @@ background-color: #208bbd; border:1px solid #006391;  -webkit-border-radius: 4px
 .view { background-position: 0 -152px; float:left; width:19px; margin-right: 7px; height: 16px; cursor: pointer;}
 .delete { background-position: 0 -54px; float:left; width:14px; margin-right: 7px; height: 16px; cursor: pointer;}
 .add_candidate{ background-position: 0 -1428px; float:left; width:16px; margin-right: 7px; height: 16px; cursor: pointer;}
+.assign_view_questions{ background-position: -3px -1503px; float:left; width:16px; margin-right: 7px; height: 16px; cursor: pointer;}
 .schedule_interview{ background-position: 0 -1450px; float:left; width:20px; margin-right: 7px; height: 16px; cursor: pointer;}
 .add_candidate_as_an_employee{background-position: 0 -1474px; float:left; width:20px; margin-right: 7px; height: 16px; cursor: pointer;}
 

--- public/media/exit/js/exit.js ---
@@ -0,0 +1,690 @@
+/********************************************************************************* 
+ *  This file is part of Sentrifugo.
+ *  Copyright (C) 2015 Sapplica
+ *   
+ *  Sentrifugo is free software: you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation, either version 3 of the License, or
+ *  (at your option) any later version.
+ *
+ *  Sentrifugo is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with Sentrifugo.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ *  Sentrifugo Support <support@sentrifugo.com>
+ ********************************************************************************/
+function redirecttocontroller(controllername)
+{
+	$.blockUI({ width:'50px',message: $("#spinner").html() });
+	window.location.href = base_url+'/exit/'+controllername;	
+}
+function getAjaxgridData(objname,dashboardcall)
+{		
+ 		var perpage = $("#perpage_"+objname).val();
+ 		var page = $(".gotopage_input_"+objname).val(); 
+		var sort = $("#sortval_"+objname).val();
+		var by = $("#byval_"+objname).val();
+		var searchData = $("#"+objname+"_searchdata").val();
+		searchData = decodeURIComponent(searchData);
+		var formGridId = $("#formGridId").val(); 
+		var unitId = '';mname='';mnuid='';
+		if(formGridId == '' || formGridId == 'undefined' || typeof(formGridId) === 'undefined')
+		formGridId = ''; 
+		else
+		{
+			unitId = formGridId.split("/"); 
+			mname = unitId[0]; mnuid = unitId[1];
+			
+		}
+		if(page == '' || page == 'undefined' || typeof(page) === 'undefined')
+		page = $(".currentpage").val();
+		
+		var dataparam = 'per_page='+ perpage+'&page='+page+'&call=ajaxcall&objname='+objname+'&'+mname+'='+mnuid+'&dashboardcall='+dashboardcall+'&sort='+sort+'&by='+by;
+		if(searchData!='' && searchData!='undefined')
+			dataparam = dataparam+'&searchData='+searchData;
+               
+		$('#'+objname+'_searchdata').remove();	
+		$('#footer').append("<input type='hidden' value='"+searchData+"' id='"+objname+"_searchdata' />");
+		$('#footer').append('<input type="hidden" value="'+objname+'" id="objectName" />');	
+		var url ='';
+
+		url = base_url+"/exit/"+objname+"/index/format/html" ;
+
+		$.ajax({
+			url: url,   
+			type : 'POST',
+			data : dataparam,
+			success : function(response){
+				$('#grid_'+objname).html(response);
+			}
+		});
+
+}
+ function successmessage_changestatus(message,flag,controllername)
+	{	
+		var eleId = 'error_message_'+controllername;
+		$("#error_message").css('display','block');
+		if($("#"+eleId).length == 0) 
+		{
+			$("#error_message").attr("id","error_message_"+controllername);
+			$("#error_message_"+controllername).css('display','block');
+		}
+		else
+		{
+			$("#error_message_"+controllername).css('display','block');
+		}
+		$("#error_message_"+controllername).html('<div id="messageData" class="ml-alert-1-'+flag+'"><div style="display:block;"><span class="style-1-icon '+flag+'"></span>'+message+'</div></div>'); 
+       	setTimeout(function(){
+			$('#error_message_'+controllername).fadeOut('slow');
+		},3000);
+	}
+
+
+function changestatus(controllername,objid,flag)
+{
+	
+	var deleteflag = $("#viewval").val();
+	var flagAr = flag.split("@#$"); 
+	var i;
+	var msgdta = ' ';
+	for(i=0;i<flagAr.length;i++)
+	{
+		msgdta += flagAr[i]+' ';
+	}	
+	
+	mdgdta = $.trim(msgdta);
+	var messageAlert = 'Are you sure you want to delete the selected '+mdgdta+'? ';
+	
+	 jConfirm(messageAlert, "Delete "+msgdta, function(r) {
+
+        if(r==true)
+        {               
+			if(controllername == 'exittypes' || controllername == 'configureexitqs' || controllername == 'exitprocsettings')
+			{
+                $.ajax({
+                    url: base_url+"/exit/"+controllername+"/delete",   
+                    type : 'POST',
+                    data: 'objid='+objid+'&deleteflag='+deleteflag,
+                    beforeSend: function () {
+                        $.blockUI({ width:'50px',message: $("#spinner").html() });
+                    },
+                    dataType: 'json',
+                    success : function(response)
+                    {	
+                        successmessage_changestatus(response['message'],response['msgtype'],controllername);
+
+							if(deleteflag==1)
+							{
+								redirecttocontroller(controllername);
+							}
+							else
+							{
+								getAjaxgridData(controllername);	
+							}							
+						
+                    }
+                });
+			}
+         
+        }
+           else 
+           {
+
+           }
+        });
+		 
+}	
+function changeeditscreen(controllername,id)
+{
+
+	  $.blockUI({ width:'50px',message: $("#spinner").html() });	
+	  window.location.href = base_url+'/exit/'+controllername+'/edit/id/'+id;
+}  
+
+function refreshgrid(objname,dashboardcall,catId)
+{
+	
+	var Url ="";var context ="";
+	var formGridId = $("#formGridId").val(); 
+	var unitId = '';mname='';mnuid='';$('#columnId').remove();
+	if(formGridId == '' || formGridId == 'undefined' || typeof(formGridId) === 'undefined')
+	formGridId = ''; 
+	else
+	{
+		unitId = formGridId.split("/"); 
+		mname = unitId[0]; mnuid = unitId[1];
+	}
+	var url = document.URL.split('/');  
+	
+	var dataparam = 'objname='+objname+'&refresh=refresh&call=ajaxcall'+'&'+mname+'='+mnuid+"&context="+context+"&dashboardcall="+dashboardcall;
+        
+       
+	if(catId != '')
+		Url = base_url+"/"+objname+"/id/"+catId;
+	else
+		Url = base_url+"/exit/"+objname+"/index/format/html";
+
+	$("#"+objname+"_searchdata").val('');
+	$.ajax({
+		url: Url,   
+		type : 'POST',
+		data : dataparam,
+		success : function(response){
+			$('#grid_'+objname).html(response);
+		}
+	});
+}	      
+function opensearch(objname)
+{
+	var dashboardcall = $("#dashboardcall").val();
+	if($(".searchtxtbox_"+objname).is(":visible"))
+	{
+            $('.ui-datepicker-trigger').hide();
+            $(".searchtxtbox_"+objname).hide();	
+            $("#search_tr_"+objname).hide();	
+            refreshgrid(objname,dashboardcall,"");		
+	}
+	else 
+        {           
+            $('.ui-datepicker-trigger').show();
+            $(".searchtxtbox_"+objname).show();					
+            $("#search_tr_"+objname).show();	
+        }
+}	
+function getsearchdata(objname,conText,colname,event,etype)
+{
+    if(etype == 'text')
+    {
+        var code = event.keyCode || event.which;
+        if(code != 13) 
+        { 
+            return ;
+        }
+    }
+    var dashboardcall = $("#dashboardcall").val();
+	var Url ="";
+	var perpage = $("#perpage_"+objname).val(); 
+	if(perpage == 'undefined' || typeof(perpage) === 'undefined')
+	{
+		if(dashboardcall == 'Yes')
+		perpage = '10';
+		else
+		perpage = '20';
+	}
+	var page = $(".gotopage_input_"+objname).val();
+	var formGridId = $("#formGridId").val(); 
+	var unitId = '';var mname='';var mnuid='';var columnid = '';var flag='';
+	if(formGridId == '' || formGridId == 'undefined' || typeof(formGridId) === 'undefined')
+	formGridId = ''; 
+	else
+	{
+		unitId = formGridId.split("/"); 
+		mname = unitId[0]; mnuid = unitId[1];
+	}
+	var searchData = '{';	
+	$('.searchtxtbox_'+objname).each(function() {
+            if(this.value != '')
+            {
+		  searchData += '"'+this.id+'":"'+encodeURIComponent(this.value)+'",';		  
+		  if(columnid == '')
+		  columnid = colname;
+	    } 		
+	});
+	searchData = searchData.substr(0,(searchData.length - 1));
+	if(searchData !='' && searchData !='undefined')
+	searchData += '}';
+    if(page == '' || page == 'undefined' || typeof(page) === 'undefined')
+	page = $(".currentpage").val();
+	page = 1; 
+	
+	var url = document.URL.split('/');  
+	
+	var dataparam = 'per_page='+ perpage+'&page='+page+'&call=ajaxcall&objname='+objname+'&'+mname+'='+mnuid+'&context='+conText+'&dashboardcall='+dashboardcall;
+	if(searchData != '' && searchData != '{}')
+            dataparam = dataparam+'&searchData='+searchData;	
+       
+	$('#'+objname+'_searchdata').remove();
+	$('#objectName').remove();
+	$('#footer').append("<input type='hidden' value='"+searchData+"' id='"+objname+"_searchdata' />");							
+	$('#footer').append('<input type="hidden" value="'+objname+'" id="objectName" />');							
+	if ($("#columnId").length)
+	$('#columnId').val(columnid);
+	else $('#footer').append('<input type="hidden" value="'+columnid+'" id="columnId" />');	
+
+	Url = base_url+"/exit/"+objname+"/index/format/html";
+	
+	$.ajax({
+		url: Url,   
+		type : 'POST',
+		data : dataparam,
+		success : function(response){	
+			$('#grid_'+objname).html(response);                                      
+		},
+		
+	});
+       
+}	
+
+function createorremoveshortcut(menuid,shortcutflag)
+{
+    var actionvar = '';
+    var html = '';
+    if(shortcutflag == 1)
+        
+        actionvar = 'pin to shortcuts';
+    else if(shortcutflag == 2)
+        
+        actionvar = 'unpin from shortcuts';
+    else if(shortcutflag == 3)
+        
+        actionvar = 'pin to shortcuts';
+  
+    if($("#errors-pageshortcut").is(":visible"))  
+    $("#errors-pageshortcut").hide();  
+    $.ajax({
+        url: base_url+"/index/createorremoveshortcut",   
+        type : 'POST',	
+        data : 'menuid='+menuid+'&shortcutflag='+shortcutflag,
+        dataType: 'json',
+        beforeSend: function () {
+            $("#pageshortcut").before("<div id='loader-shortcut'></div>");
+            $("#loader-shortcut").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+        },
+        success : function(response){
+            $("#loader-shortcut").remove(); 
+            if(response['result'] !='' )
+            {
+                if(response['result'] !='error' && response['result'] !='inactive')
+                { 	
+                    if($.trim(response['result']) == 'limit')
+                    {
+                        jConfirm("You have already added 16 shortcut icons.Please visit settings page to manage your shortcut icons", "Confirmation",function(r)
+                        {
+                            if(r==true)
+                            {
+                                window.location = base_url+"/viewsettings/2";
+                            }
+                            else
+                            {
+                                return false;
+                            }
+                        });
+                    }
+                    else
+                    {									 
+                        if(shortcutflag == 1 || shortcutflag == 3)
+                        {
+                            
+                            html ="<div id='pageshortcut' class ='sprite remove-shortcut-icon' onclick='createorremoveshortcut("+menuid+",2)'>Unpin from shortcuts";
+                            html +="</div>";
+                        }
+                        else if(shortcutflag == 2)
+                        {
+                            
+                            html ="<div id='pageshortcut' class ='sprite shortcut-icon' onclick='createorremoveshortcut("+menuid+",1)'>Pin to shortcuts";
+                            html +="</div>"; 
+                        }
+                        $("#pageshortcutdiv").html(html);
+                        location.reload();
+                    }
+                } 
+    						
+                if(response['result'] =='error')
+                {
+                    $('#pageshortcut').before("<span class='shortcuterrors' id='errors-pageshortcut'>You cannot "+actionvar+".</span>");
+                }								
+                if(response['result'] =='inactive')
+                {
+                    $('#pageshortcut').before("<span class='shortcuterrors' id='errors-pageshortcut'>You cannot "+actionvar+".</span>");
+                }
+            }				             
+        }
+						
+    });
+ }
+function redirecttolink(link,module)
+{    
+ $.blockUI({ width:'50px',message: $("#spinner").html() });
+ if(module!='')
+	 window.location = base_url+'/'+module+'/'+link;
+ else
+	 window.location = base_url+'/'+link;
+
+}
+function closetab(ele,pagename,pagelink)
+{ 
+var newURL = window.location.protocol + "//" + window.location.host;
+
+     jQuery.ajax({
+		  url: base_url+'/index/clearsessionarray',
+          data: 'name='+pagename+'&link='+pagelink,
+          type: "POST",
+          dataType: "json",
+		  beforeSend: function () {
+		    $("#recentviewtext").before("<div id='loader-recent'></div>");
+            $("#loader-recent").html("<img src="+domain_data+"public/media/images/loader_21X21.gif>");
+          },
+          success: function(response){
+               if(response['result'] == 'success'){
+	           $(ele).parent('li').remove();
+			   $("#loader-recent").remove();
+	       }
+               if(response['is_empty'] == 'yes')
+                {
+                    $('#recentviewtext').html('');
+                }
+            if(typeof($('.recentviewd').find('ul li').html()) == 'undefined')
+                   $('#recentviewtext').html('');
+            }
+        },'json');
+}
+function displayexitform(url,menuname)
+{
+	$.ajax({
+		type:"post",		
+		url:base_url+'/index/checkisactivestatus',
+		dataType:'json',
+		success: function(response)
+		{  
+			if(typeof (response['result']) == 'undefined' || response['result'] == 'false' || response['result'] == '')
+			 {
+				window.location.href = base_url+'/index';
+			 }
+			else if(response['result'] == 'true')
+			{
+				var urlArr = url.split('/'); 
+				var exiturl =  base_url+'/exit';
+				var baseurlArr = exiturl.split('/');
+				var flag = 'yes';
+				var urlsplitArr = url.split("/");
+				var controllername = urlArr[baseurlArr.length];
+					if(flag == 'yes'){
+						$("body").append('<div id="blockingdiv" class="ui-widget-overlay ui-front"></div>');
+						
+						var capitalizedtitle = '';
+						if(menuname !='')
+						{
+						  capitalizedtitle = menuname;
+						}else
+						{
+						capitalizedtitle = controllername.substr(0, 1).toUpperCase() + controllername.substr(1);
+									
+						}
+						if(capitalizedtitle=='Allexitproc')
+							capitalizedtitle = 'Update Overall Status';
+						$(".closeAttachPopup").remove();
+							window.parent.$('#'+controllername+'Container').dialog({
+																	open:function(){
+																																					$('#'+controllername+'Container').css('display','block');
+						$('#'+controllername+'Cont').attr('src', url);
+																	  $(document).bind('keydown',function(e) {
+																		
+																		if (e.keyCode === 8) {
+																			return false;
+																		};
+																	});														  
+																	},
+											close: function() {
+											 $('#blockingdiv').remove();
+											 $('#'+controllername+'Cont').attr('src', '');
+											 $(document).unbind('keydown');
+											},
+											title: capitalizedtitle,
+											height:'auto',
+											draggable:false,
+											width: 780
+											});
+						$('#processesCont').contents().find('input[name="bg-check-details-id"]').val(urlsplitArr[5]);
+					}
+			}else
+			{
+				window.location.href = base_url+'/index';
+			}
+		},
+		global: false
+	});
+	
+}
+function selectrow(objid,tr)
+{
+	var row = $(tr);      
+	if(!row.hasClass('newclass')){
+			row.addClass('newclass')       
+				.siblings()                
+				.removeClass('newclass');  
+	}
+}	
+
+ function addAppQuestionDiv()
+{
+	var divcount = $("#multi_dept_div > div").length;
+	var idcount = parseInt($('#idcount').val());
+	if(divcount < 5)
+	{	
+		idcount = idcount + 1;
+		var html = '';
+		html+="<div id='parent_"+idcount+"' class='add_request'>";
+		html+="<div class='new-form-ui clearb'>";
+		html+="<label class='required'>Question <img class='tooltip' title='Special characters allowed are - ? &#39; . , / # @ $ & * ( ) !' src='" + domain_data + "public/media/images/help.png'></label>";
+		html+="<div class='division'><input type='text' maxlength='100' value='' id='question_"+idcount+"' name='question[]' class='cls_service_request_name' onblur='validatequestionname(this)' onkeyup='validatequestionname(this)'></div>";
+		html+="</div>";
+		html+="<div class='new-form-ui clearb textareaheight'>";
+		html+="<label>Description</label>";
+		html+="<div class='division'><textarea maxlength='200' cols='50' rows='10' id='description_"+idcount+"' name='description[]'></textarea></div>";
+		html+="</div>";
+		html+="<div class='division'><span class='sprite remove-new remove-entry' title='Remove' onclick='removeDiv("+idcount+")'></span></div>";
+		html+="</div>";
+	
+		$('#multi_dept_div').append(html);
+		$('#idcount').val(idcount);
+		$("[id^=description]").maxlength();
+	}else
+	{
+		jAlert('You can add only 5 questions at a time.');
+	}
+	
+}
+function removeDiv(idcount)
+{
+	$('#parent_'+idcount).remove();
+}
+function validatequestionname(ele)
+{
+    var elementid = $(ele).attr('id');
+    var reqValue = $(ele).val();
+    var re = /^[a-zA-Z0-9\- ?'.,\/#@$&*()!]+$/;
+    $('#errors-'+elementid).remove();
+    if(reqValue == '')
+    {
+            $(ele).parent().append("<span class='errors' id='errors-"+elementid+"'>Please enter question.</span>");
+    }		
+    else if(!re.test(reqValue))
+    {
+            $(ele).parent().append("<span class='errors' id='errors-"+elementid+"'>Please enter valid question.</span>");
+    }
+    else
+    {
+            $('#errors-'+elementid).remove();
+    }
+}
+
+
+function displaydeptform(url,menuname)
+{
+	$.ajax({
+		type:"post",		
+		url:base_url+'/index/checkisactivestatus',
+		dataType:'json',
+		success: function(response)
+		{  
+			if(typeof (response['result']) == 'undefined' || response['result'] == 'false' || response['result'] == '')
+			 {
+				window.location.href = base_url+'/index';
+			 }
+			else if(response['result'] == 'true')
+			{
+
+				var urlArr = url.split('/');   
+				var baseurlArr = base_url.split('/');
+				var request_hostname = window.location.hostname;
+				var job_title = '';var country_id = ''; var country = '';var state_id = ''; var state = '';
+				var flag = 'yes';
+				var urlsplitArr = url.split("/");
+				var controllername = urlArr[baseurlArr.length];
+				
+				if(menuname=='Exit Type')
+				{
+					 var controllername = 'exittypes';
+				}
+				if(menuname=='Exit Questions')
+				{
+					 var controllername = 'configureexitqs';
+					 url =url+'/isfrompopup/yes';		
+				}
+			
+					if(flag == 'yes'){
+						
+						$("body").append('<div id="blockingdiv" class="ui-widget-overlay ui-front"></div>');
+						
+						var capitalizedtitle = '';
+						if(menuname !='')
+						{
+						  capitalizedtitle = menuname;
+						}else
+						{
+						capitalizedtitle = controllername.substr(0, 1).toUpperCase() + controllername.substr(1);
+									
+						}			
+						$(".closeAttachPopup").remove();
+							window.parent.$('#'+controllername+'Container').dialog({
+																	open:function(){
+																																	$('#'+controllername+'Container').css('display','block');
+						$('#'+controllername+'Cont').attr('src', url);
+																	  $(document).bind('keydown',function(e) {
+																		
+																		if (e.keyCode === 8) {
+																			return false;
+																		};
+																	});														  
+																	},
+											close: function() {
+											 $('#blockingdiv').remove();
+											 $('#'+controllername+'Cont').attr('src', '');
+											 $(document).unbind('keydown');
+											},
+											title: capitalizedtitle,
+											height:'auto',
+											draggable:false,
+											width: 780
+											});
+						$('#processesCont').contents().find('input[name="bg-check-details-id"]').val(urlsplitArr[5]);
+					}
+			}else
+			{
+				window.location.href = base_url+'/index';
+			}
+		},
+		global: false
+	});
+	
+}
+
+function closeiframeAddPopup(addpopupdata,controllername,con,textstr,newId)
+{    
+	var option = '';
+	if(textstr != '')
+	{           
+       var defOption = "<option value=''>Select "+textstr+"</option>";	
+		window.parent.$('#s2id_'+con+' .select2-choice span').html('Select '+textstr);
+	}else{		
+		if(con != 'bg_checktype')
+		{
+			var defOption = "<option value=''> </option>";
+			window.parent.$('#s2id_'+con+' .select2-choice span').html('');
+		}
+	}
+	if(con == 'country' || con == 'country_1' || con == 'state' || con == 'state_1')
+	{
+		removeselectoptions(con);
+	}
+	window.parent.$("#"+con).find('option').remove();
+	window.parent.$("#"+con).parent().find('.select2-container').find('.select2-search-choice').remove();
+	window.parent.$("#"+con).html(defOption+addpopupdata);
+	
+	/** to set the new category as selected value - start **/
+	if(newId != '' && con == 'category_id')
+	{
+		window.parent.$('#'+con).select2('val',newId);
+	}
+	if(newId != '' && con == 'rccandidatename')
+	{
+		window.parent.$('#'+con).select2('val',newId);
+	}
+	 
+	/** to set the new category as selected value - end **/
+
+	if($('#'+controllername+'Container', window.parent.document).html() !='null')
+	{
+		setTimeout(function(){
+		window.parent.$('#'+controllername+'Container').dialog('close');
+		window.parent.$('#errors-'+con).remove();
+		},2000);
+	}
+}
+function closeiframepopup(controllername,con)
+{	
+	if($('#'+controllername+'Container', window.parent.document).html() !='null' && con == 'cancel')
+	{
+	   window.parent.$('#'+controllername+'Container').dialog('close');	
+		
+	}
+	else if(con == 'refreshgrid')
+	{
+		window.parent.refreshgridfromIframe(controllername,'No');
+		window.parent.$('#'+controllername+'Container').dialog('close');
+	}
+	else
+	{
+	  parent.window.location.reload();
+	}
+}
+function paginationndsorting(url){
+			var myarr = url.split("/");
+			if(url.indexOf('/call/ajaxcall') == -1)                        
+				url = url+'/call/ajaxcall';
+			var dashboardcall = $("#dashboardcall").val();
+			if(url.indexOf("objname") != -1)                        
+			{
+				divid = url.match(/objname\/(.*?)\//i)[1];
+			}	
+			
+			if(url.indexOf("sort") != -1) 
+			{
+				var strSortParam = url.substring(url.lastIndexOf('sort')+5);
+				
+				var sortOrder = strSortParam.substring(0,strSortParam.lastIndexOf('by')-1);
+				
+				var sortBy = strSortParam.substring(strSortParam.lastIndexOf('by')+3);
+				$('#sort_param').val(sortBy+"/"+sortOrder);
+			}
+			
+			var browserurl = document.URL.split('/');  
+			var flag='';
+			if($.inArray("pendingleaves",browserurl) != -1){
+				flag = getlastarrayelement(browserurl);
+				divid='pendingleaves';
+			}
+			
+			var searchData = $("#"+divid+"_searchdata").val();
+			var perfTimes = $("#gridblock *").serialize();
+			searchData = decodeURIComponent(searchData);
+			
+			$.post(url,{searchData:searchData,dashboardcall:dashboardcall,flag:flag} , function(response) {		
+				$('#grid_'+divid).html(response);
+		},'html');
+}
+

--- public/media/expenses/js/materialize.js ---
@@ -1,3 +1,4 @@
+
 if("undefined"==typeof jQuery){var jQuery;jQuery="function"==typeof require?$=require("jquery"):$}jQuery.easing.jswing=jQuery.easing.swing,jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(a,b,c,d,e){return jQuery.easing[jQuery.easing.def](a,b,c,d,e)},easeInQuad:function(a,b,c,d,e){return d*(b/=e)*b+c},easeOutQuad:function(a,b,c,d,e){return-d*(b/=e)*(b-2)+c},easeInOutQuad:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b+c:-d/2*(--b*(b-2)-1)+c},easeInCubic:function(a,b,c,d,e){return d*(b/=e)*b*b+c},easeOutCubic:function(a,b,c,d,e){return d*((b=b/e-1)*b*b+1)+c},easeInOutCubic:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b*b+c:d/2*((b-=2)*b*b+2)+c},easeInQuart:function(a,b,c,d,e){return d*(b/=e)*b*b*b+c},easeOutQuart:function(a,b,c,d,e){return-d*((b=b/e-1)*b*b*b-1)+c},easeInOutQuart:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b*b*b+c:-d/2*((b-=2)*b*b*b-2)+c},easeInQuint:function(a,b,c,d,e){return d*(b/=e)*b*b*b*b+c},easeOutQuint:function(a,b,c,d,e){return d*((b=b/e-1)*b*b*b*b+1)+c},easeInOutQuint:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b*b*b*b+c:d/2*((b-=2)*b*b*b*b+2)+c},easeInSine:function(a,b,c,d,e){return-d*Math.cos(b/e*(Math.PI/2))+d+c},easeOutSine:function(a,b,c,d,e){return d*Math.sin(b/e*(Math.PI/2))+c},easeInOutSine:function(a,b,c,d,e){return-d/2*(Math.cos(Math.PI*b/e)-1)+c},easeInExpo:function(a,b,c,d,e){return 0==b?c:d*Math.pow(2,10*(b/e-1))+c},easeOutExpo:function(a,b,c,d,e){return b==e?c+d:d*(-Math.pow(2,-10*b/e)+1)+c},easeInOutExpo:function(a,b,c,d,e){return 0==b?c:b==e?c+d:(b/=e/2)<1?d/2*Math.pow(2,10*(b-1))+c:d/2*(-Math.pow(2,-10*--b)+2)+c},easeInCirc:function(a,b,c,d,e){return-d*(Math.sqrt(1-(b/=e)*b)-1)+c},easeOutCirc:function(a,b,c,d,e){return d*Math.sqrt(1-(b=b/e-1)*b)+c},easeInOutCirc:function(a,b,c,d,e){return(b/=e/2)<1?-d/2*(Math.sqrt(1-b*b)-1)+c:d/2*(Math.sqrt(1-(b-=2)*b)+1)+c},easeInElastic:function(a,b,c,d,e){var f=1.70158,g=0,h=d;if(0==b)return c;if(1==(b/=e))return c+d;if(g||(g=.3*e),h<Math.abs(d)){h=d;var f=g/4}else var f=g/(2*Math.PI)*Math.asin(d/h);return-(h*Math.pow(2,10*(b-=1))*Math.sin((b*e-f)*(2*Math.PI)/g))+c},easeOutElastic:function(a,b,c,d,e){var f=1.70158,g=0,h=d;if(0==b)return c;if(1==(b/=e))return c+d;if(g||(g=.3*e),h<Math.abs(d)){h=d;var f=g/4}else var f=g/(2*Math.PI)*Math.asin(d/h);return h*Math.pow(2,-10*b)*Math.sin((b*e-f)*(2*Math.PI)/g)+d+c},easeInOutElastic:function(a,b,c,d,e){var f=1.70158,g=0,h=d;if(0==b)return c;if(2==(b/=e/2))return c+d;if(g||(g=e*(.3*1.5)),h<Math.abs(d)){h=d;var f=g/4}else var f=g/(2*Math.PI)*Math.asin(d/h);return 1>b?-.5*(h*Math.pow(2,10*(b-=1))*Math.sin((b*e-f)*(2*Math.PI)/g))+c:h*Math.pow(2,-10*(b-=1))*Math.sin((b*e-f)*(2*Math.PI)/g)*.5+d+c},easeInBack:function(a,b,c,d,e,f){return void 0==f&&(f=1.70158),d*(b/=e)*b*((f+1)*b-f)+c},easeOutBack:function(a,b,c,d,e,f){return void 0==f&&(f=1.70158),d*((b=b/e-1)*b*((f+1)*b+f)+1)+c},easeInOutBack:function(a,b,c,d,e,f){return void 0==f&&(f=1.70158),(b/=e/2)<1?d/2*(b*b*(((f*=1.525)+1)*b-f))+c:d/2*((b-=2)*b*(((f*=1.525)+1)*b+f)+2)+c},easeInBounce:function(a,b,c,d,e){return d-jQuery.easing.easeOutBounce(a,e-b,0,d,e)+c},easeOutBounce:function(a,b,c,d,e){return(b/=e)<1/2.75?d*(7.5625*b*b)+c:2/2.75>b?d*(7.5625*(b-=1.5/2.75)*b+.75)+c:2.5/2.75>b?d*(7.5625*(b-=2.25/2.75)*b+.9375)+c:d*(7.5625*(b-=2.625/2.75)*b+.984375)+c},easeInOutBounce:function(a,b,c,d,e){return e/2>b?.5*jQuery.easing.easeInBounce(a,2*b,0,d,e)+c:.5*jQuery.easing.easeOutBounce(a,2*b-e,0,d,e)+.5*d+c}}),jQuery.extend(jQuery.easing,{easeInOutMaterial:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b+c:d/4*((b-=2)*b*b+2)+c}}),jQuery.Velocity?console.log("Velocity is already loaded. You may be needlessly importing Velocity again; note that Materialize includes Velocity."):(!function(a){function b(a){var b=a.length,d=c.type(a);return"function"===d||c.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===d||0===b||"number"==typeof b&&b>0&&b-1 in a}if(!a.jQuery){var c=function(a,b){return new c.fn.init(a,b)};c.isWindow=function(a){return null!=a&&a==a.window},c.type=function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?e[g.call(a)]||"object":typeof a},c.isArray=Array.isArray||function(a){return"array"===c.type(a)},c.isPlainObject=function(a){var b;if(!a||"object"!==c.type(a)||a.nodeType||c.isWindow(a))return!1;try{if(a.constructor&&!f.call(a,"constructor")&&!f.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(d){return!1}for(b in a);return void 0===b||f.call(a,b)},c.each=function(a,c,d){var e,f=0,g=a.length,h=b(a);if(d){if(h)for(;g>f&&(e=c.apply(a[f],d),e!==!1);f++);else for(f in a)if(e=c.apply(a[f],d),e===!1)break}else if(h)for(;g>f&&(e=c.call(a[f],f,a[f]),e!==!1);f++);else for(f in a)if(e=c.call(a[f],f,a[f]),e===!1)break;return a},c.data=function(a,b,e){if(void 0===e){var f=a[c.expando],g=f&&d[f];if(void 0===b)return g;if(g&&b in g)return g[b]}else if(void 0!==b){var f=a[c.expando]||(a[c.expando]=++c.uuid);return d[f]=d[f]||{},d[f][b]=e,e}},c.removeData=function(a,b){var e=a[c.expando],f=e&&d[e];f&&c.each(b,function(a,b){delete f[b]})},c.extend=function(){var a,b,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;for("boolean"==typeof h&&(k=h,h=arguments[i]||{},i++),"object"!=typeof h&&"function"!==c.type(h)&&(h={}),i===j&&(h=this,i--);j>i;i++)if(null!=(f=arguments[i]))for(e in f)a=h[e],d=f[e],h!==d&&(k&&d&&(c.isPlainObject(d)||(b=c.isArray(d)))?(b?(b=!1,g=a&&c.isArray(a)?a:[]):g=a&&c.isPlainObject(a)?a:{},h[e]=c.extend(k,g,d)):void 0!==d&&(h[e]=d));return h},c.queue=function(a,d,e){function f(a,c){var d=c||[];return null!=a&&(b(Object(a))?!function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;)a[e++]=b[d++];if(c!==c)for(;void 0!==b[d];)a[e++]=b[d++];return a.length=e,a}(d,"string"==typeof a?[a]:a):[].push.call(d,a)),d}if(a){d=(d||"fx")+"queue";var g=c.data(a,d);return e?(!g||c.isArray(e)?g=c.data(a,d,f(e)):g.push(e),g):g||[]}},c.dequeue=function(a,b){c.each(a.nodeType?[a]:a,function(a,d){b=b||"fx";var e=c.queue(d,b),f=e.shift();"inprogress"===f&&(f=e.shift()),f&&("fx"===b&&e.unshift("inprogress"),f.call(d,function(){c.dequeue(d,b)}))})},c.fn=c.prototype={init:function(a){if(a.nodeType)return this[0]=a,this;throw new Error("Not a DOM node.")},offset:function(){var b=this[0].getBoundingClientRect?this[0].getBoundingClientRect():{top:0,left:0};return{top:b.top+(a.pageYOffset||document.scrollTop||0)-(document.clientTop||0),left:b.left+(a.pageXOffset||document.scrollLeft||0)-(document.clientLeft||0)}},position:function(){function a(){for(var a=this.offsetParent||document;a&&"html"===!a.nodeType.toLowerCase&&"static"===a.style.position;)a=a.offsetParent;return a||document}var b=this[0],a=a.apply(b),d=this.offset(),e=/^(?:body|html)$/i.test(a.nodeName)?{top:0,left:0}:c(a).offset();return d.top-=parseFloat(b.style.marginTop)||0,d.left-=parseFloat(b.style.marginLeft)||0,a.style&&(e.top+=parseFloat(a.style.borderTopWidth)||0,e.left+=parseFloat(a.style.borderLeftWidth)||0),{top:d.top-e.top,left:d.left-e.left}}};var d={};c.expando="velocity"+(new Date).getTime(),c.uuid=0;for(var e={},f=e.hasOwnProperty,g=e.toString,h="Boolean Number String Function Array Date RegExp Object Error".split(" "),i=0;i<h.length;i++)e["[object "+h[i]+"]"]=h[i].toLowerCase();c.fn.init.prototype=c.fn,a.Velocity={Utilities:c}}}(window),function(a){"object"==typeof module&&"object"==typeof module.exports?module.exports=a():"function"==typeof define&&define.amd?define(a):a()}(function(){return function(a,b,c,d){function e(a){for(var b=-1,c=a?a.length:0,d=[];++b<c;){var e=a[b];e&&d.push(e)}return d}function f(a){return p.isWrapped(a)?a=[].slice.call(a):p.isNode(a)&&(a=[a]),a}function g(a){var b=m.data(a,"velocity");return null===b?d:b}function h(a){return function(b){return Math.round(b*a)*(1/a)}}function i(a,c,d,e){function f(a,b){return 1-3*b+3*a}function g(a,b){return 3*b-6*a}function h(a){return 3*a}function i(a,b,c){return((f(b,c)*a+g(b,c))*a+h(b))*a}function j(a,b,c){return 3*f(b,c)*a*a+2*g(b,c)*a+h(b)}function k(b,c){for(var e=0;p>e;++e){var f=j(c,a,d);if(0===f)return c;var g=i(c,a,d)-b;c-=g/f}return c}function l(){for(var b=0;t>b;++b)x[b]=i(b*u,a,d)}function m(b,c,e){var f,g,h=0;do g=c+(e-c)/2,f=i(g,a,d)-b,f>0?e=g:c=g;while(Math.abs(f)>r&&++h<s);return g}function n(b){for(var c=0,e=1,f=t-1;e!=f&&x[e]<=b;++e)c+=u;--e;var g=(b-x[e])/(x[e+1]-x[e]),h=c+g*u,i=j(h,a,d);return i>=q?k(b,h):0==i?h:m(b,c,c+u)}function o(){y=!0,(a!=c||d!=e)&&l()}var p=4,q=.001,r=1e-7,s=10,t=11,u=1/(t-1),v="Float32Array"in b;if(4!==arguments.length)return!1;for(var w=0;4>w;++w)if("number"!=typeof arguments[w]||isNaN(arguments[w])||!isFinite(arguments[w]))return!1;a=Math.min(a,1),d=Math.min(d,1),a=Math.max(a,0),d=Math.max(d,0);var x=v?new Float32Array(t):new Array(t),y=!1,z=function(b){return y||o(),a===c&&d===e?b:0===b?0:1===b?1:i(n(b),c,e)};z.getControlPoints=function(){return[{x:a,y:c},{x:d,y:e}]};var A="generateBezier("+[a,c,d,e]+")";return z.toString=function(){return A},z}function j(a,b){var c=a;return p.isString(a)?t.Easings[a]||(c=!1):c=p.isArray(a)&&1===a.length?h.apply(null,a):p.isArray(a)&&2===a.length?u.apply(null,a.concat([b])):p.isArray(a)&&4===a.length?i.apply(null,a):!1,c===!1&&(c=t.Easings[t.defaults.easing]?t.defaults.easing:s),c}function k(a){if(a){var b=(new Date).getTime(),c=t.State.calls.length;c>1e4&&(t.State.calls=e(t.State.calls));for(var f=0;c>f;f++)if(t.State.calls[f]){var h=t.State.calls[f],i=h[0],j=h[2],n=h[3],o=!!n,q=null;n||(n=t.State.calls[f][3]=b-16);for(var r=Math.min((b-n)/j.duration,1),s=0,u=i.length;u>s;s++){var w=i[s],y=w.element;if(g(y)){var z=!1;if(j.display!==d&&null!==j.display&&"none"!==j.display){if("flex"===j.display){var A=["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex"];m.each(A,function(a,b){v.setPropertyValue(y,"display",b)})}v.setPropertyValue(y,"display",j.display)}j.visibility!==d&&"hidden"!==j.visibility&&v.setPropertyValue(y,"visibility",j.visibility);for(var B in w)if("element"!==B){var C,D=w[B],E=p.isString(D.easing)?t.Easings[D.easing]:D.easing;if(1===r)C=D.endValue;else{var F=D.endValue-D.startValue;if(C=D.startValue+F*E(r,j,F),!o&&C===D.currentValue)continue}if(D.currentValue=C,"tween"===B)q=C;else{if(v.Hooks.registered[B]){var G=v.Hooks.getRoot(B),H=g(y).rootPropertyValueCache[G];H&&(D.rootPropertyValue=H)}var I=v.setPropertyValue(y,B,D.currentValue+(0===parseFloat(C)?"":D.unitType),D.rootPropertyValue,D.scrollData);v.Hooks.registered[B]&&(g(y).rootPropertyValueCache[G]=v.Normalizations.registered[G]?v.Normalizations.registered[G]("extract",null,I[1]):I[1]),"transform"===I[0]&&(z=!0)}}j.mobileHA&&g(y).transformCache.translate3d===d&&(g(y).transformCache.translate3d="(0px, 0px, 0px)",z=!0),z&&v.flushTransformCache(y)}}j.display!==d&&"none"!==j.display&&(t.State.calls[f][2].display=!1),j.visibility!==d&&"hidden"!==j.visibility&&(t.State.calls[f][2].visibility=!1),j.progress&&j.progress.call(h[1],h[1],r,Math.max(0,n+j.duration-b),n,q),1===r&&l(f)}}t.State.isTicking&&x(k)}function l(a,b){if(!t.State.calls[a])return!1;for(var c=t.State.calls[a][0],e=t.State.calls[a][1],f=t.State.calls[a][2],h=t.State.calls[a][4],i=!1,j=0,k=c.length;k>j;j++){var l=c[j].element;if(b||f.loop||("none"===f.display&&v.setPropertyValue(l,"display",f.display),"hidden"===f.visibility&&v.setPropertyValue(l,"visibility",f.visibility)),f.loop!==!0&&(m.queue(l)[1]===d||!/\.velocityQueueEntryFlag/i.test(m.queue(l)[1]))&&g(l)){g(l).isAnimating=!1,g(l).rootPropertyValueCache={};var n=!1;m.each(v.Lists.transforms3D,function(a,b){var c=/^scale/.test(b)?1:0,e=g(l).transformCache[b];g(l).transformCache[b]!==d&&new RegExp("^\\("+c+"[^.]").test(e)&&(n=!0,delete g(l).transformCache[b])}),f.mobileHA&&(n=!0,delete g(l).transformCache.translate3d),n&&v.flushTransformCache(l),v.Values.removeClass(l,"velocity-animating")}if(!b&&f.complete&&!f.loop&&j===k-1)try{f.complete.call(e,e)}catch(o){setTimeout(function(){throw o},1)}h&&f.loop!==!0&&h(e),g(l)&&f.loop===!0&&!b&&(m.each(g(l).tweensContainer,function(a,b){/^rotate/.test(a)&&360===parseFloat(b.endValue)&&(b.endValue=0,b.startValue=360),/^backgroundPosition/.test(a)&&100===parseFloat(b.endValue)&&"%"===b.unitType&&(b.endValue=0,b.startValue=100)}),t(l,"reverse",{loop:!0,delay:f.delay})),f.queue!==!1&&m.dequeue(l,f.queue)}t.State.calls[a]=!1;for(var p=0,q=t.State.calls.length;q>p;p++)if(t.State.calls[p]!==!1){i=!0;break}i===!1&&(t.State.isTicking=!1,delete t.State.calls,t.State.calls=[])}var m,n=function(){if(c.documentMode)return c.documentMode;for(var a=7;a>4;a--){var b=c.createElement("div");if(b.innerHTML="<!--[if IE "+a+"]><span></span><![endif]-->",b.getElementsByTagName("span").length)return b=null,a}return d}(),o=function(){var a=0;return b.webkitRequestAnimationFrame||b.mozRequestAnimationFrame||function(b){var c,d=(new Date).getTime();return c=Math.max(0,16-(d-a)),a=d+c,setTimeout(function(){b(d+c)},c)}}(),p={isString:function(a){return"string"==typeof a},isArray:Array.isArray||function(a){return"[object Array]"===Object.prototype.toString.call(a)},isFunction:function(a){return"[object Function]"===Object.prototype.toString.call(a)},isNode:function(a){return a&&a.nodeType},isNodeList:function(a){return"object"==typeof a&&/^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(a))&&a.length!==d&&(0===a.length||"object"==typeof a[0]&&a[0].nodeType>0)},isWrapped:function(a){return a&&(a.jquery||b.Zepto&&b.Zepto.zepto.isZ(a))},isSVG:function(a){return b.SVGElement&&a instanceof b.SVGElement},isEmptyObject:function(a){for(var b in a)return!1;return!0}},q=!1;if(a.fn&&a.fn.jquery?(m=a,q=!0):m=b.Velocity.Utilities,8>=n&&!q)throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");if(7>=n)return void(jQuery.fn.velocity=jQuery.fn.animate);var r=400,s="swing",t={State:{isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),isAndroid:/Android/i.test(navigator.userAgent),isGingerbread:/Android 2\.3\.[3-7]/i.test(navigator.userAgent),isChrome:b.chrome,isFirefox:/Firefox/i.test(navigator.userAgent),prefixElement:c.createElement("div"),prefixMatches:{},scrollAnchor:null,scrollPropertyLeft:null,scrollPropertyTop:null,isTicking:!1,calls:[]},CSS:{},Utilities:m,Redirects:{},Easings:{},Promise:b.Promise,defaults:{queue:"",duration:r,easing:s,begin:d,complete:d,progress:d,display:d,visibility:d,loop:!1,delay:!1,mobileHA:!0,_cacheValues:!0},init:function(a){m.data(a,"velocity",{isSVG:p.isSVG(a),isAnimating:!1,computedStyle:null,tweensContainer:null,rootPropertyValueCache:{},transformCache:{}})},hook:null,mock:!1,version:{major:1,minor:2,patch:2},debug:!1};b.pageYOffset!==d?(t.State.scrollAnchor=b,t.State.scrollPropertyLeft="pageXOffset",t.State.scrollPropertyTop="pageYOffset"):(t.State.scrollAnchor=c.documentElement||c.body.parentNode||c.body,t.State.scrollPropertyLeft="scrollLeft",t.State.scrollPropertyTop="scrollTop");var u=function(){function a(a){return-a.tension*a.x-a.friction*a.v}function b(b,c,d){var e={x:b.x+d.dx*c,v:b.v+d.dv*c,tension:b.tension,friction:b.friction};return{dx:e.v,dv:a(e)}}function c(c,d){var e={dx:c.v,dv:a(c)},f=b(c,.5*d,e),g=b(c,.5*d,f),h=b(c,d,g),i=1/6*(e.dx+2*(f.dx+g.dx)+h.dx),j=1/6*(e.dv+2*(f.dv+g.dv)+h.dv);return c.x=c.x+i*d,c.v=c.v+j*d,c}return function d(a,b,e){var f,g,h,i={x:-1,v:0,tension:null,friction:null},j=[0],k=0,l=1e-4,m=.016;for(a=parseFloat(a)||500,b=parseFloat(b)||20,e=e||null,i.tension=a,i.friction=b,f=null!==e,f?(k=d(a,b),g=k/e*m):g=m;h=c(h||i,g),j.push(1+h.x),k+=16,Math.abs(h.x)>l&&Math.abs(h.v)>l;);return f?function(a){return j[a*(j.length-1)|0]}:k}}();t.Easings={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},spring:function(a){return 1-Math.cos(4.5*a*Math.PI)*Math.exp(6*-a)}},m.each([["ease",[.25,.1,.25,1]],["ease-in",[.42,0,1,1]],["ease-out",[0,0,.58,1]],["ease-in-out",[.42,0,.58,1]],["easeInSine",[.47,0,.745,.715]],["easeOutSine",[.39,.575,.565,1]],["easeInOutSine",[.445,.05,.55,.95]],["easeInQuad",[.55,.085,.68,.53]],["easeOutQuad",[.25,.46,.45,.94]],["easeInOutQuad",[.455,.03,.515,.955]],["easeInCubic",[.55,.055,.675,.19]],["easeOutCubic",[.215,.61,.355,1]],["easeInOutCubic",[.645,.045,.355,1]],["easeInQuart",[.895,.03,.685,.22]],["easeOutQuart",[.165,.84,.44,1]],["easeInOutQuart",[.77,0,.175,1]],["easeInQuint",[.755,.05,.855,.06]],["easeOutQuint",[.23,1,.32,1]],["easeInOutQuint",[.86,0,.07,1]],["easeInExpo",[.95,.05,.795,.035]],["easeOutExpo",[.19,1,.22,1]],["easeInOutExpo",[1,0,0,1]],["easeInCirc",[.6,.04,.98,.335]],["easeOutCirc",[.075,.82,.165,1]],["easeInOutCirc",[.785,.135,.15,.86]]],function(a,b){t.Easings[b[0]]=i.apply(null,b[1])});var v=t.CSS={RegEx:{isHex:/^#([A-f\d]{3}){1,2}$/i,valueUnwrap:/^[A-z]+\((.*)\)$/i,wrappedValueAlreadyExtracted:/[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,valueSplit:/([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi},Lists:{colors:["fill","stroke","stopColor","color","backgroundColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","outlineColor"],transformsBase:["translateX","translateY","scale","scaleX","scaleY","skewX","skewY","rotateZ"],transforms3D:["transformPerspective","translateZ","scaleZ","rotateX","rotateY"]},Hooks:{templates:{textShadow:["Color X Y Blur","black 0px 0px 0px"],boxShadow:["Color X Y Blur Spread","black 0px 0px 0px 0px"],clip:["Top Right Bottom Left","0px 0px 0px 0px"],backgroundPosition:["X Y","0% 0%"],transformOrigin:["X Y Z","50% 50% 0px"],perspectiveOrigin:["X Y","50% 50%"]},registered:{},register:function(){for(var a=0;a<v.Lists.colors.length;a++){var b="color"===v.Lists.colors[a]?"0 0 0 1":"255 255 255 1";v.Hooks.templates[v.Lists.colors[a]]=["Red Green Blue Alpha",b]}var c,d,e;if(n)for(c in v.Hooks.templates){d=v.Hooks.templates[c],e=d[0].split(" ");var f=d[1].match(v.RegEx.valueSplit);"Color"===e[0]&&(e.push(e.shift()),f.push(f.shift()),v.Hooks.templates[c]=[e.join(" "),f.join(" ")])}for(c in v.Hooks.templates){d=v.Hooks.templates[c],e=d[0].split(" ");for(var a in e){var g=c+e[a],h=a;v.Hooks.registered[g]=[c,h]}}},getRoot:function(a){var b=v.Hooks.registered[a];return b?b[0]:a},cleanRootPropertyValue:function(a,b){return v.RegEx.valueUnwrap.test(b)&&(b=b.match(v.RegEx.valueUnwrap)[1]),v.Values.isCSSNullValue(b)&&(b=v.Hooks.templates[a][1]),b},extractValue:function(a,b){var c=v.Hooks.registered[a];if(c){var d=c[0],e=c[1];return b=v.Hooks.cleanRootPropertyValue(d,b),b.toString().match(v.RegEx.valueSplit)[e]}return b},injectValue:function(a,b,c){var d=v.Hooks.registered[a];if(d){var e,f,g=d[0],h=d[1];return c=v.Hooks.cleanRootPropertyValue(g,c),e=c.toString().match(v.RegEx.valueSplit),e[h]=b,f=e.join(" ")}return c}},Normalizations:{registered:{clip:function(a,b,c){switch(a){case"name":return"clip";case"extract":var d;return v.RegEx.wrappedValueAlreadyExtracted.test(c)?d=c:(d=c.toString().match(v.RegEx.valueUnwrap),d=d?d[1].replace(/,(\s+)?/g," "):c),d;case"inject":return"rect("+c+")"}},blur:function(a,b,c){switch(a){case"name":return t.State.isFirefox?"filter":"-webkit-filter";case"extract":var d=parseFloat(c);if(!d&&0!==d){var e=c.toString().match(/blur\(([0-9]+[A-z]+)\)/i);d=e?e[1]:0}return d;case"inject":return parseFloat(c)?"blur("+c+")":"none"}},opacity:function(a,b,c){if(8>=n)switch(a){case"name":return"filter";case"extract":var d=c.toString().match(/alpha\(opacity=(.*)\)/i);return c=d?d[1]/100:1;case"inject":return b.style.zoom=1,parseFloat(c)>=1?"":"alpha(opacity="+parseInt(100*parseFloat(c),10)+")"}else switch(a){case"name":return"opacity";case"extract":return c;case"inject":return c}}},register:function(){9>=n||t.State.isGingerbread||(v.Lists.transformsBase=v.Lists.transformsBase.concat(v.Lists.transforms3D));for(var a=0;a<v.Lists.transformsBase.length;a++)!function(){var b=v.Lists.transformsBase[a];v.Normalizations.registered[b]=function(a,c,e){switch(a){case"name":return"transform";case"extract":return g(c)===d||g(c).transformCache[b]===d?/^scale/i.test(b)?1:0:g(c).transformCache[b].replace(/[()]/g,"");case"inject":var f=!1;switch(b.substr(0,b.length-1)){case"translate":f=!/(%|px|em|rem|vw|vh|\d)$/i.test(e);break;case"scal":case"scale":t.State.isAndroid&&g(c).transformCache[b]===d&&1>e&&(e=1),f=!/(\d)$/i.test(e);break;case"skew":f=!/(deg|\d)$/i.test(e);break;case"rotate":f=!/(deg|\d)$/i.test(e)}return f||(g(c).transformCache[b]="("+e+")"),g(c).transformCache[b]}}}();for(var a=0;a<v.Lists.colors.length;a++)!function(){var b=v.Lists.colors[a];v.Normalizations.registered[b]=function(a,c,e){switch(a){case"name":return b;case"extract":var f;if(v.RegEx.wrappedValueAlreadyExtracted.test(e))f=e;else{var g,h={black:"rgb(0, 0, 0)",blue:"rgb(0, 0, 255)",gray:"rgb(128, 128, 128)",green:"rgb(0, 128, 0)",red:"rgb(255, 0, 0)",white:"rgb(255, 255, 255)"};/^[A-z]+$/i.test(e)?g=h[e]!==d?h[e]:h.black:v.RegEx.isHex.test(e)?g="rgb("+v.Values.hexToRgb(e).join(" ")+")":/^rgba?\(/i.test(e)||(g=h.black),f=(g||e).toString().match(v.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g," ")}return 8>=n||3!==f.split(" ").length||(f+=" 1"),f;case"inject":return 8>=n?4===e.split(" ").length&&(e=e.split(/\s+/).slice(0,3).join(" ")):3===e.split(" ").length&&(e+=" 1"),(8>=n?"rgb":"rgba")+"("+e.replace(/\s+/g,",").replace(/\.(\d)+(?=,)/g,"")+")"}}}()}},Names:{camelCase:function(a){return a.replace(/-(\w)/g,function(a,b){return b.toUpperCase()})},SVGAttribute:function(a){var b="width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";return(n||t.State.isAndroid&&!t.State.isChrome)&&(b+="|transform"),new RegExp("^("+b+")$","i").test(a)},prefixCheck:function(a){if(t.State.prefixMatches[a])return[t.State.prefixMatches[a],!0];for(var b=["","Webkit","Moz","ms","O"],c=0,d=b.length;d>c;c++){var e;if(e=0===c?a:b[c]+a.replace(/^\w/,function(a){return a.toUpperCase()}),p.isString(t.State.prefixElement.style[e]))return t.State.prefixMatches[a]=e,[e,!0]}return[a,!1]}},Values:{hexToRgb:function(a){var b,c=/^#?([a-f\d])([a-f\d])([a-f\d])$/i,d=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;return a=a.replace(c,function(a,b,c,d){return b+b+c+c+d+d}),b=d.exec(a),b?[parseInt(b[1],16),parseInt(b[2],16),parseInt(b[3],16)]:[0,0,0]},isCSSNullValue:function(a){return 0==a||/^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(a)},getUnitType:function(a){return/^(rotate|skew)/i.test(a)?"deg":/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(a)?"":"px"},getDisplayType:function(a){var b=a&&a.tagName.toString().toLowerCase();return/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(b)?"inline":/^(li)$/i.test(b)?"list-item":/^(tr)$/i.test(b)?"table-row":/^(table)$/i.test(b)?"table":/^(tbody)$/i.test(b)?"table-row-group":"block"},addClass:function(a,b){a.classList?a.classList.add(b):a.className+=(a.className.length?" ":"")+b},removeClass:function(a,b){a.classList?a.classList.remove(b):a.className=a.className.toString().replace(new RegExp("(^|\\s)"+b.split(" ").join("|")+"(\\s|$)","gi")," ")}},getPropertyValue:function(a,c,e,f){function h(a,c){function e(){j&&v.setPropertyValue(a,"display","none")}var i=0;if(8>=n)i=m.css(a,c);else{var j=!1;if(/^(width|height)$/.test(c)&&0===v.getPropertyValue(a,"display")&&(j=!0,v.setPropertyValue(a,"display",v.Values.getDisplayType(a))),!f){if("height"===c&&"border-box"!==v.getPropertyValue(a,"boxSizing").toString().toLowerCase()){var k=a.offsetHeight-(parseFloat(v.getPropertyValue(a,"borderTopWidth"))||0)-(parseFloat(v.getPropertyValue(a,"borderBottomWidth"))||0)-(parseFloat(v.getPropertyValue(a,"paddingTop"))||0)-(parseFloat(v.getPropertyValue(a,"paddingBottom"))||0);return e(),k}if("width"===c&&"border-box"!==v.getPropertyValue(a,"boxSizing").toString().toLowerCase()){var l=a.offsetWidth-(parseFloat(v.getPropertyValue(a,"borderLeftWidth"))||0)-(parseFloat(v.getPropertyValue(a,"borderRightWidth"))||0)-(parseFloat(v.getPropertyValue(a,"paddingLeft"))||0)-(parseFloat(v.getPropertyValue(a,"paddingRight"))||0);return e(),l}}var o;o=g(a)===d?b.getComputedStyle(a,null):g(a).computedStyle?g(a).computedStyle:g(a).computedStyle=b.getComputedStyle(a,null),"borderColor"===c&&(c="borderTopColor"),i=9===n&&"filter"===c?o.getPropertyValue(c):o[c],(""===i||null===i)&&(i=a.style[c]),e()}if("auto"===i&&/^(top|right|bottom|left)$/i.test(c)){var p=h(a,"position");("fixed"===p||"absolute"===p&&/top|left/i.test(c))&&(i=m(a).position()[c]+"px")}return i}var i;if(v.Hooks.registered[c]){var j=c,k=v.Hooks.getRoot(j);e===d&&(e=v.getPropertyValue(a,v.Names.prefixCheck(k)[0])),v.Normalizations.registered[k]&&(e=v.Normalizations.registered[k]("extract",a,e)),i=v.Hooks.extractValue(j,e)}else if(v.Normalizations.registered[c]){var l,o;l=v.Normalizations.registered[c]("name",a),"transform"!==l&&(o=h(a,v.Names.prefixCheck(l)[0]),v.Values.isCSSNullValue(o)&&v.Hooks.templates[c]&&(o=v.Hooks.templates[c][1])),i=v.Normalizations.registered[c]("extract",a,o)}if(!/^[\d-]/.test(i))if(g(a)&&g(a).isSVG&&v.Names.SVGAttribute(c))if(/^(height|width)$/i.test(c))try{i=a.getBBox()[c]}catch(p){i=0}else i=a.getAttribute(c);else i=h(a,v.Names.prefixCheck(c)[0]);return v.Values.isCSSNullValue(i)&&(i=0),t.debug>=2&&console.log("Get "+c+": "+i),i},setPropertyValue:function(a,c,d,e,f){var h=c;if("scroll"===c)f.container?f.container["scroll"+f.direction]=d:"Left"===f.direction?b.scrollTo(d,f.alternateValue):b.scrollTo(f.alternateValue,d);else if(v.Normalizations.registered[c]&&"transform"===v.Normalizations.registered[c]("name",a))v.Normalizations.registered[c]("inject",a,d),h="transform",d=g(a).transformCache[c];else{if(v.Hooks.registered[c]){var i=c,j=v.Hooks.getRoot(c);e=e||v.getPropertyValue(a,j),d=v.Hooks.injectValue(i,d,e),c=j}if(v.Normalizations.registered[c]&&(d=v.Normalizations.registered[c]("inject",a,d),c=v.Normalizations.registered[c]("name",a)),h=v.Names.prefixCheck(c)[0],8>=n)try{a.style[h]=d}catch(k){t.debug&&console.log("Browser does not support ["+d+"] for ["+h+"]")}else g(a)&&g(a).isSVG&&v.Names.SVGAttribute(c)?a.setAttribute(c,d):a.style[h]=d;t.debug>=2&&console.log("Set "+c+" ("+h+"): "+d)}return[h,d]},flushTransformCache:function(a){function b(b){return parseFloat(v.getPropertyValue(a,b))}var c="";if((n||t.State.isAndroid&&!t.State.isChrome)&&g(a).isSVG){var d={translate:[b("translateX"),b("translateY")],skewX:[b("skewX")],skewY:[b("skewY")],scale:1!==b("scale")?[b("scale"),b("scale")]:[b("scaleX"),b("scaleY")],rotate:[b("rotateZ"),0,0]};m.each(g(a).transformCache,function(a){/^translate/i.test(a)?a="translate":/^scale/i.test(a)?a="scale":/^rotate/i.test(a)&&(a="rotate"),d[a]&&(c+=a+"("+d[a].join(" ")+") ",delete d[a])})}else{var e,f;m.each(g(a).transformCache,function(b){return e=g(a).transformCache[b],"transformPerspective"===b?(f=e,!0):(9===n&&"rotateZ"===b&&(b="rotate"),void(c+=b+e+" "))}),f&&(c="perspective"+f+" "+c)}v.setPropertyValue(a,"transform",c)}};v.Hooks.register(),v.Normalizations.register(),t.hook=function(a,b,c){var e=d;return a=f(a),m.each(a,function(a,f){if(g(f)===d&&t.init(f),c===d)e===d&&(e=t.CSS.getPropertyValue(f,b));else{var h=t.CSS.setPropertyValue(f,b,c);"transform"===h[0]&&t.CSS.flushTransformCache(f),e=h}}),e};var w=function(){function a(){return h?B.promise||null:i}function e(){function a(a){function l(a,b){var c=d,e=d,g=d;return p.isArray(a)?(c=a[0],!p.isArray(a[1])&&/^[\d-]/.test(a[1])||p.isFunction(a[1])||v.RegEx.isHex.test(a[1])?g=a[1]:(p.isString(a[1])&&!v.RegEx.isHex.test(a[1])||p.isArray(a[1]))&&(e=b?a[1]:j(a[1],h.duration),a[2]!==d&&(g=a[2]))):c=a,b||(e=e||h.easing),p.isFunction(c)&&(c=c.call(f,y,x)),p.isFunction(g)&&(g=g.call(f,y,x)),[c||0,e,g]}function n(a,b){var c,d;return d=(b||"0").toString().toLowerCase().replace(/[%A-z]+$/,function(a){return c=a,""}),c||(c=v.Values.getUnitType(a)),[d,c]}function r(){var a={myParent:f.parentNode||c.body,position:v.getPropertyValue(f,"position"),fontSize:v.getPropertyValue(f,"fontSize")},d=a.position===I.lastPosition&&a.myParent===I.lastParent,e=a.fontSize===I.lastFontSize;I.lastParent=a.myParent,I.lastPosition=a.position,I.lastFontSize=a.fontSize;var h=100,i={};if(e&&d)i.emToPx=I.lastEmToPx,i.percentToPxWidth=I.lastPercentToPxWidth,i.percentToPxHeight=I.lastPercentToPxHeight;else{var j=g(f).isSVG?c.createElementNS("http://www.w3.org/2000/svg","rect"):c.createElement("div");t.init(j),a.myParent.appendChild(j),m.each(["overflow","overflowX","overflowY"],function(a,b){t.CSS.setPropertyValue(j,b,"hidden")}),t.CSS.setPropertyValue(j,"position",a.position),t.CSS.setPropertyValue(j,"fontSize",a.fontSize),t.CSS.setPropertyValue(j,"boxSizing","content-box"),m.each(["minWidth","maxWidth","width","minHeight","maxHeight","height"],function(a,b){t.CSS.setPropertyValue(j,b,h+"%")}),t.CSS.setPropertyValue(j,"paddingLeft",h+"em"),i.percentToPxWidth=I.lastPercentToPxWidth=(parseFloat(v.getPropertyValue(j,"width",null,!0))||1)/h,i.percentToPxHeight=I.lastPercentToPxHeight=(parseFloat(v.getPropertyValue(j,"height",null,!0))||1)/h,i.emToPx=I.lastEmToPx=(parseFloat(v.getPropertyValue(j,"paddingLeft"))||1)/h,a.myParent.removeChild(j)}return null===I.remToPx&&(I.remToPx=parseFloat(v.getPropertyValue(c.body,"fontSize"))||16),null===I.vwToPx&&(I.vwToPx=parseFloat(b.innerWidth)/100,I.vhToPx=parseFloat(b.innerHeight)/100),i.remToPx=I.remToPx,i.vwToPx=I.vwToPx,i.vhToPx=I.vhToPx,t.debug>=1&&console.log("Unit ratios: "+JSON.stringify(i),f),i}if(h.begin&&0===y)try{h.begin.call(o,o)}catch(u){setTimeout(function(){throw u},1)}if("scroll"===C){var w,z,A,D=/^x$/i.test(h.axis)?"Left":"Top",E=parseFloat(h.offset)||0;h.container?p.isWrapped(h.container)||p.isNode(h.container)?(h.container=h.container[0]||h.container,w=h.container["scroll"+D],A=w+m(f).position()[D.toLowerCase()]+E):h.container=null:(w=t.State.scrollAnchor[t.State["scrollProperty"+D]],z=t.State.scrollAnchor[t.State["scrollProperty"+("Left"===D?"Top":"Left")]],A=m(f).offset()[D.toLowerCase()]+E),i={scroll:{rootPropertyValue:!1,startValue:w,currentValue:w,endValue:A,unitType:"",easing:h.easing,scrollData:{container:h.container,direction:D,alternateValue:z}},element:f},t.debug&&console.log("tweensContainer (scroll): ",i.scroll,f)}else if("reverse"===C){if(!g(f).tweensContainer)return void m.dequeue(f,h.queue);"none"===g(f).opts.display&&(g(f).opts.display="auto"),"hidden"===g(f).opts.visibility&&(g(f).opts.visibility="visible"),g(f).opts.loop=!1,g(f).opts.begin=null,g(f).opts.complete=null,s.easing||delete h.easing,s.duration||delete h.duration,h=m.extend({},g(f).opts,h);var F=m.extend(!0,{},g(f).tweensContainer);for(var G in F)if("element"!==G){var H=F[G].startValue;F[G].startValue=F[G].currentValue=F[G].endValue,F[G].endValue=H,p.isEmptyObject(s)||(F[G].easing=h.easing),t.debug&&console.log("reverse tweensContainer ("+G+"): "+JSON.stringify(F[G]),f)}i=F}else if("start"===C){var F;g(f).tweensContainer&&g(f).isAnimating===!0&&(F=g(f).tweensContainer),m.each(q,function(a,b){if(RegExp("^"+v.Lists.colors.join("$|^")+"$").test(a)){var c=l(b,!0),e=c[0],f=c[1],g=c[2];if(v.RegEx.isHex.test(e)){for(var h=["Red","Green","Blue"],i=v.Values.hexToRgb(e),j=g?v.Values.hexToRgb(g):d,k=0;k<h.length;k++){var m=[i[k]];f&&m.push(f),j!==d&&m.push(j[k]),q[a+h[k]]=m}delete q[a]}}});for(var K in q){var L=l(q[K]),M=L[0],N=L[1],O=L[2];K=v.Names.camelCase(K);var P=v.Hooks.getRoot(K),Q=!1;if(g(f).isSVG||"tween"===P||v.Names.prefixCheck(P)[1]!==!1||v.Normalizations.registered[P]!==d){(h.display!==d&&null!==h.display&&"none"!==h.display||h.visibility!==d&&"hidden"!==h.visibility)&&/opacity|filter/.test(K)&&!O&&0!==M&&(O=0),h._cacheValues&&F&&F[K]?(O===d&&(O=F[K].endValue+F[K].unitType),Q=g(f).rootPropertyValueCache[P]):v.Hooks.registered[K]?O===d?(Q=v.getPropertyValue(f,P),O=v.getPropertyValue(f,K,Q)):Q=v.Hooks.templates[P][1]:O===d&&(O=v.getPropertyValue(f,K));var R,S,T,U=!1;if(R=n(K,O),O=R[0],T=R[1],R=n(K,M),M=R[0].replace(/^([+-\/*])=/,function(a,b){return U=b,""}),S=R[1],O=parseFloat(O)||0,M=parseFloat(M)||0,"%"===S&&(/^(fontSize|lineHeight)$/.test(K)?(M/=100,S="em"):/^scale/.test(K)?(M/=100,S=""):/(Red|Green|Blue)$/i.test(K)&&(M=M/100*255,S="")),/[\/*]/.test(U))S=T;else if(T!==S&&0!==O)if(0===M)S=T;else{e=e||r();var V=/margin|padding|left|right|width|text|word|letter/i.test(K)||/X$/.test(K)||"x"===K?"x":"y";
 switch(T){case"%":O*="x"===V?e.percentToPxWidth:e.percentToPxHeight;break;case"px":break;default:O*=e[T+"ToPx"]}switch(S){case"%":O*=1/("x"===V?e.percentToPxWidth:e.percentToPxHeight);break;case"px":break;default:O*=1/e[S+"ToPx"]}}switch(U){case"+":M=O+M;break;case"-":M=O-M;break;case"*":M=O*M;break;case"/":M=O/M}i[K]={rootPropertyValue:Q,startValue:O,currentValue:O,endValue:M,unitType:S,easing:N},t.debug&&console.log("tweensContainer ("+K+"): "+JSON.stringify(i[K]),f)}else t.debug&&console.log("Skipping ["+P+"] due to a lack of browser support.")}i.element=f}i.element&&(v.Values.addClass(f,"velocity-animating"),J.push(i),""===h.queue&&(g(f).tweensContainer=i,g(f).opts=h),g(f).isAnimating=!0,y===x-1?(t.State.calls.push([J,o,h,null,B.resolver]),t.State.isTicking===!1&&(t.State.isTicking=!0,k())):y++)}var e,f=this,h=m.extend({},t.defaults,s),i={};switch(g(f)===d&&t.init(f),parseFloat(h.delay)&&h.queue!==!1&&m.queue(f,h.queue,function(a){t.velocityQueueEntryFlag=!0,g(f).delayTimer={setTimeout:setTimeout(a,parseFloat(h.delay)),next:a}}),h.duration.toString().toLowerCase()){case"fast":h.duration=200;break;case"normal":h.duration=r;break;case"slow":h.duration=600;break;default:h.duration=parseFloat(h.duration)||1}t.mock!==!1&&(t.mock===!0?h.duration=h.delay=1:(h.duration*=parseFloat(t.mock)||1,h.delay*=parseFloat(t.mock)||1)),h.easing=j(h.easing,h.duration),h.begin&&!p.isFunction(h.begin)&&(h.begin=null),h.progress&&!p.isFunction(h.progress)&&(h.progress=null),h.complete&&!p.isFunction(h.complete)&&(h.complete=null),h.display!==d&&null!==h.display&&(h.display=h.display.toString().toLowerCase(),"auto"===h.display&&(h.display=t.CSS.Values.getDisplayType(f))),h.visibility!==d&&null!==h.visibility&&(h.visibility=h.visibility.toString().toLowerCase()),h.mobileHA=h.mobileHA&&t.State.isMobile&&!t.State.isGingerbread,h.queue===!1?h.delay?setTimeout(a,h.delay):a():m.queue(f,h.queue,function(b,c){return c===!0?(B.promise&&B.resolver(o),!0):(t.velocityQueueEntryFlag=!0,void a(b))}),""!==h.queue&&"fx"!==h.queue||"inprogress"===m.queue(f)[0]||m.dequeue(f)}var h,i,n,o,q,s,u=arguments[0]&&(arguments[0].p||m.isPlainObject(arguments[0].properties)&&!arguments[0].properties.names||p.isString(arguments[0].properties));if(p.isWrapped(this)?(h=!1,n=0,o=this,i=this):(h=!0,n=1,o=u?arguments[0].elements||arguments[0].e:arguments[0]),o=f(o)){u?(q=arguments[0].properties||arguments[0].p,s=arguments[0].options||arguments[0].o):(q=arguments[n],s=arguments[n+1]);var x=o.length,y=0;if(!/^(stop|finish)$/i.test(q)&&!m.isPlainObject(s)){var z=n+1;s={};for(var A=z;A<arguments.length;A++)p.isArray(arguments[A])||!/^(fast|normal|slow)$/i.test(arguments[A])&&!/^\d/.test(arguments[A])?p.isString(arguments[A])||p.isArray(arguments[A])?s.easing=arguments[A]:p.isFunction(arguments[A])&&(s.complete=arguments[A]):s.duration=arguments[A]}var B={promise:null,resolver:null,rejecter:null};h&&t.Promise&&(B.promise=new t.Promise(function(a,b){B.resolver=a,B.rejecter=b}));var C;switch(q){case"scroll":C="scroll";break;case"reverse":C="reverse";break;case"finish":case"stop":m.each(o,function(a,b){g(b)&&g(b).delayTimer&&(clearTimeout(g(b).delayTimer.setTimeout),g(b).delayTimer.next&&g(b).delayTimer.next(),delete g(b).delayTimer)});var D=[];return m.each(t.State.calls,function(a,b){b&&m.each(b[1],function(c,e){var f=s===d?"":s;return f===!0||b[2].queue===f||s===d&&b[2].queue===!1?void m.each(o,function(c,d){d===e&&((s===!0||p.isString(s))&&(m.each(m.queue(d,p.isString(s)?s:""),function(a,b){p.isFunction(b)&&b(null,!0)}),m.queue(d,p.isString(s)?s:"",[])),"stop"===q?(g(d)&&g(d).tweensContainer&&f!==!1&&m.each(g(d).tweensContainer,function(a,b){b.endValue=b.currentValue}),D.push(a)):"finish"===q&&(b[2].duration=1))}):!0})}),"stop"===q&&(m.each(D,function(a,b){l(b,!0)}),B.promise&&B.resolver(o)),a();default:if(!m.isPlainObject(q)||p.isEmptyObject(q)){if(p.isString(q)&&t.Redirects[q]){var E=m.extend({},s),F=E.duration,G=E.delay||0;return E.backwards===!0&&(o=m.extend(!0,[],o).reverse()),m.each(o,function(a,b){parseFloat(E.stagger)?E.delay=G+parseFloat(E.stagger)*a:p.isFunction(E.stagger)&&(E.delay=G+E.stagger.call(b,a,x)),E.drag&&(E.duration=parseFloat(F)||(/^(callout|transition)/.test(q)?1e3:r),E.duration=Math.max(E.duration*(E.backwards?1-a/x:(a+1)/x),.75*E.duration,200)),t.Redirects[q].call(b,b,E||{},a,x,o,B.promise?B:d)}),a()}var H="Velocity: First argument ("+q+") was not a property map, a known action, or a registered redirect. Aborting.";return B.promise?B.rejecter(new Error(H)):console.log(H),a()}C="start"}var I={lastParent:null,lastPosition:null,lastFontSize:null,lastPercentToPxWidth:null,lastPercentToPxHeight:null,lastEmToPx:null,remToPx:null,vwToPx:null,vhToPx:null},J=[];m.each(o,function(a,b){p.isNode(b)&&e.call(b)});var K,E=m.extend({},t.defaults,s);if(E.loop=parseInt(E.loop),K=2*E.loop-1,E.loop)for(var L=0;K>L;L++){var M={delay:E.delay,progress:E.progress};L===K-1&&(M.display=E.display,M.visibility=E.visibility,M.complete=E.complete),w(o,"reverse",M)}return a()}};t=m.extend(w,t),t.animate=w;var x=b.requestAnimationFrame||o;return t.State.isMobile||c.hidden===d||c.addEventListener("visibilitychange",function(){c.hidden?(x=function(a){return setTimeout(function(){a(!0)},16)},k()):x=b.requestAnimationFrame||o}),a.Velocity=t,a!==b&&(a.fn.velocity=w,a.fn.velocity.defaults=t.defaults),m.each(["Down","Up"],function(a,b){t.Redirects["slide"+b]=function(a,c,e,f,g,h){var i=m.extend({},c),j=i.begin,k=i.complete,l={height:"",marginTop:"",marginBottom:"",paddingTop:"",paddingBottom:""},n={};i.display===d&&(i.display="Down"===b?"inline"===t.CSS.Values.getDisplayType(a)?"inline-block":"block":"none"),i.begin=function(){j&&j.call(g,g);for(var c in l){n[c]=a.style[c];var d=t.CSS.getPropertyValue(a,c);l[c]="Down"===b?[d,0]:[0,d]}n.overflow=a.style.overflow,a.style.overflow="hidden"},i.complete=function(){for(var b in n)a.style[b]=n[b];k&&k.call(g,g),h&&h.resolver(g)},t(a,l,i)}}),m.each(["In","Out"],function(a,b){t.Redirects["fade"+b]=function(a,c,e,f,g,h){var i=m.extend({},c),j={opacity:"In"===b?1:0},k=i.complete;i.complete=e!==f-1?i.begin=null:function(){k&&k.call(g,g),h&&h.resolver(g)},i.display===d&&(i.display="In"===b?"auto":"none"),t(this,j,i)}}),t}(window.jQuery||window.Zepto||window,window,document)})),!function(a,b,c,d){"use strict";function e(a,b,c){return setTimeout(k(a,c),b)}function f(a,b,c){return Array.isArray(a)?(g(a,c[b],c),!0):!1}function g(a,b,c){var e;if(a)if(a.forEach)a.forEach(b,c);else if(a.length!==d)for(e=0;e<a.length;)b.call(c,a[e],e,a),e++;else for(e in a)a.hasOwnProperty(e)&&b.call(c,a[e],e,a)}function h(a,b,c){for(var e=Object.keys(b),f=0;f<e.length;)(!c||c&&a[e[f]]===d)&&(a[e[f]]=b[e[f]]),f++;return a}function i(a,b){return h(a,b,!0)}function j(a,b,c){var d,e=b.prototype;d=a.prototype=Object.create(e),d.constructor=a,d._super=e,c&&h(d,c)}function k(a,b){return function(){return a.apply(b,arguments)}}function l(a,b){return typeof a==ka?a.apply(b?b[0]||d:d,b):a}function m(a,b){return a===d?b:a}function n(a,b,c){g(r(b),function(b){a.addEventListener(b,c,!1)})}function o(a,b,c){g(r(b),function(b){a.removeEventListener(b,c,!1)})}function p(a,b){for(;a;){if(a==b)return!0;a=a.parentNode}return!1}function q(a,b){return a.indexOf(b)>-1}function r(a){return a.trim().split(/\s+/g)}function s(a,b,c){if(a.indexOf&&!c)return a.indexOf(b);for(var d=0;d<a.length;){if(c&&a[d][c]==b||!c&&a[d]===b)return d;d++}return-1}function t(a){return Array.prototype.slice.call(a,0)}function u(a,b,c){for(var d=[],e=[],f=0;f<a.length;){var g=b?a[f][b]:a[f];s(e,g)<0&&d.push(a[f]),e[f]=g,f++}return c&&(d=b?d.sort(function(a,c){return a[b]>c[b]}):d.sort()),d}function v(a,b){for(var c,e,f=b[0].toUpperCase()+b.slice(1),g=0;g<ia.length;){if(c=ia[g],e=c?c+f:b,e in a)return e;g++}return d}function w(){return oa++}function x(a){var b=a.ownerDocument;return b.defaultView||b.parentWindow}function y(a,b){var c=this;this.manager=a,this.callback=b,this.element=a.element,this.target=a.options.inputTarget,this.domHandler=function(b){l(a.options.enable,[a])&&c.handler(b)},this.init()}function z(a){var b,c=a.options.inputClass;return new(b=c?c:ra?N:sa?Q:qa?S:M)(a,A)}function A(a,b,c){var d=c.pointers.length,e=c.changedPointers.length,f=b&ya&&0===d-e,g=b&(Aa|Ba)&&0===d-e;c.isFirst=!!f,c.isFinal=!!g,f&&(a.session={}),c.eventType=b,B(a,c),a.emit("hammer.input",c),a.recognize(c),a.session.prevInput=c}function B(a,b){var c=a.session,d=b.pointers,e=d.length;c.firstInput||(c.firstInput=E(b)),e>1&&!c.firstMultiple?c.firstMultiple=E(b):1===e&&(c.firstMultiple=!1);var f=c.firstInput,g=c.firstMultiple,h=g?g.center:f.center,i=b.center=F(d);b.timeStamp=na(),b.deltaTime=b.timeStamp-f.timeStamp,b.angle=J(h,i),b.distance=I(h,i),C(c,b),b.offsetDirection=H(b.deltaX,b.deltaY),b.scale=g?L(g.pointers,d):1,b.rotation=g?K(g.pointers,d):0,D(c,b);var j=a.element;p(b.srcEvent.target,j)&&(j=b.srcEvent.target),b.target=j}function C(a,b){var c=b.center,d=a.offsetDelta||{},e=a.prevDelta||{},f=a.prevInput||{};(b.eventType===ya||f.eventType===Aa)&&(e=a.prevDelta={x:f.deltaX||0,y:f.deltaY||0},d=a.offsetDelta={x:c.x,y:c.y}),b.deltaX=e.x+(c.x-d.x),b.deltaY=e.y+(c.y-d.y)}function D(a,b){var c,e,f,g,h=a.lastInterval||b,i=b.timeStamp-h.timeStamp;if(b.eventType!=Ba&&(i>xa||h.velocity===d)){var j=h.deltaX-b.deltaX,k=h.deltaY-b.deltaY,l=G(i,j,k);e=l.x,f=l.y,c=ma(l.x)>ma(l.y)?l.x:l.y,g=H(j,k),a.lastInterval=b}else c=h.velocity,e=h.velocityX,f=h.velocityY,g=h.direction;b.velocity=c,b.velocityX=e,b.velocityY=f,b.direction=g}function E(a){for(var b=[],c=0;c<a.pointers.length;)b[c]={clientX:la(a.pointers[c].clientX),clientY:la(a.pointers[c].clientY)},c++;return{timeStamp:na(),pointers:b,center:F(b),deltaX:a.deltaX,deltaY:a.deltaY}}function F(a){var b=a.length;if(1===b)return{x:la(a[0].clientX),y:la(a[0].clientY)};for(var c=0,d=0,e=0;b>e;)c+=a[e].clientX,d+=a[e].clientY,e++;return{x:la(c/b),y:la(d/b)}}function G(a,b,c){return{x:b/a||0,y:c/a||0}}function H(a,b){return a===b?Ca:ma(a)>=ma(b)?a>0?Da:Ea:b>0?Fa:Ga}function I(a,b,c){c||(c=Ka);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return Math.sqrt(d*d+e*e)}function J(a,b,c){c||(c=Ka);var d=b[c[0]]-a[c[0]],e=b[c[1]]-a[c[1]];return 180*Math.atan2(e,d)/Math.PI}function K(a,b){return J(b[1],b[0],La)-J(a[1],a[0],La)}function L(a,b){return I(b[0],b[1],La)/I(a[0],a[1],La)}function M(){this.evEl=Na,this.evWin=Oa,this.allow=!0,this.pressed=!1,y.apply(this,arguments)}function N(){this.evEl=Ra,this.evWin=Sa,y.apply(this,arguments),this.store=this.manager.session.pointerEvents=[]}function O(){this.evTarget=Ua,this.evWin=Va,this.started=!1,y.apply(this,arguments)}function P(a,b){var c=t(a.touches),d=t(a.changedTouches);return b&(Aa|Ba)&&(c=u(c.concat(d),"identifier",!0)),[c,d]}function Q(){this.evTarget=Xa,this.targetIds={},y.apply(this,arguments)}function R(a,b){var c=t(a.touches),d=this.targetIds;if(b&(ya|za)&&1===c.length)return d[c[0].identifier]=!0,[c,c];var e,f,g=t(a.changedTouches),h=[],i=this.target;if(f=c.filter(function(a){return p(a.target,i)}),b===ya)for(e=0;e<f.length;)d[f[e].identifier]=!0,e++;for(e=0;e<g.length;)d[g[e].identifier]&&h.push(g[e]),b&(Aa|Ba)&&delete d[g[e].identifier],e++;return h.length?[u(f.concat(h),"identifier",!0),h]:void 0}function S(){y.apply(this,arguments);var a=k(this.handler,this);this.touch=new Q(this.manager,a),this.mouse=new M(this.manager,a)}function T(a,b){this.manager=a,this.set(b)}function U(a){if(q(a,bb))return bb;var b=q(a,cb),c=q(a,db);return b&&c?cb+" "+db:b||c?b?cb:db:q(a,ab)?ab:_a}function V(a){this.id=w(),this.manager=null,this.options=i(a||{},this.defaults),this.options.enable=m(this.options.enable,!0),this.state=eb,this.simultaneous={},this.requireFail=[]}function W(a){return a&jb?"cancel":a&hb?"end":a&gb?"move":a&fb?"start":""}function X(a){return a==Ga?"down":a==Fa?"up":a==Da?"left":a==Ea?"right":""}function Y(a,b){var c=b.manager;return c?c.get(a):a}function Z(){V.apply(this,arguments)}function $(){Z.apply(this,arguments),this.pX=null,this.pY=null}function _(){Z.apply(this,arguments)}function aa(){V.apply(this,arguments),this._timer=null,this._input=null}function ba(){Z.apply(this,arguments)}function ca(){Z.apply(this,arguments)}function da(){V.apply(this,arguments),this.pTime=!1,this.pCenter=!1,this._timer=null,this._input=null,this.count=0}function ea(a,b){return b=b||{},b.recognizers=m(b.recognizers,ea.defaults.preset),new fa(a,b)}function fa(a,b){b=b||{},this.options=i(b,ea.defaults),this.options.inputTarget=this.options.inputTarget||a,this.handlers={},this.session={},this.recognizers=[],this.element=a,this.input=z(this),this.touchAction=new T(this,this.options.touchAction),ga(this,!0),g(b.recognizers,function(a){var b=this.add(new a[0](a[1]));a[2]&&b.recognizeWith(a[2]),a[3]&&b.requireFailure(a[3])},this)}function ga(a,b){var c=a.element;g(a.options.cssProps,function(a,d){c.style[v(c.style,d)]=b?a:""})}function ha(a,c){var d=b.createEvent("Event");d.initEvent(a,!0,!0),d.gesture=c,c.target.dispatchEvent(d)}var ia=["","webkit","moz","MS","ms","o"],ja=b.createElement("div"),ka="function",la=Math.round,ma=Math.abs,na=Date.now,oa=1,pa=/mobile|tablet|ip(ad|hone|od)|android/i,qa="ontouchstart"in a,ra=v(a,"PointerEvent")!==d,sa=qa&&pa.test(navigator.userAgent),ta="touch",ua="pen",va="mouse",wa="kinect",xa=25,ya=1,za=2,Aa=4,Ba=8,Ca=1,Da=2,Ea=4,Fa=8,Ga=16,Ha=Da|Ea,Ia=Fa|Ga,Ja=Ha|Ia,Ka=["x","y"],La=["clientX","clientY"];y.prototype={handler:function(){},init:function(){this.evEl&&n(this.element,this.evEl,this.domHandler),this.evTarget&&n(this.target,this.evTarget,this.domHandler),this.evWin&&n(x(this.element),this.evWin,this.domHandler)},destroy:function(){this.evEl&&o(this.element,this.evEl,this.domHandler),this.evTarget&&o(this.target,this.evTarget,this.domHandler),this.evWin&&o(x(this.element),this.evWin,this.domHandler)}};var Ma={mousedown:ya,mousemove:za,mouseup:Aa},Na="mousedown",Oa="mousemove mouseup";j(M,y,{handler:function(a){var b=Ma[a.type];b&ya&&0===a.button&&(this.pressed=!0),b&za&&1!==a.which&&(b=Aa),this.pressed&&this.allow&&(b&Aa&&(this.pressed=!1),this.callback(this.manager,b,{pointers:[a],changedPointers:[a],pointerType:va,srcEvent:a}))}});var Pa={pointerdown:ya,pointermove:za,pointerup:Aa,pointercancel:Ba,pointerout:Ba},Qa={2:ta,3:ua,4:va,5:wa},Ra="pointerdown",Sa="pointermove pointerup pointercancel";a.MSPointerEvent&&(Ra="MSPointerDown",Sa="MSPointerMove MSPointerUp MSPointerCancel"),j(N,y,{handler:function(a){var b=this.store,c=!1,d=a.type.toLowerCase().replace("ms",""),e=Pa[d],f=Qa[a.pointerType]||a.pointerType,g=f==ta,h=s(b,a.pointerId,"pointerId");e&ya&&(0===a.button||g)?0>h&&(b.push(a),h=b.length-1):e&(Aa|Ba)&&(c=!0),0>h||(b[h]=a,this.callback(this.manager,e,{pointers:b,changedPointers:[a],pointerType:f,srcEvent:a}),c&&b.splice(h,1))}});var Ta={touchstart:ya,touchmove:za,touchend:Aa,touchcancel:Ba},Ua="touchstart",Va="touchstart touchmove touchend touchcancel";j(O,y,{handler:function(a){var b=Ta[a.type];if(b===ya&&(this.started=!0),this.started){var c=P.call(this,a,b);b&(Aa|Ba)&&0===c[0].length-c[1].length&&(this.started=!1),this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:ta,srcEvent:a})}}});var Wa={touchstart:ya,touchmove:za,touchend:Aa,touchcancel:Ba},Xa="touchstart touchmove touchend touchcancel";j(Q,y,{handler:function(a){var b=Wa[a.type],c=R.call(this,a,b);c&&this.callback(this.manager,b,{pointers:c[0],changedPointers:c[1],pointerType:ta,srcEvent:a})}}),j(S,y,{handler:function(a,b,c){var d=c.pointerType==ta,e=c.pointerType==va;if(d)this.mouse.allow=!1;else if(e&&!this.mouse.allow)return;b&(Aa|Ba)&&(this.mouse.allow=!0),this.callback(a,b,c)},destroy:function(){this.touch.destroy(),this.mouse.destroy()}});var Ya=v(ja.style,"touchAction"),Za=Ya!==d,$a="compute",_a="auto",ab="manipulation",bb="none",cb="pan-x",db="pan-y";T.prototype={set:function(a){a==$a&&(a=this.compute()),Za&&(this.manager.element.style[Ya]=a),this.actions=a.toLowerCase().trim()},update:function(){this.set(this.manager.options.touchAction)},compute:function(){var a=[];return g(this.manager.recognizers,function(b){l(b.options.enable,[b])&&(a=a.concat(b.getTouchAction()))}),U(a.join(" "))},preventDefaults:function(a){if(!Za){var b=a.srcEvent,c=a.offsetDirection;if(this.manager.session.prevented)return void b.preventDefault();var d=this.actions,e=q(d,bb),f=q(d,db),g=q(d,cb);return e||f&&c&Ha||g&&c&Ia?this.preventSrc(b):void 0}},preventSrc:function(a){this.manager.session.prevented=!0,a.preventDefault()}};var eb=1,fb=2,gb=4,hb=8,ib=hb,jb=16,kb=32;V.prototype={defaults:{},set:function(a){return h(this.options,a),this.manager&&this.manager.touchAction.update(),this},recognizeWith:function(a){if(f(a,"recognizeWith",this))return this;var b=this.simultaneous;return a=Y(a,this),b[a.id]||(b[a.id]=a,a.recognizeWith(this)),this},dropRecognizeWith:function(a){return f(a,"dropRecognizeWith",this)?this:(a=Y(a,this),delete this.simultaneous[a.id],this)},requireFailure:function(a){if(f(a,"requireFailure",this))return this;var b=this.requireFail;return a=Y(a,this),-1===s(b,a)&&(b.push(a),a.requireFailure(this)),this},dropRequireFailure:function(a){if(f(a,"dropRequireFailure",this))return this;a=Y(a,this);var b=s(this.requireFail,a);return b>-1&&this.requireFail.splice(b,1),this},hasRequireFailures:function(){return this.requireFail.length>0},canRecognizeWith:function(a){return!!this.simultaneous[a.id]},emit:function(a){function b(b){c.manager.emit(c.options.event+(b?W(d):""),a)}var c=this,d=this.state;hb>d&&b(!0),b(),d>=hb&&b(!0)},tryEmit:function(a){return this.canEmit()?this.emit(a):void(this.state=kb)},canEmit:function(){for(var a=0;a<this.requireFail.length;){if(!(this.requireFail[a].state&(kb|eb)))return!1;a++}return!0},recognize:function(a){var b=h({},a);return l(this.options.enable,[this,b])?(this.state&(ib|jb|kb)&&(this.state=eb),this.state=this.process(b),void(this.state&(fb|gb|hb|jb)&&this.tryEmit(b))):(this.reset(),void(this.state=kb))},process:function(){},getTouchAction:function(){},reset:function(){}},j(Z,V,{defaults:{pointers:1},attrTest:function(a){var b=this.options.pointers;return 0===b||a.pointers.length===b},process:function(a){var b=this.state,c=a.eventType,d=b&(fb|gb),e=this.attrTest(a);return d&&(c&Ba||!e)?b|jb:d||e?c&Aa?b|hb:b&fb?b|gb:fb:kb}}),j($,Z,{defaults:{event:"pan",threshold:10,pointers:1,direction:Ja},getTouchAction:function(){var a=this.options.direction,b=[];return a&Ha&&b.push(db),a&Ia&&b.push(cb),b},directionTest:function(a){var b=this.options,c=!0,d=a.distance,e=a.direction,f=a.deltaX,g=a.deltaY;return e&b.direction||(b.direction&Ha?(e=0===f?Ca:0>f?Da:Ea,c=f!=this.pX,d=Math.abs(a.deltaX)):(e=0===g?Ca:0>g?Fa:Ga,c=g!=this.pY,d=Math.abs(a.deltaY))),a.direction=e,c&&d>b.threshold&&e&b.direction},attrTest:function(a){return Z.prototype.attrTest.call(this,a)&&(this.state&fb||!(this.state&fb)&&this.directionTest(a))},emit:function(a){this.pX=a.deltaX,this.pY=a.deltaY;var b=X(a.direction);b&&this.manager.emit(this.options.event+b,a),this._super.emit.call(this,a)}}),j(_,Z,{defaults:{event:"pinch",threshold:0,pointers:2},getTouchAction:function(){return[bb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.scale-1)>this.options.threshold||this.state&fb)},emit:function(a){if(this._super.emit.call(this,a),1!==a.scale){var b=a.scale<1?"in":"out";this.manager.emit(this.options.event+b,a)}}}),j(aa,V,{defaults:{event:"press",pointers:1,time:500,threshold:5},getTouchAction:function(){return[_a]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime>b.time;if(this._input=a,!d||!c||a.eventType&(Aa|Ba)&&!f)this.reset();else if(a.eventType&ya)this.reset(),this._timer=e(function(){this.state=ib,this.tryEmit()},b.time,this);else if(a.eventType&Aa)return ib;return kb},reset:function(){clearTimeout(this._timer)},emit:function(a){this.state===ib&&(a&&a.eventType&Aa?this.manager.emit(this.options.event+"up",a):(this._input.timeStamp=na(),this.manager.emit(this.options.event,this._input)))}}),j(ba,Z,{defaults:{event:"rotate",threshold:0,pointers:2},getTouchAction:function(){return[bb]},attrTest:function(a){return this._super.attrTest.call(this,a)&&(Math.abs(a.rotation)>this.options.threshold||this.state&fb)}}),j(ca,Z,{defaults:{event:"swipe",threshold:10,velocity:.65,direction:Ha|Ia,pointers:1},getTouchAction:function(){return $.prototype.getTouchAction.call(this)},attrTest:function(a){var b,c=this.options.direction;return c&(Ha|Ia)?b=a.velocity:c&Ha?b=a.velocityX:c&Ia&&(b=a.velocityY),this._super.attrTest.call(this,a)&&c&a.direction&&a.distance>this.options.threshold&&ma(b)>this.options.velocity&&a.eventType&Aa},emit:function(a){var b=X(a.direction);b&&this.manager.emit(this.options.event+b,a),this.manager.emit(this.options.event,a)}}),j(da,V,{defaults:{event:"tap",pointers:1,taps:1,interval:300,time:250,threshold:2,posThreshold:10},getTouchAction:function(){return[ab]},process:function(a){var b=this.options,c=a.pointers.length===b.pointers,d=a.distance<b.threshold,f=a.deltaTime<b.time;if(this.reset(),a.eventType&ya&&0===this.count)return this.failTimeout();if(d&&f&&c){if(a.eventType!=Aa)return this.failTimeout();var g=this.pTime?a.timeStamp-this.pTime<b.interval:!0,h=!this.pCenter||I(this.pCenter,a.center)<b.posThreshold;this.pTime=a.timeStamp,this.pCenter=a.center,h&&g?this.count+=1:this.count=1,this._input=a;var i=this.count%b.taps;if(0===i)return this.hasRequireFailures()?(this._timer=e(function(){this.state=ib,this.tryEmit()},b.interval,this),fb):ib}return kb},failTimeout:function(){return this._timer=e(function(){this.state=kb},this.options.interval,this),kb},reset:function(){clearTimeout(this._timer)},emit:function(){this.state==ib&&(this._input.tapCount=this.count,this.manager.emit(this.options.event,this._input))}}),ea.VERSION="2.0.4",ea.defaults={domEvents:!1,touchAction:$a,enable:!0,inputTarget:null,inputClass:null,preset:[[ba,{enable:!1}],[_,{enable:!1},["rotate"]],[ca,{direction:Ha}],[$,{direction:Ha},["swipe"]],[da],[da,{event:"doubletap",taps:2},["tap"]],[aa]],cssProps:{userSelect:"default",touchSelect:"none",touchCallout:"none",contentZooming:"none",userDrag:"none",tapHighlightColor:"rgba(0,0,0,0)"}};var lb=1,mb=2;fa.prototype={set:function(a){return h(this.options,a),a.touchAction&&this.touchAction.update(),a.inputTarget&&(this.input.destroy(),this.input.target=a.inputTarget,this.input.init()),this},stop:function(a){this.session.stopped=a?mb:lb},recognize:function(a){var b=this.session;if(!b.stopped){this.touchAction.preventDefaults(a);var c,d=this.recognizers,e=b.curRecognizer;(!e||e&&e.state&ib)&&(e=b.curRecognizer=null);for(var f=0;f<d.length;)c=d[f],b.stopped===mb||e&&c!=e&&!c.canRecognizeWith(e)?c.reset():c.recognize(a),!e&&c.state&(fb|gb|hb)&&(e=b.curRecognizer=c),f++}},get:function(a){if(a instanceof V)return a;for(var b=this.recognizers,c=0;c<b.length;c++)if(b[c].options.event==a)return b[c];return null},add:function(a){if(f(a,"add",this))return this;var b=this.get(a.options.event);return b&&this.remove(b),this.recognizers.push(a),a.manager=this,this.touchAction.update(),a},remove:function(a){if(f(a,"remove",this))return this;var b=this.recognizers;return a=this.get(a),b.splice(s(b,a),1),this.touchAction.update(),this},on:function(a,b){var c=this.handlers;return g(r(a),function(a){c[a]=c[a]||[],c[a].push(b)}),this},off:function(a,b){var c=this.handlers;return g(r(a),function(a){b?c[a].splice(s(c[a],b),1):delete c[a]}),this},emit:function(a,b){this.options.domEvents&&ha(a,b);var c=this.handlers[a]&&this.handlers[a].slice();if(c&&c.length){b.type=a,b.preventDefault=function(){b.srcEvent.preventDefault()};for(var d=0;d<c.length;)c[d](b),d++}},destroy:function(){this.element&&ga(this,!1),this.handlers={},this.session={},this.input.destroy(),this.element=null}},h(ea,{INPUT_START:ya,INPUT_MOVE:za,INPUT_END:Aa,INPUT_CANCEL:Ba,STATE_POSSIBLE:eb,STATE_BEGAN:fb,STATE_CHANGED:gb,STATE_ENDED:hb,STATE_RECOGNIZED:ib,STATE_CANCELLED:jb,STATE_FAILED:kb,DIRECTION_NONE:Ca,DIRECTION_LEFT:Da,DIRECTION_RIGHT:Ea,DIRECTION_UP:Fa,DIRECTION_DOWN:Ga,DIRECTION_HORIZONTAL:Ha,DIRECTION_VERTICAL:Ia,DIRECTION_ALL:Ja,Manager:fa,Input:y,TouchAction:T,TouchInput:Q,MouseInput:M,PointerEventInput:N,TouchMouseInput:S,SingleTouchInput:O,Recognizer:V,AttrRecognizer:Z,Tap:da,Pan:$,Swipe:ca,Pinch:_,Rotate:ba,Press:aa,on:n,off:o,each:g,merge:i,extend:h,inherit:j,bindFn:k,prefixed:v}),typeof define==ka&&define.amd?define(function(){return ea}):"undefined"!=typeof module&&module.exports?module.exports=ea:a[c]=ea}(window,document,"Hammer"),function(a){"function"==typeof define&&define.amd?define(["jquery","hammerjs"],a):"object"==typeof exports?a(require("jquery"),require("hammerjs")):a(jQuery,Hammer)}(function(a,b){function c(c,d){var e=a(c);e.data("hammer")||e.data("hammer",new b(e[0],d))}a.fn.hammer=function(a){return this.each(function(){c(this,a)})},b.Manager.prototype.emit=function(b){return function(c,d){b.call(this,c,d),a(this.element).trigger({type:c,gesture:d})}}(b.Manager.prototype.emit)}),function(a){a.Package?Materialize={}:a.Materialize={}}(window),Materialize.guid=function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}}(),Materialize.elementOrParentIsFixed=function(a){var b=$(a),c=b.add(b.parents()),d=!1;return c.each(function(){return"fixed"===$(this).css("position")?(d=!0,!1):void 0}),d};var Vel;Vel=$?$.Velocity:jQuery?jQuery.Velocity:Velocity,function(a){a.fn.collapsible=function(b){var c={accordion:void 0};return b=a.extend(c,b),this.each(function(){function c(b){h=g.find("> li > .collapsible-header"),b.hasClass("active")?b.parent().addClass("active"):b.parent().removeClass("active"),b.parent().hasClass("active")?b.siblings(".collapsible-body").stop(!0,!1).slideDown({duration:350,easing:"easeOutQuart",queue:!1,complete:function(){a(this).css("height","")}}):b.siblings(".collapsible-body").stop(!0,!1).slideUp({duration:350,easing:"easeOutQuart",queue:!1,complete:function(){a(this).css("height","")}}),h.not(b).removeClass("active").parent().removeClass("active"),h.not(b).parent().children(".collapsible-body").stop(!0,!1).slideUp({duration:350,easing:"easeOutQuart",queue:!1,complete:function(){a(this).css("height","")}})}function d(b){b.hasClass("active")?b.parent().addClass("active"):b.parent().removeClass("active"),b.parent().hasClass("active")?b.siblings(".collapsible-body").stop(!0,!1).slideDown({duration:350,easing:"easeOutQuart",queue:!1,complete:function(){a(this).css("height","")}}):b.siblings(".collapsible-body").stop(!0,!1).slideUp({duration:350,easing:"easeOutQuart",queue:!1,complete:function(){a(this).css("height","")}})}function e(a){var b=f(a);return b.length>0}function f(a){return a.closest("li > .collapsible-header")}var g=a(this),h=a(this).find("> li > .collapsible-header"),i=g.data("collapsible");g.off("click.collapse","> li > .collapsible-header"),h.off("click.collapse"),g.on("click.collapse","> li > .collapsible-header",function(g){var h=a(this),j=a(g.target);e(j)&&(j=f(j)),j.toggleClass("active"),b.accordion||"accordion"===i||void 0===i?c(j):(d(j),h.hasClass("active")&&d(h))});var h=g.find("> li > .collapsible-header");b.accordion||"accordion"===i||void 0===i?c(h.filter(".active").first()):h.filter(".active").each(function(){d(a(this))})})},a(document).ready(function(){a(".collapsible").collapsible()})}(jQuery),function(a){a.fn.scrollTo=function(b){return a(this).scrollTop(a(this).scrollTop()-a(this).offset().top+a(b).offset().top),this},a.fn.dropdown=function(b){var c={inDuration:300,outDuration:225,constrain_width:!0,hover:!1,gutter:0,belowOrigin:!1,alignment:"left"};this.each(function(){function d(){void 0!==g.data("induration")&&(h.inDuration=g.data("inDuration")),void 0!==g.data("outduration")&&(h.outDuration=g.data("outDuration")),void 0!==g.data("constrainwidth")&&(h.constrain_width=g.data("constrainwidth")),void 0!==g.data("hover")&&(h.hover=g.data("hover")),void 0!==g.data("gutter")&&(h.gutter=g.data("gutter")),void 0!==g.data("beloworigin")&&(h.belowOrigin=g.data("beloworigin")),void 0!==g.data("alignment")&&(h.alignment=g.data("alignment"))}function e(b){"focus"===b&&(i=!0),d(),j.addClass("active"),g.addClass("active"),h.constrain_width===!0?j.css("width",g.outerWidth()):j.css("white-space","nowrap");var c=window.innerHeight,e=g.innerHeight(),f=g.offset().left,k=g.offset().top-a(window).scrollTop(),l=h.alignment,m=0,n=0,o=0;h.belowOrigin===!0&&(o=e);var p=0,q=g.parent();if(!q.is("body")&&q[0].scrollHeight>q[0].clientHeight&&(p=q[0].scrollTop),f+j.innerWidth()>a(window).width()?l="right":f-j.innerWidth()+g.innerWidth()<0&&(l="left"),k+j.innerHeight()>c)if(k+e-j.innerHeight()<0){var r=c-k-o;j.css("max-height",r)}else o||(o+=e),o-=j.innerHeight();if("left"===l)m=h.gutter,n=g.position().left+m;else if("right"===l){var s=g.position().left+g.outerWidth()-j.outerWidth();m=-h.gutter,n=s+m}j.css({position:"absolute",top:g.position().top+o+p,left:n}),j.stop(!0,!0).css("opacity",0).slideDown({queue:!1,duration:h.inDuration,easing:"easeOutCubic",complete:function(){a(this).css("height","")}}).animate({opacity:1},{queue:!1,duration:h.inDuration,easing:"easeOutSine"})}function f(){i=!1,j.fadeOut(h.outDuration),j.removeClass("active"),g.removeClass("active"),setTimeout(function(){j.css("max-height","")},h.outDuration)}var g=a(this),h=a.extend({},c,b),i=!1,j=a("#"+g.attr("data-activates"));if(d(),g.after(j),h.hover){var k=!1;g.unbind("click."+g.attr("id")),g.on("mouseenter",function(a){k===!1&&(e(),k=!0)}),g.on("mouseleave",function(b){var c=b.toElement||b.relatedTarget;a(c).closest(".dropdown-content").is(j)||(j.stop(!0,!0),f(),k=!1)}),j.on("mouseleave",function(b){var c=b.toElement||b.relatedTarget;a(c).closest(".dropdown-button").is(g)||(j.stop(!0,!0),f(),k=!1)})}else g.unbind("click."+g.attr("id")),g.bind("click."+g.attr("id"),function(b){i||(g[0]!=b.currentTarget||g.hasClass("active")||0!==a(b.target).closest(".dropdown-content").length?g.hasClass("active")&&(f(),a(document).unbind("click."+j.attr("id")+" touchstart."+j.attr("id"))):(b.preventDefault(),e("click")),j.hasClass("active")&&a(document).bind("click."+j.attr("id")+" touchstart."+j.attr("id"),function(b){j.is(b.target)||g.is(b.target)||g.find(b.target).length||(f(),a(document).unbind("click."+j.attr("id")+" touchstart."+j.attr("id")))}))});g.on("open",function(a,b){e(b)}),g.on("close",f)})},a(document).ready(function(){a(".dropdown-button").dropdown()})}(jQuery),function(a){var b=0,c=0,d=function(){return c++,"materialize-lean-overlay-"+c};a.fn.extend({openModal:function(c){var e=a("body"),f=e.innerWidth();e.css("overflow","hidden"),e.width(f);var g={opacity:.5,in_duration:350,out_duration:250,ready:void 0,complete:void 0,dismissible:!0,starting_top:"4%"},h=a(this);h.hasClass("open")||(overlayID=d(),$overlay=a('<div class="lean-overlay"></div>'),lStack=++b,$overlay.attr("id",overlayID).css("z-index",1e3+2*lStack),h.data("overlay-id",overlayID).css("z-index",1e3+2*lStack+1),h.addClass("open"),a("body").append($overlay),c=a.extend(g,c),c.dismissible&&($overlay.click(function(){h.closeModal(c)}),a(document).on("keyup.leanModal"+overlayID,function(a){27===a.keyCode&&h.closeModal(c)})),h.find(".modal-close").on("click.close",function(a){h.closeModal(c)}),$overlay.css({display:"block",opacity:0}),h.css({display:"block",opacity:0}),$overlay.velocity({opacity:c.opacity},{duration:c.in_duration,queue:!1,ease:"easeOutCubic"}),h.data("associated-overlay",$overlay[0]),h.hasClass("bottom-sheet")?h.velocity({bottom:"0",opacity:1},{duration:c.in_duration,queue:!1,ease:"easeOutCubic",complete:function(){"function"==typeof c.ready&&c.ready()}}):(a.Velocity.hook(h,"scaleX",.7),h.css({top:c.starting_top}),h.velocity({top:"10%",opacity:1,scaleX:"1"},{duration:c.in_duration,queue:!1,ease:"easeOutCubic",complete:function(){"function"==typeof c.ready&&c.ready()}})))}}),a.fn.extend({closeModal:function(c){var d={out_duration:250,complete:void 0},e=a(this),f=e.data("overlay-id"),g=a("#"+f);e.removeClass("open"),c=a.extend(d,c),a("body").css({overflow:"",width:""}),e.find(".modal-close").off("click.close"),
 a(document).off("keyup.leanModal"+f),g.velocity({opacity:0},{duration:c.out_duration,queue:!1,ease:"easeOutQuart"}),e.hasClass("bottom-sheet")?e.velocity({bottom:"-100%",opacity:0},{duration:c.out_duration,queue:!1,ease:"easeOutCubic",complete:function(){g.css({display:"none"}),"function"==typeof c.complete&&c.complete(),g.remove(),b--}}):e.velocity({top:c.starting_top,opacity:0,scaleX:.7},{duration:c.out_duration,complete:function(){a(this).css("display","none"),"function"==typeof c.complete&&c.complete(),g.remove(),b--}})}}),a.fn.extend({leanModal:function(b){return this.each(function(){var c={starting_top:"4%"},d=a.extend(c,b);a(this).click(function(b){d.starting_top=(a(this).offset().top-a(window).scrollTop())/1.15;var c=a(this).attr("href")||"#"+a(this).data("target");a(c).openModal(d),b.preventDefault()})})}})}(jQuery),function(a){a.fn.materialbox=function(){return this.each(function(){function b(){f=!1;var b=i.parent(".material-placeholder"),d=(window.innerWidth,window.innerHeight,i.data("width")),g=i.data("height");i.velocity("stop",!0),a("#materialbox-overlay").velocity("stop",!0),a(".materialbox-caption").velocity("stop",!0),a("#materialbox-overlay").velocity({opacity:0},{duration:h,queue:!1,easing:"easeOutQuad",complete:function(){e=!1,a(this).remove()}}),i.velocity({width:d,height:g,left:0,top:0},{duration:h,queue:!1,easing:"easeOutQuad"}),a(".materialbox-caption").velocity({opacity:0},{duration:h,queue:!1,easing:"easeOutQuad",complete:function(){b.css({height:"",width:"",position:"",top:"",left:""}),i.css({height:"",top:"",left:"",width:"","max-width":"",position:"","z-index":""}),i.removeClass("active"),f=!0,a(this).remove(),c&&c.css("overflow","")}})}if(!a(this).hasClass("initialized")){a(this).addClass("initialized");var c,d,e=!1,f=!0,g=275,h=200,i=a(this),j=a("<div></div>").addClass("material-placeholder");i.wrap(j),i.on("click",function(){var h=i.parent(".material-placeholder"),j=window.innerWidth,k=window.innerHeight,l=i.width(),m=i.height();if(f===!1)return b(),!1;if(e&&f===!0)return b(),!1;f=!1,i.addClass("active"),e=!0,h.css({width:h[0].getBoundingClientRect().width,height:h[0].getBoundingClientRect().height,position:"relative",top:0,left:0}),c=void 0,d=h[0].parentNode;for(;null!==d&&!a(d).is(document);){var n=a(d);"visible"!==n.css("overflow")&&(n.css("overflow","visible"),c=void 0===c?n:c.add(n)),d=d.parentNode}i.css({position:"absolute","z-index":1e3}).data("width",l).data("height",m);var o=a('<div id="materialbox-overlay"></div>').css({opacity:0}).click(function(){f===!0&&b()});if(i.before(o),o.velocity({opacity:1},{duration:g,queue:!1,easing:"easeOutQuad"}),""!==i.data("caption")){var p=a('<div class="materialbox-caption"></div>');p.text(i.data("caption")),a("body").append(p),p.css({display:"inline"}),p.velocity({opacity:1},{duration:g,queue:!1,easing:"easeOutQuad"})}var q=0,r=l/j,s=m/k,t=0,u=0;r>s?(q=m/l,t=.9*j,u=.9*j*q):(q=l/m,t=.9*k*q,u=.9*k),i.hasClass("responsive-img")?i.velocity({"max-width":t,width:l},{duration:0,queue:!1,complete:function(){i.css({left:0,top:0}).velocity({height:u,width:t,left:a(document).scrollLeft()+j/2-i.parent(".material-placeholder").offset().left-t/2,top:a(document).scrollTop()+k/2-i.parent(".material-placeholder").offset().top-u/2},{duration:g,queue:!1,easing:"easeOutQuad",complete:function(){f=!0}})}}):i.css("left",0).css("top",0).velocity({height:u,width:t,left:a(document).scrollLeft()+j/2-i.parent(".material-placeholder").offset().left-t/2,top:a(document).scrollTop()+k/2-i.parent(".material-placeholder").offset().top-u/2},{duration:g,queue:!1,easing:"easeOutQuad",complete:function(){f=!0}})}),a(window).scroll(function(){e&&b()}),a(document).keyup(function(a){27===a.keyCode&&f===!0&&e&&b()})}})},a(document).ready(function(){a(".materialboxed").materialbox()})}(jQuery),function(a){a.fn.parallax=function(){var b=a(window).width();return this.each(function(c){function d(c){var d;d=601>b?e.height()>0?e.height():e.children("img").height():e.height()>0?e.height():500;var f=e.children("img").first(),g=f.height(),h=g-d,i=e.offset().top+d,j=e.offset().top,k=a(window).scrollTop(),l=window.innerHeight,m=k+l,n=(m-j)/(d+l),o=Math.round(h*n);c&&f.css("display","block"),i>k&&k+l>j&&f.css("transform","translate3D(-50%,"+o+"px, 0)")}var e=a(this);e.addClass("parallax"),e.children("img").one("load",function(){d(!0)}).each(function(){this.complete&&a(this).load()}),a(window).scroll(function(){b=a(window).width(),d(!1)}),a(window).resize(function(){b=a(window).width(),d(!1)})})}}(jQuery),function(a){var b={init:function(){return this.each(function(){var b=a(this);a(window).width();b.width("100%");var c,d,e=b.find("li.tab a"),f=b.width(),g=Math.max(f,b[0].scrollWidth)/e.length,h=0;c=a(e.filter('[href="'+location.hash+'"]')),0===c.length&&(c=a(this).find("li.tab a.active").first()),0===c.length&&(c=a(this).find("li.tab a").first()),c.addClass("active"),h=e.index(c),0>h&&(h=0),void 0!==c[0]&&(d=a(c[0].hash)),b.append('<div class="indicator"></div>');var i=b.find(".indicator");b.is(":visible")&&(i.css({right:f-(h+1)*g}),i.css({left:h*g})),a(window).resize(function(){f=b.width(),g=Math.max(f,b[0].scrollWidth)/e.length,0>h&&(h=0),0!==g&&0!==f&&(i.css({right:f-(h+1)*g}),i.css({left:h*g}))}),e.not(c).each(function(){a(this.hash).hide()}),b.on("click","a",function(j){if(a(this).parent().hasClass("disabled"))return void j.preventDefault();f=b.width(),g=Math.max(f,b[0].scrollWidth)/e.length,c.removeClass("active"),void 0!==d&&d.hide(),c=a(this),d=a(this.hash),e=b.find("li.tab a"),c.addClass("active");var k=h;h=e.index(a(this)),0>h&&(h=0),void 0!==d&&d.show(),h-k>=0?(i.velocity({right:f-(h+1)*g},{duration:300,queue:!1,easing:"easeOutQuad"}),i.velocity({left:h*g},{duration:300,queue:!1,easing:"easeOutQuad",delay:90})):(i.velocity({left:h*g},{duration:300,queue:!1,easing:"easeOutQuad"}),i.velocity({right:f-(h+1)*g},{duration:300,queue:!1,easing:"easeOutQuad",delay:90})),j.preventDefault()})})},select_tab:function(a){this.find('a[href="#'+a+'"]').trigger("click")}};a.fn.tabs=function(c){return b[c]?b[c].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof c&&c?void a.error("Method "+c+" does not exist on jQuery.tooltip"):b.init.apply(this,arguments)},a(document).ready(function(){a("ul.tabs").tabs()})}(jQuery),function(a){a.fn.tooltip=function(c){var d=5,e={delay:350};return"remove"===c?(this.each(function(){a("#"+a(this).attr("data-tooltip-id")).remove(),a(this).off("mouseenter.tooltip mouseleave.tooltip")}),!1):(c=a.extend(e,c),this.each(function(){var e=Materialize.guid(),f=a(this);f.attr("data-tooltip-id",e);var g=a("<span></span>").text(f.attr("data-tooltip")),h=a("<div></div>");h.addClass("material-tooltip").append(g).appendTo(a("body")).attr("id",e);var i=a("<div></div>").addClass("backdrop");i.appendTo(h),i.css({top:0,left:0}),f.off("mouseenter.tooltip mouseleave.tooltip");var j,k=!1;f.on({"mouseenter.tooltip":function(a){var e=f.attr("data-delay");e=void 0===e||""===e?c.delay:e,j=setTimeout(function(){k=!0,h.velocity("stop"),i.velocity("stop"),h.css({display:"block",left:"0px",top:"0px"}),h.children("span").text(f.attr("data-tooltip"));var a,c,e,g=f.outerWidth(),j=f.outerHeight(),l=f.attr("data-position"),m=h.outerHeight(),n=h.outerWidth(),o="0px",p="0px",q=8;"top"===l?(a=f.offset().top-m-d,c=f.offset().left+g/2-n/2,e=b(c,a,n,m),o="-10px",i.css({borderRadius:"14px 14px 0 0",transformOrigin:"50% 90%",marginTop:m,marginLeft:n/2-i.width()/2})):"left"===l?(a=f.offset().top+j/2-m/2,c=f.offset().left-n-d,e=b(c,a,n,m),p="-10px",i.css({width:"14px",height:"14px",borderRadius:"14px 0 0 14px",transformOrigin:"95% 50%",marginTop:m/2,marginLeft:n})):"right"===l?(a=f.offset().top+j/2-m/2,c=f.offset().left+g+d,e=b(c,a,n,m),p="+10px",i.css({width:"14px",height:"14px",borderRadius:"0 14px 14px 0",transformOrigin:"5% 50%",marginTop:m/2,marginLeft:"0px"})):(a=f.offset().top+f.outerHeight()+d,c=f.offset().left+g/2-n/2,e=b(c,a,n,m),o="+10px",i.css({marginLeft:n/2-i.width()/2})),h.css({top:e.y,left:e.x}),q=n/8,8>q&&(q=8),("right"===l||"left"===l)&&(q=n/10,6>q&&(q=6)),h.velocity({marginTop:o,marginLeft:p},{duration:350,queue:!1}).velocity({opacity:1},{duration:300,delay:50,queue:!1}),i.css({display:"block"}).velocity({opacity:1},{duration:55,delay:0,queue:!1}).velocity({scale:q},{duration:300,delay:0,queue:!1,easing:"easeInOutQuad"})},e)},"mouseleave.tooltip":function(){k=!1,clearTimeout(j),setTimeout(function(){1!=k&&(h.velocity({opacity:0,marginTop:0,marginLeft:0},{duration:225,queue:!1}),i.velocity({opacity:0,scale:1},{duration:225,queue:!1,complete:function(){i.css("display","none"),h.css("display","none"),k=!1}}))},225)}})}))};var b=function(b,c,d,e){var f=b,g=c;return 0>f?f=4:f+d>window.innerWidth&&(f-=f+d-window.innerWidth),0>g?g=4:g+e>window.innerHeight+a(window).scrollTop&&(g-=g+e-window.innerHeight),{x:f,y:g}};a(document).ready(function(){a(".tooltipped").tooltip()})}(jQuery),function(a){"use strict";function b(a){return null!==a&&a===a.window}function c(a){return b(a)?a:9===a.nodeType&&a.defaultView}function d(a){var b,d,e={top:0,left:0},f=a&&a.ownerDocument;return b=f.documentElement,"undefined"!=typeof a.getBoundingClientRect&&(e=a.getBoundingClientRect()),d=c(f),{top:e.top+d.pageYOffset-b.clientTop,left:e.left+d.pageXOffset-b.clientLeft}}function e(a){var b="";for(var c in a)a.hasOwnProperty(c)&&(b+=c+":"+a[c]+";");return b}function f(a){if(k.allowEvent(a)===!1)return null;for(var b=null,c=a.target||a.srcElement;null!==c.parentElement;){if(!(c instanceof SVGElement||-1===c.className.indexOf("waves-effect"))){b=c;break}if(c.classList.contains("waves-effect")){b=c;break}c=c.parentElement}return b}function g(b){var c=f(b);null!==c&&(j.show(b,c),"ontouchstart"in a&&(c.addEventListener("touchend",j.hide,!1),c.addEventListener("touchcancel",j.hide,!1)),c.addEventListener("mouseup",j.hide,!1),c.addEventListener("mouseleave",j.hide,!1))}var h=h||{},i=document.querySelectorAll.bind(document),j={duration:750,show:function(a,b){if(2===a.button)return!1;var c=b||this,f=document.createElement("div");f.className="waves-ripple",c.appendChild(f);var g=d(c),h=a.pageY-g.top,i=a.pageX-g.left,k="scale("+c.clientWidth/100*10+")";"touches"in a&&(h=a.touches[0].pageY-g.top,i=a.touches[0].pageX-g.left),f.setAttribute("data-hold",Date.now()),f.setAttribute("data-scale",k),f.setAttribute("data-x",i),f.setAttribute("data-y",h);var l={top:h+"px",left:i+"px"};f.className=f.className+" waves-notransition",f.setAttribute("style",e(l)),f.className=f.className.replace("waves-notransition",""),l["-webkit-transform"]=k,l["-moz-transform"]=k,l["-ms-transform"]=k,l["-o-transform"]=k,l.transform=k,l.opacity="1",l["-webkit-transition-duration"]=j.duration+"ms",l["-moz-transition-duration"]=j.duration+"ms",l["-o-transition-duration"]=j.duration+"ms",l["transition-duration"]=j.duration+"ms",l["-webkit-transition-timing-function"]="cubic-bezier(0.250, 0.460, 0.450, 0.940)",l["-moz-transition-timing-function"]="cubic-bezier(0.250, 0.460, 0.450, 0.940)",l["-o-transition-timing-function"]="cubic-bezier(0.250, 0.460, 0.450, 0.940)",l["transition-timing-function"]="cubic-bezier(0.250, 0.460, 0.450, 0.940)",f.setAttribute("style",e(l))},hide:function(a){k.touchup(a);var b=this,c=(1.4*b.clientWidth,null),d=b.getElementsByClassName("waves-ripple");if(!(d.length>0))return!1;c=d[d.length-1];var f=c.getAttribute("data-x"),g=c.getAttribute("data-y"),h=c.getAttribute("data-scale"),i=Date.now()-Number(c.getAttribute("data-hold")),l=350-i;0>l&&(l=0),setTimeout(function(){var a={top:g+"px",left:f+"px",opacity:"0","-webkit-transition-duration":j.duration+"ms","-moz-transition-duration":j.duration+"ms","-o-transition-duration":j.duration+"ms","transition-duration":j.duration+"ms","-webkit-transform":h,"-moz-transform":h,"-ms-transform":h,"-o-transform":h,transform:h};c.setAttribute("style",e(a)),setTimeout(function(){try{b.removeChild(c)}catch(a){return!1}},j.duration)},l)},wrapInput:function(a){for(var b=0;b<a.length;b++){var c=a[b];if("input"===c.tagName.toLowerCase()){var d=c.parentNode;if("i"===d.tagName.toLowerCase()&&-1!==d.className.indexOf("waves-effect"))continue;var e=document.createElement("i");e.className=c.className+" waves-input-wrapper";var f=c.getAttribute("style");f||(f=""),e.setAttribute("style",f),c.className="waves-button-input",c.removeAttribute("style"),d.replaceChild(e,c),e.appendChild(c)}}}},k={touches:0,allowEvent:function(a){var b=!0;return"touchstart"===a.type?k.touches+=1:"touchend"===a.type||"touchcancel"===a.type?setTimeout(function(){k.touches>0&&(k.touches-=1)},500):"mousedown"===a.type&&k.touches>0&&(b=!1),b},touchup:function(a){k.allowEvent(a)}};h.displayEffect=function(b){b=b||{},"duration"in b&&(j.duration=b.duration),j.wrapInput(i(".waves-effect")),"ontouchstart"in a&&document.body.addEventListener("touchstart",g,!1),document.body.addEventListener("mousedown",g,!1)},h.attach=function(b){"input"===b.tagName.toLowerCase()&&(j.wrapInput([b]),b=b.parentElement),"ontouchstart"in a&&b.addEventListener("touchstart",g,!1),b.addEventListener("mousedown",g,!1)},a.Waves=h,document.addEventListener("DOMContentLoaded",function(){h.displayEffect()},!1)}(window),Materialize.toast=function(a,b,c,d){function e(a){var b=document.createElement("div");if(b.classList.add("toast"),c)for(var e=c.split(" "),f=0,g=e.length;g>f;f++)b.classList.add(e[f]);("object"==typeof HTMLElement?a instanceof HTMLElement:a&&"object"==typeof a&&null!==a&&1===a.nodeType&&"string"==typeof a.nodeName)?b.appendChild(a):a instanceof jQuery?b.appendChild(a[0]):b.innerHTML=a;var h=new Hammer(b,{prevent_default:!1});return h.on("pan",function(a){var c=a.deltaX,d=80;b.classList.contains("panning")||b.classList.add("panning");var e=1-Math.abs(c/d);0>e&&(e=0),Vel(b,{left:c,opacity:e},{duration:50,queue:!1,easing:"easeOutQuad"})}),h.on("panend",function(a){var c=a.deltaX,e=80;Math.abs(c)>e?Vel(b,{marginTop:"-40px"},{duration:375,easing:"easeOutExpo",queue:!1,complete:function(){"function"==typeof d&&d(),b.parentNode.removeChild(b)}}):(b.classList.remove("panning"),Vel(b,{left:0,opacity:1},{duration:300,easing:"easeOutExpo",queue:!1}))}),b}c=c||"";var f=document.getElementById("toast-container");null===f&&(f=document.createElement("div"),f.id="toast-container",document.body.appendChild(f));var g=e(a);a&&f.appendChild(g),g.style.top="35px",g.style.opacity=0,Vel(g,{top:"0px",opacity:1},{duration:300,easing:"easeOutCubic",queue:!1});var h=b,i=setInterval(function(){null===g.parentNode&&window.clearInterval(i),g.classList.contains("panning")||(h-=20),0>=h&&(Vel(g,{opacity:0,marginTop:"-40px"},{duration:375,easing:"easeOutExpo",queue:!1,complete:function(){"function"==typeof d&&d(),this[0].parentNode.removeChild(this[0])}}),window.clearInterval(i))},20)},function(a){var b={init:function(b){var c={menuWidth:240,edge:"left",closeOnClick:!1};b=a.extend(c,b),a(this).each(function(){function c(c){g=!1,h=!1,a("body").css({overflow:"",width:""}),a("#sidenav-overlay").velocity({opacity:0},{duration:200,queue:!1,easing:"easeOutQuad",complete:function(){a(this).remove()}}),"left"===b.edge?(f.css({width:"",right:"",left:"0"}),e.velocity({translateX:"-100%"},{duration:200,queue:!1,easing:"easeOutCubic",complete:function(){c===!0&&(e.removeAttr("style"),e.css("width",b.menuWidth))}})):(f.css({width:"",right:"0",left:""}),e.velocity({translateX:"100%"},{duration:200,queue:!1,easing:"easeOutCubic",complete:function(){c===!0&&(e.removeAttr("style"),e.css("width",b.menuWidth))}}))}var d=a(this),e=a("#"+d.attr("data-activates"));240!=b.menuWidth&&e.css("width",b.menuWidth);var f=a('<div class="drag-target"></div>');a("body").append(f),"left"==b.edge?(e.css("transform","translateX(-100%)"),f.css({left:0})):(e.addClass("right-aligned").css("transform","translateX(100%)"),f.css({right:0})),e.hasClass("fixed")&&window.innerWidth>992&&e.css("transform","translateX(0)"),e.hasClass("fixed")&&a(window).resize(function(){window.innerWidth>992?0!=a("#sidenav-overlay").length&&h?c(!0):e.css("transform","translateX(0%)"):h===!1&&("left"===b.edge?e.css("transform","translateX(-100%)"):e.css("transform","translateX(100%)"))}),b.closeOnClick===!0&&e.on("click.itemclick","a:not(.collapsible-header)",function(){c()});var g=!1,h=!1;f.on("click",function(){c()}),f.hammer({prevent_default:!1}).bind("pan",function(d){if("touch"==d.gesture.pointerType){var f=(d.gesture.direction,d.gesture.center.x),g=(d.gesture.center.y,d.gesture.velocityX,a("body")),i=g.innerWidth();if(g.css("overflow","hidden"),g.width(i),0===a("#sidenav-overlay").length){var j=a('<div id="sidenav-overlay"></div>');j.css("opacity",0).click(function(){c()}),a("body").append(j)}if("left"===b.edge&&(f>b.menuWidth?f=b.menuWidth:0>f&&(f=0)),"left"===b.edge)f<b.menuWidth/2?h=!1:f>=b.menuWidth/2&&(h=!0),e.css("transform","translateX("+(f-b.menuWidth)+"px)");else{f<window.innerWidth-b.menuWidth/2?h=!0:f>=window.innerWidth-b.menuWidth/2&&(h=!1);var k=f-b.menuWidth/2;0>k&&(k=0),e.css("transform","translateX("+k+"px)")}var l;"left"===b.edge?(l=f/b.menuWidth,a("#sidenav-overlay").velocity({opacity:l},{duration:10,queue:!1,easing:"easeOutQuad"})):(l=Math.abs((f-window.innerWidth)/b.menuWidth),a("#sidenav-overlay").velocity({opacity:l},{duration:10,queue:!1,easing:"easeOutQuad"}))}}).bind("panend",function(c){if("touch"==c.gesture.pointerType){var d=c.gesture.velocityX,i=c.gesture.center.x,j=i-b.menuWidth,k=i-b.menuWidth/2;j>0&&(j=0),0>k&&(k=0),g=!1,"left"===b.edge?h&&.3>=d||-.5>d?(0!=j&&e.velocity({translateX:[0,j]},{duration:300,queue:!1,easing:"easeOutQuad"}),a("#sidenav-overlay").velocity({opacity:1},{duration:50,queue:!1,easing:"easeOutQuad"}),f.css({width:"50%",right:0,left:""})):(!h||d>.3)&&(a("body").css({overflow:"",width:""}),e.velocity({translateX:[-1*b.menuWidth-10,j]},{duration:200,queue:!1,easing:"easeOutQuad"}),a("#sidenav-overlay").velocity({opacity:0},{duration:200,queue:!1,easing:"easeOutQuad",complete:function(){a(this).remove()}}),f.css({width:"10px",right:"",left:0})):h&&d>=-.3||d>.5?(e.velocity({translateX:[0,k]},{duration:300,queue:!1,easing:"easeOutQuad"}),a("#sidenav-overlay").velocity({opacity:1},{duration:50,queue:!1,easing:"easeOutQuad"}),f.css({width:"50%",right:"",left:0})):(!h||-.3>d)&&(a("body").css({overflow:"",width:""}),e.velocity({translateX:[b.menuWidth+10,k]},{duration:200,queue:!1,easing:"easeOutQuad"}),a("#sidenav-overlay").velocity({opacity:0},{duration:200,queue:!1,easing:"easeOutQuad",complete:function(){a(this).remove()}}),f.css({width:"10px",right:0,left:""}))}}),d.click(function(){if(h===!0)h=!1,g=!1,c();else{var d=a("body"),i=d.innerWidth();d.css("overflow","hidden"),d.width(i),a("body").append(f),"left"===b.edge?(f.css({width:"50%",right:0,left:""}),e.velocity({translateX:[0,-1*b.menuWidth]},{duration:300,queue:!1,easing:"easeOutQuad"})):(f.css({width:"50%",right:"",left:0}),e.velocity({translateX:[0,b.menuWidth]},{duration:300,queue:!1,easing:"easeOutQuad"}));var j=a('<div id="sidenav-overlay"></div>');j.css("opacity",0).click(function(){h=!1,g=!1,c(),j.velocity({opacity:0},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){a(this).remove()}})}),a("body").append(j),j.velocity({opacity:1},{duration:300,queue:!1,easing:"easeOutQuad",complete:function(){h=!0,g=!1}})}return!1})})},show:function(){this.trigger("click")},hide:function(){a("#sidenav-overlay").trigger("click")}};a.fn.sideNav=function(c){return b[c]?b[c].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof c&&c?void a.error("Method "+c+" does not exist on jQuery.sideNav"):b.init.apply(this,arguments)}}(jQuery),function(a){function b(b,c,d,e){var f=a();return a.each(g,function(a,g){if(g.height()>0){var h=g.offset().top,i=g.offset().left,j=i+g.width(),k=h+g.height(),l=!(i>c||e>j||h>d||b>k);l&&f.push(g)}}),f}function c(){++j;var c=f.scrollTop(),d=f.scrollLeft(),e=d+f.width(),g=c+f.height(),i=b(c+k.top+200,e+k.right,g+k.bottom,d+k.left);a.each(i,function(a,b){var c=b.data("scrollSpy:ticks");"number"!=typeof c&&b.triggerHandler("scrollSpy:enter"),b.data("scrollSpy:ticks",j)}),a.each(h,function(a,b){var c=b.data("scrollSpy:ticks");"number"==typeof c&&c!==j&&(b.triggerHandler("scrollSpy:exit"),b.data("scrollSpy:ticks",null))}),h=i}function d(){f.trigger("scrollSpy:winSize")}function e(a,b,c){var d,e,f,g=null,h=0;c||(c={});var i=function(){h=c.leading===!1?0:l(),g=null,f=a.apply(d,e),d=e=null};return function(){var j=l();h||c.leading!==!1||(h=j);var k=b-(j-h);return d=this,e=arguments,0>=k?(clearTimeout(g),g=null,h=j,f=a.apply(d,e),d=e=null):g||c.trailing===!1||(g=setTimeout(i,k)),f}}var f=a(window),g=[],h=[],i=!1,j=0,k={top:0,right:0,bottom:0,left:0},l=Date.now||function(){return(new Date).getTime()};a.scrollSpy=function(b,d){var h=[];b=a(b),b.each(function(b,c){g.push(a(c)),a(c).data("scrollSpy:id",b),a('a[href="#'+a(c).attr("id")+'"]').click(function(b){b.preventDefault();var c=a(this.hash).offset().top+1;a("html, body").animate({scrollTop:c-200},{duration:400,queue:!1,easing:"easeOutCubic"})})}),d=d||{throttle:100},k.top=d.offsetTop||0,k.right=d.offsetRight||0,k.bottom=d.offsetBottom||0,k.left=d.offsetLeft||0;var j=e(c,d.throttle||100),l=function(){a(document).ready(j)};return i||(f.on("scroll",l),f.on("resize",l),i=!0),setTimeout(l,0),b.on("scrollSpy:enter",function(){h=a.grep(h,function(a){return 0!=a.height()});var b=a(this);h[0]?(a('a[href="#'+h[0].attr("id")+'"]').removeClass("active"),b.data("scrollSpy:id")<h[0].data("scrollSpy:id")?h.unshift(a(this)):h.push(a(this))):h.push(a(this)),a('a[href="#'+h[0].attr("id")+'"]').addClass("active")}),b.on("scrollSpy:exit",function(){if(h=a.grep(h,function(a){return 0!=a.height()}),h[0]){a('a[href="#'+h[0].attr("id")+'"]').removeClass("active");var b=a(this);h=a.grep(h,function(a){return a.attr("id")!=b.attr("id")}),h[0]&&a('a[href="#'+h[0].attr("id")+'"]').addClass("active")}}),b},a.winSizeSpy=function(b){return a.winSizeSpy=function(){return f},b=b||{throttle:100},f.on("resize",e(d,b.throttle||100))},a.fn.scrollSpy=function(b){return a.scrollSpy(a(this),b)}}(jQuery),function(a){a(document).ready(function(){function b(b){var c=b.css("font-family"),d=b.css("font-size");d&&e.css("font-size",d),c&&e.css("font-family",c),"off"===b.attr("wrap")&&e.css("overflow-wrap","normal").css("white-space","pre"),e.text(b.val()+"\n");var f=e.html().replace(/\n/g,"<br>");e.html(f),b.is(":visible")?e.css("width",b.width()):e.css("width",a(window).width()/2),b.css("height",e.height())}Materialize.updateTextFields=function(){var b="input[type=text], input[type=password], input[type=email], input[type=url], input[type=tel], input[type=number], input[type=search], textarea";a(b).each(function(b,c){a(c).val().length>0||c.autofocus||void 0!==a(this).attr("placeholder")||a(c)[0].validity.badInput===!0?a(this).siblings("label, i").addClass("active"):a(this).siblings("label, i").removeClass("active")})};var c="input[type=text], input[type=password], input[type=email], input[type=url], input[type=tel], input[type=number], input[type=search], textarea";a(document).on("change",c,function(){(0!==a(this).val().length||void 0!==a(this).attr("placeholder"))&&a(this).siblings("label").addClass("active"),validate_field(a(this))}),a(document).ready(function(){Materialize.updateTextFields()}),a(document).on("reset",function(b){var d=a(b.target);d.is("form")&&(d.find(c).removeClass("valid").removeClass("invalid"),d.find(c).each(function(){""===a(this).attr("value")&&a(this).siblings("label, i").removeClass("active")}),d.find("select.initialized").each(function(){var a=d.find("option[selected]").text();d.siblings("input.select-dropdown").val(a)}))}),a(document).on("focus",c,function(){a(this).siblings("label, i").addClass("active")}),a(document).on("blur",c,function(){var b=a(this);0===b.val().length&&b[0].validity.badInput!==!0&&void 0===b.attr("placeholder")&&b.siblings("label, i").removeClass("active"),0===b.val().length&&b[0].validity.badInput!==!0&&void 0!==b.attr("placeholder")&&b.siblings("i").removeClass("active"),validate_field(b)}),window.validate_field=function(a){var b=void 0!==a.attr("length"),c=parseInt(a.attr("length")),d=a.val().length;0===a.val().length&&a[0].validity.badInput===!1?a.hasClass("validate")&&(a.removeClass("valid"),a.removeClass("invalid")):a.hasClass("validate")&&(a.is(":valid")&&b&&c>=d||a.is(":valid")&&!b?(a.removeClass("invalid"),a.addClass("valid")):(a.removeClass("valid"),a.addClass("invalid")))};var d="input[type=radio], input[type=checkbox]";a(document).on("keyup.radio",d,function(b){if(9===b.which){a(this).addClass("tabbed");var c=a(this);return void c.one("blur",function(b){a(this).removeClass("tabbed")})}});var e=a(".hiddendiv").first();e.length||(e=a('<div class="hiddendiv common"></div>'),a("body").append(e));var f=".materialize-textarea";a(f).each(function(){var c=a(this);c.val().length&&b(c)}),a("body").on("keyup keydown autoresize",f,function(){b(a(this))}),a(document).on("change",'.file-field input[type="file"]',function(){for(var b=a(this).closest(".file-field"),c=b.find("input.file-path"),d=a(this)[0].files,e=[],f=0;f<d.length;f++)e.push(d[f].name);c.val(e.join(", ")),c.trigger("change")});var g,h="input[type=range]",i=!1;a(h).each(function(){var b=a('<span class="thumb"><span class="value"></span></span>');a(this).after(b)});var j=".range-field";a(document).on("change",h,function(b){var c=a(this).siblings(".thumb");c.find(".value").html(a(this).val())}),a(document).on("input mousedown touchstart",h,function(b){var c=a(this).siblings(".thumb"),d=a(this).outerWidth();c.length<=0&&(c=a('<span class="thumb"><span class="value"></span></span>'),a(this).after(c)),c.find(".value").html(a(this).val()),i=!0,a(this).addClass("active"),c.hasClass("active")||c.velocity({height:"30px",width:"30px",top:"-20px",marginLeft:"-15px"},{duration:300,easing:"easeOutExpo"}),"input"!==b.type&&(g=void 0===b.pageX||null===b.pageX?b.originalEvent.touches[0].pageX-a(this).offset().left:b.pageX-a(this).offset().left,0>g?g=0:g>d&&(g=d),c.addClass("active").css("left",g)),c.find(".value").html(a(this).val())}),a(document).on("mouseup touchend",j,function(){i=!1,a(this).removeClass("active")}),a(document).on("mousemove touchmove",j,function(b){var c,d=a(this).children(".thumb");if(i){d.hasClass("active")||d.velocity({height:"30px",width:"30px",top:"-20px",marginLeft:"-15px"},{duration:300,easing:"easeOutExpo"}),c=void 0===b.pageX||null===b.pageX?b.originalEvent.touches[0].pageX-a(this).offset().left:b.pageX-a(this).offset().left;var e=a(this).outerWidth();0>c?c=0:c>e&&(c=e),d.addClass("active").css("left",c),d.find(".value").html(d.siblings(h).val())}}),a(document).on("mouseout touchleave",j,function(){if(!i){var b=a(this).children(".thumb");b.hasClass("active")&&b.velocity({height:"0",width:"0",top:"10px",marginLeft:"-6px"},{duration:100}),b.removeClass("active")}})}),a.fn.material_select=function(b){function c(a,b,c){var e=a.indexOf(b),f=-1===e;return f?a.push(b):a.splice(e,1),c.siblings("ul.dropdown-content").find("li").eq(b).toggleClass("active"),c.find("option").eq(b).prop("selected",f),d(a,c),f}function d(a,b){for(var c="",d=0,e=a.length;e>d;d++){var f=b.find("option").eq(a[d]).text();c+=0===d?f:", "+f}""===c&&(c=b.find("option:disabled").eq(0).text()),b.siblings("input.select-dropdown").val(c)}a(this).each(function(){var d=a(this);if(!d.hasClass("browser-default")){var e=d.attr("multiple")?!0:!1,f=d.data("select-id");if(f&&(d.parent().find("span.caret").remove(),d.parent().find("input").remove(),d.unwrap(),a("ul#select-options-"+f).remove()),"destroy"===b)return void d.data("select-id",null).removeClass("initialized");var g=Materialize.guid();d.data("select-id",g);var h=a('<div class="select-wrapper"></div>');h.addClass(d.attr("class"));var i=a('<ul id="select-options-'+g+'" class="dropdown-content select-dropdown '+(e?"multiple-select-dropdown":"")+'"></ul>'),j=d.children("option, optgroup"),k=[],l=!1,m=d.find("option:selected").html()||d.find("option:first").html()||"",n=function(b,c,d){var e=c.is(":disabled")?"disabled ":"",f="optgroup-option"===d?"optgroup-option ":"",g=c.data("icon"),h=c.attr("class");if(g){var j="";return h&&(j=' class="'+h+'"'),"multiple"===d?i.append(a('<li class="'+e+'"><img src="'+g+'"'+j+'><span><input type="checkbox"'+e+"/><label></label>"+c.html()+"</span></li>")):i.append(a('<li class="'+e+f+'"><img src="'+g+'"'+j+"><span>"+c.html()+"</span></li>")),!0}"multiple"===d?i.append(a('<li class="'+e+'"><span><input type="checkbox"'+e+"/><label></label>"+c.html()+"</span></li>")):i.append(a('<li class="'+e+f+'"><span>'+c.html()+"</span></li>"))};j.length&&j.each(function(){if(a(this).is("option"))e?n(d,a(this),"multiple"):n(d,a(this));else if(a(this).is("optgroup")){var b=a(this).children("option");i.append(a('<li class="optgroup"><span>'+a(this).attr("label")+"</span></li>")),b.each(function(){n(d,a(this),"optgroup-option")})}}),i.find("li:not(.optgroup)").each(function(f){a(this).click(function(g){if(!a(this).hasClass("disabled")&&!a(this).hasClass("optgroup")){var h=!0;e?(a('input[type="checkbox"]',this).prop("checked",function(a,b){return!b}),h=c(k,a(this).index(),d),q.trigger("focus")):(i.find("li").removeClass("active"),a(this).toggleClass("active"),q.val(a(this).text())),r(i,a(this)),d.find("option").eq(f).prop("selected",h),d.trigger("change"),"undefined"!=typeof b&&b()}g.stopPropagation()})}),d.wrap(h);var o=a('<span class="caret">&#9660;</span>');d.is(":disabled")&&o.addClass("disabled");var p=m.replace(/"/g,"&quot;"),q=a('<input type="text" class="select-dropdown" readonly="true" '+(d.is(":disabled")?"disabled":"")+' data-activates="select-options-'+g+'" value="'+p+'"/>');d.before(q),q.before(o),q.after(i),d.is(":disabled")||q.dropdown({hover:!1,closeOnClick:!1}),d.attr("tabindex")&&a(q[0]).attr("tabindex",d.attr("tabindex")),d.addClass("initialized"),q.on({focus:function(){if(a("ul.select-dropdown").not(i[0]).is(":visible")&&a("input.select-dropdown").trigger("close"),!i.is(":visible")){a(this).trigger("open",["focus"]);var b=a(this).val(),c=i.find("li").filter(function(){return a(this).text().toLowerCase()===b.toLowerCase()})[0];r(i,c)}},click:function(a){a.stopPropagation()}}),q.on("blur",function(){e||a(this).trigger("close"),i.find("li.selected").removeClass("selected")}),i.hover(function(){l=!0},function(){l=!1}),a(window).on({click:function(){e&&(l||q.trigger("close"))}}),e&&d.find("option:selected:not(:disabled)").each(function(){var b=a(this).index();c(k,b,d),i.find("li").eq(b).find(":checkbox").prop("checked",!0)});var r=function(b,c){if(c){b.find("li.selected").removeClass("selected");var d=a(c);d.addClass("selected"),i.scrollTo(d)}},s=[],t=function(b){if(9==b.which)return void q.trigger("close");if(40==b.which&&!i.is(":visible"))return void q.trigger("open");if(13!=b.which||i.is(":visible")){b.preventDefault();var c=String.fromCharCode(b.which).toLowerCase(),d=[9,13,27,38,40];if(c&&-1===d.indexOf(b.which)){s.push(c);var f=s.join(""),g=i.find("li").filter(function(){return 0===a(this).text().toLowerCase().indexOf(f)})[0];g&&r(i,g)}if(13==b.which){var h=i.find("li.selected:not(.disabled)")[0];h&&(a(h).trigger("click"),e||q.trigger("close"))}40==b.which&&(g=i.find("li.selected").length?i.find("li.selected").next("li:not(.disabled)")[0]:i.find("li:not(.disabled)")[0],r(i,g)),27==b.which&&q.trigger("close"),38==b.which&&(g=i.find("li.selected").prev("li:not(.disabled)")[0],g&&r(i,g)),setTimeout(function(){s=[]},1e3)}};q.on("keydown",t)}})}}(jQuery),function(a){var b={init:function(b){var c={indicators:!0,height:400,transition:500,interval:6e3};return b=a.extend(c,b),this.each(function(){function c(a,b){a.hasClass("center-align")?a.velocity({opacity:0,translateY:-100},{duration:b,queue:!1}):a.hasClass("right-align")?a.velocity({opacity:0,translateX:100},{duration:b,queue:!1}):a.hasClass("left-align")&&a.velocity({opacity:0,translateX:-100},{duration:b,queue:!1})}function d(a){a>=j.length?a=0:0>a&&(a=j.length-1),k=i.find(".active").index(),k!=a&&(e=j.eq(k),$caption=e.find(".caption"),e.removeClass("active"),e.velocity({opacity:0},{duration:b.transition,queue:!1,easing:"easeOutQuad",complete:function(){

--- public/media/js/hrms.js ---
@@ -437,7 +437,8 @@ function changestatus(controllername,objid,flag)
                                         successmessage_changestatus(response['message'],response['msgtype'],controllername);
                                         
                                         if(response['flagtype']=='process')
-                                            location.reload();                                                                       else{
+                                            location.reload();
+                                        else{
 												if(deleteflag==1)
 												{
 													
@@ -2759,18 +2760,21 @@ function emptytodate(ele)
   var todateval = $('#to_date').val();
   var selector = $(ele).prop('id');
   var date1 = new Date(fromdateval);
-  var date2 = new Date(todateval);
+ // var date2 = new Date(todateval);
  
-  if(date1 != '' && date2 != '')
-  {
-	  var fromdate = date1.getFullYear();
-	  var todate = date2.getFullYear();
-  }
+	if(date1 != '')
+	{
+		var fromdate = date1.getFullYear();
+	}
+	/* if(date2 != '')
+	{
+		var todate = date2.getFullYear();
+	} */
  
   var date = new Date();
   var y = date.getFullYear();
  
-	if(fromdate <= y && todate <= y )
+	if(fromdate <= y )
 	{
 	  if(dayselected == 1)
 	    {  
@@ -2793,12 +2797,12 @@ function emptytodate(ele)
 			 $('#errors-from_date').remove();
 			 $('#from_date').parent().append("<span class='errors' id='errors-from_date'>Leave cannot be applied for future year.</span>");
 		}
-		if(todate > y)
+		/* if(todate > y)
 		{
 			$("#"+selector).val('');
 			$('#errors-to_date').remove();
 			$('#to_date').parent().append("<span class='errors' id='errors-to_date'>Leave cannot be applied for future year.</span>");
-		}
+		} */
 		
 	}
 	
@@ -2835,20 +2839,24 @@ function validateselecteddate(ele)
 	
 	var fromdateformat = fromdateArr[2]+'-'+fromdateArr[0]+'-'+fromdateArr[1];
 	var todateformat = todateArr[2]+'-'+todateArr[0]+'-'+todateArr[1];
-	
-	var date1 = new Date(fromdateval);
-	var date2 = new Date(todateval);
-	
-	  if(date1 != '' && date2 != '')
-	  {
-		  var fromdate = date1.getFullYear();
-		  var todate = date2.getFullYear();
-	  }
+/* 	var date1 = $('#from_date').datepicker('getDate');
+	var date2 = $('#to_date').datepicker('getDate'); */
+	//var date1 = new Date(fromdateval);
+	//var date2 = new Date(todateval);
+	var date2 = $('#to_date').datepicker('getDate'); 
+	/* if(date1 != '')
+	{
+		var fromdate = date1.getFullYear();
+	} */
+	if(date2 != '')
+	{
+	  var todate = date2.getFullYear();
+	}
 	 
 	  var date = new Date();
 	  var y = date.getFullYear();
 	
-    if(fromdateval != '' && todateval != '' && leavetypeselectedval !='' && fromdate <= y && todate <= y )	
+    if(fromdateval != '' && todateval != '' && leavetypeselectedval !='' && todate <= y )	
 	  {
 		$(ele).parent().append("<span class='errors' id='errors-"+selector+"'></span>"); 
 		$.ajax({
@@ -2905,12 +2913,12 @@ function validateselecteddate(ele)
 		  if(leavetypeselectedval == '') {
 			  jAlert("Please select leave type.");
 		  }
-		  	if(fromdate > y)
+		  	/* if(fromdate > y)
 			{	
 		  		$("#"+selector).val('');
 			  	$('#errors-from_date').remove();
 			  	$('#from_date').parent().append("<span class='errors' id='errors-from_date'>Leave cannot be applied for future year.</span>");
-			}
+			} */
 			if(todate > y)
 			{
 				$("#"+selector).val('');
@@ -3171,28 +3179,78 @@ function displayEmployeeDepartments(ele,eleId,con)
 				dataType: 'html',
 				beforeSend: function () {
 				$("#"+eleId).before("<div id='loader'></div>");
+				$("#hrmanager").before("<div id='loader1'></div>");
 				$("#loader").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
+				$("#loader1").html("<img src=" + domain_data + "public/media/images/loaderwhite_21X21.gif>");
 				},
 				success : function(response){	
-				        if($.trim(response) == 'nodepartments')
+					
+					if(con == 'leavemanagement')
+					{
+						response = response.split('*');
+						$depts=response[0];
+						$hrs=response[1];
+						if($.trim($depts) == 'nodepartments')
 						 {
-						    $("#loader").remove();
-							$("#errors-"+eleId).show();
-							$("#errors-"+eleId).html("Departments are not added for this business unit.");
-							$("#"+eleId).find('option').remove();
-							$('#s2id_'+eleId).find('span').html('Select Department');
-	                        								 
+								  $("#loader").remove();
+								  $("#loader1").remove();
+								$("#errors-"+eleId).show();
+								$("#errors-"+eleId).html("Departments are not added for this business unit.");
+								$("#"+eleId).find('option').remove();
+								$('#s2id_'+eleId).find('span').html('Select Department');
 						 }
-				         if(response != '' && response != 'null' && $.trim(response) != 'nodepartments')
-						  {
-						    if($("#errors-"+eleId).is(':visible'))
-		                     $("#errors-"+eleId).hide();
-							$('#s2id_'+eleId).find('span').html('Select Department');
-                            $("#loader").remove();
-							$("#"+eleId).html(response);
-						  }
-						  	
+						else
+						{
+								 if($("#errors-"+eleId).is(':visible'))
+								 $("#errors-"+eleId).hide();
+								$('#s2id_'+eleId).find('span').html('Select Department');
+								$("#loader").remove();
+								$("#loader1").remove();
+								$("#"+eleId).html($depts);
+						}
+						if($.trim($hrs) == 'nohrmanagers')
+						{
+								$("#loader1").remove();
+								 $("#loader").remove();
+								 $("#errors-hrmanager").show();
+								$("#errors-hrmanager").html("Hr manager not added yet for this business unit.");
+								$("#hrmanager").find('option').remove();
+								$('#s2id_hrmanager').find('span').html('Select Hr Manager');
+							
+						}
+						else
+						{
+							 if($("#errors-hrmanager").is(':visible'))
+								 $("#errors-hrmanager").hide();
+								 //('#s2id_hrmanager').find('span').html('Select Hr Manager');
+								   $("#loader1").remove();
+								   $("#loader").remove();
+								$("#hrmanager").html($hrs);
+						}
+						
+					}
+					else{
+							if($.trim(response) == 'nodepartments')
+							 {
+							    $("#loader").remove();
+								$("#errors-"+eleId).show();
+								$("#errors-"+eleId).html("Departments are not added for this business unit.");
+								$("#"+eleId).find('option').remove();
+								$('#s2id_'+eleId).find('span').html('Select Department');
+		                        								 
+							 }
+					         if(response != '' && response != 'null' && $.trim(response) != 'nodepartments')
+							  {
+							    if($("#errors-"+eleId).is(':visible'))
+			                     $("#errors-"+eleId).hide();
+								$('#s2id_'+eleId).find('span').html('Select Department');
+	                            $("#loader").remove();
+								$("#"+eleId).html(response);
+							  }
 						}
+				       
+						  	
+					}
 			});
 	}
 	
@@ -4075,7 +4133,7 @@ function fieldBlurvalidations(injury_typeVal)
 	{
 	  $("#errors-contactnumber").html('Please enter contact number.');
 	}
-	else if(contactnumber.length < 10) { 
+	else if(contactnumber.length > 12 || contactnumber.length <9 ) { 
 	   $("#errors-contactnumber").html('Please enter valid phone number.');
 
 	}
@@ -4094,7 +4152,7 @@ function fieldBlurvalidations(injury_typeVal)
 	  $("#errors-contactnumber").html('Please enter contact number.');
 	  msg = "false";
 	}
-	else if(contactnumber.length < 10) { 
+	else if(contactnumber.length > 12 || contactnumber.length <9 ) { 
 	   $("#errors-contactnumber").html('Please enter valid phone number.');
 	   msg = "false"; 
 	} 
@@ -6252,27 +6310,7 @@ function getStates()
   },'json');
   
 }
-//get hr managers based on dept_id
-function gethrmanagers(ele)
-{
-	var dept_id=$(ele).val();
-	$("#errors-hrmanager").remove();
-	 $.post(base_url+"/leavemanagement/gethremployees",{dept_id:dept_id},function(data){
-		
-	        $('#hrmanager').find('option').remove();
-	        $("#hrmanager").html(data.options);
-	       // $('#s2id_hrmanager').find('a.select2-choice').find('span').html('Select Hr Manager');
-	        var opt_len = $('#hrmanager').find('option').length;
-	        if(opt_len == 1)
-	        {
-	        	$('#s2id_hrmanager').find('span').html('Select Hr Manager');
-	            $("#errors-hrmanager").remove();
-			    $("#hrmanager").parent().append("<span class='errors' id='errors-hrmanager'>Hr manager not added yet for the selected department.</span>");
-	        }
-	       
-	    },'json');
 
-}
 //Hr module employee search
 function employeessearch()
 {
@@ -6286,7 +6324,7 @@ function employeessearch()
 	$("#errors-search_str").remove();
 	$("#errors-role_id").remove();
 
-	var params = 'search_val='+search_val+'&search_str='+search_str+'&limit='+limit+'&offset='+offset+'&role_id='+role_id+'&flag='+0+'&empflag='+empflag;
+	var params = 'search_val='+search_val+'&search_str='+search_str+'&limit='+limit+'&offset='+offset+'&role_id='+role_id+'&flag='+0+'&empflag='+empflag+'&clearflag='+0;
 	
 	if(search_val != '' && ( search_str != '' || role_id != ''))
 	{
@@ -6323,7 +6361,33 @@ function employeessearch()
 	
 		
 }
-
+//clear search data
+function clearSearchData()
+{
+	var search_val = '';
+	var search_str = '';
+	var role_id = '';
+	var empflag = $('#emp').val();
+	var offset=0;
+    var limit = $('#limit').val(); 
+
+	$('#s2id_search_val').find('span').html('Select Search Category');
+	$("#role_div").css('display','none');
+	$('#search_div').css('display','none');
+	$('#search_val').val('');
+	$('#search_str').val('');
+	$('#role_id').val('');
+	var params = 'search_val='+search_val+'&search_str='+search_str+'&limit='+limit+'&offset='+offset+'&role_id='+role_id+'&flag='+0+'&empflag='+empflag+'&clearflag='+1;
+	$.ajax({
+	        url: base_url+"/employee/getmoreemployees/format/html",   				
+			type : 'POST',	
+			data : params,
+			dataType: 'html',
+			success : function(data){	
+				$("#more_employees").html(data);
+			}
+		}); 
+} 
 // get roles list for search
 function getRolesList()
 {

--- public/media/timemanagement/js/timemanagement.js ---
@@ -557,6 +557,12 @@ function refreshgrid(objname, dashboardcall,projectId,otherAction,start_date,end
 		mname = unitId[0];
 		mnuid = unitId[1];
 	} 
+
+  //Clearing the params for pdf and excel generation
+  $('#sort_order').val(''); 
+  $('#sort_by').val(''); 
+  $('#page_no').val(''); 
+  $('#per_page').val(''); 
 	//var url = document.URL.split('/');
 	var dataparam = 'objname=' + objname + '&refresh=refresh&call=ajaxcall' + '&' + mname + '=' + mnuid + "&context=" + context + "&dashboardcall=" + dashboardcall;
 
@@ -676,7 +682,7 @@ function getsearchdata(objname, conText, colname, event, etype,projectId,otherAc
 	
 	if(otherAction != '' && otherAction == "projectreports")
 		dataparam = dataparam + '&emp_id=' + emp_id + '&start_date=' + start_date + '&end_date=' + end_date;
-	
+	$('#search_data_pdf').val(searchData); 
 
 	$.ajax({
 		url: Url,
@@ -744,6 +750,11 @@ function getAjaxgridData(objname, dashboardcall,projectId,otherAction,start_date
 	var page = $(".gotopage_input_" + objname).val();
 	var sort = $("#sortval_" + objname).val();
 	var by = $("#byval_" + objname).val();
+  //assigning values to hidden variables for pdf download
+  $('#sort_order').val(sort); 
+  $('#sort_by').val(by); 
+  $('#page_no').val(page); 
+  $('#per_page').val(perpage); 
 	var searchData = $("#" + objname + "_searchdata").val();
 	searchData = decodeURIComponent(searchData);
 	var formGridId = $("#formGridId").val();
@@ -817,7 +828,40 @@ function successmessage_changestatus(message, flag, controllername) {
 }
 
 function paginationndsorting(url,projectId,otherAction,start_date,end_date,emp_id) {
+  // alert(url);
 	var myarr = url.split("/");
+
+  //code to get the params for pdf generation
+  //start
+  var sort_order = '';
+  var sort_by = '';
+  var page_no = '';
+  var per_page = '';
+  for (var i = 0; i < myarr.length; i++) 
+  {
+    if(myarr[i] == 'sort')
+    {
+      sort_order = myarr[i+1];
+    }    
+    if(myarr[i] == 'by')
+    {
+      sort_by = myarr[i+1];
+    }    
+    if(myarr[i] == 'page')
+    {
+      page_no = myarr[i+1];
+    }    
+    if(myarr[i] == 'per_page')
+    {
+      per_page = myarr[i+1];
+    }
+  }
+  $('#sort_order').val(sort_order); 
+  $('#sort_by').val(sort_by); 
+  $('#page_no').val(page_no); 
+  $('#per_page').val(per_page); 
+  //end
+
 	if (url.indexOf('/call/ajaxcall') == -1)
 		url = url + '/call/ajaxcall';
 	var dashboardcall = $("#dashboardcall").val();
@@ -831,7 +875,8 @@ function paginationndsorting(url,projectId,otherAction,start_date,end_date,emp_i
 		var sortOrder = strSortParam.substring(0, strSortParam.lastIndexOf('by') - 1);
 
 		var sortBy = strSortParam.substring(strSortParam.lastIndexOf('by') + 3);
-		$('#sort_param').val(sortBy + "/" + sortOrder);
+
+		$('#sort_param').val(sortBy + "/" + sortOrder); 
 	}
 	var searchData = $("#" + divid + "_searchdata").val();
 	var perfTimes = $("#gridblock *").serialize();
@@ -2768,19 +2813,56 @@ function emptytodate(ele)
 {
   var dayselected =  $('#leaveday :selected').val();
   var fromdateval = $('#from_date').val();
-  if(dayselected == 1)
-    {  
-      validateselecteddate(ele);  
+  var todateval = $('#to_date').val();
+  var selector = $(ele).prop('id');
+  var date1 = new Date(fromdateval);
+  //var date2 = new Date(todateval);
+ 
+	if(date1 != '')
+	{
+		var fromdate = date1.getFullYear();
 	}
-  else if(dayselected == 2)
-    {
-	  if(fromdateval !='') 
-	    $("#appliedleavesdaycount").val(0.5);
-	  else
-        $("#appliedleavesdaycount").val('');	  
-    }	
-}	  
-  
+	/* if(date2 != '')
+	{
+		var todate = date2.getFullYear();
+	} */
+ 
+  var date = new Date();
+  var y = date.getFullYear();
+ 
+	if(fromdate <= y )
+	{
+	  if(dayselected == 1)
+	    {  
+	      validateselecteddate(ele);  
+		}
+	  else if(dayselected == 2)
+	    {
+		  if(fromdateval !='') 
+		    $("#appliedleavesdaycount").val(0.5);
+		  else
+	        $("#appliedleavesdaycount").val('');	  
+	    }
+	}
+	else
+	{
+	
+		if(fromdate > y)
+		{
+			$("#"+selector).val('');
+			 $('#errors-from_date').remove();
+			 $('#from_date').parent().append("<span class='errors' id='errors-from_date'>Leave cannot be applied for future year.</span>");
+		}
+		/* if(todate > y)
+		{
+			$("#"+selector).val('');
+			$('#errors-to_date').remove();
+			$('#to_date').parent().append("<span class='errors' id='errors-to_date'>Leave cannot be applied for future year.</span>");
+		} */
+		
+	}
+	
+}
 
 function validateselecteddate(ele)
 {
@@ -2813,14 +2895,30 @@ function validateselecteddate(ele)
 	
 	var fromdateformat = fromdateArr[2]+'-'+fromdateArr[0]+'-'+fromdateArr[1];
 	var todateformat = todateArr[2]+'-'+todateArr[0]+'-'+todateArr[1];
+/* 	var date1 = $('#from_date').datepicker('getDate');
+	var date2 = $('#to_date').datepicker('getDate'); */
+	//var date1 = new Date(fromdateval);
+	var date2 = new Date(todateval);
+	
+	/* if(date1 != '')
+	{
+		var fromdate = date1.getFullYear();
+	} */
+	if(date2 != '')
+	{
+	  var todate = date2.getFullYear();
+	}
+	 
+	  var date = new Date();
+	  var y = date.getFullYear();
 	
-    if(fromdateval != '' && todateval != '' && leavetypeselectedval !='')	
+    if(fromdateval != '' && todateval != '' && leavetypeselectedval !='' && todate <= y )	
 	  {
 		$(ele).parent().append("<span class='errors' id='errors-"+selector+"'></span>"); 
 		$.ajax({
 					url: base_url+"/index/calculatebusinessdays/format/json",   
 					type : 'POST',	
-					data : 'fromDate='+fromdateval+'&toDate='+todateval+'&dayselected='+dayselected+'&leavetypelimit='+leavetypelimit+'&leavetypetext='+leavetypetext+'&ishalfday='+ishalfday+'&context='+context+'&selectorid='+selectorid,
+					data : 'fromDate='+fromdateval+'&toDate='+todateval+'&dayselected='+dayselected+'&leavetypelimit='+leavetypelimit+'&leavetypetext='+leavetypetext+'&ishalfday='+ishalfday+'&context='+context+'&selectorid='+selectorid+'&leavetypeid='+leavetypeid,
 					dataType: 'json',
 					beforeSend: function ()
 					{
@@ -2858,22 +2956,33 @@ function validateselecteddate(ele)
 					}
 				});
 	  } else {
-			if(selector=='from_date') {
+		 if(selector=='from_date') {
 			  if($("#to_date").val()!='') {
 				$("#"+selector).val('');
 			  }	
-			}else{
+		  }else{
 			  if($("#from_date").val()!='') {
 					$("#"+selector).val('');
 			  }		
-			}
-			$("#appliedleavesdaycount").val('');
-		  if(leavetypeselectedval == ''){
-			 jAlert("Please select leave type."); 
 		  }
+		  $("#appliedleavesdaycount").val('');
+		  if(leavetypeselectedval == '') {
+			  jAlert("Please select leave type.");
+		  }
+		  	/* if(fromdate > y)
+			{	
+		  		$("#"+selector).val('');
+			  	$('#errors-from_date').remove();
+			  	$('#from_date').parent().append("<span class='errors' id='errors-from_date'>Leave cannot be applied for future year.</span>");
+			} */
+			if(todate > y)
+			{
+				$("#"+selector).val('');
+				 $('#errors-to_date').remove();
+				 $('#to_date').parent().append("<span class='errors' id='errors-to_date'>Leave cannot be applied for future year.</span>");
+			}
 	  }
 }
-
 function hidetodatecalender()
 {
 	

--- sql/queries.sql ---
@@ -1,468 +1,183 @@
-set global sql_mode = "STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION";
-ALTER TABLE assets MODIFY purchase_date DATE;
-ALTER TABLE assets MODIFY warenty_end_date DATE;
-ALTER TABLE main_accountclasstype MODIFY createddate DATETIME;
-ALTER TABLE main_accountclasstype MODIFY modifieddate DATETIME;
-ALTER TABLE main_announcements MODIFY createddate DATETIME;
-ALTER TABLE main_announcements MODIFY modifieddate DATETIME;
-ALTER TABLE main_assignmententryreasoncode MODIFY createddate DATETIME;
-ALTER TABLE main_assignmententryreasoncode MODIFY modifieddate DATETIME;
-ALTER TABLE main_attendancestatuscode MODIFY createddate DATETIME;
-ALTER TABLE main_attendancestatuscode MODIFY modifieddate DATETIME;
-ALTER TABLE main_bankaccounttype MODIFY createddate DATETIME;
-ALTER TABLE main_bankaccounttype MODIFY modifieddate DATETIME;
-ALTER TABLE main_cities MODIFY createddate DATETIME;
-ALTER TABLE main_cities MODIFY modifieddate DATETIME;
-ALTER TABLE main_competencylevel MODIFY createddate DATETIME;
-ALTER TABLE main_competencylevel MODIFY modifieddate DATETIME;
-ALTER TABLE main_countries MODIFY createddate DATETIME;
-ALTER TABLE main_countries MODIFY modifieddate DATETIME;
-ALTER TABLE main_currency MODIFY createddate DATETIME;
-ALTER TABLE main_currency MODIFY modifieddate DATETIME;
-ALTER TABLE main_currencyconverter MODIFY createddate DATETIME;
-ALTER TABLE main_currencyconverter MODIFY modifieddate DATETIME;
-ALTER TABLE main_dateformat MODIFY createddate DATETIME;
-ALTER TABLE main_dateformat MODIFY modifieddate DATETIME;
-ALTER TABLE main_educationlevelcode MODIFY createddate DATETIME;
-ALTER TABLE main_educationlevelcode MODIFY modifieddate DATETIME;
-ALTER TABLE main_eeoccategory MODIFY createddate DATETIME;
-ALTER TABLE main_eeoccategory MODIFY modifieddate DATETIME;
-ALTER TABLE main_empadditionaldetails MODIFY createddate DATETIME;
-ALTER TABLE main_empadditionaldetails MODIFY modifieddate DATETIME;
-ALTER TABLE main_empcommunicationdetails MODIFY createddate DATETIME;
-ALTER TABLE main_empcommunicationdetails MODIFY modifieddate DATETIME;
-ALTER TABLE main_empeducationdetails MODIFY createddate DATETIME;
-ALTER TABLE main_empeducationdetails MODIFY modifieddate DATETIME;
-ALTER TABLE main_empexperiancedetails MODIFY createddate DATETIME;
-ALTER TABLE main_empexperiancedetails MODIFY modifieddate DATETIME;
-ALTER TABLE main_empholidays MODIFY createddate DATETIME;
-ALTER TABLE main_empholidays MODIFY modifieddate DATETIME;
-ALTER TABLE main_empjobhistory MODIFY createddate DATETIME;
-ALTER TABLE main_empjobhistory MODIFY modifieddate DATETIME;
-ALTER TABLE main_employeedocuments MODIFY createddate DATETIME;
-ALTER TABLE main_employeedocuments MODIFY modifieddate DATETIME;
-ALTER TABLE main_employeeleavetypes MODIFY createddate DATETIME;
-ALTER TABLE main_employeeleavetypes MODIFY modifieddate DATETIME;
-ALTER TABLE main_employmentstatus MODIFY createddate DATETIME;
-ALTER TABLE main_employmentstatus MODIFY modifieddate DATETIME;
-ALTER TABLE main_empmedicalclaims MODIFY createddate DATETIME;
-ALTER TABLE main_empmedicalclaims MODIFY modifieddate DATETIME;
-ALTER TABLE main_emppersonaldetails MODIFY createddate DATETIME;
-ALTER TABLE main_emppersonaldetails MODIFY modifieddate DATETIME;
-ALTER TABLE main_empsalarydetails MODIFY createddate DATETIME;
-ALTER TABLE main_empsalarydetails MODIFY modifieddate DATETIME;
-ALTER TABLE main_empskills MODIFY createddate DATETIME;
-ALTER TABLE main_empskills MODIFY modifieddate DATETIME;
-ALTER TABLE main_empworkeligibility MODIFY createddate DATETIME;
-ALTER TABLE main_empworkeligibility MODIFY modifieddate DATETIME;
-ALTER TABLE main_ethniccode MODIFY createddate DATETIME;
-ALTER TABLE main_ethniccode MODIFY modifieddate DATETIME;
-ALTER TABLE main_gender MODIFY createddate DATETIME;
-ALTER TABLE main_gender MODIFY modifieddate DATETIME;
-ALTER TABLE main_geographygroup MODIFY createddate DATETIME;
-ALTER TABLE main_geographygroup MODIFY modifieddate DATETIME;
-ALTER TABLE main_holidaygroups MODIFY createddate DATETIME;
-ALTER TABLE main_holidaygroups MODIFY modifieddate DATETIME;
-ALTER TABLE main_jobtitles MODIFY createddate DATETIME;
-ALTER TABLE main_jobtitles MODIFY modifieddate DATETIME;
-ALTER TABLE main_language MODIFY createddate DATETIME;
-ALTER TABLE main_language MODIFY modifieddate DATETIME;
-ALTER TABLE main_licensetype MODIFY createddate DATETIME;
-ALTER TABLE main_licensetype MODIFY modifieddate DATETIME;
-ALTER TABLE main_maritalstatus MODIFY createddate DATETIME;
-ALTER TABLE main_maritalstatus MODIFY modifieddate DATETIME;
-ALTER TABLE main_militaryservice MODIFY createddate DATETIME;
-ALTER TABLE main_militaryservice MODIFY modifieddate DATETIME;
-ALTER TABLE main_monthslist MODIFY createddate DATETIME;
-ALTER TABLE main_monthslist MODIFY modifieddate DATETIME;
-ALTER TABLE main_nationality MODIFY createddate DATETIME;
-ALTER TABLE main_nationality MODIFY modifieddate DATETIME;
-ALTER TABLE main_nationalitycontextcode MODIFY createddate DATETIME;
-ALTER TABLE main_nationalitycontextcode MODIFY modifieddate DATETIME;
-ALTER TABLE main_numberformats MODIFY createddate DATETIME;
-ALTER TABLE main_numberformats MODIFY modifieddate DATETIME;
-ALTER TABLE main_payfrequency MODIFY createddate DATETIME;
-ALTER TABLE main_payfrequency MODIFY modifieddate DATETIME;
-ALTER TABLE main_pa_category MODIFY createddate DATETIME;
-ALTER TABLE main_pa_category MODIFY modifieddate DATETIME;
-ALTER TABLE main_pa_employee_ratings MODIFY createddate DATETIME;
-ALTER TABLE main_pa_employee_ratings MODIFY modifieddate DATETIME;
-ALTER TABLE main_pa_ff_employee_ratings MODIFY createddate DATETIME;
-ALTER TABLE main_pa_ff_employee_ratings MODIFY modifieddate DATETIME;
-ALTER TABLE main_pa_manager_initialization MODIFY createddate DATETIME;
-ALTER TABLE main_pa_manager_initialization MODIFY modifieddate DATETIME;
-ALTER TABLE main_pa_ratings MODIFY createddate DATETIME;
-ALTER TABLE main_pa_ratings MODIFY modifieddate DATETIME;
-ALTER TABLE main_positions MODIFY createddate DATETIME;
-ALTER TABLE main_positions MODIFY modifieddate DATETIME;
-ALTER TABLE main_prefix MODIFY createddate DATETIME;
-ALTER TABLE main_prefix MODIFY modifieddate DATETIME;
-ALTER TABLE main_racecode MODIFY createddate DATETIME;
-ALTER TABLE main_racecode MODIFY modifieddate DATETIME;
-ALTER TABLE main_remunerationbasis MODIFY createddate DATETIME;
-ALTER TABLE main_remunerationbasis MODIFY modifieddate DATETIME;
-ALTER TABLE main_roles MODIFY createddate DATETIME;
-ALTER TABLE main_roles MODIFY modifieddate DATETIME;
-ALTER TABLE main_sd_configurations MODIFY createddate DATETIME;
-ALTER TABLE main_sd_configurations MODIFY modifieddate DATETIME;
-ALTER TABLE main_sd_depts MODIFY createddate DATETIME;
-ALTER TABLE main_sd_depts MODIFY modifieddate DATETIME;
-ALTER TABLE main_sd_reqtypes MODIFY createddate DATETIME;
-ALTER TABLE main_sd_reqtypes MODIFY modifieddate DATETIME;
-ALTER TABLE main_states MODIFY createddate DATETIME;
-ALTER TABLE main_states MODIFY modifieddate DATETIME;
-ALTER TABLE main_timeformat MODIFY createddate DATETIME;
-ALTER TABLE main_timeformat MODIFY modifieddate DATETIME;
-ALTER TABLE main_timezone MODIFY createddate DATETIME;
-ALTER TABLE main_timezone MODIFY modifieddate DATETIME;
-ALTER TABLE main_userloginlog MODIFY logindatetime DATETIME;
-ALTER TABLE main_users MODIFY createddate DATETIME;
-ALTER TABLE main_users MODIFY modifieddate DATETIME;
-ALTER TABLE main_veteranstatus MODIFY createddate DATETIME;
-ALTER TABLE main_veteranstatus MODIFY modifieddate DATETIME;
-ALTER TABLE main_weekdays MODIFY createddate DATETIME;
-ALTER TABLE main_weekdays MODIFY modifieddate DATETIME;
-ALTER TABLE main_workeligibilitydoctypes MODIFY createddate DATETIME;
-ALTER TABLE main_workeligibilitydoctypes MODIFY modifieddate DATETIME;
-ALTER TABLE tbl_employmentstatus MODIFY createddate DATETIME;
-ALTER TABLE tbl_employmentstatus MODIFY modifieddate DATETIME;
-ALTER TABLE tbl_weeks MODIFY createddate DATETIME;
-ALTER TABLE tbl_weeks MODIFY modifieddate DATETIME;
-ALTER TABLE tm_emp_ts_notes MODIFY sun_date DATE;
-ALTER TABLE assets MODIFY category int;
-ALTER TABLE assets MODIFY sub_category int;
-ALTER TABLE assets MODIFY company_asset_code int;
-ALTER TABLE assets MODIFY allocated_to int;
-ALTER TABLE assets MODIFY responsible_technician int;
-ALTER TABLE assets MODIFY vendor int;
-ALTER TABLE assets MODIFY created_by int;
-ALTER TABLE assets MODIFY modified_by int;
-ALTER TABLE assets_categories MODIFY parent int;
-ALTER TABLE assets_categories MODIFY created_by int;
-ALTER TABLE main_candidatedetails MODIFY requisition_id int;
-ALTER TABLE main_cronstatus MODIFY cron_status int;
-ALTER TABLE main_currencyconverter MODIFY basecurrency int;
-ALTER TABLE main_currencyconverter MODIFY targetcurrency int;
-ALTER TABLE main_emailcontacts MODIFY group_id int;
-ALTER TABLE main_emailcontacts MODIFY business_unit_id int;
-ALTER TABLE main_employees_summary MODIFY user_id int;
-ALTER TABLE main_empworkdetails MODIFY user_id int;
-ALTER TABLE main_hierarchylevels MODIFY level_number int;
-ALTER TABLE main_interviewrounddetails MODIFY interview_round_number int;
-ALTER TABLE main_mail_settings MODIFY port int;
-ALTER TABLE main_requisition MODIFY position_id int;
-ALTER TABLE main_requisition_summary MODIFY req_id int;
-ALTER TABLE main_requisition_summary MODIFY position_id int;
-ALTER TABLE main_roles MODIFY levelid int;
-ALTER TABLE main_settings MODIFY userid int;
-ALTER TABLE tm_clients MODIFY created_by int;        
-ALTER TABLE tm_emp_timesheets MODIFY created_by int;        
-ALTER TABLE tm_projects MODIFY created_by int;        
-ALTER TABLE tm_project_employees MODIFY created_by int;
-ALTER TABLE tm_project_tasks MODIFY created_by int;        
-ALTER TABLE tm_project_task_employees MODIFY created_by int;
-ALTER TABLE tm_tasks MODIFY created_by int;
-ALTER TABLE main_empadditionaldetails MODIFY user_id bigint;
-ALTER TABLE main_empcommunicationdetails MODIFY user_id bigint;
-ALTER TABLE main_empcreditcarddetails MODIFY user_id bigint;
-ALTER TABLE main_empdependencydetails MODIFY user_id bigint;
-ALTER TABLE main_empdisabilitydetails MODIFY user_id bigint;
-ALTER TABLE main_empeducationdetails MODIFY user_id bigint;
-ALTER TABLE main_empexperiancedetails MODIFY user_id bigint;
-ALTER TABLE main_empjobhistory MODIFY user_id bigint;
-ALTER TABLE main_employeedocuments MODIFY user_id bigint;
-ALTER TABLE main_employees MODIFY user_id bigint;
-ALTER TABLE main_empmedicalclaims MODIFY user_id bigint;
-ALTER TABLE main_emppersonaldetails MODIFY user_id bigint;
-ALTER TABLE main_empsalarydetails MODIFY user_id bigint;
-ALTER TABLE main_empvisadetails MODIFY user_id bigint;
-ALTER TABLE main_empvisadetails MODIFY createdby bigint;
-ALTER TABLE main_empvisadetails MODIFY modifiedby bigint;
-ALTER TABLE main_empworkeligibility MODIFY user_id bigint;
-ALTER TABLE main_emp_reporting MODIFY emp_id bigint;
-ALTER TABLE main_emp_reporting MODIFY reporting_manager_id bigint;
-ALTER TABLE main_hierarchylevels MODIFY parent bigint;
-ALTER TABLE main_hierarchylevels MODIFY userid bigint;
-ALTER TABLE main_logmanager MODIFY menuId bigint;
-ALTER TABLE main_logmanagercron MODIFY menuId bigint;
-ALTER TABLE main_pd_categories MODIFY modifiedby bigint;
-ALTER TABLE main_pd_categories MODIFY createdby bigint;
-ALTER TABLE main_pd_documents MODIFY category_id bigint;
-ALTER TABLE main_sd_reqtypes MODIFY service_desk_id bigint;
-ALTER TABLE main_sd_requests_summary MODIFY sd_requests_id bigint;
-ALTER TABLE main_weekdays MODIFY day_name bigint;
-ALTER TABLE main_candidatedetails MODIFY experience float;
-ALTER TABLE assets_categories MODIFY modified_by varchar(11);
-ALTER TABLE tm_projects MODIFY lead_approve_ts TINYINT;
-ALTER TABLE tbl_countries Modify country_code CHAR(10) CHARSET utf8 COLLATE utf8_general_ci NOT NULL; 
-ALTER TABLE assets MODIFY isactive TINYINT;
-ALTER TABLE assets_categories MODIFY is_active TINYINT;
-ALTER TABLE main_pa_initialization MODIFY performance_app_flag TINYINT;
-ALTER TABLE main_pd_categories MODIFY isused TINYINT;
-ALTER TABLE main_pd_categories MODIFY isactive TINYINT;
-ALTER TABLE main_pd_documents MODIFY isactive TINYINT;
-ALTER TABLE main_settings MODIFY flag TINYINT;
-ALTER TABLE main_settings MODIFY isactive TINYINT;
-ALTER TABLE tbl_cities MODIFY is_active TINYINT;
-ALTER TABLE tbl_countries MODIFY is_active TINYINT;
-ALTER TABLE tbl_states MODIFY isactive TINYINT;
-ALTER TABLE tm_clients MODIFY is_active TINYINT;
-ALTER TABLE tm_emp_timesheets MODIFY cal_week TINYINT;
-ALTER TABLE tm_emp_timesheets MODIFY is_active TINYINT;
-ALTER TABLE tm_emp_ts_notes MODIFY cal_week TINYINT;
-ALTER TABLE tm_emp_ts_notes MODIFY is_active TINYINT;
-ALTER TABLE tm_projects MODIFY is_active TINYINT;
-ALTER TABLE tm_project_employees MODIFY is_active TINYINT;
-ALTER TABLE tm_project_tasks MODIFY is_active TINYINT;
-ALTER TABLE tm_project_task_employees MODIFY is_active TINYINT;
-ALTER TABLE tm_tasks MODIFY is_default TINYINT;
-ALTER TABLE tm_tasks MODIFY is_active TINYINT;
-ALTER TABLE tm_ts_status MODIFY is_active TINYINT;
-ALTER TABLE `assets` CHANGE `invoice_number` `invoice_number` VARCHAR(50) NULL;
+update main_privileges set isactive=0 where object IN (177,178,179,180,181);
+update main_menu set isactive=1,parent=3,modulename='exit',nav_ids=",3,177," where id = 177;
+update main_menu set isactive=1,parent=177,modulename='exit',url="/exit/exitprocsettings",nav_ids=",3,177,178,",menuOrder=3 where id =178;
+update main_menu set isactive=1,parent=177,modulename='exit',url="/exit/exittypes",nav_ids=",3,177,179,",menuOrder=1 where id =179;
+update main_menu set isactive=1,parent=177,modulename='exit',url="/exit/exitproc",nav_ids=",3,177,180,",menuOrder=4  where id =180;
+update main_menu set isactive=1,parent=177,modulename='exit',url="/exit/allexitproc",nav_ids=",3,177,181,",menuOrder=5 where id =181;
+UPDATE `main_dateformat` SET isactive=0 WHERE id=1;
+
+insert into `main_menu`(`id`,`menuName`,`url`,`helpText`,`toolTip`,`iconPath`,`parent`,`menuOrder`,`nav_ids`,`isactive`,`modulename`,`segment_flag`,`org_menuid`,`menufields`,`menuQuery`,`hasJoins`,`modelName`,`functionName`,`defaultOrderBy`)
+values 
+( 210,'Exit Interview Questions','/exit/configureexitqs',NULL,NULL,NULL,'177','2',',3,177,210,','1','exit',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
+
+INSERT  INTO `main_privileges`(`role`,`group_id`,`object`,`addpermission`,`editpermission`,`deletepermission`,`viewpermission`,`uploadattachments`,`viewattachments`,`createdby`,`modifiedby`,`createddate`,`modifieddate`,`isactive`)
+VALUES
+(1,NULL,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,1,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,2,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,3,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,4,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,5,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,6,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(2,1,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(3,2,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(4,3,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(5,4,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(6,5,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(8,6,177,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+
+(1,NULL,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,1,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,2,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,3,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,4,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,5,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,6,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(2,1,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(3,2,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(4,3,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(5,4,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(6,5,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(8,6,180,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+
+(1,NULL,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,1,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,2,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,3,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,4,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,5,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,6,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(2,1,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(3,2,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(4,3,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(5,4,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(6,5,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+(8,6,181,'Yes','Yes','Yes','No','Yes','Yes',1,1,NOW(),NOW(),1),
+
+(1,NULL,178,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,1,178,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,3,178,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(2,1,178,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(4,3,178,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+
+(1,NULL,179,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,1,179,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,3,179,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(2,1,179,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(4,3,179,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+
+(1,NULL,210,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,1,210,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(NULL,3,210,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(2,1,210,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1),
+(4,3,210,'Yes','Yes','Yes','Yes','Yes','Yes',1,1,NOW(),NOW(),1);
+
+
+
+CREATE TABLE `main_exit_history` (                                                          
+ `id` int(11) NOT NULL AUTO_INCREMENT,
+ `exit_request_id` int(11) NOT NULL,                                                       
+ `description` varchar(500) COLLATE utf8_unicode_ci DEFAULT NULL,                          
+ `createdby` int(11) NOT NULL,                                                             
+ `modifiedby` int(11) DEFAULT NULL,                                                        
+ `createddate` datetime NOT NULL,                                                          
+ `modifieddate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  
+ `isactive` tinyint(4) NOT NULL DEFAULT '1' COMMENT '0-No,1-Yes',                          
+ PRIMARY KEY (`id`)                                                                        
+) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
+
+
+CREATE TABLE `main_exit_process` (                                                                   
+`id` int(11) NOT NULL AUTO_INCREMENT,                                                              
+`employee_id` int(11) NOT NULL,                                                                    
+`exit_type_id` int(11) NOT NULL,                                                                   
+`exit_settings_id` int(11) NOT NULL,                                                               
+`employee_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                            
+`overall_status` enum('Pending','Approved','Rejected') COLLATE utf8_unicode_ci DEFAULT 'Pending',  
+`overall_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                             
+`l1_status` enum('Pending','Approved','Rejected') COLLATE utf8_unicode_ci DEFAULT NULL,            
+`l1_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                                  
+`l2_status` enum('Pending','Approved','Rejected') COLLATE utf8_unicode_ci DEFAULT NULL,            
+`l2_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                                  
+`hr_manager_status` enum('Pending','Approved','Rejected') COLLATE utf8_unicode_ci DEFAULT NULL,    
+`hr_manager_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                          
+`sys_admin_status` enum('Pending','Approved','Rejected') COLLATE utf8_unicode_ci DEFAULT NULL,     
+`sys_admin_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                           
+`gen_admin_status` enum('Pending','Approved','Rejected') COLLATE utf8_unicode_ci DEFAULT NULL,     
+`gen_admin_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                           
+`fin_admin_status` enum('Pending','Approved','Rejected') COLLATE utf8_unicode_ci DEFAULT NULL,     
+`fin_admin_comments` varchar(1000) COLLATE utf8_unicode_ci DEFAULT NULL,                           
+`relieving_date` date NOT NULL,                                                                    
+`feedback_completed` tinyint(1) DEFAULT '0' COMMENT '0=Not completed,1=Completed',                 
+`createdby` int(11) NOT NULL,                                                                      
+`modifiedby` int(11) DEFAULT NULL,                                                                 
+`createddate` datetime NOT NULL,                                                                   
+`modifieddate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,           
+PRIMARY KEY (`id`)                                                                                 
+) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
+
+
+CREATE TABLE `main_exit_questions` (                                                        
+`id` int(11) NOT NULL AUTO_INCREMENT,                                                     
+`exit_type_id` int(11) NOT NULL,                                                          
+`question` varchar(500) COLLATE utf8_unicode_ci NOT NULL,                                 
+`description` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,                          
+`createdby` int(11) NOT NULL,                                                             
+`modifiedby` int(11) DEFAULT NULL,                                                        
+`createddate` datetime NOT NULL,                                                          
+`modifieddate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  
+`isactive` tinyint(4) NOT NULL DEFAULT '1' COMMENT '0-No,1-Yes',                          
+`isused` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0-No,1-Yes',                            
+PRIMARY KEY (`id`)                                                                        
+) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
+
+
+CREATE TABLE `main_exit_questions_response` (                                                                    
+`id` int(11) NOT NULL AUTO_INCREMENT,                                  
+`user_id` int(11) NOT NULL,                                                        
+`exit_initiation_id` int(11) NOT NULL,                                 
+`hr_qs` text COLLATE utf8_unicode_ci,                                  
+`employee_response` text COLLATE utf8_unicode_ci COMMENT '{hr_qs_id_1:emp_comments,hr_qs_id_2:emp_comments}',  
+`createdby` int(11) NOT NULL,                                                  
+`modifiedby` int(11) DEFAULT NULL,                                                                             
+`createddate` datetime NOT NULL,                                                                               
+`modifieddate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,                       
+`isactive` tinyint(4) NOT NULL DEFAULT '1' COMMENT '0-No,1-Yes',                                               
+PRIMARY KEY (`id`)                                                                                             
+) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
+
+CREATE TABLE `main_exit_settings` (                                                         
+`id` int(11) NOT NULL AUTO_INCREMENT,                                                     
+`businessunit_id` int(11) NOT NULL,                                                       
+`department_id` int(11) NOT NULL,                                                         
+`l2_manager` int(11) DEFAULT NULL,                                                        
+`hr_manager` int(11) DEFAULT NULL,                                                        
+`sys_admin` int(11) DEFAULT NULL,                                                         
+`general_admin` int(11) DEFAULT NULL,                                                     
+`finance_manager` int(11) DEFAULT NULL,                                                   
+`notice_period` int(11) DEFAULT NULL,                                                     
+`createdby` int(11) NOT NULL,                                                             
+`modifiedby` int(11) DEFAULT NULL,                                                        
+`createddate` datetime NOT NULL,                                                          
+`modifieddate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  
+`isactive` tinyint(4) NOT NULL DEFAULT '1' COMMENT '0-No,1-Yes',                          
+PRIMARY KEY (`id`)                                                                        
+) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
+
+
+CREATE TABLE `main_exit_types`(
+`id` int(11) NOT NULL AUTO_INCREMENT,                                                     
+`exit_type` varchar(50) COLLATE utf8_unicode_ci NOT NULL,                                 
+`description` varchar(255) COLLATE utf8_unicode_ci DEFAULT NULL,                          
+`createdby` int(11) NOT NULL,                                                             
+`modifiedby` int(11) DEFAULT NULL,                                                        
+`createddate` datetime NOT NULL,                                                          
+`modifieddate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  
+`isactive` tinyint(4) NOT NULL DEFAULT '1' COMMENT '0-No,1-Yes',                          
+`isused` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0-No,1-Yes',                            
+PRIMARY KEY (`id`)                                                                        
+) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
+
+ 
 
 
-insert  into `main_menu`(`id`,`menuName`,`url`,`helpText`,`toolTip`,`iconPath`,`parent`,`menuOrder`,`nav_ids`,`isactive`,`modulename`,`segment_flag`,`org_menuid`,`menufields`,`menuQuery`,`hasJoins`,`modelName`,`functionName`,`defaultOrderBy`) values(201,'Disciplinary','/#','','','',0,21,',21,',1,'default',2,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
-(202,'Violation Type','/disciplinaryviolation','','','',201,1,',201,202,',1,'default',2,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
-(203,'Raise An Incident','/disciplinaryincident','','','',201,2,',201,203,',1,'default',2,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
-(204,'My Incidents','/disciplinarymyincidents','','','',201,3,',201,204,',1,'default',2,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
-(205,'Team Incidents','/disciplinaryteamincidents','','','',201,4,',201,205,',1,'default',2,NULL,NULL,NULL,NULL,NULL,NULL,NULL),
-(206,'All Incidents','/disciplinaryallincidents','','','',201,5,',201,206,',1,'default',2,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
-
-
-
-INSERT INTO `main_privileges` (`role`, `group_id`, `object`, `addpermission`, `editpermission`, `deletepermission`, `viewpermission`, `uploadattachments`, `viewattachments`, `createdby`, `modifiedby`, `createddate`, `modifieddate`, `isactive`) VALUES
-(1, NULL, 201, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(1, NULL, 202, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(1, NULL, 203, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(1, NULL, 204, 'No', 'Yes', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(1, NULL, 205, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(1, NULL, 206, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-
-(NULL,1,201,'Yes','Yes','Yes','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,1,202,'Yes','Yes','Yes','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,1,203,'Yes','Yes','Yes','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,1,204,'No','Yes','No','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,1,205,'No','No','No','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,1,206,'No','No','No','Yes','No','No',1,1,NOW(),NOW(),1),
-
-(NULL,2,201,'Yes','Yes','Yes','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,2,204,'No','Yes','No','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,2,205,'No','No','No','Yes','No','No',1,1,NOW(),NOW(),1),
-
-(NULL,3,201,'Yes','Yes','Yes','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,3,204,'No','Yes','No','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,3,205,'No','No','No','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,3,206,'No','No','No','Yes','No','No',1,1,NOW(),NOW(),1),
-
-(NULL,4,201,'Yes','Yes','Yes','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,4,204,'No','Yes','No','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,4,205,'No','No','No','Yes','No','No',1,1,NOW(),NOW(),1),
-
-(NULL,6,201,'Yes','Yes','Yes','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,6,204,'No','Yes','No','Yes','No','No',1,1,NOW(),NOW(),1),
-(NULL,6,205,'No','No','No','Yes','No','No',1,1,NOW(),NOW(),1),
-
-(2, 1, 201, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(2, 1, 202, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(2, 1, 203, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(2, 1, 204, 'No', 'Yes', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(2, 1, 205, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(2, 1, 206, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-
-(3, 2, 201, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(3, 2, 204, 'No', 'Yes', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(3, 2, 205, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-
-(4, 3, 201, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(4, 3, 204, 'No', 'Yes', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(4, 3, 205, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(4, 3, 206, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-
-(5, 4, 201, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(5, 4, 204, 'No', 'Yes', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(5, 4, 205, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-
-(8, 6, 201, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(8, 6, 204, 'No', 'Yes', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(8, 6, 205, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-
-(9, 4, 201, 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 1, 1, NOW(), NOW(), 1),
-(9, 4, 204, 'No', 'Yes', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1),
-(9, 4, 205, 'No', 'No', 'No', 'Yes', 'No', 'No', 1, 1, NOW(), NOW(), 1);
-
-update `main_menu` set `parent`='0',`isactive`='0'where `id` IN(177,178,179,180,181);
-
-CREATE TABLE `main_disciplinary_violation_types` (  
- `id` int(11) unsigned NOT NULL AUTO_INCREMENT,    
- `violationname` varchar(255) NOT NULL,            
- `description` varchar(255) DEFAULT NULL,          
- `createdby` int(11) unsigned DEFAULT NULL,        
- `modifiedby` int(11) unsigned DEFAULT NULL,       
- `createddate` datetime DEFAULT NULL,              
- `modifieddate` datetime DEFAULT NULL,             
- `isactive` tinyint(1) unsigned DEFAULT '1',       
- PRIMARY KEY (`id`)                                
-) ENGINE=MyISAM DEFAULT CHARSET=latin1;
-
-
-CREATE TABLE `main_disciplinary_incident` (                                                                                  
-`id` int(11) unsigned NOT NULL AUTO_INCREMENT,                                                                             
-`incident_raised_by` bigint(20) unsigned DEFAULT NULL,                                                                     
-`employee_bu_id` bigint(20) unsigned DEFAULT NULL,                                                                         
-`employee_dept_id` bigint(20) unsigned DEFAULT NULL,                                                                       
-`employee_id` bigint(20) unsigned DEFAULT NULL,                                                                            
-`employee_rep_mang_id` bigint(20) unsigned DEFAULT NULL,
-
-`date_of_occurrence` date DEFAULT NULL,
-                                                                   
-`violation_id` bigint(20) unsigned DEFAULT NULL,                                                                           
-`violation_expiry` date DEFAULT NULL,                                                                                      
-`employee_job_title_id` bigint(20) unsigned DEFAULT NULL,                                                                  
-`employer_statement` text,                                                                                                 
-`employee_appeal` tinyint(1) DEFAULT '1' COMMENT '1=Yes,2=No',                                                             
-`employee_statement` text,                                                                                                 
-`cao_verdict` tinyint(1) DEFAULT '1' COMMENT '1=guilty,2=not guilty',                                                      
-`corrective_action` enum('Suspension With Pay','Suspension W/O Pay','Termination','Other') DEFAULT 'Suspension With Pay',  
-`corrective_action_text` varchar(255) DEFAULT NULL,                                                                        
-`incident_status` enum('Initiated','Appealed','Closed') DEFAULT 'Initiated',                                               
-`createdby` bigint(20) unsigned DEFAULT NULL,                                                                              
-`modifiedby` bigint(20) unsigned DEFAULT NULL,                                                                             
-`createddate` datetime DEFAULT NULL,                                                                                       
-`modifieddate` datetime DEFAULT NULL,                                                                                      
-`isactive` tinyint(1) DEFAULT '1',                                                                                         
-PRIMARY KEY (`id`)                                                                                                         
-) ENGINE=MyISAM DEFAULT CHARSET=latin1;    
-
-
-CREATE TABLE `main_disciplinary_history` (               
- `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,      
- `incident_id` bigint(20) unsigned DEFAULT NULL,        
- `description` varchar(300) DEFAULT NULL,               
- `action_emp_id` bigint(20) unsigned DEFAULT NULL,      
- `createdby` bigint(20) unsigned DEFAULT NULL,          
- `createddate` datetime DEFAULT NULL,                   
- PRIMARY KEY (`id`)                                     
-) ENGINE=InnoDB DEFAULT CHARSET=latin1;
-
-
-DELIMITER $$
-
-DROP TRIGGER `main_users_aft_upd`$$
-
-CREATE
-   
-    TRIGGER `main_users_aft_upd` AFTER UPDATE ON `main_users` 
-    FOR EACH ROW BEGIN
-    declare groupid int(11);
-    
-    select group_id into groupid from main_roles where id = old.emprole;
-    if old.userfullname != new.userfullname then
-    begin 
-    
-    if (groupid != 5 or groupid is null) then 
-    begin
-	
-        update main_leaverequest_summary set rep_manager_name = new.userfullname,modifieddate = utc_timestamp() where rep_mang_id = new.id and isactive = 1;
-        update main_leaverequest_summary set user_name = new.userfullname,modifieddate = utc_timestamp() where user_id = new.id and isactive = 1; 
-	
-	
-	update main_requisition_summary set reporting_manager_name = new.userfullname,modifiedon = utc_timestamp() where reporting_id = new.id and isactive = 1;
-	update main_requisition_summary set approver1_name = new.userfullname,modifiedon = utc_timestamp() where approver1 = new.id and isactive = 1;
-	update main_requisition_summary set approver2_name = new.userfullname,modifiedon = utc_timestamp() where approver2 = new.id and isactive = 1;
-	update main_requisition_summary set approver3_name = new.userfullname,modifiedon = utc_timestamp() where approver3 = new.id and isactive = 1;
-	update main_requisition_summary set createdby_name = new.userfullname,modifiedon = utc_timestamp() where createdby = new.id and isactive = 1;
-	
-	
-	update main_employees_summary set reporting_manager_name = new.userfullname,modifieddate = utc_timestamp() where reporting_manager = new.id and isactive = 1;
-	update main_employees_summary set referer_name = new.userfullname,modifieddate = utc_timestamp() where candidatereferredby = new.id and isactive = 1;
-	update main_employees_summary set createdby_name = new.userfullname,modifieddate = utc_timestamp() where createdby = new.id and isactive = 1;
-        update main_employees_summary set userfullname = new.userfullname,modifieddate = utc_timestamp() where user_id = new.id and isactive = 1;
-	
-	
-	update main_bgchecks_summary set specimen_name = new.userfullname,modifieddate = utc_timestamp() where specimen_id = new.id and specimen_flag = 1 and isactive = 1;
-	update main_bgchecks_summary set createdname = new.userfullname,modifieddate = utc_timestamp() where createdby = new.id and isactive = 1;
-	update main_bgchecks_summary set modifiedname = new.userfullname,modifieddate = utc_timestamp() where modifiedby = new.id and isactive = 1;
-	
-	
-	update main_interviewrounds_summary set interviewer_name = new.userfullname,modified_date = utc_timestamp() where interviewer_id = new.id and isactive = 1;
-	update main_interviewrounds_summary set created_by_name = new.userfullname,modified_date = utc_timestamp() where created_by = new.id and isactive = 1;
-	
-	
-	update main_userloginlog set userfullname = new.userfullname where userid = new.id;
-	
-	
-	update main_sd_requests_summary set raised_by_name = new.userfullname,modifieddate = utc_timestamp() where raised_by = new.id;
-	update main_sd_requests_summary set executor_name = new.userfullname,modifieddate = utc_timestamp() where executor_id = new.id;
-	update main_sd_requests_summary set reporting_manager_name = new.userfullname,modifieddate = utc_timestamp() where reporting_manager_id = new.id;
-	update main_sd_requests_summary set approver_1_name = new.userfullname,modifieddate = utc_timestamp() where approver_1 = new.id;	
-	update main_sd_requests_summary set approver_2_name = new.userfullname,modifieddate = utc_timestamp() where approver_2 = new.id;
-	update main_sd_requests_summary set approver_3_name = new.userfullname,modifieddate = utc_timestamp() where approver_3 = new.id;
-	
-    end;
-    end if;
-    end;
-    end if;
-    if old.employeeId != new.employeeId then 
-    begin 
-        if (groupid != 5 or groupid is null) then 
-        begin
-	    
-            update main_employees_summary set employeeId = new.employeeId,modifieddate = utc_timestamp() where user_id = new.id; 
-            
-        end;
-        end if;
-    end;
-    end if;
-    if old.isactive != new.isactive then
-    begin
-	if (groupid != 5 or groupid is null) then 
-        begin
-	    
-            update main_employees_summary set isactive = new.isactive,modifieddate = utc_timestamp() where user_id = new.id; 
-            
-        end;
-        end if;
-    end;
-    end if; 
-    if old.profileimg != new.profileimg then
-    begin
-	if (groupid != 5 or groupid is null) then 
-        begin
-	    
-            update main_employees_summary set profileimg = new.profileimg,modifieddate = utc_timestamp() where user_id = new.id; 
-            
-	    
-            update main_request_history set emp_profileimg = new.profileimg,modifieddate = utc_timestamp() where emp_id = new.id; 
-            
-        end;
-        end if;
-    end;
-    end if; 
-    if old.backgroundchk_status != new.backgroundchk_status then
-    begin
-	if (groupid != 5 or groupid is null) then 
-        begin
-	    
-            update main_employees_summary set backgroundchk_status = new.backgroundchk_status,modifieddate = utc_timestamp() where user_id = new.id; 
-            
-        end;
-        end if;
-    end;
-    end if;
-if (old.contactnumber != new.contactnumber || new.contactnumber IS NOT NULL) then
-    begin
-	if (groupid != 5 or groupid is null) then 
-        begin
-	    
-            update main_employees_summary set contactnumber = new.contactnumber,modifieddate = utc_timestamp() where user_id = new.id; 
-            
-        end;
-        end if;
-    end;
-    end if;
-    
-    END;
-$$
-
-DELIMITER ;
-  
\ No newline at end of file

