--- app/webroot/css/vendor/vis-4.21.0/.babelrc ---
@@ -1,8 +0,0 @@
-{
-  "presets": ["es2015"],
-  "plugins": [
-    "transform-es3-property-literals",
-    "transform-es3-member-expression-literals",
-    "transform-runtime"
-  ]
-}

--- app/webroot/css/vendor/vis-4.21.0/.codeclimate.yml ---
@@ -1,26 +0,0 @@
-languages:
-  JavaScript: true
-engines:
-  eslint:
-    enabled: true
-  csslint:
-    enabled: true
-  markdownlint:
-    enabled: true
-  duplication:
-    enabled: true
-    config:
-      languages:
-        javascript:
-          mass_threshold: 300
-  fixme :
-    enabled: true
-ratings:
-  paths:
-  - "**/*.js"
-  - "**/*.css"
-  - "**/*.md"
-exclude_paths:
-  - "dist/**/*"
-  - "docs/**/*"
-  - "examples/**/*"

--- app/webroot/css/vendor/vis-4.21.0/.csslintrc ---
@@ -1,6 +0,0 @@
-{
-  "adjoining-classes": false,
-  "box-model": false,
-  "box-sizing": false,
-  "order-alphabetical": false
-}

--- app/webroot/css/vendor/vis-4.21.0/.eslintrc ---
@@ -1,42 +0,0 @@
-{
-  "env": {
-    "browser": true,
-    "es6": true,
-    "node": true,
-    "mocha": true
-  },
-
-  "parserOptions": {
-    "sourceType": "module",
-  },
-
-  "extends": "eslint:recommended",
-
-  // For the full list of rules, see: http://eslint.org/docs/rules/
-  "rules": {
-    "complexity": [2, 55],
-    "max-statements": [2, 115],
-    "no-unreachable": 1,
-    "no-useless-escape": 0,
-
-    "no-console": 0,
-    // To flag presence of console.log without breaking linting:
-    //"no-console": ["warn", { allow: ["warn", "error"] }],
-
-    "require-jsdoc": ["error", {
-        "require": {
-            "FunctionDeclaration": true,
-            "MethodDefinition": true,
-            "ClassDeclaration": true,
-            "ArrowFunctionExpression": false
-        }
-    }],
-    "valid-jsdoc": [2, {
-      "requireReturnDescription": false,
-      "requireReturn": false,
-      "requireParamDescription": false,
-      "requireReturnType": true
-      }],
-    "guard-for-in": 1,
-  },
-}

--- app/webroot/css/vendor/vis-4.21.0/.gitignore ---
@@ -1,15 +0,0 @@
-# npm files
-node_modules
-npm-debug.log
-
-# ide or system files
-.idea
-.c9
-*.iml
-.project
-.settings/
-.directory
-
-# temporary files
-.*.sw[op]
-.commits.tmp

--- app/webroot/css/vendor/vis-4.21.0/.mdlrc ---
@@ -1,7 +0,0 @@
-// Markdown Lint Rules
-// https://github.com/mivok/markdownlint/blob/master/docs/RULES.md
-
-rules
-  "~MD012", // alert on multiple consecutive blank lines
-  "~MD013", // line length should be no more than 80 characters
-  "~MD014", // Dollar signs used before commands without showing output

--- app/webroot/css/vendor/vis-4.21.0/.npmignore ---
@@ -1,9 +0,0 @@
-misc
-node_modules
-test
-tools
-.idea
-bower.json
-Jakefile.js
-.npmignore
-.gitignore

--- app/webroot/css/vendor/vis-4.21.0/.travis.yml ---
@@ -1,18 +0,0 @@
-language: node_js
-node_js:
-  - "6"
-env:
-  - CXX=g++-4.8
-addons:
-  apt:
-    sources:
-      - ubuntu-toolchain-r-test
-    packages:
-      - libgif-dev
-      - g++-4.8
-before_script:
-  - npm run lint
-  - npm install gulp
-script:
-  - gulp
-  - npm test

--- app/webroot/css/vendor/vis-4.21.0/CONTRIBUTING.md ---
@@ -1,15 +0,0 @@
-## Contributing
-
-[Contributions](//github.com/almende/vis/blob/master/misc/how_to_help.md) to the vis.js library are very welcome! [We can't do this alone](//github.com/almende/vis/blob/master/misc/we_need_help.md).
-
-### Questions
-If you have any *general question* on how to use the vis.js library in your own project please check out [stackoverflow](http://stackoverflow.com/questions/tagged/vis.js) for thinks like that. **This is NOT a JavaScript help forum!**
-
-### Bugs, Problems and Feature-Requests
-If you really want to open a new issue:
-* Please use the [search functionality](//github.com/almende/vis/issues) to make sure that there is not already an issue concerning the same topic.
-* Please make sure to **mention which module** of vis.js (network, timeline, graph3d, ...) your are referring to.
-* Note that development happens on the `develop` git branch. Be sure to submit PRs against this branch.
-* If you think you found a bug please **provide a simple example** (e.g. on [jsbin](jsbin.com)) that demonstrates the problem.
-* If you want to propose a feature-request please **describe what you are looking for in detail**, ideally providing a screenshot, drawing or something similar.
-* **Close the issue later**, when the issue is no longer needed.

--- app/webroot/css/vendor/vis-4.21.0/bower.json ---
@@ -1,39 +0,0 @@
-{
-  "name": "vis",
-  "main": ["dist/vis.js", "dist/vis.css"],
-  "description": "A dynamic, browser-based visualization library.",
-  "homepage": "http://visjs.org/",
-  "license": ["Apache-2.0", "MIT"],
-  "repository": {
-    "type": "git",
-    "url": "git://github.com/almende/vis.git"
-  },
-  "keywords": [
-    "vis",
-    "visualization",
-    "web based",
-    "browser based",
-    "javascript",
-    "chart",
-    "linechart",
-    "timeline",
-    "graph",
-    "network",
-    "browser"
-  ],
-  "ignore": [
-    "gulpfile.js",
-    "index*.js",
-    "misc",
-    "node_modules",
-    "package.json",
-    "test",
-    "tools",
-    "lib",
-    ".idea",
-    ".npmignore",
-    ".gitignore"
-  ],
-  "dependencies": {},
-  "devDependencies": {}
-}

--- app/webroot/css/vendor/vis-4.21.0/misc/RELEASE_CHECKLIST_TEMPLATE.md ---
@@ -1,86 +0,0 @@
-# Release Checklist
-
-## Communication
-- [ ] Create a new issue and copy&paste this checklist into it (Yeah! First Step done!)
-- [ ] Talk to the team: Who should make the release?
-- [ ] Announce a "Code-Freeze". No new Pull-Request until the release is done!
-- [ ] Checkout if we have MAJOR or MINOR changes. If not we do a PATCH release.
-- [ ] The new version will be: `vX.Y.Z`
-- [ ] Identify open BUGS and add them to the next PATCH milestone (optional).
-- [ ] Identify MINOR issues and add them to the next MINOR milestone (optional).
-
-## Update to the newest version
-- [ ] Update to the current version: `git checkout develop && git pull`.
-- [ ] Create a new release branch. (`git checkout -b vX.Y.Z develop`)
-
-## Build & Test
-- [ ] Update the version number of the library in `package.json` (remove the "SNAPSHOT").
-- [ ] Build the library: `npm prune && rm -rf node_modules && npm install && npm run build && npm run test`
-- [ ] Open some of the examples in your browser and visually check if it works as expected! (*We need automated tests for this!*)
-
-## History
-(*THIS IS A LOT OF WORK! WE SHOULD TRY TO automate this in the future!!*)
-
-- [ ] Get all commits since the last release: ```git log `git describe --tags --abbrev=0`..HEAD --oneline > .commits.tmp```
-- [ ] Open ".commity.tmp". and remove all commit before the last release.
-- [ ] Open every commit in GitHub and move every issue/pull-request to the current milestone.
-- [ ] Transfer all Commit-Messages/issues to "HISTORY.md" starting at the button.
- - Keep the order of the commits. Older commits are lower newers are higher.
- - Bug-Fixes start with `FIX #issue:`
- - New Features start with `FEAT #issue:`
- - Refactors start with `REFA #PR:`
- - Additional work start with `Added #PR:`
-
-
-## Commit
-- [ ] Commit the new version: `git commit -am "Release vX.Y.Z"`
-- [ ] Push the release branch: `git push`
-- [ ] Open a Pull-Request for the release-branch to the develop-branch.
-- [ ] Wait until somebody of the team looked over your changes and merges the Pull-Request.
-
-### Update Master
-We don't merge the development branch to the master because the master branch is different to the develop-Branch. The master branch has a dist and test folder and does not generate Source-Maps.
-
-If we would merge the development branch would overwrite this. To solve this we use rebase instead:
-
-- [ ] Update: `git fetch && git checkout develop && git pull`
-- [ ] Rebase the `master` branch on the `develop` branch: `git checkout master && git rebase develop`
-- [ ] Generate new dist files: `npm prune && rm -rf node_modules && npm install && npm run build && npm run test && git commit -am "generated dist files for vX.Y.Z"
-- [ ] Create a version tag: `git tag "vX.Y.Z"`
-- [ ] [Remove the protection](https://github.com/almende/vis/settings/branches/master) from `master`.
-- [ ] FORCE-Push the branches to github: `git push --force && git push --tag`
-- [ ] [Re-Enable branch protection](https://github.com/almende/vis/settings/branches/master) (enable ALL checkboxes) for `master`.
-- [ ] Publish with npm: `npm publish` (check [npmjs.com](https://www.npmjs.com/package/vis))
-- [ ] Create a [new Release](https://github.com/almende/vis/releases/new) with the tang and the name "vX.Y.Z" and copy the data vom [HISTORY.md](../HISTORY.md) into the body.
-
-
-## Test
-- [ ] Go to a temp directory (e.g. "vis_vX.Y.Z"): `cd .. && mkdir vis_vX.Y.Z && cd vis_vX.Y.Z`
-- [ ] Install the library from npm: `npm init -f && npm install vis`
-- [ ] Verify if it installs the just released version, and verify if it works: `cd node_modules/vis/
-- [ ] Install the library via bower: `cd ../.. && bower install vis`
-- [ ] Verify if it installs the just released version, and verify if it works: `cd bower_components/vis/`
-- [ ] Clone the master from github: `cd ../.. && git clone git@github.com:almende/vis.git`.
-- [ ] Verify if it installs the just released version, and verify if it works. `cd vis`
-
-## Update website
-- [ ] update the gh-pages branch: `git checkout gh-pages && git pull && git checkout -b "gh-pages_vX.Y.Z"`
-- [ ] Copy the `dist` folder from the `master` branch to the `github-pages` branch in another directory, overwriting existing files: `cp -rf ../vis_vX.Y.Z/vis/dist .`
-- [ ] Copy the `docs` folder from the `master` branch to the `github-pages` branch in another directory, overwriting existing files: `cp -rf ../vis_vX.Y.Z/vis/docs .`
-- [ ] Copy the `examples` folder from the `master` branch to the `github-pages` branch in another directory, overwriting existing files: `cp -rf ../vis_vX.Y.Z/vis/examples .`
-- [ ] Check if there are new or updated examples, and update the gallery screenshots accordingly.
-- [ ] Update the library version number in the `index.html` page.
-- [ ] Update the CDN links at the download section of index.html AND the CDN link at the top. (search-replace all!!)
-- [ ] Commit the changes: `git add -A && git commit -m "updates for vX.Y.Z"`
-- [ ] Push the changes `git push --set-upstream origin gh-pages_vX.Y.Z`
-
-## Prepare next version
-- [ ] Switch to the "develop" branch: `git checkout develop`.
-- [ ] Change version numbers in "package.json" to a snapshot version `X.X.Z-SNAPSHOT`.
-- [ ] Commit and push: `git commit -am "changed version to vX.X.Z-SNAPSHOT"`
-- [ ] Create new tag: `git tag vX.X.Z-SNAPSHOT`.
-- [ ] [Remove the protection](https://github.com/almende/vis/settings/branches/develop) from `develop`.
-- [ ] FORCE-Push the branches to github: `git push --force && git push --tag`
-- [ ] [Re-Enable branch protection](https://github.com/almende/vis/settings/branches/develop) (enable ALL checkboxes) for `develop`.
-
-DONE!
\ No newline at end of file

--- app/webroot/css/vendor/vis-4.21.0/misc/how_to_help.md ---
@@ -1,69 +0,0 @@
-# HowTo Help
-
-The company that developed vis.js for the main part, *almende* is [not able to maintain the project at the moment](./we_need_help.md). So help from the community is very needed and welcome!
-
-## There are many ways to help:
-
-### Answering questions
-
-There are new [issues with questions](//github.com/almende/vis/issues?q=is%3Aissue+is%3Aopen+label%3AQuestion+sort%3Acreated-desc) how to use vis.js opened almost every day. Be part of the community and help answer them!
-
-A better way to ask questions on how to use vis.js is [stackoverflow](https://stackoverflow.com/tags/vis.js). Questions are posed here also and need to be answered by the community. [Please help answering questions](https://stackoverflow.com/tags/vis.js) here also.
-
-### Closing old issues
-
-A new issue is often opened fast and then forgotten. Please help go through [the old issues](//github.com/almende/vis/issues?q=is%3Aissue+is%3Aopen+sort%3Acreated-asc) (especially the [questions](//github.com/almende/vis/issues?q=is%3Aissue+is%3Aopen+sort%3Acreated-asc+label%3AQuestion)) and ask the creator of the issues if the problem still exists before closing the issue. The support team uses the **issue inactive** label to mark these issues.
-
-### Improve the webpage
-
-The visjs.org webpage is hosted on the [gh-pages branch](//github.com/almende/vis/tree/gh-pages). If you find a typo or anything else that should be improved feel free to create a pull-request to *gh-pages*. Please make changes in your own fork of gh-pages so the support team can view the changes in your hosted fork.
-
-### Create new examples
-
-We have [a collection of examples](//github.com/almende/vis/tree/develop/examples). Please help by creating interesting new ones that show a specific problem or layout. Keep the examples easy to understand for beginners and remove unnecessary clutter.
-
-### Provide interesting showcases
-
-If you use vis.js to develop something beautiful feel free to create a pull-request to our show cases page in the gh-pages branch](//github.com/almende/vis/tree/gh-pages/showcase). [These showcases are displayed on our webpage](http://visjs.org/showcase/index.html) and we are always looking for new examples.
-
-### Confirming and fixing bugs
-
-Every software has bugs. We also have [quite a nice collection](https://github.com/almende/vis/issues?q=is%3Aissue+is%3Aopen+label%3ABug+sort%3Areactions-%2B1-desc) ;-)
-Feel free to fix as many bugs as you want!
-
-You can not only help by fixing bugs, but also by confirming the bug or even creating a minimal code example to prove this bug exists.
-
-### Implementing Feature-Requests
-
-A lot of people have a lot of ideas for improving vis.js. [We label these issues as **Feature-Request**](https://github.com/almende/vis/labels/Feature-Request). Feel free to implement a new feature by creating a new Pull-Request.
-
-[Some issues are labeled **For everybody!**](//github.com/almende/vis/issues?q=is%3Aissue+is%3Aopen+label%3A%22For+everyone%21%22+sort%3Areactions-%2B1-desc). These are a good starting point.
-
-### Reviewing Pull-Requests
-
-We use [GitHub's two-step review](//help.github.com/articles/about-pull-request-reviews/) to make sure pull-requests are clean. You can help by checking out pull-request branches and testing them. You also can comment on lines of code and make sure the pull-request introduces no new bugs or typos.
-
-## Creating Pull Requests
-
-There are some rules for pull-request:
-
-* All pull-request must be to the [develop-branch](//github.com/almende/vis/tree/develop). Pull-request against the [master-branch](//github.com/almende/vis/tree/master) must be closed. (Changes to [gh-pages](//github.com/almende/vis/tree/gh-pages) are also ok.)
-
-* Only commit changes done in the source files in the folder `lib`, not to the builds
-  which are located in the folder `dist`.
-
-* Keep your changes small and clear. Only work on one topic at one time and only change lines of code that you have to change to reach your goal.
-
-* Test your changes before creating a pull-request. The easiest way is to open the existing examples and playing with them.
-
-* If you are fixing or implementing an existing issue, please refer to it in the description and in the commit message.
-
-* If you are introducing a new feature, add some documentation and a new example to make it easy to adapt.
-
-* If you introduce breaking changes, like changing the signature of a public function, point that out in your description. Breaking changes result in a new major release.
-
-* Always adapt to the code style of the existing source. Never adapt existing code to your personal taste. :trollface:
-
-* Pull-requests must be reviewed by at least two member of the support team. The First must approve the pull-request, the second can than merge after also checking it.
-
-**Happy Helping!!**

--- app/webroot/css/vendor/vis-4.21.0/misc/labels.md ---
@@ -1,106 +0,0 @@
-# How we use Github labels
-
-*Because only team members can add and change labels this document is mainly for maintainers, but also for users to understand how we use labels.*
-
-*It is important to also label old and closed issues uniformly in order to export them later e.g. if the project gets separated into multiple components.*
-
-
-## Issue Types
-If an issue was created it MUST always be labeled as one of the following issue types:
-
-### `Question`
-The author has a general or very specific question.<br>
-If it is a general question on how to use vis.js the issues should be closed immediately with a reference to [stackoverflow](https://stackoverflow.com/questions/tagged/vis.js).<br>
-Specific question or hard problems should stay open.<br>
-Questions should be closed within 3 months.
-
-### `Problem`
-This issues points to a potential bug that needs to be confirmed.<br>
-If the problem most likely originates from the user's code it should be labeled as [`Question`](#question) instead.<br>
-The support team should try to reproduce this issue and then close it or mark it as [`Confirmed Bug`](#confirmed-bug).
-
-### `Confirmed Bug`
-This issue was reported as [`Problem`](#problem), but the issue is reproducible and is now a confirmed bug.
-
-### `Feature-Request`
-This issue proposes a new feature or a change of existing functionality. Issues that are unlikely to get implemented should be closed.
-
-### `wontfix`
-This issues is e.g. for discussing a topic or for project management purposes, and is not handled in the usual issue process.
-
-
-## Graph type
-All issues MUST have one of the following type labels. These labels are usually mutually exclusive:
-
-### `DataSet`
-Concerns the DataSet implementation.
-
-### `Graph2D`
-Concerns the 2D-Graph implementation.
-
-### `Graph3D`
-Concerns the 3D-Graph implementation.
-
-### `Network`
-Concerns the Network-Graph implementation.
-
-### `source/non-public API`
-This issues is just for discussion or is concerning the build-process, the code-style or something similar.
-
-### `Timeline`
-Concerns the Timeline-Graph implementation.
-
-
-## Additional labels
-
-### `Docs`
-This issue concerns only the documentation.<br>
-If an existing issue is documented wrongly this is a [`Problem`](#problem) in the component and not a [`docs`](#docs) issue.<br>
-This can be used for typos or requests for an improvement of the docs.
-
-### `Duplicate`
-This issues is a duplicate of an existing issue. The duplicate should be closed. In addition, add a reference to the original issue with a comment.
-
-### `Fixed awaiting release`
-This Issue is fixed or implemented in the "develop" branch but is not released yet and therefore should be still open.<br>
-This issues should be closed after the changes are merged into the "master" branch.
-
-### `For everyone!`
-This is a good issue to start working on if you are new to vis.js and want to help.<br>
-This label is also used for labels that may concern a lot of vis.js users.
-
-### `IE / Edge`
-These issues concern a problem with the Microsoft Internet Explorer or Edge browser.<br>
-
-### `invalid`
-This is not a valid issue.<br>
-Someone just created an empty issue, picked the wrong project or something similar.<br>
-This can also be used for pull-request to a non-develop branch or something similar.<br>
-This issue or pull request should be closed immediately.
-
-### `Issue Inactive`
-Issues marked as [`Question`](#question) or [`Problem`](#problem) get marked as inactive when the author is not responsive or the topic is old.<br>
-If an issue is marked as inactive for about 2 weeks it can be closed without any hesitation.
-
-### `PRIORITY`
-In general this is used for major bugs. There should only exist a few issues marked as PRIORITY at the same time.<br>
-These issues need to be handled before all others.
-
-### `Requires breaking change`
-A lot of code needs to be changed to implement this. This is maybe something for a major release or something for someone with a lot of time on their hands :-)
-
-### `waiting for answer/improvement`
-This is mostly used for pull requests were a reviewer requested some changes and the owner has not responded yet.
-
-### `Work In Progress`
-Someone is working on this issue or a pull request already exists and needs to be reviewed.<br>
-
-## Example Workflows
-
-### Bug
-
-[`Problem`](#Problem) ⟶ [`Confirmed Bug`](#confirmed-bug) ⟶ [`Work In Progress`](#work-in-progress) ⟶ [`Fixed awaiting release`](#fixed-awaiting-release)
-
-### Feature-Request
-
-[`Feature-Request`](#feature-request) ⟶ [`Work In Progress`](#work-in-progress) ⟶ [`Fixed awaiting release`](#fixed-awaiting-release)

--- app/webroot/css/vendor/vis-4.21.0/misc/we_need_help.md ---
@@ -1,20 +0,0 @@
-# We need help!
-
-## The current status
-
-Vis.js is looking for people who can help maintain and improve the library. We've put a lot of effort in building these visualizations, fixing bugs, and supporting users as much as we can. For some time now, we’ve been lacking the manpower to maintain the library the way we have in recent years. [@josdejong](//github.com/josdejong) has left the company for a new opportunity, and [@AlexDM0](//github.com/AlexDM0) has moved internally to a daughter company, with severe impact on his time and availability for Vis.js. At the moment [@ludost](//github.com/ludost) is the official maintainer from Almende, but does not have much time to help out.
-
-Although Almende is looking to replace the expertise required for Vis.js, we don't expect to be able to do comprehensive project management any time soon. At the same time we’d like to spare Vis.js from becoming abandonware, especially given the relative healthy user base. For the longer term future we would be happy if vis.js could stand on its own feet, community supported.
-
-**If you want to support the project please just start by [helping out](./how_to_help.md).**
-
-If you have shown some commitment to the project you can ask [@ludost](//github.com/ludost) to become a member of the community support team. This team has write permissions to the repository and is helping maintaining it. Currently this team consists of:
-
-* [@ludost](//github.com/ludost) (almende maintainer)
-* [@mojoaxel](//github.com/mojoaxel)
-* [@yotamberk](//github.com/yotamberk)
-* [@Tooa](//github.com/Tooa)
-* [@eymiha](//github.com/eymiha)
-* [@bradh](//github.com/bradh)
-* [@wimrijnders](//github.com/wimrijnders)
-* [@macleodbroad-wf](//github.com/macleodbroad-wf)

--- app/webroot/css/vendor/vis-4.21.0/package.json ---
@@ -1,74 +0,0 @@
-{
-  "name": "vis",
-  "version": "4.21.0",
-  "description": "A dynamic, browser-based visualization library.",
-  "homepage": "http://visjs.org/",
-  "license": "(Apache-2.0 OR MIT)",
-  "repository": {
-    "type": "git",
-    "url": "git://github.com/almende/vis.git"
-  },
-  "bugs": {
-    "url": "https://github.com/almende/vis/issues"
-  },
-  "keywords": [
-    "vis",
-    "visualization",
-    "web based",
-    "browser based",
-    "javascript",
-    "chart",
-    "linechart",
-    "timeline",
-    "graph",
-    "network",
-    "browser"
-  ],
-  "main": "./dist/vis.js",
-  "scripts": {
-    "test": "mocha --compilers js:babel-core/register",
-    "build": "gulp",
-    "lint": "gulp lint",
-    "watch": "gulp watch",
-    "watch-dev": "gulp watch --bundle"
-  },
-  "dependencies": {
-    "emitter-component": "^1.1.1",
-    "moment": "^2.18.1",
-    "propagating-hammerjs": "^1.4.6",
-    "hammerjs": "^2.0.8",
-    "keycharm": "^0.2.0"
-  },
-  "devDependencies": {
-    "async": "^2.5.0",
-    "babel-core": "^6.25.0",
-    "babel-loader": "^7.1.1",
-    "babel-polyfill": "^6.23.0",
-    "babel-plugin-transform-es3-member-expression-literals": "^6.22.0",
-    "babel-plugin-transform-es3-property-literals": "^6.22.0",
-    "babel-plugin-transform-runtime": "^6.23.0",
-    "babel-preset-es2015": "^6.24.1",
-    "babel-runtime": "^6.23.0",
-    "babelify": "^7.3.0",
-    "canvas": "^1.6.5",
-    "clean-css": "^4.1.7",
-    "eslint": "^4.3.0",
-    "gulp": "^3.9.1",
-    "gulp-eslint": "^4.0.0",
-    "gulp-clean-css": "^3.7.0",
-    "gulp-concat": "^2.6.1",
-    "gulp-rename": "^1.2.2",
-    "gulp-util": "^3.0.8",
-    "jsdom": "9.12.0",
-    "jsdom-global": "^2.1.1",
-    "merge-stream": "^1.0.1",
-    "mocha": "^3.4.2",
-    "mocha-jsdom": "^1.1.0",
-    "rimraf": "^2.6.1",
-    "test-console": "^1.0.0",
-    "uglify-js": "^2.8.29",
-    "uuid": "^3.1.0",
-    "webpack": "^3.3.0",
-    "yargs": "^8.0.2"
-  }
-}

--- app/webroot/d3-process-map-master/common.php ---
@@ -1,125 +0,0 @@
-<?php
-error_reporting(E_ALL & ~E_NOTICE);
-require_once 'markdown/Markdown.inc.php';
-use \Michelf\Markdown;
-
-$dataset    = 'default';
-$dataset_qs = '';
-if (isset($_GET['dataset'])) {
-    if (!preg_match('@[^a-z0-9-_ ]@i', $_GET['dataset'])) {
-        if (is_dir('data/' . $_GET['dataset'])) {
-            $dataset    = $_GET['dataset'];
-            $dataset_qs = "?dataset=$dataset";
-        }
-    }
-}
-
-function get_html_docs($obj) {
-    global $config, $data, $dataset, $errors;
-
-    $name = str_replace('/', '_', $obj['name']);
-    $filename = "data/$dataset/$name.mkdn";
-
-    $name = str_replace('_', '\_', $obj['name']);
-    $type = $obj['type'];
-    if ($config['types'][$type]) {
-        $type = $config['types'][$type]['long'];
-    }
-
-    $markdown = "## $name *$type*\n\n";
-
-    if (file_exists($filename)) {
-        $markdown .= "### Documentation\n\n";
-        $markdown .= file_get_contents($filename);
-    } else {
-        $markdown .= "<div class=\"alert alert-warning\">No documentation for this object</div>";
-    }
-
-    if ($obj) {
-        $markdown .= "\n\n";
-        $markdown .= get_depends_markdown('Depends on',     $obj['depends']);
-        $markdown .= get_depends_markdown('Depended on by', $obj['dependedOnBy']);
-    }
-
-    // Use {{object_id}} to link to an object
-    $arr      = explode('{{', $markdown);
-    $markdown = $arr[0];
-    for ($i = 1; $i < count($arr); $i++) {
-        $pieces    = explode('}}', $arr[$i], 2);
-        $name      = $pieces[0];
-        $id_string = get_id_string($name);
-        $name_esc  = str_replace('_', '\_', $name);
-        $class     = 'select-object';
-        if (!isset($data[$name])) {
-            $class .= ' missing';
-            $errors[] = "Object '$obj[name]' links to unrecognized object '$name'";
-        }
-        $markdown .= "<a href=\"#$id_string\" class=\"$class\" data-name=\"$name\">$name_esc</a>";
-        $markdown .= $pieces[1];
-    }
-
-    $html = Markdown::defaultTransform($markdown);
-    // IE can't handle <pre><code> (it eats all the line breaks)
-    $html = str_replace('<pre><code>'  , '<pre>' , $html);
-    $html = str_replace('</code></pre>', '</pre>', $html);
-    return $html;
-}
-
-function get_depends_markdown($header, $arr) {
-    $markdown = "### $header";
-    if (count($arr)) {
-        $markdown .= "\n\n";
-        foreach ($arr as $name) {
-            $markdown .= "* {{" . $name . "}}\n";
-        }
-        $markdown .= "\n";
-    } else {
-        $markdown .= " *(none)*\n\n";
-    }
-    return $markdown;
-}
-
-function get_id_string($name) {
-    return 'obj-' . preg_replace('@[^a-z0-9]+@i', '-', $name);
-}
-
-function read_config() {
-    global $config, $dataset, $dataset_qs;
-
-    $config = json_decode(file_get_contents("data/$dataset/config.json" ), true);
-    $config['jsonUrl'] = "json.php$dataset_qs";
-}
-
-function read_data() {
-    global $config, $data, $dataset, $errors;
-
-    if (!$config) read_config();
-
-    $json   = json_decode(file_get_contents("data/$dataset/objects.json"), true);
-    $data   = array();
-    $errors = array();
-
-    foreach ($json as $obj) {
-        $data[$obj['name']] = $obj;
-    }
-
-    foreach ($data as &$obj) {
-        $obj['dependedOnBy'] = array();
-    }
-    unset($obj);
-    foreach ($data as &$obj) {
-        foreach ($obj['depends'] as $name) {
-            if ($data[$name]) {
-                $data[$name]['dependedOnBy'][] = $obj['name'];
-            } else {
-                $errors[] = "Unrecognized dependency: '$obj[name]' depends on '$name'";
-            }
-        }
-    }
-    unset($obj);
-    foreach ($data as &$obj) {
-        $obj['docs'] = get_html_docs($obj);
-    }
-    unset($obj);
-}
-?>

--- app/webroot/d3-process-map-master/data/les-mis/prep/split.sh ---
@@ -1,18 +0,0 @@
-#!/bin/sh
-
-cd "$(dirname "$0")"
-
-cat characters.txt | while read i; do
-    name="`echo "$i"|cut -d: -f1`";
-    text="`echo "$i"|cut -d: -f2-`";
-    echo "Writing $name.mkdn"
-    echo "$text" | fold -sw 80 > "../$name.mkdn"
-done
-
-cut -d: -f1 characters.txt | while read name; do
-    echo "Replacing instances of $name with links"
-    sed -i "s#$name#{{$name}}#g" ../*.mkdn
-done
-
-# Replaceing Thenardier before Mme.Thenardier would cause problems, but the e
-# is accented so no replacements are made anyway.

--- app/webroot/d3-process-map-master/generateHosts.php ---
@@ -1,689 +0,0 @@
-<?php
-
-$data = json_decode('[
-    {
-        "type"    : "view",
-        "name"    : "db_view_122",
-        "depends" : [
-            "db_table_15",
-            "db_table_14",
-            "db_table_1"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_2",
-        "depends" : [
-            "db_table_4",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_3",
-        "depends" : [
-            "db_table_5",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_4",
-        "depends" : [
-            "db_table_10",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_5",
-        "depends" : [
-            "db_table_10",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_6",
-        "depends" : [
-            "db_table_10"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_7",
-        "depends" : [
-            "db_view_6",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_8",
-        "depends" : [
-            "db_table_15",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_9",
-        "depends" : [
-            "db_table_18",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_10",
-        "depends" : [
-            "db_table_18",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_11",
-        "depends" : [
-            "db_table_24",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "view",
-        "name"    : "db_view_12",
-        "depends" : [
-            "db_table_28",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "table",
-        "group"   : "Mapping",
-        "name"    : "db_table_1",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_2",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_3",
-        "depends" : [
-            "SASProject.egp"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_4",
-        "depends" : [
-            "SASProject.egp",
-            "db_table_3"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_5",
-        "depends" : [
-            "db_table_7",
-            "ETL process 1"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_6",
-        "depends" : [
-            "ETL process 1"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_7",
-        "depends" : [
-            "ETL process 1"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_8",
-        "depends" : [
-            "query5.sql"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_9",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_10",
-        "depends" : [
-            "db_table_12",
-            "ETL process 2"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_11",
-        "depends" : [
-            "ETL process 2"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_12",
-        "depends" : [
-            "ETL process 2"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_13",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_14",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_15",
-        "depends" : [
-            "db_table_17",
-            "ETL process 3"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_16",
-        "depends" : [
-            "ETL process 3"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_17",
-        "depends" : [
-            "ETL process 3"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_18",
-        "depends" : [
-            "db_table_20",
-            "ETL process 4"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_19",
-        "depends" : [
-            "ETL process 4"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_20",
-        "depends" : [
-            "ETL process 4"
-        ]
-    }, {
-        "type"    : "table",
-        "group"   : "Mapping",
-        "name"    : "db_table_21",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_22",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_23",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_24",
-        "depends" : [
-            "query6.sql"
-        ]
-    }, {
-        "type"    : "table",
-        "group"   : "Mapping",
-        "name"    : "db_table_25",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "group"   : "Mapping",
-        "name"    : "db_table_26",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "group"   : "Mapping",
-        "name"    : "db_table_27",
-        "depends" : []
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_28",
-        "depends" : [
-            "db_table_30",
-            "ETL process 5"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_29",
-        "depends" : [
-            "ETL process 5"
-        ]
-    }, {
-        "type"    : "table",
-        "name"    : "db_table_30",
-        "depends" : [
-            "ETL process 5"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Management",
-        "name"    : "query1.sql",
-        "depends" : [
-            "db_table_9",
-            "db_table_23",
-            "db_table_22"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data1",
-        "name"    : "query2.sql",
-        "depends" : [
-            "db_table_4"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data1",
-        "name"    : "query3.sql",
-        "depends" : [
-            "db_table_4"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data1",
-        "name"    : "query4.sql",
-        "depends" : [
-            "db_table_4"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Miscellaneous",
-        "name"    : "query5.sql",
-        "depends" : [
-            "db_view_9",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Miscellaneous",
-        "name"    : "query6.sql",
-        "depends" : [
-            "db_view_12",
-            "db_table_25",
-            "db_table_26",
-            "db_table_27",
-            "db_view_9",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query7.sql",
-        "depends" : [
-            "db_view_4",
-            "db_view_9"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query8.sql",
-        "depends" : [
-            "db_view_9"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query9.sql",
-        "depends" : [
-            "db_view_9",
-            "db_view_4",
-            "db_view_2",
-            "db_view_7",
-            "db_table_18"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query10.sql",
-        "depends" : [
-            "db_table_2",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query11.sql",
-        "depends" : [
-            "db_view_2"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query12.sql",
-        "depends" : [
-            "db_view_3"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query13.sql",
-        "depends" : [
-            "db_view_4"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query14.sql",
-        "depends" : [
-            "db_view_9"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query15.sql",
-        "depends" : [
-            "db_view_9"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query16.sql",
-        "depends" : [
-            "db_view_11",
-            "db_table_27"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query17.sql",
-        "depends" : [
-            "db_view_7"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query18.sql",
-        "depends" : [
-            "db_table_18",
-            "db_table_13",
-            "db_table_14",
-            "db_view_9"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query19.sql",
-        "depends" : [
-            "db_table_18",
-            "db_table_13",
-            "db_table_14",
-            "db_table_8"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query20.sql",
-        "depends" : [
-            "db_view_9",
-            "db_view_10",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query21.sql",
-        "depends" : [
-            "db_view_9",
-            "db_view_10",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data2",
-        "name"    : "query22.sql",
-        "depends" : [
-            "db_view_4",
-            "db_view_5",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data3",
-        "name"    : "query23.sql",
-        "depends" : [
-            "db_table_15",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Data4",
-        "name"    : "query24.sql",
-        "depends" : [
-            "db_table_28",
-            "db_table_14"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Validation",
-        "name"    : "query25.sql",
-        "depends" : [
-            "db_view_9"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Validation",
-        "name"    : "query26.sql",
-        "depends" : [
-            "db_view_9"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Validation",
-        "name"    : "query27.sql",
-        "depends" : [
-            "db_view_8"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Validation",
-        "name"    : "query28.sql",
-        "depends" : [
-            "db_view_3"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Validation",
-        "name"    : "query29.sql",
-        "depends" : [
-            "db_view_11"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Validation",
-        "name"    : "query30.sql",
-        "depends" : [
-            "db_view_12"
-        ]
-    }, {
-        "type"    : "query",
-        "group"   : "Validation",
-        "name"    : "query31.sql",
-        "depends" : [
-            "db_view_9",
-            "db_view_8",
-            "db_table_21",
-            "db_table_14",
-            "db_table_13"
-        ]
-    }, {
-        "type"    : "sas",
-        "name"    : "SASProject.egp",
-        "depends" : []
-    }, {
-        "type"    : "extract",
-        "name"    : "ETL process 1",
-        "depends" : []
-    }, {
-        "type"    : "extract",
-        "name"    : "ETL process 2",
-        "depends" : []
-    }, {
-        "type"    : "extract",
-        "name"    : "ETL process 3",
-        "depends" : []
-    }, {
-        "type"    : "extract",
-        "name"    : "ETL process 4",
-        "depends" : []
-    }, {
-        "type"    : "extract",
-        "name"    : "ETL process 5",
-        "depends" : []
-    }, {
-        "type"    : "database",
-        "name"    : "Data store 1",
-        "depends" : [
-            "query2.sql",
-            "query3.sql",
-            "query4.sql"
-        ]
-    }, {
-        "type"    : "database",
-        "name"    : "Data store 2",
-        "depends" : [
-            "query7.sql",
-            "query8.sql",
-            "query9.sql",
-            "query10.sql",
-            "query11.sql",
-            "query12.sql",
-            "query13.sql",
-            "query14.sql",
-            "query15.sql",
-            "query16.sql",
-            "query17.sql",
-            "query18.sql",
-            "query19.sql",
-            "query20.sql",
-            "query21.sql",
-            "query22.sql"
-        ]
-    }, {
-        "type"    : "database",
-        "name"    : "Data store 3",
-        "depends" : [
-            "query23.sql"
-        ]
-    }, {
-        "type"    : "database",
-        "name"    : "Data store 4",
-        "depends" : [
-            "query24.sql"
-        ]
-    }, {
-        "type"    : "report",
-        "group"   : "Intermediate",
-        "name"    : "Intermediate step 1",
-        "depends" : [
-            "Data store 1"
-        ]
-    }, {
-        "type"    : "report",
-        "group"   : "Intermediate",
-        "name"    : "Intermediate step 2",
-        "depends" : [
-            "Data store 1"
-        ]
-    }, {
-        "type"    : "report",
-        "name"    : "Report 1",
-        "depends" : [
-            "Data store 2"
-        ]
-    }, {
-        "type"    : "report",
-        "name"    : "Report 2",
-        "depends" : [
-            "Data store 2"
-        ]
-    }, {
-        "type"    : "report",
-        "name"    : "Report 3",
-        "depends" : [
-            "Data store 2"
-        ]
-    }, {
-        "type"    : "report",
-        "name"    : "Report 4",
-        "depends" : [
-            "Data store 2"
-        ]
-    }, {
-        "type"    : "report",
-        "name"    : "Report 5",
-        "depends" : [
-            "Data store 3",
-            "Intermediate step 2"
-        ]
-    }, {
-        "type"    : "report",
-        "group"   : "Intermediate",
-        "name"    : "Intermediate step 3",
-        "depends" : [
-            "Report 5",
-            "Data store 1"
-        ]
-    }, {
-        "type"    : "report",
-        "name"    : "Report 6",
-        "depends" : [
-            "Data store 4",
-            "Intermediate step 1"
-        ]
-    }, {
-        "type"    : "report",
-        "group"   : "Reporting",
-        "name"    : "Upstream report 1",
-        "depends" : [
-            "Data store 2"
-        ]
-    }, {
-        "type"    : "report",
-        "group"   : "Reporting",
-        "name"    : "Upstream report 2",
-        "depends" : [
-            "Data store 2"
-        ]
-    }, {
-        "type"    : "report",
-        "group"   : "Reporting",
-        "name"    : "Upstream report 3",
-        "depends" : [
-            "Data store 2"
-        ]
-    }
-]
-', true);
-
-
-function getRandomNames($data){
-# var_dump($data);
-# die();
-	$key = array_rand($data, 1);
-return array($data[$key]['name']);
-	$result = array();
-	foreach($keys as $key){
-		$result[] = $data[$key]['name'];
-	}
-	return $result;
-}
-
-
-
-for($i = 0; $i < 1000; $i++){
-	$item = array(
-		'type' => 'foobar',
-		'name' => 'superschaaf ' . $i,
-		//		'depends' => [],
-		// 'depends' => getRandomNames($data),
-	);
-	$random = rand(0,1);
-	if(0){
-		$item['depends'] = [];
-	}else{
-		$item['depends'] = getRandomNames($data);
-	}
-
-	$data[] = $item;
-}
-
-echo json_encode($data);

--- app/webroot/d3-process-map-master/graph.php ---
@@ -1,48 +0,0 @@
-<?php
-require_once 'common.php';
-read_config();
-?>
-<!DOCTYPE html>
-<!--[if lt IE 7]>      <html class="lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
-<!--[if IE 7]>         <html class="lt-ie9 lt-ie8"> <![endif]-->
-<!--[if IE 8]>         <html class="lt-ie9"> <![endif]-->
-<!--[if gt IE 8]><!--> <html> <!--<![endif]-->
-    <head>
-        <meta http-equiv="X-UA-Compatible" content="IE=Edge">
-        <meta charset="utf-8">
-        <title><?php echo $config['title']; ?></title>
-        <link rel="stylesheet" href="bootstrap.css">
-        <link rel="stylesheet" href="style.css">
-        <link rel="stylesheet" href="svg.css">
-    </head>
-    <body>
-        <!--[if lt IE 9]>
-        <div class="unsupported-browser">
-            This website does not fully support your browser.  Please get a
-            better browser (Firefox or <a href="/chrome/">Chrome</a>, or if you
-            must use Internet Explorer, make it version 9 or greater).
-        </div>
-        <![endif]-->
-        <div id="split-container">
-            <a class="btn btn-default nav-button" id="nav-list" href="list.php<?php echo $dataset_qs; ?>">
-                View list
-            </a>
-            <div id="graph-container">
-                <div id="graph"></div>
-            </div>
-            <div id="docs-container">
-                <a id="docs-close" href="#">&times;</a>
-                <div id="docs" class="docs"></div>
-            </div>
-        </div>
-        <script src="jquery/jquery-1.10.2.min.js"></script>
-        <script src="jquery/jquery.browser.min.js"></script>
-        <script src="d3/d3.v3.min.js"></script>
-        <script src="colorbrewer.js"></script>
-        <script src="lib/geometry.js"></script>
-        <script>
-            var config = <?php echo json_encode($config); ?>;
-        </script>
-        <script src="script.js"></script>
-    </body>
-</html>

--- app/webroot/d3-process-map-master/img/borders.sh ---
@@ -1,14 +0,0 @@
-#!/bin/bash
-
-cd "$(dirname "$0")"
-
-for i in *-orig.png; do
-    out="${i%-orig.png}.png"
-
-    convert "$i" \
-        -bordercolor '#cacaca' \
-        -border 1x1 \
-        -bordercolor '#eeeeee' \
-        -border 2x2 \
-        "$out"
-done

--- app/webroot/d3-process-map-master/img/example.sh ---
@@ -1,6 +0,0 @@
-#!/bin/sh
-
-convert thumb-les-mis-orig.png \
-    -crop 303x156+250+100 \
-    -resize 66.67% \
-    thumb-example.png

--- app/webroot/d3-process-map-master/index.php ---
@@ -1,4 +0,0 @@
-<?php
-require_once 'common.php';
-header("Location: graph.php$dataset_qs");
-?>

--- app/webroot/d3-process-map-master/json.php ---
@@ -1,10 +0,0 @@
-<?php
-require_once 'common.php';
-read_data();
-
-header('Content-type: application/json');
-echo json_encode(array(
-    'data'   => $data,
-    'errors' => $errors
-));
-?>

--- app/webroot/d3-process-map-master/lib/test-geometry.html ---
@@ -1,108 +0,0 @@
-<!DOCTYPE html>
-<html>
-    <head>
-        <title>Test geometry functions</title>
-        </script>
-    </head>
-    <body>
-        <div id="status">Running...</div>
-        <script src="geometry.js"></script>
-        <script>
-var asserts = 0;
-
-function assertEqual(a, b) {
-    var ok = true;
-    if (typeof a == 'number' && typeof b == 'number') {
-        if (isNaN(a) != isNaN(b)) {
-            ok = false;
-        } else if (Math.abs(a - b) > 1e-10) {
-            ok = false;
-        }
-    } else {
-        ok = (a === b);
-    }
-    if (!ok) {
-        var msg = "Assertion failure: '"
-            + a + "' !== '"
-            + b + "'";
-        setStatus(msg);
-        throw new Error(msg);
-    }
-    asserts++;
-}
-
-function setStatus(status) {
-    document.getElementById('status').innerHTML = status;
-}
-
-function checkEndpoints(line) {
-    if (line.y1 !== line.y2) {
-        assertEqual(line.y(line.x1), line.y1);
-        assertEqual(line.y(line.x2), line.y2);
-    }
-    if (line.x1 !== line.x2) {
-        assertEqual(line.x(line.y1), line.x1);
-        assertEqual(line.x(line.y2), line.x2);
-    }
-}
-
-var line1 = new geo.LineSegment(1, 1, 2, 3),
-    line2 = new geo.LineSegment(1, 2, 5, 0),
-    line3 = new geo.LineSegment(2, 3, 5, 9),
-    line4 = new geo.LineSegment(1.5, 2, 1.5, 3);
-    line5 = new geo.LineSegment(2, 1, 5, 1);
-
-checkEndpoints(line1);
-checkEndpoints(line2);
-
-var i12 = line1.intersect(line2),
-    i21 = line2.intersect(line1),
-    i13 = line1.intersect(line3),
-    i23 = line2.intersect(line3),
-    i32 = line3.intersect(line2),
-    i14 = line1.intersect(line4),
-    i15 = line1.intersect(line5),
-    i45 = line4.intersect(line5);
-
-assertEqual(i12.x, 1.4);
-assertEqual(i12.y, 1.8);
-assertEqual(i12.in1, true);
-assertEqual(i12.in2, true);
-
-assertEqual(i21.x, 1.4);
-assertEqual(i21.y, 1.8);
-assertEqual(i21.in1, true);
-assertEqual(i21.in2, true);
-
-assertEqual(i13.x, NaN);
-assertEqual(i13.y, NaN);
-
-assertEqual(i23.x, 1.4);
-assertEqual(i23.y, 1.8);
-assertEqual(i23.in1, true);
-assertEqual(i23.in2, false);
-
-assertEqual(i32.x, 1.4);
-assertEqual(i32.y, 1.8);
-assertEqual(i32.in1, false);
-assertEqual(i32.in2, true);
-
-assertEqual(i14.x, 1.5);
-assertEqual(i14.y, 2);
-assertEqual(i14.in1, true);
-assertEqual(i14.in2, true);
-
-assertEqual(i15.x, 1);
-assertEqual(i15.y, 1);
-assertEqual(i15.in1, true);
-assertEqual(i15.in2, false);
-
-assertEqual(i45.x, 1.5);
-assertEqual(i45.y, 1);
-assertEqual(i45.in1, false);
-assertEqual(i45.in2, false);
-
-setStatus(asserts + ' tests OK');
-        </script>
-    </body>
-</html>

--- app/webroot/d3-process-map-master/list.php ---
@@ -1,31 +0,0 @@
-<?php
-require_once 'common.php';
-read_data();
-?>
-<!DOCTYPE html>
-<!--[if lt IE 7]>      <html class="lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
-<!--[if IE 7]>         <html class="lt-ie9 lt-ie8"> <![endif]-->
-<!--[if IE 8]>         <html class="lt-ie9"> <![endif]-->
-<!--[if gt IE 8]><!--> <html> <!--<![endif]-->
-    <head>
-        <meta http-equiv="X-UA-Compatible" content="IE=Edge">
-        <meta charset="utf-8">
-        <title><?php echo $config['title']; ?></title>
-        <link rel="stylesheet" href="bootstrap.css">
-        <link rel="stylesheet" href="style.css">
-        <link rel="stylesheet" href="print.css">
-    </head>
-    <body>
-        <a class="btn btn-default nav-button" id="nav-graph" href="graph.php<?php echo $dataset_qs; ?>">
-            View graph
-        </a>
-        <div id="docs-list">
-<?php
-foreach ($data as $obj) {
-    $id = get_id_string($obj['name']);
-    echo "<div class=\"docs\" id=\"$id\">$obj[docs]</div>\n";
-}
-?>
-        </div>
-    </body>
-</html>

--- app/webroot/d3-process-map-master/markdown/Markdown.inc.php ---
@@ -1,10 +0,0 @@
-<?php
-
-# Use this file if you cannot use class autoloading. It will include all the
-# files needed for the Markdown parser.
-#
-# Take a look at the PSR-0-compatible class autoloading implementation
-# in the Readme.php file if you want a simple autoloader setup.
-
-require_once dirname(__FILE__) . '/MarkdownInterface.php';
-require_once dirname(__FILE__) . '/Markdown.php';

--- app/webroot/d3-process-map-master/markdown/MarkdownExtra.inc.php ---
@@ -1,11 +0,0 @@
-<?php
-
-# Use this file if you cannot use class autoloading. It will include all the
-# files needed for the MarkdownExtra parser.
-#
-# Take a look at the PSR-0-compatible class autoloading implementation
-# in the Readme.php file if you want a simple autoloader setup.
-
-require_once dirname(__FILE__) . '/MarkdownInterface.php';
-require_once dirname(__FILE__) . '/Markdown.php';
-require_once dirname(__FILE__) . '/MarkdownExtra.php';

--- app/webroot/d3-process-map-master/markdown/MarkdownExtra.php ---
@@ -1,38 +0,0 @@
-<?php
-#
-# Markdown Extra  -  A text-to-HTML conversion tool for web writers
-#
-# PHP Markdown Extra
-# Copyright (c) 2004-2013 Michel Fortin  
-# <http://michelf.com/projects/php-markdown/>
-#
-# Original Markdown
-# Copyright (c) 2004-2006 John Gruber  
-# <http://daringfireball.net/projects/markdown/>
-#
-namespace Michelf;
-
-
-# Just force Michelf/Markdown.php to load. This is needed to load
-# the temporary implementation class. See below for details.
-\Michelf\Markdown::MARKDOWNLIB_VERSION;
-
-#
-# Markdown Extra Parser Class
-#
-# Note: Currently the implementation resides in the temporary class
-# \Michelf\MarkdownExtra_TmpImpl (in the same file as \Michelf\Markdown).
-# This makes it easier to propagate the changes between the three different
-# packaging styles of PHP Markdown. Once this issue is resolved, the
-# _MarkdownExtra_TmpImpl will disappear and this one will contain the code.
-#
-
-class MarkdownExtra extends \Michelf\_MarkdownExtra_TmpImpl {
-
-	### Parser Implementation ###
-
-	# Temporarily, the implemenation is in the _MarkdownExtra_TmpImpl class.
-	# See note above.
-
-}
-

--- app/webroot/d3-process-map-master/markdown/MarkdownInterface.inc.php ---
@@ -1,9 +0,0 @@
-<?php
-
-# Use this file if you cannot use class autoloading. It will include all the
-# files needed for the MarkdownInterface interface.
-#
-# Take a look at the PSR-0-compatible class autoloading implementation
-# in the Readme.php file if you want a simple autoloader setup.
-
-require_once dirname(__FILE__) . '/MarkdownInterface.php';

--- app/webroot/d3-process-map-master/markdown/MarkdownInterface.php ---
@@ -1,37 +0,0 @@
-<?php
-#
-# Markdown  -  A text-to-HTML conversion tool for web writers
-#
-# PHP Markdown
-# Copyright (c) 2004-2013 Michel Fortin
-# <http://michelf.com/projects/php-markdown/>
-#
-# Original Markdown
-# Copyright (c) 2004-2006 John Gruber
-# <http://daringfireball.net/projects/markdown/>
-#
-namespace Michelf;
-
-
-#
-# Markdown Parser Interface
-#
-
-interface MarkdownInterface {
-
-  #
-  # Initialize the parser and return the result of its transform method.
-  # This will work fine for derived classes too.
-  #
-  public static function defaultTransform($text);
-
-  #
-  # Main function. Performs some preprocessing on the input text
-  # and pass it through the document gamut.
-  #
-  public function transform($text);
-
-}
-
-
-?>
\ No newline at end of file

--- app/webroot/d3-process-map-master/markdown/Readme.php ---
@@ -1,31 +0,0 @@
-<?php
-
-# This file passes the content of the Readme.md file in the same directory
-# through the Markdown filter. You can adapt this sample code in any way
-# you like.
-
-# Install PSR-0-compatible class autoloader
-spl_autoload_register(function($class){
-	require preg_replace('{\\\\|_(?!.*\\\\)}', DIRECTORY_SEPARATOR, ltrim($class, '\\')).'.php';
-});
-
-# Get Markdown class
-use \Michelf\Markdown;
-
-# Read file and pass content through the Markdown parser
-$text = file_get_contents('Readme.md');
-$html = Markdown::defaultTransform($text);
-
-?>
-<!DOCTYPE html>
-<html>
-    <head>
-        <title>PHP Markdown Lib - Readme</title>
-    </head>
-    <body>
-		<?php
-			# Put HTML content in the document
-			echo $html;
-		?>
-    </body>
-</html>

--- app/webroot/js/vendor/UUID.js-4.0.3/bower.json ---
@@ -1,29 +0,0 @@
-{
-  "name": "uuid.js",
-  "homepage": "https://github.com/LiosK/UUID.js",
-  "description": "UUID.js - RFC-compliant UUID Generator for JavaScript",
-  "main": "src/uuid.js",
-  "moduleType": [
-    "globals"
-  ],
-  "keywords": [
-    "library",
-    "uuid",
-    "guid",
-    "rfc",
-    "4122",
-    "universally",
-    "globally",
-    "unique",
-    "identifier"
-  ],
-  "authors": [
-    "LiosK <contact@mail.liosk.net>"
-  ],
-  "license": "Apache-2.0",
-  "ignore": [
-    "**/.*",
-    "docs",
-    "test"
-  ]
-}

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/UUID.html ---
@@ -1,1980 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <meta charset="utf-8">
-    <title>JSDoc: Class: UUID</title>
-
-    <script src="scripts/prettify/prettify.js"> </script>
-    <script src="scripts/prettify/lang-css.js"> </script>
-    <!--[if lt IE 9]>
-      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
-    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
-</head>
-
-<body>
-
-<div id="main">
-
-    <h1 class="page-title">Class: UUID</h1>
-
-    
-
-
-
-
-<section>
-
-<header>
-    
-        <h2><span class="attribs"><span class="type-signature"></span></span>UUID</h2>
-        
-            <div class="class-description"><a href="UUID.html">UUID</a> object.</div>
-        
-    
-</header>
-
-<article>
-    <div class="container-overview">
-    
-        
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line15">line 15</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-    
-    </div>
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-        <h3 class="subsection-title">Members</h3>
-
-        
-            
-<h4 class="name" id=".FIELD_NAMES"><span class="type-signature">(static, constant) </span>FIELD_NAMES<span class="type-signature"> :Array.&lt;string></span></h4>
-
-
-
-
-<div class="description">
-    Names of UUID internal fields.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">Array.&lt;string></span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>3.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line123">line 123</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id=".FIELD_SIZES"><span class="type-signature">(static, constant) </span>FIELD_SIZES<span class="type-signature"> :Array.&lt;number></span></h4>
-
-
-
-
-<div class="description">
-    Sizes of UUID internal fields.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">Array.&lt;number></span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>3.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line132">line 132</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id=".NIL"><span class="type-signature">(static, constant) </span>NIL<span class="type-signature"> :<a href="UUID.html">UUID</a></span></h4>
-
-
-
-
-<div class="description">
-    Nil UUID object.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type"><a href="UUID.html">UUID</a></span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>v3.4.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line282">line 282</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id=".overwrittenUUID"><span class="type-signature">(static) </span>overwrittenUUID<span class="type-signature"> :any</span></h4>
-
-
-
-
-<div class="description">
-    Retains the value of 'UUID' global variable assigned before loading UUID.js.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">any</span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>3.2</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line69">line 69</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="bitFields"><span class="type-signature"></span>bitFields<span class="type-signature"> :Array.&lt;string></span></h4>
-
-
-
-
-<div class="description">
-    UUID internal field values as an array of binary strings.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">Array.&lt;string></span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line194">line 194</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="bitString"><span class="type-signature"></span>bitString<span class="type-signature"> :string</span></h4>
-
-
-
-
-<div class="description">
-    128-bit binary string representation.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">string</span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line219">line 219</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="hexFields"><span class="type-signature"></span>hexFields<span class="type-signature"> :Array.&lt;string></span></h4>
-
-
-
-
-<div class="description">
-    UUID internal field values as an array of hexadecimal strings.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">Array.&lt;string></span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line200">line 200</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="hexNoDelim"><span class="type-signature"></span>hexNoDelim<span class="type-signature"> :string</span></h4>
-
-
-
-
-<div class="description">
-    Non-delimited hexadecimal string representation ("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx").
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">string</span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>v3.3.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line226">line 226</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="hexString"><span class="type-signature"></span>hexString<span class="type-signature"> :string</span></h4>
-
-
-
-
-<div class="description">
-    Hexadecimal string representation ("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx").
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">string</span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line232">line 232</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="intFields"><span class="type-signature"></span>intFields<span class="type-signature"> :Array.&lt;number></span></h4>
-
-
-
-
-<div class="description">
-    UUID internal field values as an array of integers.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">Array.&lt;number></span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line188">line 188</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="urn"><span class="type-signature"></span>urn<span class="type-signature"> :string</span></h4>
-
-
-
-
-<div class="description">
-    URN string representation ("urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx").
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">string</span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line239">line 239</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-            
-<h4 class="name" id="version"><span class="type-signature"></span>version<span class="type-signature"> :number</span></h4>
-
-
-
-
-<div class="description">
-    UUID version number.
-</div>
-
-
-
-    <h5>Type:</h5>
-    <ul>
-        <li>
-            
-<span class="param-type">number</span>
-
-
-        </li>
-    </ul>
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line213">line 213</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-        
-    
-
-    
-        <h3 class="subsection-title">Methods</h3>
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id=".generate"><span class="type-signature">(static) </span>generate<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Generates a version 4 UUID as a hexadecimal string.
-</div>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line26">line 26</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<h5>Returns:</h5>
-
-        
-<div class="param-desc">
-    Hexadecimal UUID string.
-</div>
-
-
-
-<dl>
-    <dt>
-        Type
-    </dt>
-    <dd>
-        
-<span class="param-type">string</span>
-
-
-    </dd>
-</dl>
-
-    
-
-
-
-
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id=".genV1"><span class="type-signature">(static) </span>genV1<span class="signature">()</span><span class="type-signature"> &rarr; {<a href="UUID.html">UUID</a>}</span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Creates a version 1 <a href="UUID.html">UUID</a> object.
-</div>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>3.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line293">line 293</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<h5>Returns:</h5>
-
-        
-<div class="param-desc">
-    Version 1 <a href="UUID.html">UUID</a> object.
-</div>
-
-
-
-<dl>
-    <dt>
-        Type
-    </dt>
-    <dd>
-        
-<span class="param-type"><a href="UUID.html">UUID</a></span>
-
-
-    </dd>
-</dl>
-
-    
-
-
-
-
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id=".genV4"><span class="type-signature">(static) </span>genV4<span class="signature">()</span><span class="type-signature"> &rarr; {<a href="UUID.html">UUID</a>}</span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Creates a version 4 <a href="UUID.html">UUID</a> object.
-</div>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>3.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line139">line 139</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<h5>Returns:</h5>
-
-        
-<div class="param-desc">
-    Version 4 <a href="UUID.html">UUID</a> object.
-</div>
-
-
-
-<dl>
-    <dt>
-        Type
-    </dt>
-    <dd>
-        
-<span class="param-type"><a href="UUID.html">UUID</a></span>
-
-
-    </dd>
-</dl>
-
-    
-
-
-
-
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id=".parse"><span class="type-signature">(static) </span>parse<span class="signature">(strId)</span><span class="type-signature"> &rarr; {<a href="UUID.html">UUID</a>}</span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Converts a hexadecimal UUID string to a <a href="UUID.html">UUID</a> object.
-</div>
-
-
-
-
-
-
-
-
-
-    <h5>Parameters:</h5>
-    
-
-<table class="params">
-    <thead>
-    <tr>
-        
-        <th>Name</th>
-        
-
-        <th>Type</th>
-
-        
-
-        
-
-        <th class="last">Description</th>
-    </tr>
-    </thead>
-
-    <tbody>
-    
-
-        <tr>
-            
-                <td class="name"><code>strId</code></td>
-            
-
-            <td class="type">
-            
-                
-<span class="param-type">string</span>
-
-
-            
-            </td>
-
-            
-
-            
-
-            <td class="description last">Hexadecimal UUID string ("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx").</td>
-        </tr>
-
-    
-    </tbody>
-</table>
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>3.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line153">line 153</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<h5>Returns:</h5>
-
-        
-<div class="param-desc">
-    <a href="UUID.html">UUID</a> object or null.
-</div>
-
-
-
-<dl>
-    <dt>
-        Type
-    </dt>
-    <dd>
-        
-<span class="param-type"><a href="UUID.html">UUID</a></span>
-
-
-    </dd>
-</dl>
-
-    
-
-
-
-
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id=".resetState"><span class="type-signature">(static) </span>resetState<span class="signature">()</span><span class="type-signature"></span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Re-initializes the internal state for version 1 UUID creation.
-</div>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>3.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line325">line 325</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id=".useMathRandom"><span class="type-signature">(static) </span>useMathRandom<span class="signature">()</span><span class="type-signature"></span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Enables Math.random()-based pseudorandom number generator instead of cryptographically safer options.
-</div>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-    <dt class="tag-since">Since:</dt>
-    <dd class="tag-since"><ul class="dummy"><li>v3.5.0</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-        <dt class="important tag-deprecated">Deprecated:</dt><dd><ul class="dummy"><li>This method is provided only to work around performance drawbacks of the safer algorithms.</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line84">line 84</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id="equals"><span class="type-signature"></span>equals<span class="signature">(uuid)</span><span class="type-signature"> &rarr; {boolean}</span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Tests if two <a href="UUID.html">UUID</a> objects are equal.
-</div>
-
-
-
-
-
-
-
-
-
-    <h5>Parameters:</h5>
-    
-
-<table class="params">
-    <thead>
-    <tr>
-        
-        <th>Name</th>
-        
-
-        <th>Type</th>
-
-        
-
-        
-
-        <th class="last">Description</th>
-    </tr>
-    </thead>
-
-    <tbody>
-    
-
-        <tr>
-            
-                <td class="name"><code>uuid</code></td>
-            
-
-            <td class="type">
-            
-                
-<span class="param-type"><a href="UUID.html">UUID</a></span>
-
-
-            
-            </td>
-
-            
-
-            
-
-            <td class="description last"></td>
-        </tr>
-
-    
-    </tbody>
-</table>
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line268">line 268</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<h5>Returns:</h5>
-
-        
-<div class="param-desc">
-    True if two <a href="UUID.html">UUID</a> objects are equal.
-</div>
-
-
-
-<dl>
-    <dt>
-        Type
-    </dt>
-    <dd>
-        
-<span class="param-type">boolean</span>
-
-
-    </dd>
-</dl>
-
-    
-
-
-
-
-
-        
-            
-
-    
-
-    
-    <h4 class="name" id="toString"><span class="type-signature"></span>toString<span class="signature">()</span><span class="type-signature"> &rarr; {string}</span></h4>
-    
-
-    
-
-
-
-<div class="description">
-    Returns the hexadecimal string representation.
-</div>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<dl class="details">
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line261">line 261</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-
-
-
-
-
-
-
-
-
-
-
-<h5>Returns:</h5>
-
-        
-<div class="param-desc">
-    <a href="UUID.html#hexString">UUID#hexString</a>.
-</div>
-
-
-
-<dl>
-    <dt>
-        Type
-    </dt>
-    <dd>
-        
-<span class="param-type">string</span>
-
-
-    </dd>
-</dl>
-
-    
-
-
-
-
-
-        
-    
-
-    
-
-    
-</article>
-
-</section>
-
-
-
-
-</div>
-
-<nav>
-    <h2><a href="index.html">Home</a></h2><h3>Classes</h3><ul><li><a href="UUID.html">UUID</a></li></ul>
-</nav>
-
-<br class="clear">
-
-<footer>
-    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.5.5</a> on Mon Dec 18 2017 20:28:59 GMT-0500 (EST)
-</footer>
-
-<script> prettyPrint(); </script>
-<script src="scripts/linenumber.js"> </script>
-</body>
-</html>
\ No newline at end of file

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/index.html ---
@@ -1,255 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <meta charset="utf-8">
-    <title>JSDoc: Home</title>
-
-    <script src="scripts/prettify/prettify.js"> </script>
-    <script src="scripts/prettify/lang-css.js"> </script>
-    <!--[if lt IE 9]>
-      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
-    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
-</head>
-
-<body>
-
-<div id="main">
-
-    <h1 class="page-title">Home</h1>
-
-    
-
-
-
-    
-
-
-    <h3> </h3>
-
-
-
-
-
-
-
-
-
-
-    
-
-
-
-
-    <section>
-        <article><h1>NAME</h1><p>UUID.js - RFC-compliant UUID Generator for JavaScript</p>
-<h1>SYNOPSIS</h1><pre class="prettyprint source lang-html"><code>&lt;!-- HTML5 -->
-&lt;script src=&quot;src/uuid.js&quot;>&lt;/script>
-&lt;script> var uuid = UUID.generate(); &lt;/script></code></pre><pre class="prettyprint source lang-javascript"><code>// Node.js
-let UUID = require(&quot;uuidjs&quot;);
-let uuid = UUID.generate();</code></pre><pre class="prettyprint source lang-typescript"><code>// TypeScript
-import * as UUID from &quot;uuidjs&quot;;
-let str: string = UUID.generate();
-let obj: UUID.UUID = UUID.genV4();</code></pre><h1>DESCRIPTION</h1><p>UUID.js is a JavaScript/ECMAScript library to generate RFC 4122 compliant Universally Unique IDentifiers (UUIDs). This library supports both version 4 UUIDs (UUIDs from random numbers) and version 1 UUIDs (time-based UUIDs), and provides an object-oriented interface to print a generated or parsed UUID in a variety of forms.</p>
-<h1>FEATURES</h1><ul>
-<li>Generates version 4 UUIDs (UUIDs from random numbers) and version 1 UUIDs (time-based UUIDs)</li>
-<li>Provides an object-oriented interface to print various string representations of a generated or parsed UUID</li>
-<li>Utilizes a cryptographically secure pseudo-random number generator if available, whereas falling back to <code>Math.random()</code> otherwise</li>
-<li>Appends extra random bits to compensate for the lower timestamp resolution of JavaScript than that required for version 1 UUIDs</li>
-<li>Comes with a lot of test cases including format checks and statistical tests to maintain a high-quality code base</li>
-<li>Supports old browsers as well as modern browser and server environments, as kept compatible with ECMAScript 3rd edition</li>
-</ul>
-<h1>INSTALL</h1><p>Download <code>src/uuid.js</code> or call <code>npm install uuidjs</code>.</p>
-<p>Then, load <code>src/uuid.js</code>.</p>
-<pre class="prettyprint source lang-html"><code>&lt;script src=&quot;src/uuid.js&quot;>&lt;/script></code></pre><p>Or, import <code>uuidjs</code>.</p>
-<pre class="prettyprint source lang-javascript"><code>const UUID = require(&quot;uuidjs&quot;);</code></pre><h1>USAGE EXAMPLES</h1><p><code>UUID.generate()</code> returns a version 4 UUID as a hexadecimal string.</p>
-<pre class="prettyprint source lang-javascript"><code>// Create a version 4 UUID as a hexadecimal string
-console.log(UUID.generate());   // fa84cf42-ffdf-4975-b42b-31ab5fb983eb</code></pre><p><code>UUID.genV4()</code>, <code>UUID.genV1()</code>, and <code>UUID.parse()</code> return a UUID object that has various fields and methods.</p>
-<pre class="prettyprint source lang-javascript"><code>// Create a version 4 (random number-based) UUID object
-var objV4 = UUID.genV4();
-
-// Create a version 1 (time-based) UUID object
-var objV1 = UUID.genV1();
-
-// Create a UUID object from a hexadecimal string
-var uuid = UUID.parse(&quot;a0e0f130-8c21-11df-92d9-95795a3bcd40&quot;);
-
-// Get string representations of a UUID object
-console.log(uuid.toString());   // &quot;a0e0f130-8c21-11df-92d9-95795a3bcd40&quot;
-console.log(uuid.hexString);    // &quot;a0e0f130-8c21-11df-92d9-95795a3bcd40&quot;
-console.log(uuid.hexNoDelim);   // &quot;a0e0f1308c2111df92d995795a3bcd40&quot;
-console.log(uuid.bitString);    // &quot;101000001110000 ... 1100110101000000&quot;
-console.log(uuid.urn);          // &quot;urn:uuid:a0e0f130-8c21-11df-92d9-95795a3bcd40&quot;
-
-// Compare UUID objects
-console.log(objV4.equals(objV1));   // false
-
-// Get UUID version numbers
-console.log(objV4.version); // 4
-console.log(objV1.version); // 1
-
-// Get internal field values in 3 different forms via 2 different accessors
-console.log(uuid.intFields.timeLow);                // 2699096368
-console.log(uuid.bitFields.timeMid);                // &quot;1000110000100001&quot;
-console.log(uuid.hexFields.timeHiAndVersion);       // &quot;11df&quot;
-console.log(uuid.intFields.clockSeqHiAndReserved);  // 146
-console.log(uuid.bitFields.clockSeqLow);            // &quot;11011001&quot;
-console.log(uuid.hexFields.node);                   // &quot;95795a3bcd40&quot;
-
-console.log(uuid.intFields[0]);                     // 2699096368
-console.log(uuid.bitFields[1]);                     // &quot;1000110000100001&quot;
-console.log(uuid.hexFields[2]);                     // &quot;11df&quot;
-console.log(uuid.intFields[3]);                     // 146
-console.log(uuid.bitFields[4]);                     // &quot;11011001&quot;
-console.log(uuid.hexFields[5]);                     // &quot;95795a3bcd40&quot;</code></pre><p>UUID.js supports the so-called noConflict mode to work around namespace conflicts.</p>
-<pre class="prettyprint source lang-javascript"><code>// Avoid namespace conflicts with other libraries
-var arbitraryVarName = UUID;
-UUID = UUID.overwrittenUUID;                // Restore the original value
-console.log(arbitraryVarName.generate());   // &quot;cb9a0283-a44c-4e7a-a5b0-9cd2876e952b&quot;</code></pre><h1>LICENSE</h1><p>Copyright (c) 2010-2017 LiosK</p>
-<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at</p>
-<p>http://www.apache.org/licenses/LICENSE-2.0</p>
-<p>Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.</p>
-<h1>AUTHOR</h1><p>LiosK <a href="&#109;&#97;&#105;&#x6c;&#x74;&#111;&#x3a;&#99;&#111;&#x6e;&#116;&#x61;&#99;&#116;&#x40;&#109;&#97;&#105;&#108;&#46;&#108;&#x69;&#111;&#115;&#107;&#46;&#110;&#101;&#116;">&#99;&#111;&#x6e;&#116;&#x61;&#99;&#116;&#x40;&#109;&#97;&#105;&#108;&#46;&#108;&#x69;&#111;&#115;&#107;&#46;&#110;&#101;&#116;</a></p>
-<h1>SEE ALSO</h1><ul>
-<li><a href="https://www.ietf.org/rfc/rfc4122.txt">RFC 4122</a></li>
-<li><a href="https://github.com/LiosK/UUID.js">GitHub Repository</a></li>
-<li><a href="https://www.npmjs.com/package/uuidjs">npm Package</a></li>
-<li><a href="https://liosk.github.io/UUID.js/docs/">API Documentation</a></li>
-<li><a href="https://liosk.github.io/UUID.js/test/browser.html">Run test cases on your browser</a></li>
-</ul></article>
-    </section>
-
-
-
-
-
-
-
-
-
-<section>
-
-<header>
-    
-        <h2>uuid.js</h2>
-        
-    
-</header>
-
-<article>
-    <div class="container-overview">
-    
-        
-            <div class="description">UUID.js - RFC-compliant UUID Generator for JavaScript</div>
-        
-
-        
-
-
-<dl class="details">
-
-    
-    <dt class="tag-version">Version:</dt>
-    <dd class="tag-version"><ul class="dummy"><li>v4.0.3</li></ul></dd>
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-    <dt class="tag-author">Author:</dt>
-    <dd class="tag-author">
-        <ul>
-            <li>LiosK</li>
-        </ul>
-    </dd>
-    
-
-    
-
-    
-    <dt class="tag-license">License:</dt>
-    <dd class="tag-license"><ul class="dummy"><li>Apache License 2.0: Copyright (c) 2010-2017 LiosK</li></ul></dd>
-    
-
-    
-
-    
-    <dt class="tag-source">Source:</dt>
-    <dd class="tag-source"><ul class="dummy"><li>
-        <a href="uuid.js.html">uuid.js</a>, <a href="uuid.js.html#line1">line 1</a>
-    </li></ul></dd>
-    
-
-    
-
-    
-
-    
-</dl>
-
-
-        
-    
-    </div>
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-
-    
-</article>
-
-</section>
-
-
-
-
-</div>
-
-<nav>
-    <h2><a href="index.html">Home</a></h2><h3>Classes</h3><ul><li><a href="UUID.html">UUID</a></li></ul>
-</nav>
-
-<br class="clear">
-
-<footer>
-    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.5.5</a> on Mon Dec 18 2017 20:28:59 GMT-0500 (EST)
-</footer>
-
-<script> prettyPrint(); </script>
-<script src="scripts/linenumber.js"> </script>
-</body>
-</html>
\ No newline at end of file

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/scripts/linenumber.js ---
@@ -1,25 +0,0 @@
-/*global document */
-(function() {
-    var source = document.getElementsByClassName('prettyprint source linenums');
-    var i = 0;
-    var lineNumber = 0;
-    var lineId;
-    var lines;
-    var totalLines;
-    var anchorHash;
-
-    if (source && source[0]) {
-        anchorHash = document.location.hash.substring(1);
-        lines = source[0].getElementsByTagName('li');
-        totalLines = lines.length;
-
-        for (; i < totalLines; i++) {
-            lineNumber++;
-            lineId = 'line' + lineNumber;
-            lines[i].id = lineId;
-            if (lineId === anchorHash) {
-                lines[i].className += ' selected';
-            }
-        }
-    }
-})();

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/scripts/prettify/Apache-License-2.0.txt ---
@@ -1,202 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/scripts/prettify/lang-css.js ---
@@ -1,2 +0,0 @@
-PR.registerLangHandler(PR.createSimpleLexer([["pln",/^[\t\n\f\r ]+/,null," \t\r\n"]],[["str",/^"(?:[^\n\f\r"\\]|\\(?:\r\n?|\n|\f)|\\[\S\s])*"/,null],["str",/^'(?:[^\n\f\r'\\]|\\(?:\r\n?|\n|\f)|\\[\S\s])*'/,null],["lang-css-str",/^url\(([^"')]*)\)/i],["kwd",/^(?:url|rgb|!important|@import|@page|@media|@charset|inherit)(?=[^\w-]|$)/i,null],["lang-css-kw",/^(-?(?:[_a-z]|\\[\da-f]+ ?)(?:[\w-]|\\\\[\da-f]+ ?)*)\s*:/i],["com",/^\/\*[^*]*\*+(?:[^*/][^*]*\*+)*\//],["com",
-/^(?:<\!--|--\>)/],["lit",/^(?:\d+|\d*\.\d+)(?:%|[a-z]+)?/i],["lit",/^#[\da-f]{3,6}/i],["pln",/^-?(?:[_a-z]|\\[\da-f]+ ?)(?:[\w-]|\\\\[\da-f]+ ?)*/i],["pun",/^[^\s\w"']+/]]),["css"]);PR.registerLangHandler(PR.createSimpleLexer([],[["kwd",/^-?(?:[_a-z]|\\[\da-f]+ ?)(?:[\w-]|\\\\[\da-f]+ ?)*/i]]),["css-kw"]);PR.registerLangHandler(PR.createSimpleLexer([],[["str",/^[^"')]+/]]),["css-str"]);

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/scripts/prettify/prettify.js ---
@@ -1,28 +0,0 @@
-var q=null;window.PR_SHOULD_USE_CONTINUATION=!0;
-(function(){function L(a){function m(a){var f=a.charCodeAt(0);if(f!==92)return f;var b=a.charAt(1);return(f=r[b])?f:"0"<=b&&b<="7"?parseInt(a.substring(1),8):b==="u"||b==="x"?parseInt(a.substring(2),16):a.charCodeAt(1)}function e(a){if(a<32)return(a<16?"\\x0":"\\x")+a.toString(16);a=String.fromCharCode(a);if(a==="\\"||a==="-"||a==="["||a==="]")a="\\"+a;return a}function h(a){for(var f=a.substring(1,a.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),a=
-[],b=[],o=f[0]==="^",c=o?1:0,i=f.length;c<i;++c){var j=f[c];if(/\\[bdsw]/i.test(j))a.push(j);else{var j=m(j),d;c+2<i&&"-"===f[c+1]?(d=m(f[c+2]),c+=2):d=j;b.push([j,d]);d<65||j>122||(d<65||j>90||b.push([Math.max(65,j)|32,Math.min(d,90)|32]),d<97||j>122||b.push([Math.max(97,j)&-33,Math.min(d,122)&-33]))}}b.sort(function(a,f){return a[0]-f[0]||f[1]-a[1]});f=[];j=[NaN,NaN];for(c=0;c<b.length;++c)i=b[c],i[0]<=j[1]+1?j[1]=Math.max(j[1],i[1]):f.push(j=i);b=["["];o&&b.push("^");b.push.apply(b,a);for(c=0;c<
-f.length;++c)i=f[c],b.push(e(i[0])),i[1]>i[0]&&(i[1]+1>i[0]&&b.push("-"),b.push(e(i[1])));b.push("]");return b.join("")}function y(a){for(var f=a.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),b=f.length,d=[],c=0,i=0;c<b;++c){var j=f[c];j==="("?++i:"\\"===j.charAt(0)&&(j=+j.substring(1))&&j<=i&&(d[j]=-1)}for(c=1;c<d.length;++c)-1===d[c]&&(d[c]=++t);for(i=c=0;c<b;++c)j=f[c],j==="("?(++i,d[i]===void 0&&(f[c]="(?:")):"\\"===j.charAt(0)&&
-(j=+j.substring(1))&&j<=i&&(f[c]="\\"+d[i]);for(i=c=0;c<b;++c)"^"===f[c]&&"^"!==f[c+1]&&(f[c]="");if(a.ignoreCase&&s)for(c=0;c<b;++c)j=f[c],a=j.charAt(0),j.length>=2&&a==="["?f[c]=h(j):a!=="\\"&&(f[c]=j.replace(/[A-Za-z]/g,function(a){a=a.charCodeAt(0);return"["+String.fromCharCode(a&-33,a|32)+"]"}));return f.join("")}for(var t=0,s=!1,l=!1,p=0,d=a.length;p<d;++p){var g=a[p];if(g.ignoreCase)l=!0;else if(/[a-z]/i.test(g.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){s=!0;l=!1;break}}for(var r=
-{b:8,t:9,n:10,v:11,f:12,r:13},n=[],p=0,d=a.length;p<d;++p){g=a[p];if(g.global||g.multiline)throw Error(""+g);n.push("(?:"+y(g)+")")}return RegExp(n.join("|"),l?"gi":"g")}function M(a){function m(a){switch(a.nodeType){case 1:if(e.test(a.className))break;for(var g=a.firstChild;g;g=g.nextSibling)m(g);g=a.nodeName;if("BR"===g||"LI"===g)h[s]="\n",t[s<<1]=y++,t[s++<<1|1]=a;break;case 3:case 4:g=a.nodeValue,g.length&&(g=p?g.replace(/\r\n?/g,"\n"):g.replace(/[\t\n\r ]+/g," "),h[s]=g,t[s<<1]=y,y+=g.length,
-t[s++<<1|1]=a)}}var e=/(?:^|\s)nocode(?:\s|$)/,h=[],y=0,t=[],s=0,l;a.currentStyle?l=a.currentStyle.whiteSpace:window.getComputedStyle&&(l=document.defaultView.getComputedStyle(a,q).getPropertyValue("white-space"));var p=l&&"pre"===l.substring(0,3);m(a);return{a:h.join("").replace(/\n$/,""),c:t}}function B(a,m,e,h){m&&(a={a:m,d:a},e(a),h.push.apply(h,a.e))}function x(a,m){function e(a){for(var l=a.d,p=[l,"pln"],d=0,g=a.a.match(y)||[],r={},n=0,z=g.length;n<z;++n){var f=g[n],b=r[f],o=void 0,c;if(typeof b===
-"string")c=!1;else{var i=h[f.charAt(0)];if(i)o=f.match(i[1]),b=i[0];else{for(c=0;c<t;++c)if(i=m[c],o=f.match(i[1])){b=i[0];break}o||(b="pln")}if((c=b.length>=5&&"lang-"===b.substring(0,5))&&!(o&&typeof o[1]==="string"))c=!1,b="src";c||(r[f]=b)}i=d;d+=f.length;if(c){c=o[1];var j=f.indexOf(c),k=j+c.length;o[2]&&(k=f.length-o[2].length,j=k-c.length);b=b.substring(5);B(l+i,f.substring(0,j),e,p);B(l+i+j,c,C(b,c),p);B(l+i+k,f.substring(k),e,p)}else p.push(l+i,b)}a.e=p}var h={},y;(function(){for(var e=a.concat(m),
-l=[],p={},d=0,g=e.length;d<g;++d){var r=e[d],n=r[3];if(n)for(var k=n.length;--k>=0;)h[n.charAt(k)]=r;r=r[1];n=""+r;p.hasOwnProperty(n)||(l.push(r),p[n]=q)}l.push(/[\S\s]/);y=L(l)})();var t=m.length;return e}function u(a){var m=[],e=[];a.tripleQuotedStrings?m.push(["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,q,"'\""]):a.multiLineStrings?m.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,
-q,"'\"`"]):m.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,q,"\"'"]);a.verbatimStrings&&e.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,q]);var h=a.hashComments;h&&(a.cStyleComments?(h>1?m.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,q,"#"]):m.push(["com",/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\n\r]*)/,q,"#"]),e.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/,q])):m.push(["com",/^#[^\n\r]*/,
-q,"#"]));a.cStyleComments&&(e.push(["com",/^\/\/[^\n\r]*/,q]),e.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,q]));a.regexLiterals&&e.push(["lang-regex",/^(?:^^\.?|[!+-]|!=|!==|#|%|%=|&|&&|&&=|&=|\(|\*|\*=|\+=|,|-=|->|\/|\/=|:|::|;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|[?@[^]|\^=|\^\^|\^\^=|{|\||\|=|\|\||\|\|=|~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\s*(\/(?=[^*/])(?:[^/[\\]|\\[\S\s]|\[(?:[^\\\]]|\\[\S\s])*(?:]|$))+\/)/]);(h=a.types)&&e.push(["typ",h]);a=(""+a.keywords).replace(/^ | $/g,
-"");a.length&&e.push(["kwd",RegExp("^(?:"+a.replace(/[\s,]+/g,"|")+")\\b"),q]);m.push(["pln",/^\s+/,q," \r\n\t\xa0"]);e.push(["lit",/^@[$_a-z][\w$@]*/i,q],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,q],["pln",/^[$_a-z][\w$@]*/i,q],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,q,"0123456789"],["pln",/^\\[\S\s]?/,q],["pun",/^.[^\s\w"-$'./@\\`]*/,q]);return x(m,e)}function D(a,m){function e(a){switch(a.nodeType){case 1:if(k.test(a.className))break;if("BR"===a.nodeName)h(a),
-a.parentNode&&a.parentNode.removeChild(a);else for(a=a.firstChild;a;a=a.nextSibling)e(a);break;case 3:case 4:if(p){var b=a.nodeValue,d=b.match(t);if(d){var c=b.substring(0,d.index);a.nodeValue=c;(b=b.substring(d.index+d[0].length))&&a.parentNode.insertBefore(s.createTextNode(b),a.nextSibling);h(a);c||a.parentNode.removeChild(a)}}}}function h(a){function b(a,d){var e=d?a.cloneNode(!1):a,f=a.parentNode;if(f){var f=b(f,1),g=a.nextSibling;f.appendChild(e);for(var h=g;h;h=g)g=h.nextSibling,f.appendChild(h)}return e}
-for(;!a.nextSibling;)if(a=a.parentNode,!a)return;for(var a=b(a.nextSibling,0),e;(e=a.parentNode)&&e.nodeType===1;)a=e;d.push(a)}var k=/(?:^|\s)nocode(?:\s|$)/,t=/\r\n?|\n/,s=a.ownerDocument,l;a.currentStyle?l=a.currentStyle.whiteSpace:window.getComputedStyle&&(l=s.defaultView.getComputedStyle(a,q).getPropertyValue("white-space"));var p=l&&"pre"===l.substring(0,3);for(l=s.createElement("LI");a.firstChild;)l.appendChild(a.firstChild);for(var d=[l],g=0;g<d.length;++g)e(d[g]);m===(m|0)&&d[0].setAttribute("value",
-m);var r=s.createElement("OL");r.className="linenums";for(var n=Math.max(0,m-1|0)||0,g=0,z=d.length;g<z;++g)l=d[g],l.className="L"+(g+n)%10,l.firstChild||l.appendChild(s.createTextNode("\xa0")),r.appendChild(l);a.appendChild(r)}function k(a,m){for(var e=m.length;--e>=0;){var h=m[e];A.hasOwnProperty(h)?window.console&&console.warn("cannot override language handler %s",h):A[h]=a}}function C(a,m){if(!a||!A.hasOwnProperty(a))a=/^\s*</.test(m)?"default-markup":"default-code";return A[a]}function E(a){var m=
-a.g;try{var e=M(a.h),h=e.a;a.a=h;a.c=e.c;a.d=0;C(m,h)(a);var k=/\bMSIE\b/.test(navigator.userAgent),m=/\n/g,t=a.a,s=t.length,e=0,l=a.c,p=l.length,h=0,d=a.e,g=d.length,a=0;d[g]=s;var r,n;for(n=r=0;n<g;)d[n]!==d[n+2]?(d[r++]=d[n++],d[r++]=d[n++]):n+=2;g=r;for(n=r=0;n<g;){for(var z=d[n],f=d[n+1],b=n+2;b+2<=g&&d[b+1]===f;)b+=2;d[r++]=z;d[r++]=f;n=b}for(d.length=r;h<p;){var o=l[h+2]||s,c=d[a+2]||s,b=Math.min(o,c),i=l[h+1],j;if(i.nodeType!==1&&(j=t.substring(e,b))){k&&(j=j.replace(m,"\r"));i.nodeValue=
-j;var u=i.ownerDocument,v=u.createElement("SPAN");v.className=d[a+1];var x=i.parentNode;x.replaceChild(v,i);v.appendChild(i);e<o&&(l[h+1]=i=u.createTextNode(t.substring(b,o)),x.insertBefore(i,v.nextSibling))}e=b;e>=o&&(h+=2);e>=c&&(a+=2)}}catch(w){"console"in window&&console.log(w&&w.stack?w.stack:w)}}var v=["break,continue,do,else,for,if,return,while"],w=[[v,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],
-"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],F=[w,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],G=[w,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"],
-H=[G,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"],w=[w,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],I=[v,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],
-J=[v,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],v=[v,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],K=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/,N=/\S/,O=u({keywords:[F,H,w,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END"+
-I,J,v],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),A={};k(O,["default-code"]);k(x([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),
-["default-markup","htm","html","mxml","xhtml","xml","xsl"]);k(x([["pln",/^\s+/,q," \t\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,q,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],["pun",/^[/<->]+/],["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",
-/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]);k(x([],[["atv",/^[\S\s]+/]]),["uq.val"]);k(u({keywords:F,hashComments:!0,cStyleComments:!0,types:K}),["c","cc","cpp","cxx","cyc","m"]);k(u({keywords:"null,true,false"}),["json"]);k(u({keywords:H,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:K}),["cs"]);k(u({keywords:G,cStyleComments:!0}),["java"]);k(u({keywords:v,hashComments:!0,multiLineStrings:!0}),["bsh","csh","sh"]);k(u({keywords:I,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),
-["cv","py"]);k(u({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["perl","pl","pm"]);k(u({keywords:J,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb"]);k(u({keywords:w,cStyleComments:!0,regexLiterals:!0}),["js"]);k(u({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes",
-hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]);k(x([],[["str",/^[\S\s]+/]]),["regex"]);window.prettyPrintOne=function(a,m,e){var h=document.createElement("PRE");h.innerHTML=a;e&&D(h,e);E({g:m,i:e,h:h});return h.innerHTML};window.prettyPrint=function(a){function m(){for(var e=window.PR_SHOULD_USE_CONTINUATION?l.now()+250:Infinity;p<h.length&&l.now()<e;p++){var n=h[p],k=n.className;if(k.indexOf("prettyprint")>=0){var k=k.match(g),f,b;if(b=
-!k){b=n;for(var o=void 0,c=b.firstChild;c;c=c.nextSibling)var i=c.nodeType,o=i===1?o?b:c:i===3?N.test(c.nodeValue)?b:o:o;b=(f=o===b?void 0:o)&&"CODE"===f.tagName}b&&(k=f.className.match(g));k&&(k=k[1]);b=!1;for(o=n.parentNode;o;o=o.parentNode)if((o.tagName==="pre"||o.tagName==="code"||o.tagName==="xmp")&&o.className&&o.className.indexOf("prettyprint")>=0){b=!0;break}b||((b=(b=n.className.match(/\blinenums\b(?::(\d+))?/))?b[1]&&b[1].length?+b[1]:!0:!1)&&D(n,b),d={g:k,h:n,i:b},E(d))}}p<h.length?setTimeout(m,
-250):a&&a()}for(var e=[document.getElementsByTagName("pre"),document.getElementsByTagName("code"),document.getElementsByTagName("xmp")],h=[],k=0;k<e.length;++k)for(var t=0,s=e[k].length;t<s;++t)h.push(e[k][t]);var e=q,l=Date;l.now||(l={now:function(){return+new Date}});var p=0,d,g=/\blang(?:uage)?-([\w.]+)(?!\S)/;m()};window.PR={createSimpleLexer:x,registerLangHandler:k,sourceDecorator:u,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",
-PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ"}})();

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/styles/jsdoc-default.css ---
@@ -1,358 +0,0 @@
-@font-face {
-    font-family: 'Open Sans';
-    font-weight: normal;
-    font-style: normal;
-    src: url('../fonts/OpenSans-Regular-webfont.eot');
-    src:
-        local('Open Sans'),
-        local('OpenSans'),
-        url('../fonts/OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),
-        url('../fonts/OpenSans-Regular-webfont.woff') format('woff'),
-        url('../fonts/OpenSans-Regular-webfont.svg#open_sansregular') format('svg');
-}
-
-@font-face {
-    font-family: 'Open Sans Light';
-    font-weight: normal;
-    font-style: normal;
-    src: url('../fonts/OpenSans-Light-webfont.eot');
-    src:
-        local('Open Sans Light'),
-        local('OpenSans Light'),
-        url('../fonts/OpenSans-Light-webfont.eot?#iefix') format('embedded-opentype'),
-        url('../fonts/OpenSans-Light-webfont.woff') format('woff'),
-        url('../fonts/OpenSans-Light-webfont.svg#open_sanslight') format('svg');
-}
-
-html
-{
-    overflow: auto;
-    background-color: #fff;
-    font-size: 14px;
-}
-
-body
-{
-    font-family: 'Open Sans', sans-serif;
-    line-height: 1.5;
-    color: #4d4e53;
-    background-color: white;
-}
-
-a, a:visited, a:active {
-    color: #0095dd;
-    text-decoration: none;
-}
-
-a:hover {
-    text-decoration: underline;
-}
-
-header
-{
-    display: block;
-    padding: 0px 4px;
-}
-
-tt, code, kbd, samp {
-    font-family: Consolas, Monaco, 'Andale Mono', monospace;
-}
-
-.class-description {
-    font-size: 130%;
-    line-height: 140%;
-    margin-bottom: 1em;
-    margin-top: 1em;
-}
-
-.class-description:empty {
-    margin: 0;
-}
-
-#main {
-    float: left;
-    width: 70%;
-}
-
-article dl {
-    margin-bottom: 40px;
-}
-
-article img {
-  max-width: 100%;
-}
-
-section
-{
-    display: block;
-    background-color: #fff;
-    padding: 12px 24px;
-    border-bottom: 1px solid #ccc;
-    margin-right: 30px;
-}
-
-.variation {
-    display: none;
-}
-
-.signature-attributes {
-    font-size: 60%;
-    color: #aaa;
-    font-style: italic;
-    font-weight: lighter;
-}
-
-nav
-{
-    display: block;
-    float: right;
-    margin-top: 28px;
-    width: 30%;
-    box-sizing: border-box;
-    border-left: 1px solid #ccc;
-    padding-left: 16px;
-}
-
-nav ul {
-    font-family: 'Lucida Grande', 'Lucida Sans Unicode', arial, sans-serif;
-    font-size: 100%;
-    line-height: 17px;
-    padding: 0;
-    margin: 0;
-    list-style-type: none;
-}
-
-nav ul a, nav ul a:visited, nav ul a:active {
-    font-family: Consolas, Monaco, 'Andale Mono', monospace;
-    line-height: 18px;
-    color: #4D4E53;
-}
-
-nav h3 {
-    margin-top: 12px;
-}
-
-nav li {
-    margin-top: 6px;
-}
-
-footer {
-    display: block;
-    padding: 6px;
-    margin-top: 12px;
-    font-style: italic;
-    font-size: 90%;
-}
-
-h1, h2, h3, h4 {
-    font-weight: 200;
-    margin: 0;
-}
-
-h1
-{
-    font-family: 'Open Sans Light', sans-serif;
-    font-size: 48px;
-    letter-spacing: -2px;
-    margin: 12px 24px 20px;
-}
-
-h2, h3.subsection-title
-{
-    font-size: 30px;
-    font-weight: 700;
-    letter-spacing: -1px;
-    margin-bottom: 12px;
-}
-
-h3
-{
-    font-size: 24px;
-    letter-spacing: -0.5px;
-    margin-bottom: 12px;
-}
-
-h4
-{
-    font-size: 18px;
-    letter-spacing: -0.33px;
-    margin-bottom: 12px;
-    color: #4d4e53;
-}
-
-h5, .container-overview .subsection-title
-{
-    font-size: 120%;
-    font-weight: bold;
-    letter-spacing: -0.01em;
-    margin: 8px 0 3px 0;
-}
-
-h6
-{
-    font-size: 100%;
-    letter-spacing: -0.01em;
-    margin: 6px 0 3px 0;
-    font-style: italic;
-}
-
-table
-{
-    border-spacing: 0;
-    border: 0;
-    border-collapse: collapse;
-}
-
-td, th
-{
-    border: 1px solid #ddd;
-    margin: 0px;
-    text-align: left;
-    vertical-align: top;
-    padding: 4px 6px;
-    display: table-cell;
-}
-
-thead tr
-{
-    background-color: #ddd;
-    font-weight: bold;
-}
-
-th { border-right: 1px solid #aaa; }
-tr > th:last-child { border-right: 1px solid #ddd; }
-
-.ancestors, .attribs { color: #999; }
-.ancestors a, .attribs a
-{
-    color: #999 !important;
-    text-decoration: none;
-}
-
-.clear
-{
-    clear: both;
-}
-
-.important
-{
-    font-weight: bold;
-    color: #950B02;
-}
-
-.yes-def {
-    text-indent: -1000px;
-}
-
-.type-signature {
-    color: #aaa;
-}
-
-.name, .signature {
-    font-family: Consolas, Monaco, 'Andale Mono', monospace;
-}
-
-.details { margin-top: 14px; border-left: 2px solid #DDD; }
-.details dt { width: 120px; float: left; padding-left: 10px;  padding-top: 6px; }
-.details dd { margin-left: 70px; }
-.details ul { margin: 0; }
-.details ul { list-style-type: none; }
-.details li { margin-left: 30px; padding-top: 6px; }
-.details pre.prettyprint { margin: 0 }
-.details .object-value { padding-top: 0; }
-
-.description {
-    margin-bottom: 1em;
-    margin-top: 1em;
-}
-
-.code-caption
-{
-    font-style: italic;
-    font-size: 107%;
-    margin: 0;
-}
-
-.prettyprint
-{
-    border: 1px solid #ddd;
-    width: 80%;
-    overflow: auto;
-}
-
-.prettyprint.source {
-    width: inherit;
-}
-
-.prettyprint code
-{
-    font-size: 100%;
-    line-height: 18px;
-    display: block;
-    padding: 4px 12px;
-    margin: 0;
-    background-color: #fff;
-    color: #4D4E53;
-}
-
-.prettyprint code span.line
-{
-  display: inline-block;
-}
-
-.prettyprint.linenums
-{
-  padding-left: 70px;
-  -webkit-user-select: none;
-  -moz-user-select: none;
-  -ms-user-select: none;
-  user-select: none;
-}
-
-.prettyprint.linenums ol
-{
-  padding-left: 0;
-}
-
-.prettyprint.linenums li
-{
-  border-left: 3px #ddd solid;
-}
-
-.prettyprint.linenums li.selected,
-.prettyprint.linenums li.selected *
-{
-  background-color: lightyellow;
-}
-
-.prettyprint.linenums li *
-{
-  -webkit-user-select: text;
-  -moz-user-select: text;
-  -ms-user-select: text;
-  user-select: text;
-}
-
-.params .name, .props .name, .name code {
-    color: #4D4E53;
-    font-family: Consolas, Monaco, 'Andale Mono', monospace;
-    font-size: 100%;
-}
-
-.params td.description > p:first-child,
-.props td.description > p:first-child
-{
-    margin-top: 0;
-    padding-top: 0;
-}
-
-.params td.description > p:last-child,
-.props td.description > p:last-child
-{
-    margin-bottom: 0;
-    padding-bottom: 0;
-}
-
-.disabled {
-    color: #454545;
-}

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/styles/prettify-jsdoc.css ---
@@ -1,111 +0,0 @@
-/* JSDoc prettify.js theme */
-
-/* plain text */
-.pln {
-  color: #000000;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* string content */
-.str {
-  color: #006400;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* a keyword */
-.kwd {
-  color: #000000;
-  font-weight: bold;
-  font-style: normal;
-}
-
-/* a comment */
-.com {
-  font-weight: normal;
-  font-style: italic;
-}
-
-/* a type name */
-.typ {
-  color: #000000;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* a literal value */
-.lit {
-  color: #006400;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* punctuation */
-.pun {
-  color: #000000;
-  font-weight: bold;
-  font-style: normal;
-}
-
-/* lisp open bracket */
-.opn {
-  color: #000000;
-  font-weight: bold;
-  font-style: normal;
-}
-
-/* lisp close bracket */
-.clo {
-  color: #000000;
-  font-weight: bold;
-  font-style: normal;
-}
-
-/* a markup tag name */
-.tag {
-  color: #006400;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* a markup attribute name */
-.atn {
-  color: #006400;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* a markup attribute value */
-.atv {
-  color: #006400;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* a declaration */
-.dec {
-  color: #000000;
-  font-weight: bold;
-  font-style: normal;
-}
-
-/* a variable name */
-.var {
-  color: #000000;
-  font-weight: normal;
-  font-style: normal;
-}
-
-/* a function name */
-.fun {
-  color: #000000;
-  font-weight: bold;
-  font-style: normal;
-}
-
-/* Specify class=linenums on a pre to get line numbering */
-ol.linenums {
-  margin-top: 0;
-  margin-bottom: 0;
-}

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/styles/prettify-tomorrow.css ---
@@ -1,132 +0,0 @@
-/* Tomorrow Theme */
-/* Original theme - https://github.com/chriskempson/tomorrow-theme */
-/* Pretty printing styles. Used with prettify.js. */
-/* SPAN elements with the classes below are added by prettyprint. */
-/* plain text */
-.pln {
-  color: #4d4d4c; }
-
-@media screen {
-  /* string content */
-  .str {
-    color: #718c00; }
-
-  /* a keyword */
-  .kwd {
-    color: #8959a8; }
-
-  /* a comment */
-  .com {
-    color: #8e908c; }
-
-  /* a type name */
-  .typ {
-    color: #4271ae; }
-
-  /* a literal value */
-  .lit {
-    color: #f5871f; }
-
-  /* punctuation */
-  .pun {
-    color: #4d4d4c; }
-
-  /* lisp open bracket */
-  .opn {
-    color: #4d4d4c; }
-
-  /* lisp close bracket */
-  .clo {
-    color: #4d4d4c; }
-
-  /* a markup tag name */
-  .tag {
-    color: #c82829; }
-
-  /* a markup attribute name */
-  .atn {
-    color: #f5871f; }
-
-  /* a markup attribute value */
-  .atv {
-    color: #3e999f; }
-
-  /* a declaration */
-  .dec {
-    color: #f5871f; }
-
-  /* a variable name */
-  .var {
-    color: #c82829; }
-
-  /* a function name */
-  .fun {
-    color: #4271ae; } }
-/* Use higher contrast and text-weight for printable form. */
-@media print, projection {
-  .str {
-    color: #060; }
-
-  .kwd {
-    color: #006;
-    font-weight: bold; }
-
-  .com {
-    color: #600;
-    font-style: italic; }
-
-  .typ {
-    color: #404;
-    font-weight: bold; }
-
-  .lit {
-    color: #044; }
-
-  .pun, .opn, .clo {
-    color: #440; }
-
-  .tag {
-    color: #006;
-    font-weight: bold; }
-
-  .atn {
-    color: #404; }
-
-  .atv {
-    color: #060; } }
-/* Style */
-/*
-pre.prettyprint {
-  background: white;
-  font-family: Consolas, Monaco, 'Andale Mono', monospace;
-  font-size: 12px;
-  line-height: 1.5;
-  border: 1px solid #ccc;
-  padding: 10px; }
-*/
-
-/* Specify class=linenums on a pre to get line numbering */
-ol.linenums {
-  margin-top: 0;
-  margin-bottom: 0; }
-
-/* IE indents via margin-left */
-li.L0,
-li.L1,
-li.L2,
-li.L3,
-li.L4,
-li.L5,
-li.L6,
-li.L7,
-li.L8,
-li.L9 {
-  /* */ }
-
-/* Alternate shading for lines */
-li.L1,
-li.L3,
-li.L5,
-li.L7,
-li.L9 {
-  /* */ }

--- app/webroot/js/vendor/UUID.js-4.0.3/docs/uuid.js.html ---
@@ -1,428 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <meta charset="utf-8">
-    <title>JSDoc: Source: uuid.js</title>
-
-    <script src="scripts/prettify/prettify.js"> </script>
-    <script src="scripts/prettify/lang-css.js"> </script>
-    <!--[if lt IE 9]>
-      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
-    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
-</head>
-
-<body>
-
-<div id="main">
-
-    <h1 class="page-title">Source: uuid.js</h1>
-
-    
-
-
-
-    
-    <section>
-        <article>
-            <pre class="prettyprint source linenums"><code>/**
- * UUID.js - RFC-compliant UUID Generator for JavaScript
- *
- * @file
- * @author  LiosK
- * @version v4.0.3
- * @license Apache License 2.0: Copyright (c) 2010-2017 LiosK
- */
-
-/**
- * @class
- * @classdesc {@link UUID} object.
- * @hideconstructor
- */
-var UUID;
-
-UUID = (function(overwrittenUUID) {
-"use strict";
-
-// Core Component {{{
-
-/**
- * Generates a version 4 UUID as a hexadecimal string.
- * @returns {string} Hexadecimal UUID string.
- */
-UUID.generate = function() {
-  var rand = UUID._getRandomInt, hex = UUID._hexAligner;
-  return  hex(rand(32), 8)          // time_low
-        + "-"
-        + hex(rand(16), 4)          // time_mid
-        + "-"
-        + hex(0x4000 | rand(12), 4) // time_hi_and_version
-        + "-"
-        + hex(0x8000 | rand(14), 4) // clock_seq_hi_and_reserved clock_seq_low
-        + "-"
-        + hex(rand(48), 12);        // node
-};
-
-/**
- * Returns an unsigned x-bit random integer.
- * @private
- * @param {number} x Unsigned integer ranging from 0 to 53, inclusive.
- * @returns {number} Unsigned x-bit random integer (0 &lt;= f(x) &lt; 2^x).
- */
-UUID._getRandomInt = function(x) {
-  if (x &lt; 0 || x > 53) { return NaN; }
-  var n = 0 | Math.random() * 0x40000000; // 1 &lt;&lt; 30
-  return x > 30 ? n + (0 | Math.random() * (1 &lt;&lt; x - 30)) * 0x40000000 : n >>> 30 - x;
-};
-
-/**
- * Converts an integer to a zero-filled hexadecimal string.
- * @private
- * @param {number} num
- * @param {number} length
- * @returns {string}
- */
-UUID._hexAligner = function(num, length) {
-  var str = num.toString(16), i = length - str.length, z = "0";
-  for (; i > 0; i >>>= 1, z += z) { if (i &amp; 1) { str = z + str; } }
-  return str;
-};
-
-/**
- * Retains the value of 'UUID' global variable assigned before loading UUID.js.
- * @since 3.2
- * @type {any}
- */
-UUID.overwrittenUUID = overwrittenUUID;
-
-// }}}
-
-// Advanced Random Number Generator Component {{{
-
-(function() {
-
-  var mathPRNG = UUID._getRandomInt;
-
-  /**
-   * Enables Math.random()-based pseudorandom number generator instead of cryptographically safer options.
-   * @since v3.5.0
-   * @deprecated This method is provided only to work around performance drawbacks of the safer algorithms.
-   */
-  UUID.useMathRandom = function() {
-    UUID._getRandomInt = mathPRNG;
-  };
-
-  var crypto = null, cryptoPRNG = mathPRNG;
-  if (typeof window !== "undefined" &amp;&amp; (crypto = window.crypto || window.msCrypto)) {
-    if (crypto.getRandomValues &amp;&amp; typeof Uint32Array !== "undefined") {
-      // Web Cryptography API
-      cryptoPRNG = function(x) {
-        if (x &lt; 0 || x > 53) { return NaN; }
-        var ns = new Uint32Array(x > 32 ? 2 : 1);
-        ns = crypto.getRandomValues(ns) || ns;
-        return x > 32 ? ns[0] + (ns[1] >>> 64 - x) * 0x100000000 : ns[0] >>> 32 - x;
-      };
-    }
-  } else if (typeof require !== "undefined" &amp;&amp; (crypto = require("crypto"))) {
-    if (crypto.randomBytes) {
-      // nodejs
-      cryptoPRNG = function(x) {
-        if (x &lt; 0 || x > 53) { return NaN; }
-        var buf = crypto.randomBytes(x > 32 ? 8 : 4), n = buf.readUInt32BE(0);
-        return x > 32 ? n + (buf.readUInt32BE(4) >>> 64 - x) * 0x100000000 : n >>> 32 - x;
-      };
-    }
-  }
-  UUID._getRandomInt = cryptoPRNG;
-
-})();
-
-// }}}
-
-// UUID Object Component {{{
-
-/**
- * Names of UUID internal fields.
- * @type {string[]}
- * @constant
- * @since 3.0
- */
-UUID.FIELD_NAMES = ["timeLow", "timeMid", "timeHiAndVersion",
-                    "clockSeqHiAndReserved", "clockSeqLow", "node"];
-
-/**
- * Sizes of UUID internal fields.
- * @type {number[]}
- * @constant
- * @since 3.0
- */
-UUID.FIELD_SIZES = [32, 16, 16, 8, 8, 48];
-
-/**
- * Creates a version 4 {@link UUID} object.
- * @returns {UUID} Version 4 {@link UUID} object.
- * @since 3.0
- */
-UUID.genV4 = function() {
-  var rand = UUID._getRandomInt;
-  return new UUID()._init(rand(32), rand(16), // time_low time_mid
-                          0x4000 | rand(12),  // time_hi_and_version
-                          0x80   | rand(6),   // clock_seq_hi_and_reserved
-                          rand(8), rand(48)); // clock_seq_low node
-};
-
-/**
- * Converts a hexadecimal UUID string to a {@link UUID} object.
- * @param {string} strId Hexadecimal UUID string ("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx").
- * @returns {UUID} {@link UUID} object or null.
- * @since 3.0
- */
-UUID.parse = function(strId) {
-  var r, p = /^\s*(urn:uuid:|\{)?([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{12})(\})?\s*$/i;
-  if (r = p.exec(strId)) {
-    var l = r[1] || "", t = r[8] || "";
-    if (((l + t) === "") ||
-        (l === "{" &amp;&amp; t === "}") ||
-        (l.toLowerCase() === "urn:uuid:" &amp;&amp; t === "")) {
-      return new UUID()._init(parseInt(r[2], 16), parseInt(r[3], 16),
-                              parseInt(r[4], 16), parseInt(r[5], 16),
-                              parseInt(r[6], 16), parseInt(r[7], 16));
-    }
-  }
-  return null;
-};
-
-/**
- * Initializes a {@link UUID} object.
- * @private
- * @constructs UUID
- * @param {number} [timeLow=0] time_low field (octet 0-3, uint32).
- * @param {number} [timeMid=0] time_mid field (octet 4-5, uint16).
- * @param {number} [timeHiAndVersion=0] time_hi_and_version field (octet 6-7, uint16).
- * @param {number} [clockSeqHiAndReserved=0] clock_seq_hi_and_reserved field (octet 8, uint8).
- * @param {number} [clockSeqLow=0] clock_seq_low field (octet 9, uint8).
- * @param {number} [node=0] node field (octet 10-15, uint48).
- * @returns {UUID} this.
- */
-UUID.prototype._init = function() {
-  var names = UUID.FIELD_NAMES, sizes = UUID.FIELD_SIZES;
-  var bin = UUID._binAligner, hex = UUID._hexAligner;
-
-  /**
-   * UUID internal field values as an array of integers.
-   * @type {number[]}
-   */
-  this.intFields = new Array(6);
-
-  /**
-   * UUID internal field values as an array of binary strings.
-   * @type {string[]}
-   */
-  this.bitFields = new Array(6);
-
-  /**
-   * UUID internal field values as an array of hexadecimal strings.
-   * @type {string[]}
-   */
-  this.hexFields = new Array(6);
-
-  for (var i = 0; i &lt; 6; i++) {
-    var intValue = parseInt(arguments[i] || 0);
-    this.intFields[i] = this.intFields[names[i]] = intValue;
-    this.bitFields[i] = this.bitFields[names[i]] = bin(intValue, sizes[i]);
-    this.hexFields[i] = this.hexFields[names[i]] = hex(intValue, sizes[i] >>> 2);
-  }
-
-  /**
-   * UUID version number.
-   * @type {number}
-   */
-  this.version = (this.intFields.timeHiAndVersion >>> 12) &amp; 0xF;
-
-  /**
-   * 128-bit binary string representation.
-   * @type {string}
-   */
-  this.bitString = this.bitFields.join("");
-
-  /**
-   * Non-delimited hexadecimal string representation ("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx").
-   * @type {string}
-   * @since v3.3.0
-   */
-  this.hexNoDelim = this.hexFields.join("");
-
-  /**
-   * Hexadecimal string representation ("xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx").
-   * @type {string}
-   */
-  this.hexString = this.hexFields[0] + "-" + this.hexFields[1] + "-" + this.hexFields[2]
-                 + "-" + this.hexFields[3] + this.hexFields[4] + "-" + this.hexFields[5];
-
-  /**
-   * URN string representation ("urn:uuid:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx").
-   * @type {string}
-   */
-  this.urn = "urn:uuid:" + this.hexString;
-
-  return this;
-};
-
-/**
- * Converts an integer to a zero-filled binary string.
- * @private
- * @param {number} num
- * @param {number} length
- * @returns {string}
- */
-UUID._binAligner = function(num, length) {
-  var str = num.toString(2), i = length - str.length, z = "0";
-  for (; i > 0; i >>>= 1, z += z) { if (i &amp; 1) { str = z + str; } }
-  return str;
-};
-
-/**
- * Returns the hexadecimal string representation.
- * @returns {string} {@link UUID#hexString}.
- */
-UUID.prototype.toString = function() { return this.hexString; };
-
-/**
- * Tests if two {@link UUID} objects are equal.
- * @param {UUID} uuid
- * @returns {boolean} True if two {@link UUID} objects are equal.
- */
-UUID.prototype.equals = function(uuid) {
-  if (!(uuid instanceof UUID)) { return false; }
-  for (var i = 0; i &lt; 6; i++) {
-    if (this.intFields[i] !== uuid.intFields[i]) { return false; }
-  }
-  return true;
-};
-
-/**
- * Nil UUID object.
- * @type {UUID}
- * @constant
- * @since v3.4.0
- */
-UUID.NIL = new UUID()._init(0, 0, 0, 0, 0, 0);
-
-// }}}
-
-// UUID Version 1 Component {{{
-
-/**
- * Creates a version 1 {@link UUID} object.
- * @returns {UUID} Version 1 {@link UUID} object.
- * @since 3.0
- */
-UUID.genV1 = function() {
-  if (UUID._state == null) { UUID.resetState(); }
-  var now = new Date().getTime(), st = UUID._state;
-  if (now != st.timestamp) {
-    if (now &lt; st.timestamp) { st.sequence++; }
-    st.timestamp = now;
-    st.tick = UUID._getRandomInt(4);
-  } else if (Math.random() &lt; UUID._tsRatio &amp;&amp; st.tick &lt; 9984) {
-    // advance the timestamp fraction at a probability
-    // to compensate for the low timestamp resolution
-    st.tick += 1 + UUID._getRandomInt(4);
-  } else {
-    st.sequence++;
-  }
-
-  // format time fields
-  var tf = UUID._getTimeFieldValues(st.timestamp);
-  var tl = tf.low + st.tick;
-  var thav = (tf.hi &amp; 0xFFF) | 0x1000;  // set version '0001'
-
-  // format clock sequence
-  st.sequence &amp;= 0x3FFF;
-  var cshar = (st.sequence >>> 8) | 0x80; // set variant '10'
-  var csl = st.sequence &amp; 0xFF;
-
-  return new UUID()._init(tl, tf.mid, thav, cshar, csl, st.node);
-};
-
-/**
- * Re-initializes the internal state for version 1 UUID creation.
- * @since 3.0
- */
-UUID.resetState = function() {
-  UUID._state = new UUIDState();
-};
-
-function UUIDState() {
-  var rand = UUID._getRandomInt;
-  this.timestamp = 0;
-  this.sequence = rand(14);
-  this.node = (rand(8) | 1) * 0x10000000000 + rand(40); // set multicast bit '1'
-  this.tick = rand(4);  // timestamp fraction smaller than a millisecond
-}
-
-/**
- * Probability to advance the timestamp fraction: the ratio of tick movements to sequence increments.
- * @private
- * @type {number}
- */
-UUID._tsRatio = 1 / 4;
-
-/**
- * Persistent internal state for version 1 UUID creation.
- * @private
- * @type {UUIDState}
- */
-UUID._state = null;
-
-/**
- * @private
- * @param {Date|number} time ECMAScript Date Object or milliseconds from 1970-01-01.
- * @returns {any}
- */
-UUID._getTimeFieldValues = function(time) {
-  var ts = time - Date.UTC(1582, 9, 15);
-  var hm = ((ts / 0x100000000) * 10000) &amp; 0xFFFFFFF;
-  return  { low: ((ts &amp; 0xFFFFFFF) * 10000) % 0x100000000,
-            mid: hm &amp; 0xFFFF, hi: hm >>> 16, timestamp: ts };
-};
-
-// }}}
-
-// create local namespace
-function UUID() {}
-
-// for nodejs
-if (typeof module === "object" &amp;&amp; typeof module.exports === "object") {
-  module.exports = UUID;
-}
-
-return UUID;
-
-})(UUID);
-
-// vim: fdm=marker fmr&amp;
-</code></pre>
-        </article>
-    </section>
-
-
-
-
-</div>
-
-<nav>
-    <h2><a href="index.html">Home</a></h2><h3>Classes</h3><ul><li><a href="UUID.html">UUID</a></li></ul>
-</nav>
-
-<br class="clear">
-
-<footer>
-    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.5.5</a> on Mon Dec 18 2017 20:28:59 GMT-0500 (EST)
-</footer>
-
-<script> prettyPrint(); </script>
-<script src="scripts/linenumber.js"> </script>
-</body>
-</html>

--- app/webroot/js/vendor/UUID.js-4.0.3/example.js ---
@@ -1,16 +0,0 @@
-const UUID = require("uuidjs")
-
-// Generate UUID string
-console.log(UUID.generate())
-
-// Create UUID objects and get string representations
-console.log(UUID.genV4().toString())
-console.log(UUID.genV1().hexNoDelim)
-console.log(UUID.parse("84d9ca79-4d66-4373-91a0-a12d673e71be").urn)
-
-// Get UUID internal field values
-console.log(UUID.genV4().hexFields.node)
-console.log(UUID.genV1().intFields.timeLow)
-console.log(UUID.genV4().bitFields[2])
-
-UUID.genV1()

--- app/webroot/js/vendor/UUID.js-4.0.3/package.json ---
@@ -1,44 +0,0 @@
-{
-  "name": "uuidjs",
-  "version": "4.0.3",
-  "title": "UUID.js",
-  "description": "RFC-compliant UUID Generator for JavaScript",
-  "main": "src/uuid.js",
-  "types": "types/uuidjs/index.d.ts",
-  "directories": {
-    "doc": "docs",
-    "test": "test"
-  },
-  "tonicExampleFilename": "example.js",
-  "scripts": {
-    "test": "qunit test/nodejs.js",
-    "test-ts": "tsc --strict --noEmit types/uuidjs/uuidjs-tests.ts",
-    "jsdoc": "jsdoc -R README.md -d docs src/uuid.js"
-  },
-  "repository": {
-    "type": "git",
-    "url": "https://github.com/LiosK/UUID.js.git"
-  },
-  "keywords": [
-    "library",
-    "uuid",
-    "guid",
-    "rfc",
-    "4122",
-    "universally",
-    "globally",
-    "unique",
-    "identifier"
-  ],
-  "author": "LiosK <contact@mail.liosk.net>",
-  "license": "Apache-2.0",
-  "bugs": {
-    "url": "https://github.com/LiosK/UUID.js/issues"
-  },
-  "homepage": "https://github.com/LiosK/UUID.js",
-  "devDependencies": {
-    "jsdoc": "^3.5.5",
-    "qunit": "^2.4.1",
-    "typescript": "^2.6.2"
-  }
-}

--- app/webroot/js/vendor/UUID.js-4.0.3/test/browser-core.html ---
@@ -1,22 +0,0 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <meta charset="utf-8" />
-    <meta name="viewport" content="width=device-width" />
-    <title>UUID.core.js Test</title>
-    <link rel="stylesheet" type="text/css" href="https://code.jquery.com/qunit/qunit-1.23.1.css" />
-    <script type="text/javascript">
-      var UUID = new Date();
-      var precedingUUID = UUID;
-    </script>
-    <script type="text/javascript" src="../dist/uuid.core.js"></script>
-  </head>
-  <body>
-    <div id="qunit"></div>
-    <div id="qunit-fixture"></div>
-    <script type="text/javascript" src="https://code.jquery.com/qunit/qunit-1.23.1.js"></script>
-    <script type="text/javascript" src="util/uuid-test-common.js"></script>
-    <script type="text/javascript" src="uuid.generate.js"></script>
-    <script type="text/javascript" src="util/uuid.overwrittenUUID.js"></script>
-  </body>
-</html>

--- app/webroot/js/vendor/UUID.js-4.0.3/test/browser.html ---
@@ -1,27 +0,0 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <meta charset="utf-8" />
-    <meta name="viewport" content="width=device-width" />
-    <title>UUID.js Test</title>
-    <link rel="stylesheet" type="text/css" href="https://code.jquery.com/qunit/qunit-1.23.1.css" />
-    <script type="text/javascript">
-      var UUID = new Date();
-      var precedingUUID = UUID;
-    </script>
-    <script type="text/javascript" src="../src/uuid.js"></script>
-  </head>
-  <body>
-    <div id="qunit"></div>
-    <div id="qunit-fixture"></div>
-    <script type="text/javascript" src="https://code.jquery.com/qunit/qunit-1.23.1.js"></script>
-    <script type="text/javascript" src="util/uuid-test-common.js"></script>
-    <script type="text/javascript" src="uuid.generate.js"></script>
-    <script type="text/javascript" src="util/uuid.overwrittenUUID.js"></script>
-    <script type="text/javascript" src="uuid.genV4.js"></script>
-    <script type="text/javascript" src="uuid.genV1.js"></script>
-    <script type="text/javascript" src="uuid.parse.js"></script>
-    <script type="text/javascript" src="uuid.nil.js"></script>
-    <script type="text/javascript" src="uuid.useMathRandom.js"></script>
-  </body>
-</html>

--- app/webroot/js/vendor/UUID.js-4.0.3/test/nodejs.js ---
@@ -1,9 +0,0 @@
-global.UUID = require("uuidjs");
-global.UUIDTestCommon = require("./util/uuid-test-common.js");
-
-require("./uuid.generate.js");
-require("./uuid.genV4.js");
-require("./uuid.genV1.js");
-require("./uuid.parse.js");
-require("./uuid.nil.js");
-require("./uuid.useMathRandom.js");

--- app/webroot/js/vendor/UUID.js-4.0.3/test/util/uuid-test-common.js ---
@@ -1,205 +0,0 @@
-var UUIDTestCommon = {};
-
-(function(ns) {
-  "use strict";
-
-  function generateUUIDs(generator, n) {
-    var uuids = [];
-    for (var i = 0, len = n >>> 0; i < len; i++) {
-      uuids[i] = generator();
-    }
-    return uuids;
-  }
-
-  ns.countEachBitsOne = function(uuids) {
-    var counts = new Array(128);
-    for (var i = 0; i < 128; i++) { counts[i] = 0; }
-
-    for (var i = 0, len = uuids.length; i < len; i++) {
-      // loop to count each bit's '1'
-      for (var sp = 0, np = 0, slen = uuids[i].length; sp < slen; sp++) {
-        if (uuids[i].charAt(sp) === "-") { continue; }
-        var nibble = parseInt(uuids[i].charAt(sp), 16);
-        if (nibble & 1) { counts[np * 4 + 3]++; }
-        if (nibble & 2) { counts[np * 4 + 2]++; }
-        if (nibble & 4) { counts[np * 4 + 1]++; }
-        if (nibble & 8) { counts[np * 4 + 0]++; }
-        np++;
-      }
-    }
-    return counts;
-  };
-
-  ns.testV4AsString = function(generator) {
-
-    QUnit.test("regexp format tests", function(assert) {
-      assert.expect(1024);
-      var reformat = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;
-      for (var i = 0; i < 1024; i++) {
-        var uuid = generator();
-        assert.ok(reformat.test(uuid), reformat.source + " =~ " + uuid);
-      }
-    });
-
-    QUnit.test("collision tests", function(assert) {
-      assert.expect(1);
-      var n = 16384, nerrors = 0, table = {};
-      for (var i = 0; i < n; i++) {
-        var uuid = generator();
-        if (table.hasOwnProperty(uuid)) {
-          nerrors++;
-        } else {
-          table[uuid] = true;
-        }
-      }
-      assert.equal(nerrors, 0, "no collision among " + n + " UUIDs");
-    });
-
-    var n = 4096, uuids = generateUUIDs(generator, n), counts = ns.countEachBitsOne(uuids);
-
-    QUnit.test("reserved bit tests", function(assert) {
-      assert.expect(6);
-      assert.equal(counts[64], n, "bit 64: variant bit '1'");
-      assert.equal(counts[65], 0, "bit 65: variant bit '0'");
-
-      assert.equal(counts[48], 0, "bit 48: version bit '0'");
-      assert.equal(counts[49], n, "bit 49: version bit '1'");
-      assert.equal(counts[50], 0, "bit 50: version bit '0'");
-      assert.equal(counts[51], 0, "bit 51: version bit '0'");
-    });
-
-    QUnit.test("random bit neutrality tests (often fail by design)", function(assert) {
-      assert.expect(128);
-      // binom dist middle 99.99% range
-      var margin = 3.890592 * Math.sqrt(0.5 * 0.5 / n);
-      var ubound = 0.5 + margin, lbound = 0.5 - margin;
-
-      for (var i = 0; i < 128; i++) {
-        var c = counts[i] / n;
-        switch (i) {
-            case 64:
-            case 49:
-                assert.equal(c, 1, "bit " + i + ": reserved bit '1'");
-                break;
-            case 65:
-            case 48:
-            case 50:
-            case 51:
-                assert.equal(c, 0, "bit " + i + ": reserved bit '0'");
-                break;
-            default:
-                assert.ok(lbound < c && c < ubound, "bit " + i + ": random bit " + c + " (cutoff range: " + lbound + "-" + ubound + ")");
-                break;
-        }
-      }
-    });
-  };
-
-  ns.testV1AsString = function(generator) {
-
-    QUnit.test("regexp format tests", function(assert) {
-      assert.expect(1024);
-      var reformat = /^[0-9a-f]{8}-[0-9a-f]{4}-1[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f][13579bdf][0-9a-f]{10}$/;
-      for (var i = 0; i < 1024; i++) {
-        var uuid = generator();
-        assert.ok(reformat.test(uuid), reformat.source + " =~ " + uuid);
-      }
-    });
-
-    QUnit.test("collision tests", function(assert) {
-      assert.expect(1);
-      var n = 16384, nerrors = 0, table = {};
-      for (var i = 0; i < n; i++) {
-        var uuid = generator();
-        if (table.hasOwnProperty(uuid)) {
-          nerrors++;
-        } else {
-          table[uuid] = true;
-        }
-      }
-      assert.equal(nerrors, 0, "no collision among " + n + " UUIDs");
-    });
-
-    QUnit.test("reserved bit tests", function(assert) {
-      assert.expect(7);
-      var n = 4096, uuids = generateUUIDs(generator, n), counts = ns.countEachBitsOne(uuids);
-
-      assert.equal(counts[64], n, "bit 64: variant bit '1'");
-      assert.equal(counts[65], 0, "bit 65: variant bit '0'");
-
-      assert.equal(counts[48], 0, "bit 48: version bit '0'");
-      assert.equal(counts[49], 0, "bit 49: version bit '0'");
-      assert.equal(counts[50], 0, "bit 50: version bit '0'");
-      assert.equal(counts[51], n, "bit 51: version bit '1'");
-
-      assert.equal(counts[87], n, "bit 87: multicast bit '1'");
-    });
-
-    QUnit.test("timestamp tests", function(assert) {
-      assert.expect(1024);
-      var now = new Date() - Date.UTC(1582, 9, 15, 0, 0, 0, 0);
-      for (var i = 0; i < 1024; i++) {
-        var uuid = generator();
-        var hex = uuid.substr(15, 3) + uuid.substr(9, 4) + uuid.substr(0, 8);
-        var diff = Math.abs(now - parseInt(hex, 16) / 10000);
-        assert.ok(diff < 60 * 1000, "current timestamp - UUID timestamp < 1 minute: " + diff);
-      }
-    });
-
-  };
-
-  ns.testObjectProperties = function(assert, uuid) {
-    var sizes = [32, 16, 16, 8, 8, 48];
-    var names = ["timeLow", "timeMid", "timeHiAndVersion", "clockSeqHiAndReserved", "clockSeqLow", "node"];
-    var ubounds = new Array(6);
-    for (var i = 0; i < 6; i++) { ubounds[i] = Math.pow(2, sizes[i]); }
-
-    var patHex = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|0{8}-0{4}-0{4}-0{4}-0{12})$/;
-    var patBit = /^(?:[01]{48}0(?:001|010|011|100|101)[01]{12}10[01]{62}|0{128})$/;
-    var patHexND = /^(?:[0-9a-f]{12}[1-5][0-9a-f]{3}[89ab][0-9a-f]{15}|0{32})$/;
-
-    assert.ok(uuid instanceof UUID, "object instanceof UUID");
-
-    assert.ok((uuid.version === 1) || (uuid.version === 2) || (uuid.version === 3) || (uuid.version === 4) || (uuid.version === 5), "UUID#version in (1-5)");
-    assert.ok(patHex.test(uuid.hexString), "UUID#hexString matches" + patHex);
-    assert.ok(patBit.test(uuid.bitString), "UUID#bitString matches " + patBit);
-    assert.ok(patHexND.test(uuid.hexNoDelim), "UUID#hexNoDelim matches " + patHexND);
-
-    assert.strictEqual(uuid.hexString, String(uuid), "UUID#hexString === UUID#toString()");
-    assert.strictEqual("urn:uuid:" + uuid.hexString, uuid.urn, "'urn:uuid:' + UUID#hexString === UUID#urn");
-
-    assert.strictEqual(uuid.bitFields.join(""), uuid.bitString, "joined bitFields equals bitString");
-    assert.strictEqual(uuid.hexFields.join(""), uuid.hexNoDelim, "joined hexFields equals hexNoDelim");
-    assert.strictEqual(uuid.hexFields.slice(0, 4).join("-") + uuid.hexFields.slice(4).join("-"), uuid.hexString, "joined hexFields equals hexString");
-
-    assert.equal(uuid.intFields.length, 6, "length of intFields list");
-    assert.equal(uuid.bitFields.length, 6, "length of bitFields list");
-    assert.equal(uuid.hexFields.length, 6, "length of hexFields list");
-    for (var j = 0; j < 6; j++) {
-      var nm = names[j];
-      assert.strictEqual(uuid.intFields[j], uuid.intFields[nm], "intFields[" + j + "] === intFields." + nm);
-      assert.strictEqual(uuid.bitFields[j], uuid.bitFields[nm], "bitFields[" + j + "] === bitFields." + nm);
-      assert.strictEqual(uuid.hexFields[j], uuid.hexFields[nm], "hexFields[" + j + "] === hexFields." + nm);
-
-      assert.ok(0 <= uuid.intFields[j] && uuid.intFields[j] < ubounds[j], "0 <= intFields." + nm + " < 2^" + sizes[j]);
-      assert.equal(uuid.bitFields[j].length, sizes[j], "bitFields." + nm + ".length");
-      assert.equal(uuid.hexFields[j].length, sizes[j] / 4, "hexFields." + nm + ".length");
-
-      assert.strictEqual(parseInt(uuid.bitFields[j], 2), uuid.intFields[j], "parseInt(bitFields." + nm + ", 2) === intFields." + nm);
-      assert.strictEqual(parseInt(uuid.hexFields[j], 16), uuid.intFields[j], "parseInt(hexFields." + nm + ", 16) === intFields." + nm);
-    }
-
-    assert.ok(uuid.equals(uuid), "UUID#equals(self)");
-    assert.notOk(uuid.equals(UUID.genV4()), "!UUID#equals(UUID.genV4())");
-    assert.ok(uuid.equals(UUID.parse(uuid.hexString)), "UUID#equals(UUID.parse(UUID#hexString))");
-    assert.ok(uuid.equals(UUID.parse(uuid.urn)), "UUID#equals(UUID.parse(UUID#urn))");
-    assert.ok(uuid.hexString === UUID.parse(uuid.hexString).hexString, "UUID#hexString === UUID.parse(UUID#hexString)#hexString");
-    assert.ok(uuid.hexString === UUID.parse(uuid.urn).hexString, "UUID#hexString === UUID.parse(UUID#urn)#hexString");
-  };
-
-})(UUIDTestCommon);
-
-// for nodejs
-if (typeof module === "object" && typeof module.exports === "object") {
-  module.exports = UUIDTestCommon;
-}

--- app/webroot/js/vendor/UUID.js-4.0.3/test/util/uuid.overwrittenUUID.js ---
@@ -1,9 +0,0 @@
-QUnit.module("UUID.overwrittenUUID", function() {
-  "use strict";
-
-  QUnit.test("UUID.overwrittenUUID preserves preceding UUID variable", function(assert) {
-    assert.expect(1);
-    assert.strictEqual(UUID.overwrittenUUID, precedingUUID, "UUID.overwrittenUUID === precedingUUID: " + precedingUUID);
-  });
-
-});

--- app/webroot/js/vendor/UUID.js-4.0.3/test/uuid.genV1.js ---
@@ -1,99 +0,0 @@
-QUnit.module("UUID.genV1() as object", function() {
-  "use strict";
-
-  QUnit.test("basic object tests", function(assert) {
-    var n = 16;
-
-    for (var i = 0; i < n; i++) {
-      var uuid = UUID.genV1();
-      assert.equal(uuid.version, 1, "version number field");
-
-      UUIDTestCommon.testObjectProperties(assert, uuid);
-    }
-  });
-
-});
-
-
-QUnit.module("UUID.genV1() as string", function() {
-  "use strict";
-
-  var generator = function() {
-    return UUID.genV1().hexString;
-  };
-
-  UUIDTestCommon.testV1AsString(generator);
-
-  QUnit.test("clock sequence tests", function(assert) {
-    assert.expect(1024);
-    var nincrements = 0;
-    var prev = parseInt(generator().substr(19, 4), 16) & 0x3FFF;
-    for (var i = 1; i < 1024; i++) {
-      var curr = parseInt(generator().substr(19, 4), 16) & 0x3FFF;
-      var result = curr === prev;
-      if (curr === ((prev + 1) & 0x3FFF)) {
-        result = true;
-        nincrements++;
-      }
-      assert.ok(result, "proper clock sequence step: " + prev.toString(16) + " -> " + curr.toString(16));
-      prev = curr;
-    }
-    assert.notEqual(nincrements, 0, "clock sequences changed (possible to fail)");
-  });
-
-  QUnit.test("node identifier consistency tests", function(assert) {
-    assert.expect(48);
-    var n = 4096, uuids = [];
-    for (var i = 0; i < n; i++) { uuids[i] = generator(); }
-    var counts = UUIDTestCommon.countEachBitsOne(uuids);
-
-    for (var i = 80; i < 128; i++) {
-      var c = counts[i];
-      if (i === 87) {
-        assert.equal(c, n, "bit " + i + ": reserved bit '1'");
-      } else {
-        assert.ok(c === 0 || c === n, "bit " + i + ": constant bit " + c + " (allowable value: " + 0 + " or " + n + ")");
-      }
-    }
-  });
-
-});
-
-
-QUnit.module("UUID.genV1() and UUID.resetState()", function() {
-  "use strict";
-
-  var generator = function() {
-    UUID.resetState();
-    return UUID.genV1().hexString;
-  };
-
-  UUIDTestCommon.testV1AsString(generator);
-
-  QUnit.test("random bit neutrality tests (often fail by design)", function(assert) {
-    assert.expect(64);
-    var n = 4096, uuids = [];
-    for (var i = 0; i < n; i++) { uuids[i] = generator(); }
-    var counts = UUIDTestCommon.countEachBitsOne(uuids);
-    // binom dist middle 99.99% range
-    var margin = 3.890592 * Math.sqrt(0.5 * 0.5 / n);
-    var ubound = 0.5 + margin, lbound = 0.5 - margin;
-
-    for (var i = 64; i < 128; i++) {
-      var c = counts[i] / n;
-      switch (i) {
-          case 64:
-          case 87:
-              assert.equal(c, 1, "bit " + i + ": reserved bit '1'");
-              break;
-          case 65:
-              assert.equal(c, 0, "bit " + i + ": reserved bit '0'");
-              break;
-          default:
-              assert.ok(lbound < c && c < ubound, "bit " + i + ": random bit " + c + " (cutoff range: " + lbound + "-" + ubound + ")");
-              break;
-      }
-    }
-  });
-
-});

--- app/webroot/js/vendor/UUID.js-4.0.3/test/uuid.genV4.js ---
@@ -1,24 +0,0 @@
-QUnit.module("UUID.genV4() as object", function() {
-  "use strict";
-
-  QUnit.test("basic object tests", function(assert) {
-    var n = 16;
-
-    for (var i = 0; i < n; i++) {
-      var uuid = UUID.genV4();
-      assert.equal(uuid.version, 4, "version number field");
-
-      UUIDTestCommon.testObjectProperties(assert, uuid);
-    }
-  });
-
-});
-
-QUnit.module("UUID.genV4() as string", function() {
-  "use strict";
-
-  UUIDTestCommon.testV4AsString(function() {
-    return UUID.genV4().hexString;
-  });
-
-});

--- app/webroot/js/vendor/UUID.js-4.0.3/test/uuid.generate.js ---
@@ -1,8 +0,0 @@
-QUnit.module("UUID.generate()", function() {
-  "use strict";
-
-  UUIDTestCommon.testV4AsString(function() {
-    return UUID.generate();
-  });
-
-});

--- app/webroot/js/vendor/UUID.js-4.0.3/test/uuid.nil.js ---
@@ -1,10 +0,0 @@
-QUnit.module("UUID.NIL", function() {
-  "use strict";
-
-  QUnit.test("UUID.NIL holds the correct nil UUID object.", function(assert) {
-    assert.expect(2);
-    assert.strictEqual(UUID.NIL.hexString, "00000000-0000-0000-0000-000000000000", 'UUID.NIL.hexString === "00000000-0000-0000-0000-000000000000"');
-    assert.ok(UUID.NIL.equals(UUID.parse("00000000-0000-0000-0000-000000000000")), 'UUID.NIL.equals(UUID.parse("00000000-0000-0000-0000-000000000000"))');
-  });
-
-});

--- app/webroot/js/vendor/UUID.js-4.0.3/test/uuid.parse.js ---
@@ -1,46 +0,0 @@
-QUnit.module("UUID.parse()", function() {
-  "use strict";
-
-  QUnit.test("pass tests", function(assert) {
-    assert.expect(15);
-    var passes = [
-      { value: "7bfca344-bc10-11e5-af40-080027483c41" },
-      { value: "8bfaf007-0545-4795-a10a-487b0f00d93f" },
-      { value: "00000000-0000-0000-0000-000000000000" }
-    ];
-
-    for (var i = 0, len = passes.length; i < len; i++) {
-      var value = passes[i].canonical = passes[i].value;
-      passes.push(
-        { canonical: value, value: value.toUpperCase() },
-        { canonical: value, value: "urn:uuid:" + value },
-        { canonical: value, value: "{" + value + "}" },
-        { canonical: value, value: "\t  " + value + "\n" }
-      );
-    }
-
-    for (var i = 0, len = passes.length; i < len; i++) {
-      var uuid = UUID.parse(passes[i].value);
-      assert.equal(uuid.hexString, passes[i].canonical, "UUID.parse(\"" + passes[i].value + "\") -> " + uuid.hexString);
-    }
-  });
-
-  QUnit.test("fail tests", function(assert) {
-    assert.expect(8);
-    var fails = [
-      "06536892-0g22-499d-8aaf-b0dd9cfa69a4",
-      "864eh78f-0571-46jf-a1w4-538v0fdoacff",
-      "45f63383 ef0e 0d9d b1ba 834a9726829e",
-      "f523ccad6600490e9befa66f64f50f82",
-      "leading c86e2e5f-1962-42c9-85d6-cb127040b107",
-      "97f43427-788b-47bb-b2e8-cc7d79432a75 trailing",
-      "910e7851-4521-45c4-866b-fc5464",
-      "44b1796d-9d0b-4aac-81cd-ef8ed2b90e18b6fe54"
-    ];
-
-    for (var i = 0, len = fails.length; i < len; i++) {
-      assert.equal(UUID.parse(fails[i]), null, "UUID.parse failed: " + fails[i]);
-    }
-  });
-
-});

--- app/webroot/js/vendor/UUID.js-4.0.3/test/uuid.useMathRandom.js ---
@@ -1,10 +0,0 @@
-QUnit.module("UUID.useMathRandom()", function() {
-  "use strict";
-
-  UUID.useMathRandom();
-
-  UUIDTestCommon.testV4AsString(function() {
-    return UUID.generate();
-  });
-
-});

--- app/webroot/js/vendor/UUID.js-4.0.3/types/uuidjs/index.d.ts ---
@@ -1,37 +0,0 @@
-export function generate(): string;
-
-export function genV4(): UUID;
-export function genV1(): UUID;
-export function parse(strId: string): UUID;
-
-export const FIELD_NAMES: string[];
-export const FIELD_SIZES: number[];
-export const NIL: UUID;
-
-interface UUID {
-  intFields: UUIDFields<number>;
-  bitFields: UUIDFields<string>;
-  hexFields: UUIDFields<string>;
-  version: number;
-  bitString: string;
-  hexNoDelim: string;
-  hexString: string;
-  urn: string;
-  toString(): string;
-  equals(uuid: UUID): boolean;
-}
-
-export function resetState(): void;
-export function useMathRandom(): void;
-
-// Hide unnecessary methods
-export let overwrittenUUID: any;
-
-interface UUIDFields<T> extends Array<T> {
-  timeLow: T;
-  timeMid: T;
-  timeHiAndVersion: T;
-  clockSeqHiAndReserved: T;
-  clockSeqLow: T;
-  node: T;
-}

--- app/webroot/js/vendor/UUID.js-4.0.3/types/uuidjs/uuidjs-tests.ts ---
@@ -1,54 +0,0 @@
-import * as UUID from 'uuidjs';
-
-const putNum = (x: number) => { console.log(x + ': number') };
-const putStr = (x: string) => { console.log('"' + x + '": string') };
-const putBool = (x: boolean) => { console.log(x + ': boolean') };
-
-putStr(UUID.generate());
-let objV4: UUID.UUID = UUID.genV4();
-let objV1: UUID.UUID = UUID.genV1();
-let parsed: UUID.UUID = UUID.parse(objV4.toString());
-
-let _FIELD_NAMES: Array<string> = UUID.FIELD_NAMES;
-let _FIELD_SIZES: Array<number> = UUID.FIELD_SIZES;
-let _NIL: UUID.UUID = UUID.NIL;
-
-let _intFields: UUID.UUIDFields<number> = objV4.intFields;
-let _bitFields: UUID.UUIDFields<string> = objV4.bitFields;
-let _hexFields: UUID.UUIDFields<string> = objV4.hexFields;
-
-for (let i: number = 0; i < 6; i++) {
-  putNum(_intFields[i]);
-  putStr(_bitFields[i]);
-  putStr(_hexFields[i]);
-}
-
-putNum(_intFields.timeLow);
-putNum(_intFields.timeMid);
-putNum(_intFields.timeHiAndVersion);
-putNum(_intFields.clockSeqHiAndReserved);
-putNum(_intFields.clockSeqLow);
-putNum(_intFields.node);
-putStr(_bitFields.timeLow);
-putStr(_bitFields.timeMid);
-putStr(_bitFields.timeHiAndVersion);
-putStr(_bitFields.clockSeqHiAndReserved);
-putStr(_bitFields.clockSeqLow);
-putStr(_bitFields.node);
-putStr(_hexFields.timeLow);
-putStr(_hexFields.timeMid);
-putStr(_hexFields.timeHiAndVersion);
-putStr(_hexFields.clockSeqHiAndReserved);
-putStr(_hexFields.clockSeqLow);
-putStr(_hexFields.node);
-
-putNum(objV4.version);
-putStr(objV4.bitString);
-putStr(objV4.hexNoDelim);
-putStr(objV4.hexString);
-putStr(objV4.urn);
-putStr(objV4.toString());
-putBool(objV4.equals(objV1));
-
-UUID.resetState();
-UUID.useMathRandom();

--- app/webroot/js/vendor/bootstrap-daterangepicker/examples.html ---
@@ -1,98 +0,0 @@
-<!DOCTYPE html>
-<html dir="ltr" lang="en-US">
-   <head>
-      <meta charset="UTF-8" />
-      <title>A date range picker for Twitter Bootstrap</title>
-      <link rel="stylesheet" type="text/css" media="all" href="http://twitter.github.com/bootstrap/assets/css/bootstrap.css" />
-      <link rel="stylesheet" type="text/css" media="all" href="daterangepicker.css" />
-      <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"></script>
-      <script type="text/javascript" src="date.js"></script>
-      <script type="text/javascript" src="daterangepicker.js"></script>
-   </head>
-   <body>
-
-      <div class="container">
-         <div class="span12">
-
-            <h4>Simple Example</h4>
-            <div class="well">
-
-               <form class="form-horizontal">
-                 <fieldset>
-                  <div class="form-group">
-                    <label class="control-label" for="reservation">Reservation dates:</label>
-                    <div class="controls">
-                     <div class="input-group">
-                       <span class="input-group-addon"><i class="icon-calendar"></i></span><input type="text" name="reservation" id="reservation" />
-                     </div>
-                    </div>
-                  </div>
-                 </fieldset>
-               </form>
-
-               <script type="text/javascript">
-               $(document).ready(function() {
-                  $('#reservation').daterangepicker();
-               });
-               </script>
-
-            </div>
-
-            <h4>Options Usage Example</h4>
-
-            <div class="well">
-
-               <div id="reportrange" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc">
-                  <i class="icon-calendar icon-large"></i>
-                  <span></span> <b class="caret" style="margin-top: 8px"></b>
-               </div>
-
-               <script type="text/javascript">
-               $(document).ready(function() {
-                  $('#reportrange').daterangepicker(
-                     {
-                        ranges: {
-                           'Today': ['today', 'today'],
-                           'Yesterday': ['yesterday', 'yesterday'],
-                           'Last 7 Days': [Date.today().add({ days: -6 }), 'today'],
-                           'Last 30 Days': [Date.today().add({ days: -29 }), 'today'],
-                           'This Month': [Date.today().moveToFirstDayOfMonth(), Date.today().moveToLastDayOfMonth()],
-                           'Last Month': [Date.today().moveToFirstDayOfMonth().add({ months: -1 }), Date.today().moveToFirstDayOfMonth().add({ days: -1 })]
-                        },
-                        opens: 'left',
-                        format: 'MM/dd/yyyy',
-                        separator: ' to ',
-                        startDate: Date.today().add({ days: -29 }),
-                        endDate: Date.today(),
-                        minDate: '01/01/2012',
-                        maxDate: '12/31/2013',
-                        locale: {
-                            applyLabel: 'Submit',
-                            fromLabel: 'From',
-                            toLabel: 'To',
-                            customRangeLabel: 'Custom Range',
-                            daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr','Sa'],
-                            monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
-                            firstDay: 1
-                        },
-                        showWeekNumbers: true,
-                        buttonClasses: ['btn-danger']
-                     }, 
-                     function(start, end) {
-                        $('#reportrange span').html(start.toString('MMMM d, yyyy') + ' - ' + end.toString('MMMM d, yyyy'));
-                     }
-                  );
-
-                  //Set the initial state of the picker label
-                  $('#reportrange span').html(Date.today().add({ days: -29 }).toString('MMMM d, yyyy') + ' - ' + Date.today().toString('MMMM d, yyyy'));
-
-               });
-               </script>
-
-            </div>
-
-         </div>
-      </div>
-
-   </body>
-</html>

--- app/webroot/js/vendor/gridstack/demo/float.html ---
@@ -1,87 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <!--[if lt IE 9]>
-    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-
-    <meta charset="utf-8">
-    <meta http-equiv="X-UA-Compatible" content="IE=edge">
-    <meta name="viewport" content="width=device-width, initial-scale=1">
-    <title>Float grid demo</title>
-
-    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
-    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/css/font-awesome.min.css"/>
-    <link rel="stylesheet" href="../dist/gridstack.css"/>
-
-    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.0/jquery-ui.js"></script>
-    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min.js"></script>
-    <script src="../dist/gridstack.js"></script>
-
-    <style type="text/css">
-        .grid-stack {
-            background: lightgoldenrodyellow;
-        }
-
-        .grid-stack-item-content {
-            color: #2c3e50;
-            text-align: center;
-            background-color: #18bc9c;
-        }
-    </style>
-</head>
-<body>
-    <div class="container-fluid">
-        <h1>Float grid demo</h1>
-
-        <div>
-            <a class="btn btn-default" id="add-new-widget" href="#">Add Widget</a>
-        </div>
-
-        <br/>
-
-        <div class="grid-stack">
-        </div>
-    </div>
-
-
-    <script type="text/javascript">
-        $(function () {
-            var options = {
-                float: true
-            };
-            $('.grid-stack').gridstack(options);
-
-            new function () {
-                this.items = [
-                    {x: 0, y: 0, width: 2, height: 2},
-                    {x: 3, y: 1, width: 1, height: 2},
-                    {x: 4, y: 1, width: 1, height: 1},
-                    {x: 2, y: 3, width: 3, height: 1},
-//                    {x: 1, y: 4, width: 1, height: 1},
-//                    {x: 1, y: 3, width: 1, height: 1},
-//                    {x: 2, y: 4, width: 1, height: 1},
-                    {x: 2, y: 5, width: 1, height: 1}
-                ];
-
-                this.grid = $('.grid-stack').data('gridstack');
-
-                this.add_new_widget = function () {
-                    var node = this.items.pop() || {
-                                x: 12 * Math.random(),
-                                y: 5 * Math.random(),
-                                width: 1 + 3 * Math.random(),
-                                height: 1 + 3 * Math.random()
-                            };
-                    this.grid.add_widget($('<div><div class="grid-stack-item-content" /><div/>'),
-                        node.x, node.y, node.width, node.height);
-                }.bind(this);
-
-                $('#add-new-widget').click(this.add_new_widget);
-            };
-        });
-    </script>
-</body>
-</html>

--- app/webroot/js/vendor/gridstack/demo/knockout.html ---
@@ -1,120 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <!--[if lt IE 9]>
-    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-
-    <meta charset="utf-8">
-    <meta http-equiv="X-UA-Compatible" content="IE=edge">
-    <meta name="viewport" content="width=device-width, initial-scale=1">
-    <title>Knockout.js demo</title>
-
-    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
-    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/css/font-awesome.min.css"/>
-    <link rel="stylesheet" href="../dist/gridstack.css"/>
-
-    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.0/jquery-ui.js"></script>
-    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/knockout/3.2.0/knockout-min.js"></script>
-    <script src="../dist/gridstack.js"></script>
-
-    <style type="text/css">
-        .grid-stack {
-            background: lightgoldenrodyellow;
-        }
-
-        .grid-stack-item-content {
-            color: #2c3e50;
-            text-align: center;
-            background-color: #18bc9c;
-        }
-    </style>
-</head>
-<body>
-    <div class="container-fluid">
-        <h1>knockout.js Demo</h1>
-
-        <div>
-            <button data-bind="click: add_new_widget">Add new widget</button>
-        </div>
-
-        <br>
-
-        <div data-bind="component: {name: 'dashboard-grid', params: $data}"></div>
-    </div>
-
-
-    <script type="text/javascript">
-        ko.components.register('dashboard-grid', {
-            viewModel: {
-                createViewModel: function (controller, componentInfo) {
-                    var ViewModel = function (controller, componentInfo) {
-                        var grid = null;
-
-                        this.widgets = controller.widgets;
-
-                        this.afterAddWidget = function (items) {
-                            if (grid == null) {
-                                grid = $(componentInfo.element).find('.grid-stack').gridstack({
-                                    auto: false
-                                }).data('gridstack');
-                            }
-
-                            var item = _.find(items, function (i) { return i.nodeType == 1 });
-                            grid.add_widget(item);
-                            ko.utils.domNodeDisposal.addDisposeCallback(item, function () {
-                                grid.remove_widget(item);
-                            });
-                        };
-                    };
-
-                    return new ViewModel(controller, componentInfo);
-                }
-            },
-            template:
-                [
-                    '<div class="grid-stack" data-bind="foreach: {data: widgets, afterRender: afterAddWidget}">',
-                    '   <div class="grid-stack-item" data-bind="attr: {\'data-gs-x\': $data.x, \'data-gs-y\': $data.y, \'data-gs-width\': $data.width, \'data-gs-height\': $data.height, \'data-gs-auto-position\': $data.auto_position}">',
-                    '       <div class="grid-stack-item-content"><button data-bind="click: $root.delete_widget">Delete me</button></div>',
-                    '   </div>',
-                    '</div> '
-                ].join('')
-        });
-
-        $(function () {
-            var Controller = function (widgets) {
-                var self = this;
-
-                this.widgets = ko.observableArray(widgets);
-
-                this.add_new_widget = function () {
-                    this.widgets.push({
-                        x: 0,
-                        y: 0,
-                        width: Math.floor(1 + 3 * Math.random()),
-                        height: Math.floor(1 + 3 * Math.random()),
-                        auto_position: true
-                    });
-                };
-
-                this.delete_widget = function (item) {
-                    self.widgets.remove(item);
-                };
-            };
-
-            var widgets = [
-                {x: 0, y: 0, width: 2, height: 2},
-                {x: 2, y: 0, width: 4, height: 2},
-                {x: 6, y: 0, width: 2, height: 4},
-                {x: 1, y: 2, width: 4, height: 2}
-            ];
-
-            var controller = new Controller(widgets);
-            ko.applyBindings(controller);
-        });
-    </script>
-</body>
-</html>

--- app/webroot/js/vendor/gridstack/demo/knockout2.html ---
@@ -1,120 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <!--[if lt IE 9]>
-    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-
-    <meta charset="utf-8">
-    <meta http-equiv="X-UA-Compatible" content="IE=edge">
-    <meta name="viewport" content="width=device-width, initial-scale=1">
-    <title>Knockout.js demo</title>
-
-    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
-    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/css/font-awesome.min.css"/>
-    <link rel="stylesheet" href="../dist/gridstack.css"/>
-
-    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.0/jquery-ui.js"></script>
-    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/knockout/3.2.0/knockout-min.js"></script>
-    <script src="../dist/gridstack.js"></script>
-
-    <style type="text/css">
-        .grid-stack {
-            background: lightgoldenrodyellow;
-        }
-
-        .grid-stack-item-content {
-            color: #2c3e50;
-            text-align: center;
-            background-color: #18bc9c;
-        }
-    </style>
-</head>
-<body>
-    <div class="container-fluid">
-        <h1>knockout.js Demo</h1>
-
-        <div>
-            <button data-bind="click: add_new_widget">Add new widget</button>
-        </div>
-
-        <br>
-
-        <div data-bind="component: {name: 'dashboard-grid', params: $data}"></div>
-    </div>
-
-
-    <script type="text/javascript">
-        ko.components.register('dashboard-grid', {
-            viewModel: {
-                createViewModel: function (controller, componentInfo) {
-                    var ViewModel = function (controller, componentInfo) {
-                        var grid = null;
-
-                        this.widgets = controller.widgets;
-
-                        this.afterAddWidget = function (items) {
-                            if (grid == null) {
-                                grid = $(componentInfo.element).find('.grid-stack').gridstack({
-                                    auto: false
-                                }).data('gridstack');
-                            }
-
-                            var item = _.find(items, function (i) { return i.nodeType == 1 });
-                            grid.add_widget(item);
-                            ko.utils.domNodeDisposal.addDisposeCallback(item, function () {
-                                grid.remove_widget(item);
-                            });
-                        };
-                    };
-
-                    return new ViewModel(controller, componentInfo);
-                }
-            },
-            template: { element: 'gridstack-template' }
-        });
-
-        $(function () {
-            var Controller = function (widgets) {
-                var self = this;
-
-                this.widgets = ko.observableArray(widgets);
-
-                this.add_new_widget = function () {
-                    this.widgets.push({
-                        x: 0,
-                        y: 0,
-                        width: Math.floor(1 + 3 * Math.random()),
-                        height: Math.floor(1 + 3 * Math.random()),
-                        auto_position: true
-                    });
-                };
-
-                this.delete_widget = function (item) {
-                    self.widgets.remove(item);
-                };
-            };
-
-            var widgets = [
-                {x: 0, y: 0, width: 2, height: 2},
-                {x: 2, y: 0, width: 4, height: 2},
-                {x: 6, y: 0, width: 2, height: 4},
-                {x: 1, y: 2, width: 4, height: 2}
-            ];
-
-            var controller = new Controller(widgets);
-            ko.applyBindings(controller);
-        });
-    </script>
-
-    <template id="gridstack-template">
-        <div class="grid-stack" data-bind="foreach: {data: widgets, afterRender: afterAddWidget}">
-           <div class="grid-stack-item" data-bind="attr: {'data-gs-x': $data.x, 'data-gs-y': $data.y, 'data-gs-width': $data.width, 'data-gs-height': $data.height, 'data-gs-auto-position': $data.auto_position}">
-               <div class="grid-stack-item-content"><button data-bind="click: $root.delete_widget">Delete me</button></div>
-           </div></div><!-- <---- NO SPACE BETWEEN THESE CLOSING TAGS -->
-    </template>
-</body>
-</html>

--- app/webroot/js/vendor/gridstack/demo/nested.html ---
@@ -1,81 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <!--[if lt IE 9]>
-    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-
-    <meta charset="utf-8">
-    <meta http-equiv="X-UA-Compatible" content="IE=edge">
-    <meta name="viewport" content="width=device-width, initial-scale=1">
-    <title>Nested grids demo</title>
-
-    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
-    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/css/font-awesome.min.css"/>
-    <link rel="stylesheet" href="../dist/gridstack.css"/>
-
-    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.0/jquery-ui.js"></script>
-    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min.js"></script>
-    <script src="../dist/gridstack.js"></script>
-
-    <style type="text/css">
-        .grid-stack {
-            background: lightgoldenrodyellow;
-        }
-
-        .grid-stack-item-content {
-            color: #2c3e50;
-            text-align: center;
-            background-color: #18bc9c;
-        }
-
-        .grid-stack .grid-stack {
-            /*margin: 0 -10px;*/
-            background: rgba(255, 255, 255, 0.3);
-        }
-
-        .grid-stack .grid-stack .grid-stack-item-content {
-            background: lightpink;
-        }
-    </style>
-</head>
-<body>
-    <div class="container-fluid">
-        <h1>Nested grids demo</h1>
-
-        <div class="grid-stack">
-            <div class="grid-stack-item" data-gs-x="0" data-gs-y="0" data-gs-width="4" data-gs-height="3">
-                <div class="grid-stack-item-content">
-                    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque eius eligendi eos fuga magnam numquam perferendis provident quos rem. Asperiores assumenda dolor error eveniet impedit nihil numquam provident repellat ullam.
-                </div>
-            </div>
-            <div class="grid-stack-item" data-gs-x="4" data-gs-y="0" data-gs-width="4" data-gs-height="4">
-                <div class="grid-stack-item-content">
-
-                        <div class="grid-stack">
-                            <div class="grid-stack-item" data-gs-x="0" data-gs-y="0" data-gs-width="3" data-gs-height="1"><div class="grid-stack-item-content">1</div></div>
-                            <div class="grid-stack-item" data-gs-x="3" data-gs-y="0" data-gs-width="3" data-gs-height="1"><div class="grid-stack-item-content">2</div></div>
-                            <div class="grid-stack-item" data-gs-x="6" data-gs-y="0" data-gs-width="3" data-gs-height="1"><div class="grid-stack-item-content">3</div></div>
-                            <div class="grid-stack-item" data-gs-x="9" data-gs-y="0" data-gs-width="3" data-gs-height="1"><div class="grid-stack-item-content">4</div></div>
-
-                            <div class="grid-stack-item" data-gs-x="0" data-gs-y="1" data-gs-width="3" data-gs-height="1"><div class="grid-stack-item-content">5</div></div>
-                            <div class="grid-stack-item" data-gs-x="3" data-gs-y="1" data-gs-width="3" data-gs-height="1"><div class="grid-stack-item-content">6</div></div>
-                        </div>
-
-                </div>
-            </div>
-        </div>
-    </div>
-
-
-    <script type="text/javascript">
-        $(function () {
-            var options = {
-            };
-            $('.grid-stack').gridstack(options);
-        });
-    </script>
-</body>
-</html>

--- app/webroot/js/vendor/gridstack/demo/serialization.html ---
@@ -1,112 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-    <!--[if lt IE 9]>
-    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
-    <![endif]-->
-
-    <meta charset="utf-8">
-    <meta http-equiv="X-UA-Compatible" content="IE=edge">
-    <meta name="viewport" content="width=device-width, initial-scale=1">
-    <title>Serialization demo</title>
-
-    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
-    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.2.0/css/font-awesome.min.css"/>
-    <link rel="stylesheet" href="../dist/gridstack.css"/>
-
-    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.0/jquery-ui.js"></script>
-    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
-    <script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min.js"></script>
-    <script src="../dist/gridstack.js"></script>
-
-    <style type="text/css">
-        .grid-stack {
-            background: lightgoldenrodyellow;
-        }
-
-        .grid-stack-item-content {
-            color: #2c3e50;
-            text-align: center;
-            background-color: #18bc9c;
-        }
-    </style>
-</head>
-<body>
-    <div class="container-fluid">
-        <h1>Serialization demo</h1>
-
-        <div>
-            <a class="btn btn-default" id="save-grid" href="#">Save Grid</a>
-            <a class="btn btn-default" id="load-grid" href="#">Load Grid</a>
-            <a class="btn btn-default" id="clear-grid" href="#">Clear Grid</a>
-        </div>
-
-        <br/>
-
-        <div class="grid-stack">
-        </div>
-
-        <hr/>
-
-        <textarea id="saved-data" cols="100" rows="20" readonly="readonly"></textarea>
-    </div>
-
-
-    <script type="text/javascript">
-        $(function () {
-            var options = {
-            };
-            $('.grid-stack').gridstack(options);
-
-            new function () {
-                this.serialized_data = [
-                    {x: 0, y: 0, width: 2, height: 2},
-                    {x: 3, y: 1, width: 1, height: 2},
-                    {x: 4, y: 1, width: 1, height: 1},
-                    {x: 2, y: 3, width: 3, height: 1},
-                    {x: 1, y: 4, width: 1, height: 1},
-                    {x: 1, y: 3, width: 1, height: 1},
-                    {x: 2, y: 4, width: 1, height: 1},
-                    {x: 2, y: 5, width: 1, height: 1}
-                ];
-
-                this.grid = $('.grid-stack').data('gridstack');
-
-                this.load_grid = function () {
-                    this.grid.remove_all();
-                    var items = GridStackUI.Utils.sort(this.serialized_data);
-                    _.each(items, function (node) {
-                        this.grid.add_widget($('<div><div class="grid-stack-item-content" /><div/>'),
-                            node.x, node.y, node.width, node.height);
-                    }, this);
-                }.bind(this);
-
-                this.save_grid = function () {
-                    this.serialized_data = _.map($('.grid-stack > .grid-stack-item:visible'), function (el) {
-                        el = $(el);
-                        var node = el.data('_gridstack_node');
-                        return {
-                            x: node.x,
-                            y: node.y,
-                            width: node.width,
-                            height: node.height
-                        };
-                    }, this);
-                    $('#saved-data').val(JSON.stringify(this.serialized_data, null, '    '));
-                }.bind(this);
-
-                this.clear_grid = function () {
-                    this.grid.remove_all();
-                }.bind(this);
-
-                $('#save-grid').click(this.save_grid);
-                $('#load-grid').click(this.load_grid);
-                $('#clear-grid').click(this.clear_grid);
-
-                this.load_grid();
-            };
-        });
-    </script>
-</body>
-</html>

--- app/webroot/js/vendor/image-picker/bower.json ---
@@ -1,23 +0,0 @@
-{
-  "name": "image-picker",
-  "version": "0.3.1",
-  "homepage": "http://rvera.github.com/image-picker",
-  "authors": [
-    "Rodrigo Vera"
-  ],
-  "description": "Image Picker is a simple jQuery plugin that transforms a select element into a more user friendly graphical interface.",
-  "main": "image-picker/image-picker.js",
-  "keywords": [
-    "Image",
-    "Picker",
-    "jquery"
-  ],
-  "license": "MIT",
-  "ignore": [
-    "**/.*",
-    "node_modules",
-    "bower_components",
-    "test",
-    "tests"
-  ]
-}

--- app/webroot/js/vendor/image-picker/package.json ---
@@ -1,18 +0,0 @@
-{
-  "name": "image-picker",
-  "version": "0.3.1",
-  "homepage": "http://rvera.github.com/image-picker",
-  "author": "Rodrigo Vera (http://rvera.github.io/)",
-
-  "description": "Image Picker is a simple jQuery plugin that transforms a select element into a more user friendly graphical interface.",
-  "main": "image-picker/image-picker.js",
-  "files": [
-    "image-picker"
-  ],
-  "keywords": [
-    "Image",
-    "Picker",
-    "jquery"
-  ],
-  "license": "MIT"
-}

--- app/webroot/js/vendor/image-picker/source/coffee/image-picker.coffee ---
@@ -1,186 +0,0 @@
-#
-# Image Picker source
-# by Rodrigo Vera
-#
-jQuery.fn.extend({
-  imagepicker: (opts = {}) ->
-    this.each () ->
-      select = jQuery(this)
-      select.data("picker").destroy() if select.data("picker")
-      select.data "picker", new ImagePicker(this, sanitized_options(opts))
-      opts.initialized.call(select.data("picker")) if opts.initialized?
-})
-
-sanitized_options = (opts) ->
-  default_options = {
-    hide_select:      true,
-    show_label:       false,
-    initialized:      undefined,
-    changed:          undefined,
-    clicked:          undefined,
-    selected:         undefined,
-    limit:            undefined,
-    limit_reached:    undefined,
-    font_awesome:     false
-  }
-  jQuery.extend(default_options, opts)
-
-both_array_are_equal = (a,b) ->
-  return false if (!a || !b) || (a.length != b.length)
-  a = a[..]
-  b = b[..]
-  a.sort()
-  b.sort()
-  for x, i in a
-    return false if b[i] != x
-  true
-
-class ImagePicker
-  constructor: (select_element, @opts={}) ->
-    @select         = jQuery(select_element)
-    @multiple       = @select.attr("multiple") == "multiple"
-    @opts.limit     = parseInt(@select.data("limit")) if @select.data("limit")?
-    @build_and_append_picker()
-
-  destroy: ->
-    for option in @picker_options
-      option.destroy()
-    @picker.remove()
-    @select.off("change", @sync_picker_with_select)
-    @select.removeData "picker"
-    @select.show()
-
-  build_and_append_picker: () ->
-    @select.hide() if @opts.hide_select
-    @select.on("change", @sync_picker_with_select)
-    @picker.remove() if @picker?
-    @create_picker()
-    @select.after(@picker)
-    @sync_picker_with_select()
-
-  sync_picker_with_select: () =>
-    for option in @picker_options
-      if option.is_selected()
-        option.mark_as_selected()
-      else
-        option.unmark_as_selected()
-
-  create_picker: () ->
-    @picker         =  jQuery("<ul class='thumbnails image_picker_selector'></ul>")
-    @picker_options = []
-    @recursively_parse_option_groups(@select, @picker)
-    @picker
-
-  recursively_parse_option_groups: (scoped_dom, target_container) ->
-    for option_group in scoped_dom.children("optgroup")
-      option_group = jQuery(option_group)
-      container    = jQuery("<ul></ul>")
-      container.append jQuery("<li class='group_title'>#{option_group.attr("label")}</li>")
-      target_container.append jQuery("<li class='group'>").append(container)
-      @recursively_parse_option_groups(option_group, container)
-    for option in (new ImagePickerOption(option, this, @opts) for option in scoped_dom.children("option"))
-      @picker_options.push option
-      continue if !option.has_image()
-      target_container.append option.node
-
-
-  has_implicit_blanks: () ->
-    (option for option in @picker_options when (option.is_blank() && !option.has_image())).length > 0
-
-  selected_values: () ->
-    if @multiple
-      @select.val() || []
-    else
-      [@select.val()]
-
-  toggle: (imagepicker_option, original_event) ->
-    old_values = @selected_values()
-    selected_value = imagepicker_option.value().toString()
-    if @multiple
-      if selected_value in @selected_values()
-        new_values = @selected_values()
-        new_values.splice( jQuery.inArray(selected_value, old_values), 1)
-        @select.val []
-        @select.val new_values
-      else
-        if @opts.limit? && @selected_values().length >= @opts.limit
-          if @opts.limit_reached?
-            @opts.limit_reached.call(@select)
-        else
-          @select.val @selected_values().concat selected_value
-    else
-      if @has_implicit_blanks() && imagepicker_option.is_selected()
-        @select.val("")
-      else
-        @select.val(selected_value)
-    unless both_array_are_equal(old_values, @selected_values())
-      @select.change()
-      @opts.changed.call(@select, old_values, @selected_values(), original_event) if @opts.changed?
-
-
-class ImagePickerOption
-  constructor: (option_element, @picker, @opts={}) ->
-    @option = jQuery(option_element)
-    @create_node()
-
-  destroy: ->
-    @node.find(".thumbnail").off("click", @clicked)
-
-  has_image: () ->
-    @option.data("img-src")?
-
-  is_blank: () ->
-    !(@value()? && @value() != "")
-
-  is_selected: () ->
-    select_value = @picker.select.val()
-    if @picker.multiple
-      jQuery.inArray(@value(), select_value) >= 0
-    else
-      @value() == select_value
-
-  mark_as_selected: () ->
-    @node.find(".thumbnail").addClass("selected")
-
-  unmark_as_selected: () ->
-    @node.find(".thumbnail").removeClass("selected")
-
-  value: () ->
-    @option.val()
-
-  label: () ->
-    if @option.data("img-label")
-      @option.data("img-label")
-    else
-      @option.text()
-
-  clicked: (event) =>
-    @picker.toggle(this, event)
-    @opts.clicked.call(@picker.select, this, event)  if @opts.clicked?
-    @opts.selected.call(@picker.select, this, event) if @opts.selected? and @is_selected()
-
-  create_node: () ->
-    @node = jQuery("<li/>")
-    # font-awesome support
-    if @option.data("font_awesome")
-      image = jQuery("<i>")
-      image.attr("class", "fa-fw " + this.option.data("img-src"))
-    else
-      image = jQuery("<img class='image_picker_image'/>")
-      image.attr("src", @option.data("img-src"))
-    thumbnail = jQuery("<div class='thumbnail'>")
-    # Add custom class
-    imgClass = @option.data("img-class")
-    if imgClass
-      @node.addClass(imgClass)
-      image.addClass(imgClass)
-      thumbnail.addClass(imgClass)
-    # Add image alt
-    imgAlt = @option.data("img-alt")
-    if imgAlt
-      image.attr('alt', imgAlt);
-    thumbnail.on("click", @clicked)  
-    thumbnail.append(image)
-    thumbnail.append(jQuery("<p/>").html(@label())) if @opts.show_label
-    @node.append( thumbnail )
-    @node

--- app/webroot/js/vendor/image-picker/source/sass/image-picker.scss ---
@@ -1,53 +0,0 @@
-$thumbnail_padding:         6px;
-$thumbnail_margin:          12px;
-$thumbnail_border:          1px solid #DDD;
-$thumbnail_selected_color:  #08C;
-
-ul.thumbnails.image_picker_selector
-{
-  overflow:             auto;
-  list-style-image:     none;
-  list-style-position:  outside;
-  list-style-type:      none;
-  padding:              0px;
-  margin:               0px;
-
-  ul
-  {
-    overflow:             auto;
-    list-style-image:     none;
-    list-style-position:  outside;
-    list-style-type:      none;
-    padding:              0px;
-    margin:               0px;
-  }
-
-  li.group_title
-  {
-    float: none;
-  }
-
-  li
-  {
-    margin:   0px $thumbnail_margin $thumbnail_margin 0px;
-    float:    left;
-
-    .thumbnail
-    {
-      padding:  $thumbnail_padding;
-      border:   $thumbnail_border;
-      -webkit-user-select: none;
-      -moz-user-select:    none;
-      -ms-user-select:     none;
-      img
-      {
-        -webkit-user-drag: none;
-      }
-    }
-
-    .thumbnail.selected
-    {
-      background: $thumbnail_selected_color;
-    }
-  }
-}

--- app/webroot/js/vendor/lodash/.travis.yml ---
@@ -1,77 +0,0 @@
-language: node_js
-node_js:
-  - "0.12"
-env:
-  global:
-    - PATTERN1="s|^.+?!support\.funcNames\b[\s\S]+?\.name\b[\s\S]+?\}\n||m"
-    - PATTERN2="s|\s*else\s*\{\s*iteratee\(index\);\s*\}||"
-    - BIN="node" BUILD="compat" ISTANBUL=false OPTION=""
-    - NPM_VERSION="^2.0.0" SAUCE_LABS=false SAUCE_USERNAME="lodash"
-    - secure: "tg1JFsIFnxzLaTboFPOnm+aJCuMm5+JdhLlESlqg9x3fwro++7KCnwHKLNovhchaPe4otC43ZMB/nfWhDnDm11dKbm/V6HlTkED+dadTsaLxVDg6J+7yK41QhokBPJOxLV78iDaNaAQVYEirAgZ0yn8kFubxmNKV+bpCGQNc9yU="
-  matrix:
-    - BUILD="compat"
-    - BUILD="modern"
-    - BUILD="modern"
-    - BUILD="modern" ISTANBUL=true
-    - BIN="phantomjs"
-    - BIN="rhino" OPTION="-opt -1"
-    - BIN="rhino" OPTION="-opt -1 -require"
-    - BIN="ringo"
-matrix:
-  include:
-    - node_js: "iojs"
-      env:
-    - node_js: "iojs"
-      env: BUILD="modern"
-    - node_js: "0.8"
-      env: NPM_VERSION="~1.4.0"
-    - node_js: "0.8"
-      env: BUILD="modern" NPM_VERSION="~1.4.0"
-    - node_js: "0.10"
-      env:
-    - node_js: "0.10"
-      env: BUILD="modern"
-    - node_js: "0.12"
-      env: SAUCE_LABS=true
-    - node_js: "0.12"
-      env: SAUCE_LABS=true BUILD="modern"
-git:
-  depth: 10
-branches:
-  only:
-    - master
-notifications:
-  webhooks:
-    urls:
-      - https://webhooks.gitter.im/e/4aab6358b0e9aed0b628
-    on_success: change
-    on_failure: always
-before_install:
-  - "nvm use $TRAVIS_NODE_VERSION"
-  - "npm config set loglevel error"
-  - "npm i -g npm@\"$NPM_VERSION\""
-  - "[ $SAUCE_LABS == false ] || npm i chalk@\"^1.0.0\" ecstatic@\"0.8.0\" request@\"^2.0.0\" sauce-tunnel@\"2.2.3\""
-  - "[ $ISTANBUL == false ]   || (npm i -g coveralls@\"^2.0.0\" && npm i istanbul@\"0.3.14\")"
-  - "[ $BIN != 'rhino' ] || (sudo mkdir /opt/rhino-1.7.6 && sudo wget --no-check-certificate -O $_/js.jar https://lodash.com/_travis/rhino-1.7.6.jar)"
-  - "[ $BIN != 'rhino' ] || (echo -e '#!/bin/sh\\njava -jar /opt/rhino-1.7.6/js.jar $@' | sudo tee /usr/local/bin/rhino && sudo chmod +x /usr/local/bin/rhino)"
-  - "[ $BIN != 'ringo' ] || (wget --no-check-certificate https://lodash.com/_travis/ringojs-0.11.zip && sudo unzip ringojs-0.11 -d /opt && rm ringojs-0.11.zip)"
-  - "[ $BIN != 'ringo' ] || (sudo ln -s /opt/ringojs-0.11/bin/ringo /usr/local/bin/ringo && sudo chmod +x $_)"
-  - "perl -pi -e 's|\"lodash\"|\"lodash-compat\"|' ./package.json"
-  - "git clone --depth=10 --branch=master git://github.com/lodash/lodash-cli.git ./node_modules/lodash-cli && mkdir $_/node_modules && cd $_ && ln -s ../../../ ./lodash-compat && cd ../ && npm i && cd ../../"
-  - "node ./node_modules/lodash-cli/bin/lodash $BUILD -o ./lodash.$BUILD.js"
-script:
-  - "[ $ISTANBUL == false ]   || cp ./lodash.$BUILD.js ./lodash.js"
-  - "[ $ISTANBUL == false ]   || perl -0pi -e \"$PATTERN1\" ./lodash.js && perl -0pi -e \"$PATTERN2\" $_"
-  - "[ $ISTANBUL == false ]   || node ./node_modules/istanbul/lib/cli.js cover -x \"**/vendor/**\" --report lcovonly ./test/test.js -- ./lodash.js"
-  - "[ $ISTANBUL == false ]   || [ $TRAVIS_SECURE_ENV_VARS == false ] || (cat ./coverage/lcov.info | coveralls)"
-  - "[ $SAUCE_LABS == true ]  || [ $ISTANBUL == true ] || cd ./test"
-  - "[ $SAUCE_LABS == true ]  || [ $ISTANBUL == true ] || $BIN $OPTION ./test.js ../lodash.$BUILD.js"
-  - "[ $SAUCE_LABS == true ]  || [ $ISTANBUL == true ] || [ $TRAVIS_SECURE_ENV_VARS == false ] || $BIN $OPTION ./test.js ../lodash.$BUILD.min.js"
-  - "[ $SAUCE_LABS == false ] || $BIN ./test/saucelabs.js name=\"lodash tests\" runner=\"test/index.html?build=../lodash.$BUILD.js&noglobals=true\" tags=\"$BUILD,development\""
-  - "[ $SAUCE_LABS == false ] || $BIN ./test/saucelabs.js name=\"lodash tests\" runner=\"test/index.html?build=../lodash.$BUILD.min.js&noglobals=true\" tags=\"$BUILD,production\""
-  - "[ $SAUCE_LABS == false ] || [ $BUILD != 'compat' ] || $BIN ./test/saucelabs.js name=\"lodash tests\" runner=\"test/index.html?build=../lodash.$BUILD.js\" tags=\"$BUILD,development,ie-compat\" compatMode=7"
-  - "[ $SAUCE_LABS == false ] || [ $BUILD != 'compat' ] || $BIN ./test/saucelabs.js name=\"lodash tests\" runner=\"test/index.html?build=../lodash.$BUILD.min.js\" tags=\"$BUILD,production,ie-compat\" compatMode=7"
-  - "[ $SAUCE_LABS == false ] || $BIN ./test/saucelabs.js name=\"backbone tests\"   runner=\"test/backbone.html?build=../lodash.$BUILD.min.js\" tags=\"$BUILD,production,backbone\""
-  - "[ $SAUCE_LABS == false ] || $BIN ./test/saucelabs.js name=\"backbone tests\"   runner=\"test/backbone.html?build=../lodash.$BUILD.js\" tags=\"$BUILD,development,backbone\""
-  - "[ $SAUCE_LABS == false ] || $BIN ./test/saucelabs.js name=\"underscore tests\" runner=\"test/underscore.html?build=../lodash.$BUILD.min.js\" tags=\"$BUILD,production,underscore\""
-  - "[ $SAUCE_LABS == false ] || $BIN ./test/saucelabs.js name=\"underscore tests\" runner=\"test/underscore.html?build=../lodash.$BUILD.js\" tags=\"$BUILD,development,underscore\""

--- app/webroot/js/vendor/lodash/CONTRIBUTING.md ---
@@ -1,39 +0,0 @@
-# Contributing to lodash
-
-If you’d like to contribute a feature or bug fix, you can [fork](https://help.github.com/articles/fork-a-repo/) lodash, commit your changes, & [send a pull request](https://help.github.com/articles/using-pull-requests/).
-Please make sure to [search the issue tracker](https://github.com/lodash/lodash/issues) first; your issue may have already been discussed or fixed in `master`.
-
-## Tests
-
-Include updated unit tests in the `test` directory as part of your pull request.
-Don’t worry about regenerating the documentation, lodash.js, or lodash.min.js.
-
-Before running the unit tests you’ll need to install, `npm i`, [development dependencies](https://docs.npmjs.com/files/package.json#devdependencies).
-Run unit tests from the command-line via `node test/test`, or open `test/index.html` in a web browser.
-
-The `test/run-test.sh` script attempts to run the tests in [Rhino](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino), [RingoJS](http://ringojs.org/), [PhantomJS](http://phantomjs.org/), & [Node](http://nodejs.org/), before running them in your default browser.
-The [Backbone](http://backbonejs.org/) & [Underscore](http://underscorejs.org/) test suites are included as well.
-
-## Contributor License Agreement
-
-lodash is a member of the [Dojo Foundation](http://dojofoundation.org/).
-As such, we request that all contributors sign the Dojo Foundation [contributor license agreement](http://dojofoundation.org/about/claForm).
-
-For more information about CLAs, please check out Alex Russell’s excellent post, [“Why Do I Need to Sign This?”](http://infrequently.org/2008/06/why-do-i-need-to-sign-this/).
-
-## Coding Guidelines
-
-In addition to the following guidelines, please follow the conventions already established in the code.
-
-- **Spacing**:<br>
-  Use two spaces for indentation. No tabs.
-
-- **Naming**:<br>
-  Keep variable & method names concise & descriptive.<br>
-  Variable names `index`, `collection`, & `callback` are preferable to `i`, `arr`, & `fn`.
-
-- **Quotes**:<br>
-  Single-quoted strings are preferred to double-quoted strings; however, please use a double-quoted string if the value contains a single-quote character to avoid unnecessary escaping.
-
-- **Comments**:<br>
-  Please use single-line comments to annotate significant additions, & [JSDoc-style](http://www.2ality.com/2011/08/jsdoc-intro.html) comments for new methods.

--- app/webroot/js/vendor/lodash/bower.json ---
@@ -1,20 +0,0 @@
-{
-  "name": "lodash",
-  "version": "3.9.3",
-  "main": "lodash.js",
-  "ignore": [
-    ".*",
-    "*.custom.*",
-    "*.log",
-    "*.map",
-    "*.md",
-    "lodash.src.js",
-    "component.json",
-    "package.json",
-    "doc",
-    "node_modules",
-    "perf",
-    "test",
-    "vendor"
-  ]
-}

--- app/webroot/js/vendor/lodash/component.json ---
@@ -1,10 +0,0 @@
-{
-  "name": "lodash",
-  "repo": "lodash/lodash",
-  "version": "3.9.3",
-  "description": "The modern build of lodash.",
-  "license": "MIT",
-  "main": "lodash.js",
-  "keywords": ["stdlib", "util"],
-  "scripts": ["lodash.js"]
-}

--- app/webroot/js/vendor/lodash/package.json ---
@@ -1,33 +0,0 @@
-{
-  "name": "lodash",
-  "version": "3.9.3",
-  "main": "lodash.src.js",
-  "private": true,
-  "devDependencies": {
-    "curl-amd": "0.8.12",
-    "dojo": "~1.10.0",
-    "jquery": "~1.11.0",
-    "platform": "~1.3.0",
-    "qunit-extras": "~1.4.0",
-    "qunitjs": "~1.18.0",
-    "requirejs": "~2.1.0"
-  },
-  "volo": {
-    "type": "directory",
-    "ignore": [
-      ".*",
-      "*.custom.*",
-      "*.log",
-      "*.map",
-      "*.md",
-      "lodash.src.js",
-      "bower.json",
-      "component.json",
-      "doc",
-      "node_modules",
-      "perf",
-      "test",
-      "vendor"
-    ]
-  }
-}

--- app/webroot/js/vendor/lodash/perf/asset/perf-ui.js ---
@@ -1,149 +0,0 @@
-;(function(window) {
-  'use strict';
-
-  /** The base path of the lodash builds. */
-  var basePath = '../';
-
-  /** The lodash build to load. */
-  var build = (build = /build=([^&]+)/.exec(location.search)) && decodeURIComponent(build[1]);
-
-  /** The other library to load. */
-  var other = (other = /other=([^&]+)/.exec(location.search)) && decodeURIComponent(other[1]);
-
-  /** The `ui` object. */
-  var ui = {};
-
-  /*--------------------------------------------------------------------------*/
-
-  /**
-   * Registers an event listener on an element.
-   *
-   * @private
-   * @param {Element} element The element.
-   * @param {string} eventName The name of the event.
-   * @param {Function} handler The event handler.
-   * @returns {Element} The element.
-   */
-  function addListener(element, eventName, handler) {
-    if (typeof element.addEventListener != 'undefined') {
-      element.addEventListener(eventName, handler, false);
-    } else if (typeof element.attachEvent != 'undefined') {
-      element.attachEvent('on' + eventName, handler);
-    }
-  }
-
-  /*--------------------------------------------------------------------------*/
-
-  // Initialize controls.
-  addListener(window, 'load', function() {
-    function eventHandler(event) {
-      var buildIndex = buildList.selectedIndex,
-          otherIndex = otherList.selectedIndex,
-          search = location.search.replace(/^\?|&?(?:build|other)=[^&]*&?/g, '');
-
-      if (event.stopPropagation) {
-        event.stopPropagation();
-      } else {
-        event.cancelBubble = true;
-      }
-      location.href =
-        location.href.split('?')[0] + '?' +
-        (search ? search + '&' : '') +
-        'build=' + (buildIndex < 0 ? build : buildList[buildIndex].value) + '&' +
-        'other=' + (otherIndex < 0 ? other : otherList[otherIndex].value);
-    }
-
-    var span1 = document.createElement('span');
-    span1.style.cssText = 'float:right';
-    span1.innerHTML =
-      '<label for="perf-build">Build: </label>' +
-      '<select id="perf-build">' +
-      '<option value="lodash-compat">lodash (compat)</option>' +
-      '<option value="lodash-modern">lodash (modern)</option>' +
-      '<option value="lodash-custom-dev">lodash (custom development)</option>' +
-      '<option value="lodash-custom">lodash (custom production)</option>' +
-      '</select>';
-
-    var span2 = document.createElement('span');
-    span2.style.cssText = 'float:right';
-    span2.innerHTML =
-      '<label for="perf-other">Other Library: </label>' +
-      '<select id="perf-other">' +
-      '<option value="underscore-dev">Underscore (development)</option>' +
-      '<option value="underscore">Underscore (production)</option>' +
-      '<option value="lodash-compat">lodash (compat)</option>' +
-      '<option value="lodash-modern">lodash (modern)</option>' +
-      '<option value="lodash-custom-dev">lodash (custom development)</option>' +
-      '<option value="lodash-custom">lodash (custom production)</option>' +
-      '</select>';
-
-    var buildList = span1.lastChild,
-        otherList = span2.lastChild,
-        toolbar = document.getElementById('perf-toolbar');
-
-    toolbar.appendChild(span2);
-    toolbar.appendChild(span1);
-
-    buildList.selectedIndex = (function() {
-      switch (build) {
-        case 'lodash-compat':     return 0;
-        case 'lodash-custom-dev': return 2;
-        case 'lodash-custom':     return 3;
-        case 'lodash-modern':
-        case null:                return 1;
-      }
-      return -1;
-    }());
-
-    otherList.selectedIndex = (function() {
-      switch (other) {
-        case 'underscore-dev':    return 0;
-        case 'lodash-compat':     return 2;
-        case 'lodash-modern':     return 3;
-        case 'lodash-custom-dev': return 4;
-        case 'lodash-custom':     return 5;
-        case 'underscore':
-        case null:                return 1;
-      }
-      return -1;
-    }());
-
-    addListener(buildList, 'change', eventHandler);
-    addListener(otherList, 'change', eventHandler);
-  });
-
-  // The lodash build file path.
-  ui.buildPath = (function() {
-    var result;
-    switch (build) {
-      case 'lodash-compat':     result = 'lodash.compat.min.js'; break;
-      case 'lodash-custom-dev': result = 'lodash.custom.js'; break;
-      case 'lodash-custom':     result = 'lodash.custom.min.js'; break;
-      case null:                build  = 'lodash-modern';
-      case 'lodash-modern':     result = 'lodash.min.js'; break;
-      default:                  return build;
-    }
-    return basePath + result;
-  }());
-
-  // The other library file path.
-  ui.otherPath = (function() {
-    var result;
-    switch (other) {
-      case 'lodash-compat':     result = 'lodash.compat.min.js'; break;
-      case 'lodash-modern':     result = 'lodash.min.js'; break;
-      case 'lodash-custom-dev': result = 'lodash.custom.js'; break;
-      case 'lodash-custom':     result = 'lodash.custom.min.js'; break;
-      case 'underscore-dev':    result = 'vendor/underscore/underscore.js'; break;
-      case null:                other  = 'underscore';
-      case 'underscore':        result = 'vendor/underscore/underscore-min.js'; break;
-      default:                  return other;
-    }
-    return basePath + result;
-  }());
-
-  ui.urlParams = { 'build': build, 'other': other };
-
-  window.ui = ui;
-
-}(this));

--- app/webroot/js/vendor/lodash/perf/index.html ---
@@ -1,82 +0,0 @@
-<!doctype html>
-<html lang="en">
-  <head>
-    <meta charset="utf-8">
-    <title>lodash Performance Suite</title>
-    <style>
-      html, body {
-        margin: 0;
-        padding: 0;
-        height: 100%;
-      }
-      applet {
-        position: absolute;
-        left: -9999em;
-      }
-      #FirebugUI {
-        top: 2em;
-      }
-      #perf-toolbar {
-        background-color: #EEE;
-        color: #5E740B;
-        font-family: "Helvetica Neue Light", "HelveticaNeue-Light", "Helvetica Neue", Calibri, Helvetica, Arial, sans-serif;
-        font-size: small;
-        padding: 0.5em 0 0.5em 2em;
-        overflow: hidden;
-      }
-    </style>
-  </head>
-  <body>
-    <div id="perf-toolbar"></div>
-    <script src="../node_modules/platform/platform.js"></script>
-    <script src="../lodash.src.js"></script>
-    <script src="../vendor/benchmark.js/benchmark.js"></script>
-    <script src="../vendor/firebug-lite/src/firebug-lite-debug.js"></script>
-    <script src="./asset/perf-ui.js"></script>
-    <script>
-      document.write('<script src="' + ui.buildPath + '"><\/script>');
-    </script>
-    <script>
-      var lodash = _.noConflict();
-    </script>
-    <script>
-      document.write('<script src="' + ui.otherPath + '"><\/script>');
-    </script>
-    <script src="perf.js"></script>
-    <script>
-      (function() {
-        var measured,
-            perfNow,
-            begin = new Date;
-
-        function init() {
-          var fbUI = document.getElementById('FirebugUI'),
-              fbDoc = fbUI && (fbDoc = fbUI.contentWindow || fbUI.contentDocument).document || fbDoc,
-              fbCommandLine = fbDoc && fbDoc.getElementById('fbCommandLine');
-
-          if (!fbCommandLine) {
-            return setTimeout(init, 15);
-          }
-          fbUI.style.height = (
-            Math.max(document.documentElement.clientHeight, document.body.clientHeight) -
-            document.getElementById('perf-toolbar').clientHeight
-          ) + 'px';
-
-          fbDoc.body.style.height = fbDoc.documentElement.style.height = '100%';
-          setTimeout(run, 15);
-        }
-
-        // is the applet permitted?
-        if (!/[?&]nojava=true(?:&|$)/.test(location.search)) {
-          // is the applet really needed?
-          while (!(measured = new Date - begin)) {}
-          if (measured > 1 && !((perfNow = window.performance) && typeof (perfNow.now || perfNow.webkitNow) == 'function')) {
-            // load applet
-            document.write('<applet code="nano" archive="../vendor/benchmark.js/nano.jar"></applet>');
-          }
-        }
-        window.onload = init;
-      }());
-    </script>
-  </body>
-</html>

--- app/webroot/js/vendor/lodash/perf/perf.js ---
@@ -1,2129 +0,0 @@
-;(function() {
-
-  /** Used to access the Firebug Lite panel (set by `run`). */
-  var fbPanel;
-
-  /** Used as a safe reference for `undefined` in pre ES5 environments. */
-  var undefined;
-
-  /** Used as a reference to the global object. */
-  var root = typeof global == 'object' && global || this;
-
-  /** Method and object shortcuts. */
-  var phantom = root.phantom,
-      amd = root.define && define.amd,
-      argv = root.process && process.argv,
-      document = !phantom && root.document,
-      noop = function() {},
-      params = root.arguments,
-      system = root.system;
-
-  /** Add `console.log()` support for Rhino and RingoJS. */
-  var console = root.console || (root.console = { 'log': root.print });
-
-  /** The file path of the lodash file to test. */
-  var filePath = (function() {
-    var min = 0,
-        result = [];
-
-    if (phantom) {
-      result = params = phantom.args;
-    } else if (system) {
-      min = 1;
-      result = params = system.args;
-    } else if (argv) {
-      min = 2;
-      result = params = argv;
-    } else if (params) {
-      result = params;
-    }
-    var last = result[result.length - 1];
-    result = (result.length > min && !/perf(?:\.js)?$/.test(last)) ? last : '../lodash.src.js';
-
-    if (!amd) {
-      try {
-        result = require('fs').realpathSync(result);
-      } catch(e) {}
-
-      try {
-        result = require.resolve(result);
-      } catch(e) {}
-    }
-    return result;
-  }());
-
-  /** Used to match path separators. */
-  var rePathSeparator = /[\/\\]/;
-
-  /** Used to detect primitive types. */
-  var rePrimitive = /^(?:boolean|number|string|undefined)$/;
-
-  /** Used to match RegExp special characters. */
-  var reSpecialChars = /[.*+?^=!:${}()|[\]\/\\]/g;
-
-  /** The `ui` object. */
-  var ui = root.ui || (root.ui = {
-    'buildPath': basename(filePath, '.js'),
-    'otherPath': 'underscore'
-  });
-
-  /** The lodash build basename. */
-  var buildName = root.buildName = basename(ui.buildPath, '.js');
-
-  /** The other library basename. */
-  var otherName = root.otherName = (function() {
-    var result = basename(ui.otherPath, '.js');
-    return result + (result == buildName ? ' (2)' : '');
-  }());
-
-  /** Used to score performance. */
-  var score = { 'a': [], 'b': [] };
-
-  /** Used to queue benchmark suites. */
-  var suites = [];
-
-  /** Used to resolve a value's internal [[Class]]. */
-  var toString = Object.prototype.toString;
-
-  /** Detect if in a browser environment. */
-  var isBrowser = isHostType(root, 'document') && isHostType(root, 'navigator');
-
-  /** Detect if in a Java environment. */
-  var isJava = !isBrowser && /Java/.test(toString.call(root.java));
-
-  /** Use a single "load" function. */
-  var load = (typeof require == 'function' && !amd)
-    ? require
-    : (isJava && root.load) || noop;
-
-  /** Load lodash. */
-  var lodash = root.lodash || (root.lodash = (
-    lodash = load(filePath) || root._,
-    lodash = lodash._ || lodash,
-    (lodash.runInContext ? lodash.runInContext(root) : lodash),
-    lodash.noConflict()
-  ));
-
-  /** Load Benchmark.js. */
-  var Benchmark = root.Benchmark || (root.Benchmark = (
-    Benchmark = load('../vendor/benchmark.js/benchmark.js') || root.Benchmark,
-    Benchmark = Benchmark.Benchmark || Benchmark,
-    Benchmark.runInContext(lodash.extend({}, root, { '_': lodash }))
-  ));
-
-  /** Load Underscore. */
-  var _ = root._ || (root._ = (
-    _ = load('../vendor/underscore/underscore.js') || root._,
-    _._ || _
-  ));
-
-  /*--------------------------------------------------------------------------*/
-
-  /**
-   * Gets the basename of the given `filePath`. If the file `extension` is passed,
-   * it will be removed from the basename.
-   *
-   * @private
-   * @param {string} path The file path to inspect.
-   * @param {string} extension The extension to remove.
-   * @returns {string} Returns the basename.
-   */
-  function basename(filePath, extension) {
-    var result = (filePath || '').split(rePathSeparator).pop();
-    return (arguments.length < 2)
-      ? result
-      : result.replace(RegExp(extension.replace(reSpecialChars, '\\$&') + '$'), '');
-  }
-
-  /**
-   * Computes the geometric mean (log-average) of an array of values.
-   * See http://en.wikipedia.org/wiki/Geometric_mean#Relationship_with_arithmetic_mean_of_logarithms.
-   *
-   * @private
-   * @param {Array} array The array of values.
-   * @returns {number} The geometric mean.
-   */
-  function getGeometricMean(array) {
-    return Math.pow(Math.E, lodash.reduce(array, function(sum, x) {
-      return sum + Math.log(x);
-    }, 0) / array.length) || 0;
-  }
-
-  /**
-   * Gets the Hz, i.e. operations per second, of `bench` adjusted for the
-   * margin of error.
-   *
-   * @private
-   * @param {Object} bench The benchmark object.
-   * @returns {number} Returns the adjusted Hz.
-   */
-  function getHz(bench) {
-    var result = 1 / (bench.stats.mean + bench.stats.moe);
-    return isFinite(result) ? result : 0;
-  }
-
-  /**
-   * Host objects can return type values that are different from their actual
-   * data type. The objects we are concerned with usually return non-primitive
-   * types of "object", "function", or "unknown".
-   *
-   * @private
-   * @param {*} object The owner of the property.
-   * @param {string} property The property to check.
-   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.
-   */
-  function isHostType(object, property) {
-    if (object == null) {
-      return false;
-    }
-    var type = typeof object[property];
-    return !rePrimitive.test(type) && (type != 'object' || !!object[property]);
-  }
-
-  /**
-   * Logs text to the console.
-   *
-   * @private
-   * @param {string} text The text to log.
-   */
-  function log(text) {
-    console.log(text + '');
-    if (fbPanel) {
-      // Scroll the Firebug Lite panel down.
-      fbPanel.scrollTop = fbPanel.scrollHeight;
-    }
-  }
-
-  /**
-   * Runs all benchmark suites.
-   *
-   * @private (@public in the browser)
-   */
-  function run() {
-    fbPanel = (fbPanel = root.document && document.getElementById('FirebugUI')) &&
-      (fbPanel = (fbPanel = fbPanel.contentWindow || fbPanel.contentDocument).document || fbPanel) &&
-      fbPanel.getElementById('fbPanel1');
-
-    log('\nSit back and relax, this may take a while.');
-    suites[0].run({ 'async': !isJava });
-  }
-
-  /*--------------------------------------------------------------------------*/
-
-  lodash.extend(Benchmark.Suite.options, {
-    'onStart': function() {
-      log('\n' + this.name + ':');
-    },
-    'onCycle': function(event) {
-      log(event.target);
-    },
-    'onComplete': function() {
-      for (var index = 0, length = this.length; index < length; index++) {
-        var bench = this[index];
-        if (bench.error) {
-          var errored = true;
-        }
-      }
-      if (errored) {
-        log('There was a problem, skipping...');
-      }
-      else {
-        var formatNumber = Benchmark.formatNumber,
-            fastest = this.filter('fastest'),
-            fastestHz = getHz(fastest[0]),
-            slowest = this.filter('slowest'),
-            slowestHz = getHz(slowest[0]),
-            aHz = getHz(this[0]),
-            bHz = getHz(this[1]);
-
-        if (fastest.length > 1) {
-          log('It\'s too close to call.');
-          aHz = bHz = slowestHz;
-        }
-        else {
-          var percent = ((fastestHz / slowestHz) - 1) * 100;
-
-          log(
-            fastest[0].name + ' is ' +
-            formatNumber(percent < 1 ? percent.toFixed(2) : Math.round(percent)) +
-            '% faster.'
-          );
-        }
-        // Add score adjusted for margin of error.
-        score.a.push(aHz);
-        score.b.push(bHz);
-      }
-      // Remove current suite from queue.
-      suites.shift();
-
-      if (suites.length) {
-        // Run next suite.
-        suites[0].run({ 'async': !isJava });
-      }
-      else {
-        var aMeanHz = getGeometricMean(score.a),
-            bMeanHz = getGeometricMean(score.b),
-            fastestMeanHz = Math.max(aMeanHz, bMeanHz),
-            slowestMeanHz = Math.min(aMeanHz, bMeanHz),
-            xFaster = fastestMeanHz / slowestMeanHz,
-            percentFaster = formatNumber(Math.round((xFaster - 1) * 100)),
-            message = 'is ' + percentFaster + '% ' + (xFaster == 1 ? '' : '(' + formatNumber(xFaster.toFixed(2)) + 'x) ') + 'faster than';
-
-        // Report results.
-        if (aMeanHz >= bMeanHz) {
-          log('\n' + buildName + ' ' + message + ' ' + otherName + '.');
-        } else {
-          log('\n' + otherName + ' ' + message + ' ' + buildName + '.');
-        }
-      }
-    }
-  });
-
-  /*--------------------------------------------------------------------------*/
-
-  lodash.extend(Benchmark.options, {
-    'async': true,
-    'setup': '\
-      var _ = global._,\
-          lodash = global.lodash,\
-          belt = this.name == buildName ? lodash : _;\
-      \
-      var date = new Date,\
-          limit = 50,\
-          regexp = /x/,\
-          object = {},\
-          objects = Array(limit),\
-          numbers = Array(limit),\
-          fourNumbers = [5, 25, 10, 30],\
-          nestedNumbers = [1, [2], [3, [[4]]]],\
-          nestedObjects = [{}, [{}], [{}, [[{}]]]],\
-          twoNumbers = [12, 23];\
-      \
-      for (var index = 0; index < limit; index++) {\
-        numbers[index] = index;\
-        object["key" + index] = index;\
-        objects[index] = { "num": index };\
-      }\
-      var strNumbers = numbers + "";\
-      \
-      if (typeof assign != "undefined") {\
-        var _assign = _.assign || _.extend,\
-            lodashAssign = lodash.assign;\
-      }\
-      if (typeof bind != "undefined") {\
-        var thisArg = { "name": "fred" };\
-        \
-        var func = function(greeting, punctuation) {\
-          return (greeting || "hi") + " " + this.name + (punctuation || ".");\
-        };\
-        \
-        var _boundNormal = _.bind(func, thisArg),\
-            _boundMultiple = _boundNormal,\
-            _boundPartial = _.bind(func, thisArg, "hi");\
-        \
-        var lodashBoundNormal = lodash.bind(func, thisArg),\
-            lodashBoundMultiple = lodashBoundNormal,\
-            lodashBoundPartial = lodash.bind(func, thisArg, "hi");\
-        \
-        for (index = 0; index < 10; index++) {\
-          _boundMultiple = _.bind(_boundMultiple, { "name": "fred" + index });\
-          lodashBoundMultiple = lodash.bind(lodashBoundMultiple, { "name": "fred" + index });\
-        }\
-      }\
-      if (typeof bindAll != "undefined") {\
-        var bindAllCount = -1,\
-            bindAllObjects = Array(this.count);\
-        \
-        var funcNames = belt.reject(belt.functions(belt).slice(0, 40), function(funcName) {\
-          return /^_/.test(funcName);\
-        });\
-        \
-        // Potentially expensive.\n\
-        for (index = 0; index < this.count; index++) {\
-          bindAllObjects[index] = belt.reduce(funcNames, function(object, funcName) {\
-            object[funcName] = belt[funcName];\
-            return object;\
-          }, {});\
-        }\
-      }\
-      if (typeof chaining != "undefined") {\
-        var even = function(v) { return v % 2 == 0; },\
-            square = function(v) { return v * v; };\
-        \
-        var largeArray = belt.range(10000),\
-            _chaining = _.chain ? _(largeArray).chain() : _(largeArray),\
-            lodashChaining = lodash(largeArray);\
-      }\
-      if (typeof compact != "undefined") {\
-        var uncompacted = numbers.slice();\
-        uncompacted[2] = false;\
-        uncompacted[6] = null;\
-        uncompacted[18] = "";\
-      }\
-      if (typeof compose != "undefined") {\
-        var compAddOne = function(n) { return n + 1; },\
-            compAddTwo = function(n) { return n + 2; },\
-            compAddThree = function(n) { return n + 3; };\
-        \
-        var _composed = _.compose(compAddThree, compAddTwo, compAddOne),\
-            lodashComposed = lodash.compose(compAddThree, compAddTwo, compAddOne);\
-      }\
-      if (typeof countBy != "undefined" || typeof omit != "undefined") {\
-        var wordToNumber = {\
-          "one": 1,\
-          "two": 2,\
-          "three": 3,\
-          "four": 4,\
-          "five": 5,\
-          "six": 6,\
-          "seven": 7,\
-          "eight": 8,\
-          "nine": 9,\
-          "ten": 10,\
-          "eleven": 11,\
-          "twelve": 12,\
-          "thirteen": 13,\
-          "fourteen": 14,\
-          "fifteen": 15,\
-          "sixteen": 16,\
-          "seventeen": 17,\
-          "eighteen": 18,\
-          "nineteen": 19,\
-          "twenty": 20,\
-          "twenty-one": 21,\
-          "twenty-two": 22,\
-          "twenty-three": 23,\
-          "twenty-four": 24,\
-          "twenty-five": 25,\
-          "twenty-six": 26,\
-          "twenty-seven": 27,\
-          "twenty-eight": 28,\
-          "twenty-nine": 29,\
-          "thirty": 30,\
-          "thirty-one": 31,\
-          "thirty-two": 32,\
-          "thirty-three": 33,\
-          "thirty-four": 34,\
-          "thirty-five": 35,\
-          "thirty-six": 36,\
-          "thirty-seven": 37,\
-          "thirty-eight": 38,\
-          "thirty-nine": 39,\
-          "forty": 40\
-        };\
-        \
-        var words = belt.keys(wordToNumber).slice(0, limit);\
-      }\
-      if (typeof flatten != "undefined") {\
-        var _flattenDeep = _.flatten([[1]])[0] !== 1,\
-            lodashFlattenDeep = lodash.flatten([[1]])[0] !== 1;\
-      }\
-      if (typeof isEqual != "undefined") {\
-        var objectOfPrimitives = {\
-          "boolean": true,\
-          "number": 1,\
-          "string": "a"\
-        };\
-        \
-        var objectOfObjects = {\
-          "boolean": new Boolean(true),\
-          "number": new Number(1),\
-          "string": new String("a")\
-        };\
-        \
-        var objectOfObjects2 = {\
-          "boolean": new Boolean(true),\
-          "number": new Number(1),\
-          "string": new String("A")\
-        };\
-        \
-        var object2 = {},\
-            object3 = {},\
-            objects2 = Array(limit),\
-            objects3 = Array(limit),\
-            numbers2 = Array(limit),\
-            numbers3 = Array(limit),\
-            nestedNumbers2 = [1, [2], [3, [[4]]]],\
-            nestedNumbers3 = [1, [2], [3, [[6]]]];\
-        \
-        for (index = 0; index < limit; index++) {\
-          object2["key" + index] = index;\
-          object3["key" + index] = index;\
-          objects2[index] = { "num": index };\
-          objects3[index] = { "num": index };\
-          numbers2[index] = index;\
-          numbers3[index] = index;\
-        }\
-        object3["key" + (limit - 1)] = -1;\
-        objects3[limit - 1].num = -1;\
-        numbers3[limit - 1] = -1;\
-      }\
-      if (typeof matches != "undefined") {\
-        var source = { "num": 9 };\
-        \
-        var _findWhere = _.findWhere || _.find,\
-            _matcher = (_.matches || _.createCallback || _.noop)(source);\
-        \
-        var lodashFindWhere = lodash.findWhere || lodash.find,\
-            lodashMatcher = (lodash.matches || lodash.createCallback || lodash.noop)(source);\
-      }\
-      if (typeof multiArrays != "undefined") {\
-        var twentyValues = belt.shuffle(belt.range(20)),\
-            fortyValues = belt.shuffle(belt.range(40)),\
-            hundredSortedValues = belt.range(100),\
-            hundredValues = belt.shuffle(hundredSortedValues),\
-            hundredValues2 = belt.shuffle(hundredValues),\
-            hundredTwentyValues = belt.shuffle(belt.range(120)),\
-            hundredTwentyValues2 = belt.shuffle(hundredTwentyValues),\
-            twoHundredValues = belt.shuffle(belt.range(200)),\
-            twoHundredValues2 = belt.shuffle(twoHundredValues);\
-      }\
-      if (typeof partial != "undefined") {\
-        var func = function(greeting, punctuation) {\
-          return greeting + " fred" + (punctuation || ".");\
-        };\
-        \
-        var _partial = _.partial(func, "hi"),\
-            lodashPartial = lodash.partial(func, "hi");\
-      }\
-      if (typeof template != "undefined") {\
-        var tplData = {\
-          "header1": "Header1",\
-          "header2": "Header2",\
-          "header3": "Header3",\
-          "header4": "Header4",\
-          "header5": "Header5",\
-          "header6": "Header6",\
-          "list": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]\
-        };\
-        \
-        var tpl =\
-          "<div>" +\
-          "<h1 class=\'header1\'><%= header1 %></h1>" +\
-          "<h2 class=\'header2\'><%= header2 %></h2>" +\
-          "<h3 class=\'header3\'><%= header3 %></h3>" +\
-          "<h4 class=\'header4\'><%= header4 %></h4>" +\
-          "<h5 class=\'header5\'><%= header5 %></h5>" +\
-          "<h6 class=\'header6\'><%= header6 %></h6>" +\
-          "<ul class=\'list\'>" +\
-          "<% for (var index = 0, length = list.length; index < length; index++) { %>" +\
-          "<li class=\'item\'><%= list[index] %></li>" +\
-          "<% } %>" +\
-          "</ul>" +\
-          "</div>";\
-        \
-        var tplVerbose =\
-          "<div>" +\
-          "<h1 class=\'header1\'><%= data.header1 %></h1>" +\
-          "<h2 class=\'header2\'><%= data.header2 %></h2>" +\
-          "<h3 class=\'header3\'><%= data.header3 %></h3>" +\
-          "<h4 class=\'header4\'><%= data.header4 %></h4>" +\
-          "<h5 class=\'header5\'><%= data.header5 %></h5>" +\
-          "<h6 class=\'header6\'><%= data.header6 %></h6>" +\
-          "<ul class=\'list\'>" +\
-          "<% for (var index = 0, length = data.list.length; index < length; index++) { %>" +\
-          "<li class=\'item\'><%= data.list[index] %></li>" +\
-          "<% } %>" +\
-          "</ul>" +\
-          "</div>";\
-        \
-        var settingsObject = { "variable": "data" };\
-        \
-        var _tpl = _.template(tpl),\
-            _tplVerbose = _.template(tplVerbose, null, settingsObject);\
-        \
-        var lodashTpl = lodash.template(tpl),\
-            lodashTplVerbose = lodash.template(tplVerbose, null, settingsObject);\
-      }\
-      if (typeof wrap != "undefined") {\
-        var add = function(a, b) {\
-          return a + b;\
-        };\
-        \
-        var average = function(func, a, b) {\
-          return (func(a, b) / 2).toFixed(2);\
-        };\
-        \
-        var _wrapped = _.wrap(add, average);\
-            lodashWrapped = lodash.wrap(add, average);\
-      }\
-      if (typeof zip != "undefined") {\
-        var unzipped = [["a", "b", "c"], [1, 2, 3], [true, false, true]];\
-      }'
-  });
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_(...).map(...).filter(...).take(...).value()`')
-      .add(buildName, {
-        'fn': 'lodashChaining.map(square).filter(even).take(100).value()',
-        'teardown': 'function chaining(){}'
-      })
-      .add(otherName, {
-        'fn': '_chaining.map(square).filter(even).take(100).value()',
-        'teardown': 'function chaining(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.assign`')
-      .add(buildName, {
-        'fn': 'lodashAssign({}, object)',
-        'teardown': 'function assign(){}'
-      })
-      .add(otherName, {
-        'fn': '_assign({}, object)',
-        'teardown': 'function assign(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.assign` with multiple sources')
-      .add(buildName, {
-        'fn': 'lodashAssign({}, object, object)',
-        'teardown': 'function assign(){}'
-      })
-      .add(otherName, {
-        'fn': '_assign({}, object, object)',
-        'teardown': 'function assign(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.bind` (slow path)')
-      .add(buildName, {
-        'fn': 'lodash.bind(function() { return this.name; }, { "name": "fred" })',
-        'teardown': 'function bind(){}'
-      })
-      .add(otherName, {
-        'fn': '_.bind(function() { return this.name; }, { "name": "fred" })',
-        'teardown': 'function bind(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('bound call with arguments')
-      .add(buildName, {
-        'fn': 'lodashBoundNormal("hi", "!")',
-        'teardown': 'function bind(){}'
-      })
-      .add(otherName, {
-        'fn': '_boundNormal("hi", "!")',
-        'teardown': 'function bind(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('bound and partially applied call with arguments')
-      .add(buildName, {
-        'fn': 'lodashBoundPartial("!")',
-        'teardown': 'function bind(){}'
-      })
-      .add(otherName, {
-        'fn': '_boundPartial("!")',
-        'teardown': 'function bind(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('bound multiple times')
-      .add(buildName, {
-        'fn': 'lodashBoundMultiple()',
-        'teardown': 'function bind(){}'
-      })
-      .add(otherName, {
-        'fn': '_boundMultiple()',
-        'teardown': 'function bind(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.bindAll` iterating arguments')
-      .add(buildName, {
-        'fn': 'lodash.bindAll.apply(lodash, [bindAllObjects[++bindAllCount]].concat(funcNames))',
-        'teardown': 'function bindAll(){}'
-      })
-      .add(otherName, {
-        'fn': '_.bindAll.apply(_, [bindAllObjects[++bindAllCount]].concat(funcNames))',
-        'teardown': 'function bindAll(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.bindAll` iterating the `object`')
-      .add(buildName, {
-        'fn': 'lodash.bindAll(bindAllObjects[++bindAllCount])',
-        'teardown': 'function bindAll(){}'
-      })
-      .add(otherName, {
-        'fn': '_.bindAll(bindAllObjects[++bindAllCount])',
-        'teardown': 'function bindAll(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.clone` with an array')
-      .add(buildName, '\
-        lodash.clone(numbers)'
-      )
-      .add(otherName, '\
-        _.clone(numbers)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.clone` with an object')
-      .add(buildName, '\
-        lodash.clone(object)'
-      )
-      .add(otherName, '\
-        _.clone(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.compact`')
-      .add(buildName, {
-        'fn': 'lodash.compact(uncompacted)',
-        'teardown': 'function compact(){}'
-      })
-      .add(otherName, {
-        'fn': '_.compact(uncompacted)',
-        'teardown': 'function compact(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.compose`')
-      .add(buildName, {
-        'fn': 'lodash.compose(compAddThree, compAddTwo, compAddOne)',
-        'teardown': 'function compose(){}'
-      })
-      .add(otherName, {
-        'fn': '_.compose(compAddThree, compAddTwo, compAddOne)',
-        'teardown': 'function compose(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('composed call')
-      .add(buildName, {
-        'fn': 'lodashComposed(0)',
-        'teardown': 'function compose(){}'
-      })
-      .add(otherName, {
-        'fn': '_composed(0)',
-        'teardown': 'function compose(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.countBy` with `callback` iterating an array')
-      .add(buildName, '\
-        lodash.countBy(numbers, function(num) { return num >> 1; })'
-      )
-      .add(otherName, '\
-        _.countBy(numbers, function(num) { return num >> 1; })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.countBy` with `property` name iterating an array')
-      .add(buildName, {
-        'fn': 'lodash.countBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '_.countBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.countBy` with `callback` iterating an object')
-      .add(buildName, {
-        'fn': 'lodash.countBy(wordToNumber, function(num) { return num >> 1; })',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '_.countBy(wordToNumber, function(num) { return num >> 1; })',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.defaults`')
-      .add(buildName, '\
-        lodash.defaults({ "key2": 2, "key6": 6, "key18": 18 }, object)'
-      )
-      .add(otherName, '\
-        _.defaults({ "key2": 2, "key6": 6, "key18": 18 }, object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.difference`')
-      .add(buildName, '\
-        lodash.difference(numbers, twoNumbers, fourNumbers)'
-      )
-      .add(otherName, '\
-        _.difference(numbers, twoNumbers, fourNumbers)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.difference` iterating 20 and 40 elements')
-      .add(buildName, {
-        'fn': 'lodash.difference(twentyValues, fortyValues)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.difference(twentyValues, fortyValues)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.difference` iterating 200 elements')
-      .add(buildName, {
-        'fn': 'lodash.difference(twoHundredValues, twoHundredValues2)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.difference(twoHundredValues, twoHundredValues2)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.each` iterating an array')
-      .add(buildName, '\
-        var result = [];\
-        lodash.each(numbers, function(num) {\
-          result.push(num * 2);\
-        })'
-      )
-      .add(otherName, '\
-        var result = [];\
-        _.each(numbers, function(num) {\
-          result.push(num * 2);\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.each` iterating an array with `thisArg` (slow path)')
-      .add(buildName, '\
-        var result = [];\
-        lodash.each(numbers, function(num, index) {\
-          result.push(num + this["key" + index]);\
-        }, object)'
-      )
-      .add(otherName, '\
-        var result = [];\
-        _.each(numbers, function(num, index) {\
-          result.push(num + this["key" + index]);\
-        }, object)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.each` iterating an object')
-      .add(buildName, '\
-        var result = [];\
-        lodash.each(object, function(num) {\
-          result.push(num * 2);\
-        })'
-      )
-      .add(otherName, '\
-        var result = [];\
-        _.each(object, function(num) {\
-          result.push(num * 2);\
-        })'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.every` iterating an array')
-      .add(buildName, '\
-        lodash.every(numbers, function(num) {\
-          return num < limit;\
-        })'
-      )
-      .add(otherName, '\
-        _.every(numbers, function(num) {\
-          return num < limit;\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.every` iterating an object')
-      .add(buildName, '\
-        lodash.every(object, function(num) {\
-          return num < limit;\
-        })'
-      )
-      .add(otherName, '\
-        _.every(object, function(num) {\
-          return num < limit;\
-        })'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.filter` iterating an array')
-      .add(buildName, '\
-        lodash.filter(numbers, function(num) {\
-          return num % 2;\
-        })'
-      )
-      .add(otherName, '\
-        _.filter(numbers, function(num) {\
-          return num % 2;\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.filter` iterating an array with `thisArg` (slow path)')
-      .add(buildName, '\
-        lodash.filter(numbers, function(num, index) {\
-          return this["key" + index] % 2;\
-        }, object)'
-      )
-      .add(otherName, '\
-        _.filter(numbers, function(num, index) {\
-           return this["key" + index] % 2;\
-        }, object)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.filter` iterating an object')
-      .add(buildName, '\
-        lodash.filter(object, function(num) {\
-          return num % 2\
-        })'
-      )
-      .add(otherName, '\
-        _.filter(object, function(num) {\
-          return num % 2\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.filter` with `_.matches` predicate')
-      .add(buildName, {
-        'fn': 'lodash.filter(objects, lodashMatcher)',
-        'teardown': 'function matches(){}'
-      })
-      .add(otherName, {
-        'fn': '_.filter(objects, _matcher)',
-        'teardown': 'function matches(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.find` iterating an array')
-      .add(buildName, '\
-        lodash.find(numbers, function(num) {\
-          return num === (limit - 1);\
-        })'
-      )
-      .add(otherName, '\
-        _.find(numbers, function(num) {\
-          return num === (limit - 1);\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.find` iterating an object')
-      .add(buildName, '\
-        lodash.find(object, function(value, key) {\
-          return /\D9$/.test(key);\
-        })'
-      )
-      .add(otherName, '\
-        _.find(object, function(value, key) {\
-          return /\D9$/.test(key);\
-        })'
-      )
-  );
-
-  // Avoid Underscore induced `OutOfMemoryError` in Rhino and Ringo.
-  if (!isJava) {
-    suites.push(
-      Benchmark.Suite('`_.find` with `_.matches` shorthand')
-        .add(buildName, {
-          'fn': 'lodashFindWhere(objects, source)',
-          'teardown': 'function matches(){}'
-        })
-        .add(otherName, {
-          'fn': '_findWhere(objects, source)',
-          'teardown': 'function matches(){}'
-        })
-    );
-  }
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.flatten`')
-      .add(buildName, {
-        'fn': 'lodash.flatten(nestedNumbers, !lodashFlattenDeep)',
-        'teardown': 'function flatten(){}'
-      })
-      .add(otherName, {
-        'fn': '_.flatten(nestedNumbers, !_flattenDeep)',
-        'teardown': 'function flatten(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.flatten` nested arrays of numbers with `isDeep`')
-      .add(buildName, {
-        'fn': 'lodash.flatten(nestedNumbers, lodashFlattenDeep)',
-        'teardown': 'function flatten(){}'
-      })
-      .add(otherName, {
-        'fn': '_.flatten(nestedNumbers, _flattenDeep)',
-        'teardown': 'function flatten(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.flatten` nest arrays of objects with `isDeep`')
-      .add(buildName, {
-        'fn': 'lodash.flatten(nestedObjects, lodashFlattenDeep)',
-        'teardown': 'function flatten(){}'
-      })
-      .add(otherName, {
-        'fn': '_.flatten(nestedObjects, _flattenDeep)',
-        'teardown': 'function flatten(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.functions`')
-      .add(buildName, '\
-        lodash.functions(lodash)'
-      )
-      .add(otherName, '\
-        _.functions(lodash)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.groupBy` with `callback` iterating an array')
-      .add(buildName, '\
-        lodash.groupBy(numbers, function(num) { return num >> 1; })'
-      )
-      .add(otherName, '\
-        _.groupBy(numbers, function(num) { return num >> 1; })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.groupBy` with `property` name iterating an array')
-      .add(buildName, {
-        'fn': 'lodash.groupBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '_.groupBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.groupBy` with `callback` iterating an object')
-      .add(buildName, {
-        'fn': 'lodash.groupBy(wordToNumber, function(num) { return num >> 1; })',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '_.groupBy(wordToNumber, function(num) { return num >> 1; })',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.includes` searching an array')
-      .add(buildName, '\
-        lodash.include(numbers, limit - 1)'
-      )
-      .add(otherName, '\
-        _.include(numbers, limit - 1)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.includes` searching an object')
-      .add(buildName, '\
-        lodash.include(object, limit - 1)'
-      )
-      .add(otherName, '\
-        _.include(object, limit - 1)'
-      )
-  );
-
-  if (lodash.include('ab', 'ab') && _.include('ab', 'ab')) {
-    suites.push(
-      Benchmark.Suite('`_.includes` searching a string')
-        .add(buildName, '\
-          lodash.include(strNumbers, "," + (limit - 1))'
-        )
-        .add(otherName, '\
-          _.include(strNumbers, "," + (limit - 1))'
-        )
-    );
-  }
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.indexBy` with `callback` iterating an array')
-      .add(buildName, '\
-        lodash.indexBy(numbers, function(num) { return num >> 1; })'
-      )
-      .add(otherName, '\
-        _.indexBy(numbers, function(num) { return num >> 1; })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.indexBy` with `property` name iterating an array')
-      .add(buildName, {
-        'fn': 'lodash.indexBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '_.indexBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.indexBy` with `callback` iterating an object')
-      .add(buildName, {
-        'fn': 'lodash.indexBy(wordToNumber, function(num) { return num >> 1; })',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '_.indexBy(wordToNumber, function(num) { return num >> 1; })',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.indexOf`')
-      .add(buildName, {
-        'fn': 'lodash.indexOf(hundredSortedValues, 99)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.indexOf(hundredSortedValues, 99)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.indexOf` performing a binary search')
-      .add(buildName, {
-        'fn': 'lodash.indexOf(hundredSortedValues, 99, true)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.indexOf(hundredSortedValues, 99, true)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.intersection`')
-      .add(buildName, '\
-        lodash.intersection(numbers, twoNumbers, fourNumbers)'
-      )
-      .add(otherName, '\
-        _.intersection(numbers, twoNumbers, fourNumbers)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.intersection` iterating 120 elements')
-      .add(buildName, {
-        'fn': 'lodash.intersection(hundredTwentyValues, hundredTwentyValues2)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.intersection(hundredTwentyValues, hundredTwentyValues2)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.invert`')
-      .add(buildName, '\
-        lodash.invert(object)'
-      )
-      .add(otherName, '\
-        _.invert(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.invoke` iterating an array')
-      .add(buildName, '\
-        lodash.invoke(numbers, "toFixed")'
-      )
-      .add(otherName, '\
-        _.invoke(numbers, "toFixed")'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.invoke` with arguments iterating an array')
-      .add(buildName, '\
-        lodash.invoke(numbers, "toFixed", 1)'
-      )
-      .add(otherName, '\
-        _.invoke(numbers, "toFixed", 1)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.invoke` with a function for `path` iterating an array')
-      .add(buildName, '\
-        lodash.invoke(numbers, Number.prototype.toFixed, 1)'
-      )
-      .add(otherName, '\
-        _.invoke(numbers, Number.prototype.toFixed, 1)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.invoke` iterating an object')
-      .add(buildName, '\
-        lodash.invoke(object, "toFixed", 1)'
-      )
-      .add(otherName, '\
-        _.invoke(object, "toFixed", 1)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.isEqual` comparing primitives')
-      .add(buildName, {
-        'fn': '\
-          lodash.isEqual(1, "1");\
-          lodash.isEqual(1, 1)',
-        'teardown': 'function isEqual(){}'
-      })
-      .add(otherName, {
-        'fn': '\
-          _.isEqual(1, "1");\
-          _.isEqual(1, 1);',
-        'teardown': 'function isEqual(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.isEqual` comparing primitives and their object counterparts (edge case)')
-      .add(buildName, {
-        'fn': '\
-          lodash.isEqual(objectOfPrimitives, objectOfObjects);\
-          lodash.isEqual(objectOfPrimitives, objectOfObjects2)',
-        'teardown': 'function isEqual(){}'
-      })
-      .add(otherName, {
-        'fn': '\
-          _.isEqual(objectOfPrimitives, objectOfObjects);\
-          _.isEqual(objectOfPrimitives, objectOfObjects2)',
-        'teardown': 'function isEqual(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.isEqual` comparing arrays')
-      .add(buildName, {
-        'fn': '\
-          lodash.isEqual(numbers, numbers2);\
-          lodash.isEqual(numbers2, numbers3)',
-        'teardown': 'function isEqual(){}'
-      })
-      .add(otherName, {
-        'fn': '\
-          _.isEqual(numbers, numbers2);\
-          _.isEqual(numbers2, numbers3)',
-        'teardown': 'function isEqual(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.isEqual` comparing nested arrays')
-      .add(buildName, {
-        'fn': '\
-          lodash.isEqual(nestedNumbers, nestedNumbers2);\
-          lodash.isEqual(nestedNumbers2, nestedNumbers3)',
-        'teardown': 'function isEqual(){}'
-      })
-      .add(otherName, {
-        'fn': '\
-          _.isEqual(nestedNumbers, nestedNumbers2);\
-          _.isEqual(nestedNumbers2, nestedNumbers3)',
-        'teardown': 'function isEqual(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.isEqual` comparing arrays of objects')
-      .add(buildName, {
-        'fn': '\
-          lodash.isEqual(objects, objects2);\
-          lodash.isEqual(objects2, objects3)',
-        'teardown': 'function isEqual(){}'
-      })
-      .add(otherName, {
-        'fn': '\
-          _.isEqual(objects, objects2);\
-          _.isEqual(objects2, objects3)',
-        'teardown': 'function isEqual(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.isEqual` comparing objects')
-      .add(buildName, {
-        'fn': '\
-          lodash.isEqual(object, object2);\
-          lodash.isEqual(object2, object3)',
-        'teardown': 'function isEqual(){}'
-      })
-      .add(otherName, {
-        'fn': '\
-          _.isEqual(object, object2);\
-          _.isEqual(object2, object3)',
-        'teardown': 'function isEqual(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.isArguments`, `_.isDate`, `_.isFunction`, `_.isNumber`, `_.isObject`, `_.isRegExp`')
-      .add(buildName, '\
-        lodash.isArguments(arguments);\
-        lodash.isArguments(object);\
-        lodash.isDate(date);\
-        lodash.isDate(object);\
-        lodash.isFunction(lodash);\
-        lodash.isFunction(object);\
-        lodash.isNumber(1);\
-        lodash.isNumber(object);\
-        lodash.isObject(object);\
-        lodash.isObject(1);\
-        lodash.isRegExp(regexp);\
-        lodash.isRegExp(object)'
-      )
-      .add(otherName, '\
-        _.isArguments(arguments);\
-        _.isArguments(object);\
-        _.isDate(date);\
-        _.isDate(object);\
-        _.isFunction(_);\
-        _.isFunction(object);\
-        _.isNumber(1);\
-        _.isNumber(object);\
-        _.isObject(object);\
-        _.isObject(1);\
-        _.isRegExp(regexp);\
-        _.isRegExp(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.keys` (uses native `Object.keys` if available)')
-      .add(buildName, '\
-        lodash.keys(object)'
-      )
-      .add(otherName, '\
-        _.keys(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.lastIndexOf`')
-      .add(buildName, {
-        'fn': 'lodash.lastIndexOf(hundredSortedValues, 0)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.lastIndexOf(hundredSortedValues, 0)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.lastIndexOf` performing a binary search')
-      .add(buildName, {
-        'fn': 'lodash.lastIndexOf(hundredSortedValues, 0, true)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.lastIndexOf(hundredSortedValues, 0, true)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.map` iterating an array')
-      .add(buildName, '\
-        lodash.map(objects, function(value) {\
-          return value.num;\
-        })'
-      )
-      .add(otherName, '\
-        _.map(objects, function(value) {\
-          return value.num;\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.map` with `thisArg` iterating an array (slow path)')
-      .add(buildName, '\
-        lodash.map(objects, function(value, index) {\
-          return this["key" + index] + value.num;\
-        }, object)'
-      )
-      .add(otherName, '\
-        _.map(objects, function(value, index) {\
-          return this["key" + index] + value.num;\
-        }, object)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.map` iterating an object')
-      .add(buildName, '\
-        lodash.map(object, function(value) {\
-          return value;\
-        })'
-      )
-      .add(otherName, '\
-        _.map(object, function(value) {\
-          return value;\
-        })'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.max`')
-      .add(buildName, '\
-        lodash.max(numbers)'
-      )
-      .add(otherName, '\
-        _.max(numbers)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.min`')
-      .add(buildName, '\
-        lodash.min(numbers)'
-      )
-      .add(otherName, '\
-        _.min(numbers)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.omit` iterating 20 properties, omitting 2 keys')
-      .add(buildName, '\
-        lodash.omit(object, "key6", "key13")'
-      )
-      .add(otherName, '\
-        _.omit(object, "key6", "key13")'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.omit` iterating 40 properties, omitting 20 keys')
-      .add(buildName, {
-        'fn': 'lodash.omit(wordToNumber, words)',
-        'teardown': 'function omit(){}'
-      })
-      .add(otherName, {
-        'fn': '_.omit(wordToNumber, words)',
-        'teardown': 'function omit(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.pairs`')
-      .add(buildName, '\
-        lodash.pairs(object)'
-      )
-      .add(otherName, '\
-        _.pairs(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.partial` (slow path)')
-      .add(buildName, {
-        'fn': 'lodash.partial(function(greeting) { return greeting + " " + this.name; }, "hi")',
-        'teardown': 'function partial(){}'
-      })
-      .add(otherName, {
-        'fn': '_.partial(function(greeting) { return greeting + " " + this.name; }, "hi")',
-        'teardown': 'function partial(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('partially applied call with arguments')
-      .add(buildName, {
-        'fn': 'lodashPartial("!")',
-        'teardown': 'function partial(){}'
-      })
-      .add(otherName, {
-        'fn': '_partial("!")',
-        'teardown': 'function partial(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.partition` iterating an array')
-      .add(buildName, '\
-        lodash.partition(numbers, function(num) {\
-          return num % 2;\
-        })'
-      )
-      .add(otherName, '\
-        _.partition(numbers, function(num) {\
-          return num % 2;\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.partition` iterating an array with `thisArg` (slow path)')
-      .add(buildName, '\
-        lodash.partition(numbers, function(num, index) {\
-          return this["key" + index] % 2;\
-        }, object)'
-      )
-      .add(otherName, '\
-        _.partition(numbers, function(num, index) {\
-           return this["key" + index] % 2;\
-        }, object)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.partition` iterating an object')
-      .add(buildName, '\
-        lodash.partition(object, function(num) {\
-          return num % 2;\
-        })'
-      )
-      .add(otherName, '\
-        _.partition(object, function(num) {\
-          return num % 2;\
-        })'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.pick`')
-      .add(buildName, '\
-        lodash.pick(object, "key6", "key13")'
-      )
-      .add(otherName, '\
-        _.pick(object, "key6", "key13")'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.pluck`')
-      .add(buildName, '\
-        lodash.pluck(objects, "num")'
-      )
-      .add(otherName, '\
-        _.pluck(objects, "num")'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.reduce` iterating an array')
-      .add(buildName, '\
-        lodash.reduce(numbers, function(result, value, index) {\
-          result[index] = value;\
-          return result;\
-        }, {})'
-      )
-      .add(otherName, '\
-        _.reduce(numbers, function(result, value, index) {\
-          result[index] = value;\
-          return result;\
-        }, {})'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.reduce` iterating an object')
-      .add(buildName, '\
-        lodash.reduce(object, function(result, value, key) {\
-          result.push(key, value);\
-          return result;\
-        }, [])'
-      )
-      .add(otherName, '\
-        _.reduce(object, function(result, value, key) {\
-          result.push(key, value);\
-          return result;\
-        }, [])'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.reduceRight` iterating an array')
-      .add(buildName, '\
-        lodash.reduceRight(numbers, function(result, value, index) {\
-          result[index] = value;\
-          return result;\
-        }, {})'
-      )
-      .add(otherName, '\
-        _.reduceRight(numbers, function(result, value, index) {\
-          result[index] = value;\
-          return result;\
-        }, {})'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.reduceRight` iterating an object')
-      .add(buildName, '\
-        lodash.reduceRight(object, function(result, value, key) {\
-          result.push(key, value);\
-          return result;\
-        }, [])'
-      )
-      .add(otherName, '\
-        _.reduceRight(object, function(result, value, key) {\
-          result.push(key, value);\
-          return result;\
-        }, [])'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.reject` iterating an array')
-      .add(buildName, '\
-        lodash.reject(numbers, function(num) {\
-          return num % 2;\
-        })'
-      )
-      .add(otherName, '\
-        _.reject(numbers, function(num) {\
-          return num % 2;\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.reject` iterating an array with `thisArg` (slow path)')
-      .add(buildName, '\
-        lodash.reject(numbers, function(num, index) {\
-          return this["key" + index] % 2;\
-        }, object)'
-      )
-      .add(otherName, '\
-        _.reject(numbers, function(num, index) {\
-           return this["key" + index] % 2;\
-        }, object)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.reject` iterating an object')
-      .add(buildName, '\
-        lodash.reject(object, function(num) {\
-          return num % 2;\
-        })'
-      )
-      .add(otherName, '\
-        _.reject(object, function(num) {\
-          return num % 2;\
-        })'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.sample` with an `n`')
-      .add(buildName, '\
-        lodash.sample(numbers, limit / 2)'
-      )
-      .add(otherName, '\
-        _.sample(numbers, limit / 2)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.shuffle`')
-      .add(buildName, '\
-        lodash.shuffle(numbers)'
-      )
-      .add(otherName, '\
-        _.shuffle(numbers)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.size` with an object')
-      .add(buildName, '\
-        lodash.size(object)'
-      )
-      .add(otherName, '\
-        _.size(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.some` iterating an array')
-      .add(buildName, '\
-        lodash.some(numbers, function(num) {\
-          return num == (limit - 1);\
-        })'
-      )
-      .add(otherName, '\
-        _.some(numbers, function(num) {\
-          return num == (limit - 1);\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.some` with `thisArg` iterating an array (slow path)')
-      .add(buildName, '\
-        lodash.some(objects, function(value, index) {\
-          return this["key" + index] == (limit - 1);\
-        }, object)'
-      )
-      .add(otherName, '\
-        _.some(objects, function(value, index) {\
-          return this["key" + index] == (limit - 1);\
-        }, object)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.some` iterating an object')
-      .add(buildName, '\
-        lodash.some(object, function(num) {\
-          return num == (limit - 1);\
-        })'
-      )
-      .add(otherName, '\
-        _.some(object, function(num) {\
-          return num == (limit - 1);\
-        })'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.sortBy` with `callback`')
-      .add(buildName, '\
-        lodash.sortBy(numbers, function(num) { return Math.sin(num); })'
-      )
-      .add(otherName, '\
-        _.sortBy(numbers, function(num) { return Math.sin(num); })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.sortBy` with `callback` and `thisArg` (slow path)')
-      .add(buildName, '\
-        lodash.sortBy(numbers, function(num) { return this.sin(num); }, Math)'
-      )
-      .add(otherName, '\
-        _.sortBy(numbers, function(num) { return this.sin(num); }, Math)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.sortBy` with `property` name')
-      .add(buildName, {
-        'fn': 'lodash.sortBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '_.sortBy(words, "length")',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.sortedIndex`')
-      .add(buildName, '\
-        lodash.sortedIndex(numbers, limit)'
-      )
-      .add(otherName, '\
-        _.sortedIndex(numbers, limit)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.sortedIndex` with `callback`')
-      .add(buildName, {
-        'fn': '\
-          lodash.sortedIndex(words, "twenty-five", function(value) {\
-            return wordToNumber[value];\
-          })',
-        'teardown': 'function countBy(){}'
-      })
-      .add(otherName, {
-        'fn': '\
-          _.sortedIndex(words, "twenty-five", function(value) {\
-            return wordToNumber[value];\
-          })',
-        'teardown': 'function countBy(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.template` (slow path)')
-      .add(buildName, {
-        'fn': 'lodash.template(tpl)(tplData)',
-        'teardown': 'function template(){}'
-      })
-      .add(otherName, {
-        'fn': '_.template(tpl)(tplData)',
-        'teardown': 'function template(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('compiled template')
-      .add(buildName, {
-        'fn': 'lodashTpl(tplData)',
-        'teardown': 'function template(){}'
-      })
-      .add(otherName, {
-        'fn': '_tpl(tplData)',
-        'teardown': 'function template(){}'
-      })
-  );
-
-  suites.push(
-    Benchmark.Suite('compiled template without a with-statement')
-      .add(buildName, {
-        'fn': 'lodashTplVerbose(tplData)',
-        'teardown': 'function template(){}'
-      })
-      .add(otherName, {
-        'fn': '_tplVerbose(tplData)',
-        'teardown': 'function template(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.times`')
-      .add(buildName, '\
-        var result = [];\
-        lodash.times(limit, function(n) { result.push(n); })'
-      )
-      .add(otherName, '\
-        var result = [];\
-        _.times(limit, function(n) { result.push(n); })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.times` with `thisArg` (slow path)')
-      .add(buildName, '\
-        var result = [];\
-        lodash.times(limit, function(n) { result.push(this.sin(n)); }, Math)'
-      )
-      .add(otherName, '\
-        var result = [];\
-        _.times(limit, function(n) { result.push(this.sin(n)); }, Math)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.toArray` with an array (edge case)')
-      .add(buildName, '\
-        lodash.toArray(numbers)'
-      )
-      .add(otherName, '\
-        _.toArray(numbers)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.toArray` with an object')
-      .add(buildName, '\
-        lodash.toArray(object)'
-      )
-      .add(otherName, '\
-        _.toArray(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.unescape` string without html entities')
-      .add(buildName, '\
-        lodash.unescape("`&`, `<`, `>`, `\\"`, and `\'`")'
-      )
-      .add(otherName, '\
-        _.unescape("`&`, `<`, `>`, `\\"`, and `\'`")'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.unescape` string with html entities')
-      .add(buildName, '\
-        lodash.unescape("`&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;`")'
-      )
-      .add(otherName, '\
-        _.unescape("`&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;`")'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.union`')
-      .add(buildName, '\
-        lodash.union(numbers, twoNumbers, fourNumbers)'
-      )
-      .add(otherName, '\
-        _.union(numbers, twoNumbers, fourNumbers)'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.union` iterating an array of 200 elements')
-      .add(buildName, {
-        'fn': 'lodash.union(hundredValues, hundredValues2)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.union(hundredValues, hundredValues2)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.uniq`')
-      .add(buildName, '\
-        lodash.uniq(numbers.concat(twoNumbers, fourNumbers))'
-      )
-      .add(otherName, '\
-        _.uniq(numbers.concat(twoNumbers, fourNumbers))'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.uniq` with `callback`')
-      .add(buildName, '\
-        lodash.uniq(numbers.concat(twoNumbers, fourNumbers), function(num) {\
-          return num % 2;\
-        })'
-      )
-      .add(otherName, '\
-        _.uniq(numbers.concat(twoNumbers, fourNumbers), function(num) {\
-          return num % 2;\
-        })'
-      )
-  );
-
-  suites.push(
-    Benchmark.Suite('`_.uniq` iterating an array of 200 elements')
-      .add(buildName, {
-        'fn': 'lodash.uniq(twoHundredValues)',
-        'teardown': 'function multiArrays(){}'
-      })
-      .add(otherName, {
-        'fn': '_.uniq(twoHundredValues)',
-        'teardown': 'function multiArrays(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.values`')
-      .add(buildName, '\
-        lodash.values(object)'
-      )
-      .add(otherName, '\
-        _.values(object)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.where`')
-      .add(buildName, {
-        'fn': 'lodash.where(objects, source)',
-        'teardown': 'function matches(){}'
-      })
-      .add(otherName, {
-        'fn': '_.where(objects, source)',
-        'teardown': 'function matches(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.without`')
-      .add(buildName, '\
-        lodash.without(numbers, 9, 12, 14, 15)'
-      )
-      .add(otherName, '\
-        _.without(numbers, 9, 12, 14, 15)'
-      )
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.wrap` result called')
-      .add(buildName, {
-        'fn': 'lodashWrapped(2, 5)',
-        'teardown': 'function wrap(){}'
-      })
-      .add(otherName, {
-        'fn': '_wrapped(2, 5)',
-        'teardown': 'function wrap(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  suites.push(
-    Benchmark.Suite('`_.zip`')
-      .add(buildName, {
-        'fn': 'lodash.zip.apply(lodash, unzipped)',
-        'teardown': 'function zip(){}'
-      })
-      .add(otherName, {
-        'fn': '_.zip.apply(_, unzipped)',
-        'teardown': 'function zip(){}'
-      })
-  );
-
-  /*--------------------------------------------------------------------------*/
-
-  if (Benchmark.platform + '') {
-    log(Benchmark.platform);
-  }
-  // Expose `run` to be called later when executing in a browser.
-  if (document) {
-    root.run = run;
-  } else {
-    run();
-  }
-}.call(this));

--- app/webroot/js/vendor/lodash/perf/run-perf.sh ---
@@ -1,14 +0,0 @@
-cd "$(dirname "$0")"
-
-echo "Running performance suite in node..."
-node perf.js ../lodash.js && node perf.js ../lodash.min.js
-
-for cmd in rhino "rhino -require" narwhal ringo phantomjs; do
-  echo ""
-  echo "Running performance suite in $cmd..."
-  $cmd perf.js ../lodash.src.js
-done
-
-echo ""
-echo "Running performance suite in a browser..."
-open index.html

--- app/webroot/js/vendor/lodash/test/asset/set.js ---
@@ -1,157 +0,0 @@
-;(function() {
-
-  /** Used to determine if values are of the language type Object. */
-  var objectTypes = {
-    'function': true,
-    'object': true
-  };
-
-  /** Used as the `Set#toString` return value. */
-  var nativeString = String(Object.prototype.toString).replace(/toString/g, 'Set');
-
-  /** Detect free variable `exports`. */
-  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;
-
-  /** Detect free variable `module`. */
-  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
-
-  /** Detect free variable `global` from Node.js. */
-  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;
-
-  /** Detect free variable `self`. */
-  var freeSelf = objectTypes[typeof self] && self && self.Object && self;
-
-  /** Detect free variable `window`. */
-  var freeWindow = objectTypes[typeof window] && window && window.Object && window;
-
-  /**
-   * Used as a reference to the global object.
-   *
-   * The `this` value is used if it is the global object to avoid Greasemonkey's
-   * restricted `window` object, otherwise the `window` object is used.
-   */
-  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;
-
-  /*--------------------------------------------------------------------------*/
-
-  /**
-   * Installs `Set` on the given `context` object.
-   *
-   * @memberOf exports
-   * @param {Object} context The context object.
-   */
-  function runInContext(context) {
-
-    /**
-     * Creates a `Set` object.
-     */
-    function Set() {
-      this.__cache__ = {};
-    }
-
-    /**
-     * Gets the index at which the first occurrence of `value` is found using
-     * strict equality for comparisons, i.e. `===`.
-     *
-     * @private
-     * @param {Array} array The array to search.
-     * @param {*} value The value to search for.
-     * @returns {number} Returns the index of the matched value or `-1`.
-     */
-    function indexOf(array, value) {
-      var index = -1,
-          length = array.length;
-
-      while (++index < length) {
-        if (array[index] === value) {
-          return index;
-        }
-      }
-      return -1;
-    }
-
-    /**
-     * Checks if `value` is in the set.
-     *
-     * @memberOf Set
-     * @param {*} value The value to search for.
-     * @returns {boolean} Returns `true` if `value` is found, else `false`.
-     */
-    function has(value) {
-      var type = typeof value,
-          cache = this.__cache__;
-
-      if (type == 'boolean' || value == null) {
-        return cache[value] || false;
-      }
-      if (type != 'number' && type != 'string') {
-        type = 'object';
-      }
-      var key = type == 'number' ? value : '_' + value;
-      cache = (cache = cache[type]) && cache[key];
-
-      return type == 'object'
-        ? (cache && indexOf(cache, value) > -1 ? true : false)
-        : (cache || false);
-    }
-
-    /**
-     * Adds `value` to the set.
-     *
-     * @memberOf Set
-     * @param {*} value The value to add.
-     */
-    function add(value) {
-      var cache = this.__cache__,
-          type = typeof value;
-
-      if (type == 'boolean' || value == null) {
-        cache[value] = true;
-      } else {
-        if (type != 'number' && type != 'string') {
-          type = 'object';
-        }
-        var key = type == 'number' ? value : '_' + value,
-            typeCache = cache[type] || (cache[type] = {});
-
-        if (type == 'object') {
-          var array = typeCache[key];
-          if (array) {
-            array.push(value);
-          } else {
-            typeCache[key] = [value];
-          }
-        } else {
-          typeCache[key] = true;
-        }
-      }
-    }
-
-    /**
-     * Produces the `toString` result of `Set`.
-     *
-     * @static
-     * @memberOf Set
-     * @returns {string} Returns the string result.
-     */
-    function toString() {
-      return nativeString;
-    }
-
-    Set.toString = toString;
-    Set.prototype.add = add;
-    Set.prototype.has = has;
-
-    if (!root.Set) {
-      context.Set = Set;
-    }
-  }
-
-  /*--------------------------------------------------------------------------*/
-
-  if (freeExports) {
-    freeExports.runInContext = runInContext;
-  } else {
-    runInContext(root);
-  }
-}.call(this));

--- app/webroot/js/vendor/lodash/test/asset/test-ui.js ---
@@ -1,173 +0,0 @@
-;(function(window) {
-  'use strict';
-
-  /** The base path of the lodash builds. */
-  var basePath = '../';
-
-  /** The lodash build to load. */
-  var build = (build = /build=([^&]+)/.exec(location.search)) && decodeURIComponent(build[1]);
-
-  /** The module loader to use. */
-  var loader = (loader = /loader=([^&]+)/.exec(location.search)) && decodeURIComponent(loader[1]);
-
-  /** The `ui` object. */
-  var ui = {};
-
-  /*--------------------------------------------------------------------------*/
-
-  /**
-   * Registers an event listener on an element.
-   *
-   * @private
-   * @param {Element} element The element.
-   * @param {string} eventName The name of the event.
-   * @param {Function} handler The event handler.
-   * @returns {Element} The element.
-   */
-  function addListener(element, eventName, handler) {
-    if (typeof element.addEventListener != 'undefined') {
-      element.addEventListener(eventName, handler, false);
-    } else if (typeof element.attachEvent != 'undefined') {
-      element.attachEvent('on' + eventName, handler);
-    }
-  }
-
-  /*--------------------------------------------------------------------------*/
-
-  // Initialize controls.
-  addListener(window, 'load', function() {
-    function eventHandler(event) {
-      var buildIndex = buildList.selectedIndex,
-          loaderIndex = loaderList.selectedIndex,
-          search = location.search.replace(/^\?|&?(?:build|loader)=[^&]*&?/g, '');
-
-      if (event.stopPropagation) {
-        event.stopPropagation();
-      } else {
-        event.cancelBubble = true;
-      }
-      location.href =
-        location.href.split('?')[0] + '?' +
-        (search ? search + '&' : '') +
-        'build=' + (buildIndex < 0 ? build : buildList[buildIndex].value) + '&' +
-        'loader=' + (loaderIndex < 0 ? loader : loaderList[loaderIndex].value);
-    }
-
-    function init() {
-      var toolbar = document.getElementById('qunit-testrunner-toolbar');
-      if (!toolbar) {
-        setTimeout(init, 15);
-        return;
-      }
-      toolbar.appendChild(span1);
-      toolbar.appendChild(span2);
-
-      buildList.selectedIndex = (function() {
-        switch (build) {
-          case 'lodash-compat':     return 1;
-          case 'lodash-modern-dev': return 2;
-          case 'lodash-modern':     return 3;
-          case 'lodash-custom-dev': return 4;
-          case 'lodash-custom':     return 5;
-          case 'lodash-compat-dev':
-          case null:                return 0;
-        }
-        return -1;
-      }());
-
-      loaderList.selectedIndex = (function() {
-        switch (loader) {
-          case 'curl':      return 1;
-          case 'dojo':      return 2;
-          case 'requirejs': return 3;
-          case 'none':
-          case null:        return 0;
-        }
-        return -1;
-      }());
-
-      addListener(buildList, 'change', eventHandler);
-      addListener(loaderList, 'change', eventHandler);
-    }
-
-    var span1 = document.createElement('span');
-    span1.style.cssText = 'float:right';
-    span1.innerHTML =
-      '<label for="qunit-build">Build: </label>' +
-      '<select id="qunit-build">' +
-      '<option value="lodash-compat-dev">lodash (compat development)</option>' +
-      '<option value="lodash-compat">lodash (compat production)</option>' +
-      '<option value="lodash-modern-dev">lodash (modern development)</option>' +
-      '<option value="lodash-modern">lodash (modern production)</option>' +
-      '<option value="lodash-custom-dev">lodash (custom development)</option>' +
-      '<option value="lodash-custom">lodash (custom production)</option>' +
-      '</select>';
-
-    var span2 = document.createElement('span');
-    span2.style.cssText = 'float:right';
-    span2.innerHTML =
-      '<label for="qunit-loader">Loader: </label>' +
-      '<select id="qunit-loader">' +
-      '<option value="none">None</option>' +
-      '<option value="curl">Curl</option>' +
-      '<option value="dojo">Dojo</option>' +
-      '<option value="requirejs">RequireJS</option>' +
-      '</select>';
-
-    var buildList = span1.lastChild,
-        loaderList = span2.lastChild;
-
-    setTimeout(function() {
-      ui.timing.loadEventEnd = +new Date;
-    }, 1);
-
-    init();
-  });
-
-  // Used to indicate testing a foreign file.
-  ui.isForeign = RegExp('^(\\w+:)?//').test(build);
-
-  // Used to indicate testing a modularized build.
-  ui.isModularize = /\b(?:amd|commonjs|es6?|node|npm|(index|main)\.js)\b/.test([location.pathname, location.search]);
-
-  // Used to indicate testing in Sauce Labs' automated test cloud.
-  ui.isSauceLabs = location.port == '9001';
-
-  // Used to indicate that lodash is in strict mode.
-  ui.isStrict = /\bes6?\b/.test([location.pathname, location.search]);
-
-  // The lodash build file path.
-  ui.buildPath = (function() {
-    var result;
-    switch (build) {
-      case 'lodash-compat':     result = 'lodash.compat.min.js'; break;
-      case 'lodash-modern-dev': result = 'lodash.js'; break;
-      case 'lodash-modern':     result = 'lodash.min.js'; break;
-      case 'lodash-custom-dev': result = 'lodash.custom.js'; break;
-      case 'lodash-custom':     result = 'lodash.custom.min.js'; break;
-      case null:                build  = 'lodash-compat-dev';
-      case 'lodash-compat-dev': result = 'lodash.src.js'; break;
-      default:                  return build;
-    }
-    return basePath + result;
-  }());
-
-  // The module loader file path.
-  ui.loaderPath = (function() {
-    var result;
-    switch (loader) {
-      case 'curl':      result = 'node_modules/curl-amd/dist/curl-kitchen-sink/curl.js'; break;
-      case 'dojo':      result = 'node_modules/dojo/dojo.js'; break;
-      case 'requirejs': result = 'node_modules/requirejs/require.js'; break;
-      case null:        loader = 'none'; return '';
-      default:          return loader;
-    }
-    return basePath + result;
-  }());
-
-  ui.urlParams = { 'build': build, 'loader': loader };
-  ui.timing = { 'loadEventEnd': 0 };
-
-  window.ui = ui;
-
-}(this));

--- app/webroot/js/vendor/lodash/test/asset/weakmap.js ---
@@ -1,102 +0,0 @@
-;(function() {
-
-  /** Used to determine if values are of the language type Object. */
-  var objectTypes = {
-    'function': true,
-    'object': true
-  };
-
-  /** Used as the `WeakMap#toString` return value. */
-  var nativeString = String(Object.prototype.toString).replace(/toString/g, 'WeakMap');
-
-  /** Detect free variable `exports`. */
-  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;
-
-  /** Detect free variable `module`. */
-  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
-
-  /** Detect free variable `global` from Node.js. */
-  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;
-
-  /** Detect free variable `self`. */
-  var freeSelf = objectTypes[typeof self] && self && self.Object && self;
-
-  /** Detect free variable `window`. */
-  var freeWindow = objectTypes[typeof window] && window && window.Object && window;
-
-  /**
-   * Used as a reference to the global object.
-   *
-   * The `this` value is used if it is the global object to avoid Greasemonkey's
-   * restricted `window` object, otherwise the `window` object is used.
-   */
-  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;
-
-  /*--------------------------------------------------------------------------*/
-
-  /**
-   * Installs `WeakMap` on the given `context` object.
-   *
-   * @memberOf exports
-   * @param {Object} context The context object.
-   */
-  function runInContext(context) {
-
-    /**
-     * Creates a `WeakMap` object.
-     */
-    function WeakMap() {
-      // No operation performed.
-    }
-
-    /**
-     * Gets the value associated with the given key.
-     *
-     * @memberOf WeakMap
-     * @param {Object} key The key object.
-     * @returns {*} Returns the associated value, else `undefined`.
-     */
-    function get(key) {
-      return key.__weakmap__;
-    }
-
-    /**
-     * Sets a value for the given key.
-     *
-     * @memberOf WeakMap
-     * @param {Object} key The key object.
-     * @param {*} value The value to set.
-     */
-    function set(key, value) {
-      key.__weakmap__ = value;
-      return this;
-    }
-
-    /**
-     * Produces the `toString` result of `WeakMap`.
-     *
-     * @static
-     * @memberOf WeakMap
-     * @returns {string} Returns the string result.
-     */
-    function toString() {
-      return nativeString;
-    }
-
-    WeakMap.toString = toString;
-    WeakMap.prototype.get = get;
-    WeakMap.prototype.set = set;
-
-    if (!root.WeakMap) {
-      context.WeakMap = WeakMap;
-    }
-  }
-
-  /*--------------------------------------------------------------------------*/
-
-  if (freeExports) {
-    freeExports.runInContext = runInContext;
-  } else {
-    runInContext(root);
-  }
-}.call(this));

--- app/webroot/js/vendor/lodash/test/asset/worker.js ---
@@ -1,12 +0,0 @@
-self.console || (self.console = { 'log': function() {} });
-
-addEventListener('message', function(e) {
-  if (e.data) {
-    try {
-      importScripts('../' + e.data);
-    } catch(e) {
-      self._ = { 'VERSION': e.message };
-    }
-    postMessage(_.VERSION);
-  }
-}, false);

--- app/webroot/js/vendor/lodash/test/backbone.html ---
@@ -1,133 +0,0 @@
-<!doctype html>
-<html lang="en">
-  <head>
-    <meta charset="utf-8">
-    <title>Backbone Test Suite</title>
-    <link rel="stylesheet" href="../node_modules/qunitjs/qunit/qunit.css">
-  </head>
-  <body>
-    <script>
-      // Avoid reporting tests to Sauce Labs when script errors occur.
-      if (location.port == '9001') {
-        window.onerror = function(message) {
-          if (window.QUnit) {
-            QUnit.config.done.length = 0;
-          }
-          global_test_results = { 'message': message };
-        };
-      }
-    </script>
-    <script src="../node_modules/qunitjs/qunit/qunit.js"></script>
-    <script src="../node_modules/qunit-extras/qunit-extras.js"></script>
-    <script src="../vendor/json-js/json2.js"></script>
-    <script src="../node_modules/platform/platform.js"></script>
-    <script src="./asset/test-ui.js"></script>
-    <script src="../lodash.src.js"></script>
-    <script>
-      var mixinPrereqs = (function() {
-        var lodash = _.noConflict();
-        return function(_) {
-          _.mixin({
-            'debounce': _.debounce || lodash.debounce,
-            'defer': _.defer || lodash.defer,
-            'pluck': _.pluck || lodash.pluck
-          });
-        };
-      }());
-
-      QUnit.config.asyncRetries = 10;
-      QUnit.config.hidepassed = true;
-
-      // Load test scripts.
-      document.write(ui.urlParams.loader != 'none'
-        ? '<script data-dojo-config="async:1" src="' + ui.loaderPath + '"><\/script>'
-        : ([
-          '<script src="' + ui.buildPath + '"><\/script>',
-          '<script src="../node_modules/jquery/dist/jquery.js"><\/script>',
-          '<script src="../vendor/backbone/backbone.js"><\/script>',
-          '<script src="../vendor/backbone/test/setup/dom-setup.js"><\/script>',
-          '<script src="../vendor/backbone/test/setup/environment.js"><\/script>',
-          '<script src="../vendor/backbone/test/noconflict.js"><\/script>',
-          '<script src="../vendor/backbone/test/events.js"><\/script>',
-          '<script src="../vendor/backbone/test/model.js"><\/script>',
-          '<script src="../vendor/backbone/test/collection.js"><\/script>',
-          '<script src="../vendor/backbone/test/router.js"><\/script>',
-          '<script src="../vendor/backbone/test/view.js"><\/script>',
-          '<script src="../vendor/backbone/test/sync.js"><\/script>'
-          ].join('\n'))
-      );
-    </script>
-    <script>
-      (function() {
-        if (window.curl) {
-          curl.config({ 'apiName': 'require' });
-        }
-        if (!window.require) {
-          mixinPrereqs(_);
-          return;
-        }
-        var reBasename = /[\w.-]+$/,
-            basePath = ('//' + location.host + location.pathname.replace(reBasename, '')).replace(/\btest\/$/, ''),
-            modulePath = ui.buildPath.replace(/\.js$/, ''),
-            locationPath = modulePath.replace(reBasename, '').replace(/^\/|\/$/g, ''),
-            moduleMain = modulePath.match(reBasename)[0],
-            uid = +new Date;
-
-        function getConfig() {
-          var result = {
-            'baseUrl': './',
-            'urlArgs': 't=' + uid++,
-            'waitSeconds': 0,
-            'paths': {
-              'backbone': '../vendor/backbone/backbone',
-              'jquery': '../node_modules/jquery/dist/jquery'
-            },
-            'packages': [{
-              'name': 'test',
-              'location': '../vendor/backbone/test',
-              'config': {
-                // Work around no global being exported.
-                'exports': 'QUnit',
-                'loader': 'curl/loader/legacy'
-              }
-            }]
-          };
-
-          if (ui.isModularize) {
-            result.packages.push({
-              'name': 'underscore',
-              'location': locationPath,
-              'main': moduleMain
-            });
-          } else {
-            result.paths.underscore = modulePath;
-          }
-          return result;
-        }
-
-        QUnit.config.autostart = false;
-
-        require(getConfig(), ['underscore', 'backbone'], function(lodash) {
-          mixinPrereqs(lodash);
-
-          if (ui.isModularize) {
-            window._ = lodash;
-          }
-          require(getConfig(), [
-            'test/setup/dom-setup',
-            'test/setup/environment',
-                  'test/noconflict',
-            'test/events',
-            'test/model',
-            'test/collection',
-            'test/router',
-            'test/view',
-            'test/sync'
-          ], function() {
-            QUnit.start();
-          });
-        });
-      }());
-    </script>
-  </body>
-</html>

--- app/webroot/js/vendor/lodash/test/index.html ---
@@ -1,319 +0,0 @@
-<!doctype html>
-<html lang="en">
-  <head>
-    <meta charset="utf-8">
-    <title>lodash Test Suite</title>
-    <link rel="stylesheet" href="../node_modules/qunitjs/qunit/qunit.css">
-    <style>
-      #exports {
-        display: none;
-      }
-    </style>
-  </head>
-  <body>
-    <script>
-      // Avoid reporting tests to Sauce Labs when script errors occur.
-      if (location.port == '9001') {
-        window.onerror = function(message) {
-          if (window.QUnit) {
-            QUnit.config.done.length = 0;
-          }
-          global_test_results = { 'message': message };
-        };
-      }
-    </script>
-    <script src="../node_modules/qunitjs/qunit/qunit.js"></script>
-    <script src="../node_modules/qunit-extras/qunit-extras.js"></script>
-    <script src="../node_modules/platform/platform.js"></script>
-    <script src="./asset/set.js"></script>
-    <script src="./asset/weakmap.js"></script>
-    <script src="./asset/test-ui.js"></script>
-    <div id="qunit"></div>
-    <div id="exports"></div>
-    <script>
-      var setProperty = (function() {
-        var _defineProperty = Object.defineProperty;
-        return function(object, key, value) {
-          try {
-            _defineProperty(object, key, {
-              'configurable': true,
-              'enumerable': false,
-              'writable': true,
-              'value': value
-            });
-          } catch(e) {
-            object[key] = value;
-          }
-        };
-      }());
-
-      function addBizarroMethods() {
-        var funcProto = Function.prototype,
-            objectProto = Object.prototype,
-            stringProto = String.prototype;
-
-        var hasOwnProperty = objectProto.hasOwnProperty,
-            fnToString = funcProto.toString,
-            nativeString = fnToString.call(objectProto.toString),
-            noop = function() {},
-            propertyIsEnumerable = objectProto.propertyIsEnumerable,
-            reToString = /toString/g;
-
-        function constant(value) {
-          return function() {
-            return value;
-          };
-        }
-        function createToString(funcName) {
-          return constant(nativeString.replace(reToString, funcName));
-        }
-        // Allow bypassing native checks.
-        setProperty(funcProto, 'toString', (function() {
-          function wrapper() {
-            setProperty(funcProto, 'toString', fnToString);
-            var result = hasOwnProperty.call(this, 'toString') ? this.toString() : fnToString.call(this);
-            setProperty(funcProto, 'toString', wrapper);
-            return result;
-          }
-          return wrapper;
-        }()));
-
-        // Add prototype extensions.
-        funcProto._method = noop;
-
-        // Set bad shims.
-        setProperty(Array, '_isArray', Array.isArray);
-        setProperty(Array, 'isArray', noop);
-
-        setProperty(Date, '_now', Date.now);
-        setProperty(Date, 'now', noop);
-
-        setProperty(Object, '_keys', Object.keys);
-        setProperty(Object, 'keys', noop);
-
-        setProperty(objectProto, '_propertyIsEnumerable', propertyIsEnumerable);
-        setProperty(objectProto, 'propertyIsEnumerable', function(key) {
-          if (key == '1' && this && typeof this == 'object' &&
-              hasOwnProperty.call(this, 'callee') &&
-              !propertyIsEnumerable.call(this, 'callee') &&
-              this.length === 2 && this[0] === 1 && this[1] === 0) {
-            throw new Error;
-          }
-          return propertyIsEnumerable.call(this, key);
-        });
-
-        setProperty(window, '_Set', window.Set);
-        setProperty(window, 'Set', noop);
-
-        setProperty(window, '_WeakMap', window.WeakMap);
-        setProperty(window, 'WeakMap', noop);
-
-        // Fake `WinRTError`.
-        setProperty(window, 'WinRTError', Error);
-
-        // Fake free variable `global`.
-        setProperty(window, 'exports', window);
-        setProperty(window, 'global', window);
-        setProperty(window, 'module', {});
-      }
-
-      function removeBizarroMethods() {
-        var funcProto = Function.prototype,
-            objectProto = Object.prototype,
-            stringProto = String.prototype;
-
-        if (Array._isArray) {
-          setProperty(Array, 'isArray', Array._isArray);
-        } else {
-          delete Array.isArray;
-        }
-        if (Date._now) {
-          setProperty(Date, 'now', Date._now);
-        } else {
-          delete Date.now;
-        }
-        if (Object._keys) {
-          setProperty(Object, 'keys', Object._keys);
-        } else {
-          delete Object.keys;
-        }
-        if (window._Set) {
-          Set = _Set;
-        }
-        setProperty(window, '_Set', undefined);
-
-        if (window._WeakMap) {
-          WeakMap = _WeakMap;
-        }
-        setProperty(window, '_WeakMap', undefined);
-
-        setProperty(window, 'WinRTError', undefined);
-
-        setProperty(window, 'exports', undefined);
-        setProperty(window, 'global', undefined);
-        setProperty(window, 'module', undefined);
-
-        setProperty(objectProto, 'propertyIsEnumerable', objectProto._propertyIsEnumerable);
-
-        delete Array._isArray;
-        delete Date._now;
-        delete Object._keys;
-        delete funcProto._method;
-        delete objectProto._propertyIsEnumerable;
-      }
-
-      // Load lodash to expose it to the bad extensions/shims.
-      if (!ui.isModularize) {
-        addBizarroMethods();
-        document.write('<script src="' + ui.buildPath + '"><\/script>');
-      }
-    </script>
-    <script>
-      // Store lodash to test for bad extensions/shims.
-      if (!ui.isModularize) {
-        var lodashBizarro = window._;
-        window._ = undefined;
-        removeBizarroMethods();
-      }
-      // Load test scripts.
-      document.write((ui.isForeign || ui.urlParams.loader == 'none')
-        ? '<script src="' + ui.buildPath + '"><\/script><script src="test.js"><\/script>'
-        : '<script data-dojo-config="async:1" src="' + ui.loaderPath + '"><\/script>'
-      );
-    </script>
-    <script>
-      var lodashModule,
-          shimmedModule,
-          underscoreModule;
-
-      (function() {
-        if (window.curl) {
-          curl.config({ 'apiName': 'require' });
-        }
-        if (ui.isForeign || !window.require) {
-          return;
-        }
-        var reBasename = /[\w.-]+$/,
-            basePath = ('//' + location.host + location.pathname.replace(reBasename, '')).replace(/\btest\/$/, ''),
-            modulePath = ui.buildPath.replace(/\.js$/, ''),
-            moduleMain = modulePath.match(reBasename)[0],
-            locationPath = modulePath.replace(reBasename, '').replace(/^\/|\/$/g, ''),
-            shimmedLocationPath = './abc/../' + locationPath,
-            underscoreLocationPath = './xyz/../' + locationPath,
-            uid = +new Date;
-
-        function getConfig() {
-          var result = {
-            'baseUrl': './',
-            'urlArgs': 't=' + uid++,
-            'waitSeconds': 0,
-            'paths': {},
-            'packages': [{
-              'name': 'test',
-              'location': basePath + 'test',
-              'main': 'test',
-              'config': {
-                // Work around no global being exported.
-                'exports': 'QUnit',
-                'loader': 'curl/loader/legacy'
-              }
-            }],
-            'shim': {
-              'shimmed': {
-                'exports': '_'
-              }
-            }
-          };
-
-          if (ui.isModularize) {
-            result.packages.push({
-              'name': 'lodash',
-              'location': locationPath,
-              'main': moduleMain
-            }, {
-              'name': 'shimmed',
-              'location': shimmedLocationPath,
-              'main': moduleMain
-            }, {
-              'name': 'underscore',
-              'location': underscoreLocationPath,
-              'main': moduleMain
-            });
-          } else {
-            result.paths.lodash = modulePath;
-            result.paths.shimmed = shimmedLocationPath + '/' + moduleMain;
-            result.paths.underscore = underscoreLocationPath + '/' + moduleMain;
-          }
-          return result;
-        }
-
-        function loadTests() {
-          require(getConfig(), ['test'], function() {
-            QUnit.start();
-          });
-        }
-
-        function loadModulesAndTests() {
-          require(getConfig(), ['lodash', 'shimmed', 'underscore'], function(lodash, shimmed, underscore) {
-            lodashModule = lodash;
-            lodashModule.moduleName = 'lodash';
-
-            if (shimmed) {
-              shimmedModule = shimmed.result(shimmed, 'noConflict') || shimmed;
-              shimmedModule.moduleName = 'shimmed';
-            }
-            if (underscore) {
-              underscoreModule = underscore.result(underscore, 'noConflict') || underscore;
-              underscoreModule.moduleName = 'underscore';
-            }
-            if (ui.isModularize) {
-              window._ = lodash;
-            }
-            if (ui.isModularize) {
-              require(getConfig(), [
-                'lodash/internal/baseEach',
-                'lodash/internal/isIndex',
-                'lodash/internal/isIterateeCall',
-                'lodash/internal/isLength'
-              ], function(baseEach, isIndex, isIterateeCall, isLength) {
-                lodash._baseEach = baseEach;
-                lodash._isIndex = isIndex;
-                lodash._isIterateeCall = isIterateeCall;
-                lodash._isLength = isLength;
-                loadTests();
-              });
-            } else {
-              loadTests();
-            }
-          });
-        }
-
-        QUnit.config.autostart = false;
-
-        if (window.requirejs) {
-          addBizarroMethods();
-          require(getConfig(), ['lodash'], function(lodash) {
-            lodashBizarro = lodash.result(lodash, 'noConflict') || lodash;
-            delete requirejs.s.contexts._;
-
-            removeBizarroMethods();
-            loadModulesAndTests();
-          });
-        } else {
-          loadModulesAndTests();
-        }
-      }());
-
-      // Set a more readable browser name.
-      window.onload = function() {
-        var timeoutId = setInterval(function() {
-          var ua = document.getElementById('qunit-userAgent');
-          if (ua) {
-            ua.innerHTML = platform;
-            clearInterval(timeoutId);
-          }
-        }, 16);
-      };
-    </script>
-  </body>
-</html>

--- app/webroot/js/vendor/lodash/test/run-test.sh ---
@@ -1,14 +0,0 @@
-cd "$(dirname "$0")"
-
-echo "Testing in node..."
-node test.js ../lodash.src.js
-
-for cmd in rhino "rhino -require" ringo phantomjs; do
-  echo ""
-  echo "Testing in $cmd..."
-  $cmd test.js ../lodash.src.js
-done
-
-echo ""
-echo "Testing in a browser..."
-open index.html

--- app/webroot/js/vendor/lodash/test/saucelabs.js ---
@@ -1,929 +0,0 @@
-#!/usr/bin/env node
-'use strict';
-
-/** Environment shortcut. */
-var env = process.env;
-
-if (env.TRAVIS_SECURE_ENV_VARS == 'false') {
-  console.log('Skipping Sauce Labs jobs; secure environment variables are unavailable');
-  process.exit(0);
-}
-
-/** Load Node.js modules. */
-var EventEmitter = require('events').EventEmitter,
-    http = require('http'),
-    path = require('path'),
-    url = require('url'),
-    util = require('util');
-
-/** Load other modules. */
-var _ = require('../lodash.src.js'),
-    chalk = require('chalk'),
-    ecstatic = require('ecstatic'),
-    request = require('request'),
-    SauceTunnel = require('sauce-tunnel');
-
-/** Used for Sauce Labs credentials. */
-var accessKey = env.SAUCE_ACCESS_KEY,
-    username = env.SAUCE_USERNAME;
-
-/** Used as the default maximum number of times to retry a job and tunnel. */
-var maxJobRetries = 3,
-    maxTunnelRetries = 3;
-
-/** Used as the static file server middleware. */
-var mount = ecstatic({
-  'cache': 'no-cache',
-  'root': process.cwd()
-});
-
-/** Used as the list of ports supported by Sauce Connect. */
-var ports = [
-  80, 443, 888, 2000, 2001, 2020, 2109, 2222, 2310, 3000, 3001, 3030, 3210,
-  3333, 4000, 4001, 4040, 4321, 4502, 4503, 4567, 5000, 5001, 5050, 5555, 5432,
-  6000, 6001, 6060, 6666, 6543, 7000, 7070, 7774, 7777, 8000, 8001, 8003, 8031,
-  8080, 8081, 8765, 8777, 8888, 9000, 9001, 9080, 9090, 9876, 9877, 9999, 49221,
-  55001
-];
-
-/** Used by `logInline` to clear previously logged messages. */
-var prevLine = '';
-
-/** Method shortcut. */
-var push = Array.prototype.push;
-
-/** Used to detect error messages. */
-var reError = /(?:\be|E)rror\b/;
-
-/** Used to detect valid job ids. */
-var reJobId = /^[a-z0-9]{32}$/;
-
-/** Used to display the wait throbber. */
-var throbberDelay = 500,
-    waitCount = -1;
-
-/**
- * Used as Sauce Labs config values.
- * See the [Sauce Labs documentation](https://docs.saucelabs.com/reference/test-configuration/)
- * for more details.
- */
-var advisor = getOption('advisor', false),
-    build = getOption('build', (env.TRAVIS_COMMIT || '').slice(0, 10)),
-    commandTimeout = getOption('commandTimeout', 90),
-    compatMode = getOption('compatMode', null),
-    customData = Function('return {' + getOption('customData', '').replace(/^\{|}$/g, '') + '}')(),
-    deviceOrientation = getOption('deviceOrientation', 'portrait'),
-    framework = getOption('framework', 'qunit'),
-    idleTimeout = getOption('idleTimeout', 60),
-    jobName = getOption('name', 'unit tests'),
-    maxDuration = getOption('maxDuration', 180),
-    port = ports[Math.min(_.sortedIndex(ports, getOption('port', 9001)), ports.length - 1)],
-    publicAccess = getOption('public', true),
-    queueTimeout = getOption('queueTimeout', 240),
-    recordVideo = getOption('recordVideo', true),
-    recordScreenshots = getOption('recordScreenshots', false),
-    runner = getOption('runner', 'test/index.html').replace(/^\W+/, ''),
-    runnerUrl = getOption('runnerUrl', 'http://localhost:' + port + '/' + runner),
-    statusInterval = getOption('statusInterval', 5),
-    tags = getOption('tags', []),
-    throttled = getOption('throttled', 10),
-    tunneled = getOption('tunneled', true),
-    tunnelId = getOption('tunnelId', 'tunnel_' + (env.TRAVIS_JOB_ID || 0)),
-    tunnelTimeout = getOption('tunnelTimeout', 120),
-    videoUploadOnPass = getOption('videoUploadOnPass', false);
-
-/** Used to convert Sauce Labs browser identifiers to their formal names. */
-var browserNameMap = {
-  'googlechrome': 'Chrome',
-  'iehta': 'Internet Explorer',
-  'ipad': 'iPad',
-  'iphone': 'iPhone'
-};
-
-/** List of platforms to load the runner on. */
-var platforms = [
-  ['Linux', 'android', '5.0'],
-  ['Linux', 'android', '4.4'],
-  ['Linux', 'android', '4.0'],
-  ['Windows 8.1', 'firefox', '37'],
-  ['Windows 8.1', 'firefox', '36'],
-  ['Windows 8.1', 'firefox', '20'],
-  ['Windows 8.1', 'chrome', '42'],
-  ['Windows 8.1', 'chrome', '41'],
-  ['Windows 8.1', 'internet explorer', '11'],
-  ['Windows 8', 'internet explorer', '10'],
-  ['Windows 7', 'internet explorer', '9'],
-  ['Windows 7', 'internet explorer', '8'],
-  ['Windows XP', 'internet explorer', '7'],
-  ['Windows XP', 'internet explorer', '6'],
-  ['OS X 10.9', 'ipad', '8.1'],
-  ['OS X 10.6', 'ipad', '4'],
-  ['OS X 10.10', 'safari', '8'],
-  ['OS X 10.9', 'safari', '7'],
-  ['OS X 10.8', 'safari', '6'],
-  ['OS X 10.6', 'safari', '5']
-];
-
-/** Used to tailor the `platforms` array. */
-var isAMD = _.includes(tags, 'amd'),
-    isBackbone = _.includes(tags, 'backbone'),
-    isModern = _.includes(tags, 'modern');
-
-// The platforms to test IE compatibility modes.
-if (compatMode) {
-  platforms = [
-    ['Windows 8.1', 'internet explorer', '11'],
-    ['Windows 8', 'internet explorer', '10'],
-    ['Windows 7', 'internet explorer', '9'],
-    ['Windows 7', 'internet explorer', '8']
-  ];
-}
-// The platforms for AMD tests.
-if (isAMD) {
-  platforms = _.filter(platforms, function(platform) {
-    var browser = browserName(platform[1]),
-        version = +platform[2];
-
-    switch (browser) {
-      case 'Android': return version >= 4.4;
-      case 'Opera': return version >= 10;
-    }
-    return true;
-  });
-}
-// The platforms for Backbone tests.
-if (isBackbone) {
-  platforms = _.filter(platforms, function(platform) {
-    var browser = browserName(platform[1]),
-        version = +platform[2];
-
-    switch (browser) {
-      case 'Firefox': return version >= 4;
-      case 'Internet Explorer': return version >= 7;
-      case 'iPad': return version >= 5;
-      case 'Opera': return version >= 12;
-    }
-    return true;
-  });
-}
-// The platforms for modern builds.
-if (isModern) {
-  platforms = _.filter(platforms, function(platform) {
-    var browser = browserName(platform[1]),
-        version = +platform[2];
-
-    switch (browser) {
-      case 'Android': return version >= 4.1;
-      case 'Firefox': return version >= 10;
-      case 'Internet Explorer': return version >= 9;
-      case 'iPad': return version >= 6;
-      case 'Opera': return version >= 12;
-      case 'Safari': return version >= 6;
-    }
-    return true;
-  });
-}
-
-/** Used as the default `Job` options object. */
-var jobOptions = {
-  'build': build,
-  'command-timeout': commandTimeout,
-  'custom-data': customData,
-  'device-orientation': deviceOrientation,
-  'framework': framework,
-  'idle-timeout': idleTimeout,
-  'max-duration': maxDuration,
-  'name': jobName,
-  'public': publicAccess,
-  'platforms': platforms,
-  'record-screenshots': recordScreenshots,
-  'record-video': recordVideo,
-  'sauce-advisor': advisor,
-  'tags': tags,
-  'url': runnerUrl,
-  'video-upload-on-pass': videoUploadOnPass
-};
-
-if (publicAccess === true) {
-  jobOptions['public'] = 'public';
-}
-if (tunneled) {
-  jobOptions['tunnel-identifier'] = tunnelId;
-}
-
-/*----------------------------------------------------------------------------*/
-
-/**
- * Resolves the formal browser name for a given Sauce Labs browser identifier.
- *
- * @private
- * @param {string} identifier The browser identifier.
- * @returns {string} Returns the formal browser name.
- */
-function browserName(identifier) {
-  return browserNameMap[identifier] || capitalizeWords(identifier);
-}
-
-/**
- * Capitalizes the first character of each word in `string`.
- *
- * @private
- * @param {string} string The string to augment.
- * @returns {string} Returns the augmented string.
- */
-function capitalizeWords(string) {
-  return _.map(string.split(' '), _.capitalize).join(' ');
-}
-
-/**
- * Gets the value for the given option name. If no value is available the
- * `defaultValue` is returned.
- *
- * @private
- * @param {string} name The name of the option.
- * @param {*} defaultValue The default option value.
- * @returns {*} Returns the option value.
- */
-function getOption(name, defaultValue) {
-  var isArr = _.isArray(defaultValue);
-  return _.reduce(process.argv, function(result, value) {
-    if (isArr) {
-      value = optionToArray(name, value);
-      return _.isEmpty(value) ? result : value;
-    }
-    value = optionToValue(name, value);
-
-    return value == null ? result : value;
-  }, defaultValue);
-}
-
-/**
- * Checks if `value` is a job ID.
- *
- * @private
- * @param {*} value The value to check.
- * @returns {boolean} Returns `true` if `value` is a job ID, else `false`.
- */
-function isJobId(value) {
-  return reJobId.test(value);
-}
-
-/**
- * Writes an inline message to standard output.
- *
- * @private
- * @param {string} [text=''] The text to log.
- */
-function logInline(text) {
-  var blankLine = _.repeat(' ', _.size(prevLine));
-  prevLine = text = _.trunc(text, 40);
-  process.stdout.write(text + blankLine.slice(text.length) + '\r');
-}
-
-/**
- * Writes the wait throbber to standard output.
- *
- * @private
- */
-function logThrobber() {
-  logInline('Please wait' + _.repeat('.', (++waitCount % 3) + 1));
-}
-
-/**
- * Converts a comma separated option value into an array.
- *
- * @private
- * @param {string} name The name of the option to inspect.
- * @param {string} string The options string.
- * @returns {Array} Returns the new converted array.
- */
-function optionToArray(name, string) {
-  return _.compact(_.invoke((optionToValue(name, string) || '').split(/, */), 'trim'));
-}
-
-/**
- * Extracts the option value from an option string.
- *
- * @private
- * @param {string} name The name of the option to inspect.
- * @param {string} string The options string.
- * @returns {string|undefined} Returns the option value, else `undefined`.
- */
-function optionToValue(name, string) {
-  var result = string.match(RegExp('^' + name + '(?:=([\\s\\S]+))?$'));
-  if (result) {
-    result = _.result(result, 1);
-    result = result ? _.trim(result) : true;
-  }
-  if (result === 'false') {
-    return false;
-  }
-  return result || undefined;
-}
-
-/*----------------------------------------------------------------------------*/
-
-/**
- * The `Job#remove` and `Tunnel#stop` callback used by `Jobs#restart`
- * and `Tunnel#restart` respectively.
- *
- * @private
- */
-function onGenericRestart() {
-  this.restarting = false;
-  this.emit('restart');
-  this.start();
-}
-
-/**
- * The `request.put` and `SauceTunnel#stop` callback used by `Jobs#stop`
- * and `Tunnel#stop` respectively.
- *
- * @private
- * @param {Object} [error] The error object.
- */
-function onGenericStop(error) {
-  this.running = this.stopping = false;
-  this.emit('stop', error);
-}
-
-/**
- * The `request.del` callback used by `Jobs#remove`.
- *
- * @private
- */
-function onJobRemove(error, res, body) {
-  this.id = this.taskId = this.url = null;
-  this.removing = false;
-  this.emit('remove');
-}
-
-/**
- * The `Job#remove` callback used by `Jobs#reset`.
- *
- * @private
- */
-function onJobReset() {
-  this.attempts = 0;
-  this.failed = this.resetting = false;
-  this._pollerId = this.id = this.result = this.taskId = this.url = null;
-  this.emit('reset');
-}
-
-/**
- * The `request.post` callback used by `Jobs#start`.
- *
- * @private
- * @param {Object} [error] The error object.
- * @param {Object} res The response data object.
- * @param {Object} body The response body JSON object.
- */
-function onJobStart(error, res, body) {
-  this.starting = false;
-
-  if (this.stopping) {
-    return;
-  }
-  var statusCode = _.result(res, 'statusCode'),
-      taskId = _.first(_.result(body, 'js tests'));
-
-  if (error || !taskId || statusCode != 200) {
-    if (this.attempts < this.retries) {
-      this.restart();
-      return;
-    }
-    var na = 'unavailable',
-        bodyStr = _.isObject(body) ? '\n' + JSON.stringify(body) : na,
-        statusStr = _.isFinite(statusCode) ? statusCode : na;
-
-    logInline();
-    console.error('Failed to start job; status: %s, body: %s', statusStr, bodyStr);
-    if (error) {
-      console.error(error);
-    }
-    this.failed = true;
-    this.emit('complete');
-    return;
-  }
-  this.running = true;
-  this.taskId = taskId;
-  this.timestamp = _.now();
-  this.emit('start');
-  this.status();
-}
-
-/**
- * The `request.post` callback used by `Job#status`.
- *
- * @private
- * @param {Object} [error] The error object.
- * @param {Object} res The response data object.
- * @param {Object} body The response body JSON object.
- */
-function onJobStatus(error, res, body) {
-  this.checking = false;
-
-  if (!this.running || this.stopping) {
-    return;
-  }
-  var completed = _.result(body, 'completed', false),
-      data = _.first(_.result(body, 'js tests')),
-      elapsed = (_.now() - this.timestamp) / 1000,
-      jobId = _.result(data, 'job_id', null),
-      jobResult = _.result(data, 'result', null),
-      jobStatus = _.result(data, 'status', ''),
-      jobUrl = _.result(data, 'url', null),
-      expired = (elapsed >= queueTimeout && !_.includes(jobStatus, 'in progress')),
-      options = this.options,
-      platform = options.platforms[0];
-
-  if (_.isObject(jobResult)) {
-    var message = _.result(jobResult, 'message');
-  } else {
-    if (typeof jobResult == 'string') {
-      message = jobResult;
-    }
-    jobResult = null;
-  }
-  if (isJobId(jobId)) {
-    this.id = jobId;
-    this.result = jobResult;
-    this.url = jobUrl;
-  } else {
-    completed = false;
-  }
-  this.emit('status', jobStatus);
-
-  if (!completed && !expired) {
-    this._pollerId = _.delay(_.bind(this.status, this), this.statusInterval * 1000);
-    return;
-  }
-  var description = browserName(platform[1]) + ' ' + platform[2] + ' on ' + capitalizeWords(platform[0]),
-      errored = !jobResult || !jobResult.passed || reError.test(message) || reError.test(jobStatus),
-      failures = _.result(jobResult, 'failed'),
-      label = options.name + ':',
-      tunnel = this.tunnel;
-
-  if (errored || failures) {
-    if (errored && this.attempts < this.retries) {
-      this.restart();
-      return;
-    }
-    var details = 'See ' + jobUrl + ' for details.';
-    this.failed = true;
-
-    logInline();
-    if (failures) {
-      console.error(label + ' %s ' + chalk.red('failed') + ' %d test' + (failures > 1 ? 's' : '') + '. %s', description, failures, details);
-    }
-    else if (tunnel.attempts < tunnel.retries) {
-      tunnel.restart();
-      return;
-    }
-    else {
-      if (typeof message == 'undefined') {
-        message = 'Results are unavailable. ' + details;
-      }
-      console.error(label, description, chalk.red('failed') + ';', message);
-    }
-  }
-  else {
-    logInline();
-    console.log(label, description, chalk.green('passed'));
-  }
-  this.running = false;
-  this.emit('complete');
-}
-
-/**
- * The `SauceTunnel#start` callback used by `Tunnel#start`.
- *
- * @private
- * @param {boolean} success The connection success indicator.
- */
-function onTunnelStart(success) {
-  this.starting = false;
-
-  if (this._timeoutId) {
-    clearTimeout(this._timeoutId);
-    this._timeoutId = null;
-  }
-  if (!success) {
-    if (this.attempts < this.retries) {
-      this.restart();
-      return;
-    }
-    logInline();
-    console.error('Failed to open Sauce Connect tunnel');
-    process.exit(2);
-  }
-  logInline();
-  console.log('Sauce Connect tunnel opened');
-
-  var jobs = this.jobs;
-  push.apply(jobs.queue, jobs.all);
-
-  this.running = true;
-  this.emit('start');
-
-  console.log('Starting jobs...');
-  this.dequeue();
-}
-
-/*----------------------------------------------------------------------------*/
-
-/**
- * The Job constructor.
- *
- * @private
- * @param {Object} [properties] The properties to initialize a job with.
- */
-function Job(properties) {
-  EventEmitter.call(this);
-
-  this.options = {};
-  _.merge(this, properties);
-  _.defaults(this.options, _.cloneDeep(jobOptions));
-
-  this.attempts = 0;
-  this.checking = this.failed = this.removing = this.resetting = this.restarting = this.running = this.starting = this.stopping = false;
-  this._pollerId = this.id = this.result = this.taskId = this.url = null;
-}
-
-util.inherits(Job, EventEmitter);
-
-/**
- * Removes the job.
- *
- * @memberOf Job
- * @param {Function} callback The function called once the job is removed.
- * @param {Object} Returns the job instance.
- */
-Job.prototype.remove = function(callback) {
-  this.once('remove', _.callback(callback));
-  if (this.removing) {
-    return this;
-  }
-  this.removing = true;
-  return this.stop(function() {
-    var onRemove = _.bind(onJobRemove, this);
-    if (!this.id) {
-      _.defer(onRemove);
-      return;
-    }
-    request.del(_.template('https://saucelabs.com/rest/v1/${user}/jobs/${id}')(this), {
-      'auth': { 'user': this.user, 'pass': this.pass }
-    }, onRemove);
-  });
-};
-
-/**
- * Resets the job.
- *
- * @memberOf Job
- * @param {Function} callback The function called once the job is reset.
- * @param {Object} Returns the job instance.
- */
-Job.prototype.reset = function(callback) {
-  this.once('reset', _.callback(callback));
-  if (this.resetting) {
-    return this;
-  }
-  this.resetting = true;
-  return this.remove(onJobReset);
-};
-
-/**
- * Restarts the job.
- *
- * @memberOf Job
- * @param {Function} callback The function called once the job is restarted.
- * @param {Object} Returns the job instance.
- */
-Job.prototype.restart = function(callback) {
-  this.once('restart', _.callback(callback));
-  if (this.restarting) {
-    return this;
-  }
-  this.restarting = true;
-
-  var options = this.options,
-      platform = options.platforms[0],
-      description = browserName(platform[1]) + ' ' + platform[2] + ' on ' + capitalizeWords(platform[0]),
-      label = options.name + ':';
-
-  logInline();
-  console.log('%s %s restart %d of %d', label, description, ++this.attempts, this.retries);
-
-  return this.remove(onGenericRestart);
-};
-
-/**
- * Starts the job.
- *
- * @memberOf Job
- * @param {Function} callback The function called once the job is started.
- * @param {Object} Returns the job instance.
- */
-Job.prototype.start = function(callback) {
-  this.once('start', _.callback(callback));
-  if (this.starting || this.running) {
-    return this;
-  }
-  this.starting = true;
-  request.post(_.template('https://saucelabs.com/rest/v1/${user}/js-tests')(this), {
-    'auth': { 'user': this.user, 'pass': this.pass },
-    'json': this.options
-  }, _.bind(onJobStart, this));
-
-  return this;
-};
-
-/**
- * Checks the status of a job.
- *
- * @memberOf Job
- * @param {Function} callback The function called once the status is resolved.
- * @param {Object} Returns the job instance.
- */
-Job.prototype.status = function(callback) {
-  this.once('status', _.callback(callback));
-  if (this.checking || this.removing || this.resetting || this.restarting || this.starting || this.stopping) {
-    return this;
-  }
-  this._pollerId = null;
-  this.checking = true;
-  request.post(_.template('https://saucelabs.com/rest/v1/${user}/js-tests/status')(this), {
-    'auth': { 'user': this.user, 'pass': this.pass },
-    'json': { 'js tests': [this.taskId] }
-  }, _.bind(onJobStatus, this));
-
-  return this;
-};
-
-/**
- * Stops the job.
- *
- * @memberOf Job
- * @param {Function} callback The function called once the job is stopped.
- * @param {Object} Returns the job instance.
- */
-Job.prototype.stop = function(callback) {
-  this.once('stop', _.callback(callback));
-  if (this.stopping) {
-    return this;
-  }
-  this.stopping = true;
-  if (this._pollerId) {
-    clearTimeout(this._pollerId);
-    this._pollerId = null;
-    this.checking = false;
-  }
-  var onStop = _.bind(onGenericStop, this);
-  if (!this.running || !this.id) {
-    _.defer(onStop);
-    return this;
-  }
-  request.put(_.template('https://saucelabs.com/rest/v1/${user}/jobs/${id}/stop')(this), {
-    'auth': { 'user': this.user, 'pass': this.pass }
-  }, onStop);
-
-  return this;
-};
-
-/*----------------------------------------------------------------------------*/
-
-/**
- * The Tunnel constructor.
- *
- * @private
- * @param {Object} [properties] The properties to initialize the tunnel with.
- */
-function Tunnel(properties) {
-  EventEmitter.call(this);
-
-  _.merge(this, properties);
-
-  var active = [],
-      queue = [];
-
-  var all = _.map(this.platforms, function(platform) {
-    return new Job(_.merge({
-      'user': this.user,
-      'pass': this.pass,
-      'tunnel': this,
-      'options': { 'platforms': [platform] }
-    }, this.job));
-  }, this);
-
-  var completed = 0,
-      restarted = [],
-      success = true,
-      total = all.length,
-      tunnel = this;
-
-  _.invoke(all, 'on', 'complete', function() {
-    _.pull(active, this);
-    if (success) {
-      success = !this.failed;
-    }
-    if (++completed == total) {
-      tunnel.stop(_.partial(tunnel.emit, 'complete', success));
-      return;
-    }
-    tunnel.dequeue();
-  });
-
-  _.invoke(all, 'on', 'restart', function() {
-    if (!_.includes(restarted, this)) {
-      restarted.push(this);
-    }
-    // Restart tunnel if all active jobs have restarted.
-    var threshold = Math.min(all.length, _.isFinite(throttled) ? throttled : 3);
-    if (tunnel.attempts < tunnel.retries &&
-        active.length >= threshold && _.isEmpty(_.difference(active, restarted))) {
-      tunnel.restart();
-    }
-  });
-
-  this.on('restart', function() {
-    completed = 0;
-    success = true;
-    restarted.length = 0;
-  });
-
-  this._timeoutId = null;
-  this.attempts = 0;
-  this.restarting = this.running = this.starting = this.stopping = false;
-  this.jobs = { 'active': active, 'all': all, 'queue': queue };
-  this.connection = new SauceTunnel(this.user, this.pass, this.id, this.tunneled, ['-P', '0']);
-}
-
-util.inherits(Tunnel, EventEmitter);
-
-/**
- * Restarts the tunnel.
- *
- * @memberOf Tunnel
- * @param {Function} callback The function called once the tunnel is restarted.
- */
-Tunnel.prototype.restart = function(callback) {
-  this.once('restart', _.callback(callback));
-  if (this.restarting) {
-    return this;
-  }
-  this.restarting = true;
-
-  logInline();
-  console.log('Tunnel %s: restart %d of %d', this.id, ++this.attempts, this.retries);
-
-  var jobs = this.jobs,
-      active = jobs.active,
-      all = jobs.all;
-
-  var reset = _.after(all.length, _.bind(this.stop, this, onGenericRestart)),
-      stop = _.after(active.length, _.partial(_.invoke, all, 'reset', reset));
-
-  if (_.isEmpty(active)) {
-    _.defer(stop);
-  }
-  if (_.isEmpty(all)) {
-    _.defer(reset);
-  }
-  _.invoke(active, 'stop', function() {
-    _.pull(active, this);
-    stop();
-  });
-
-  if (this._timeoutId) {
-    clearTimeout(this._timeoutId);
-    this._timeoutId = null;
-  }
-  return this;
-};
-
-/**
- * Starts the tunnel.
- *
- * @memberOf Tunnel
- * @param {Function} callback The function called once the tunnel is started.
- * @param {Object} Returns the tunnel instance.
- */
-Tunnel.prototype.start = function(callback) {
-  this.once('start', _.callback(callback));
-  if (this.starting || this.running) {
-    return this;
-  }
-  this.starting = true;
-
-  logInline();
-  console.log('Opening Sauce Connect tunnel...');
-
-  var onStart = _.bind(onTunnelStart, this);
-  if (this.timeout) {
-    this._timeoutId = _.delay(onStart, this.timeout * 1000, false);
-  }
-  this.connection.start(onStart);
-  return this;
-};
-
-/**
- * Removes jobs from the queue and starts them.
- *
- * @memberOf Tunnel
- * @param {Object} Returns the tunnel instance.
- */
-Tunnel.prototype.dequeue = function() {
-  var jobs = this.jobs,
-      active = jobs.active,
-      queue = jobs.queue,
-      throttled = this.throttled;
-
-  while (queue.length && (active.length < throttled)) {
-    active.push(queue.shift().start());
-  }
-  return this;
-};
-
-/**
- * Stops the tunnel.
- *
- * @memberOf Tunnel
- * @param {Function} callback The function called once the tunnel is stopped.
- * @param {Object} Returns the tunnel instance.
- */
-Tunnel.prototype.stop = function(callback) {
-  this.once('stop', _.callback(callback));
-  if (this.stopping) {
-    return this;
-  }
-  this.stopping = true;
-
-  logInline();
-  console.log('Shutting down Sauce Connect tunnel...');
-
-  var jobs = this.jobs,
-      active = jobs.active;
-
-  var stop = _.after(active.length, _.bind(function() {
-    var onStop = _.bind(onGenericStop, this);
-    if (this.running) {
-      this.connection.stop(onStop);
-    } else {
-      onStop();
-    }
-  }, this));
-
-  jobs.queue.length = 0;
-  if (_.isEmpty(active)) {
-    _.defer(stop);
-  }
-  _.invoke(active, 'stop', function() {
-    _.pull(active, this);
-    stop();
-  });
-
-  if (this._timeoutId) {
-    clearTimeout(this._timeoutId);
-    this._timeoutId = null;
-  }
-  return this;
-};
-
-/*----------------------------------------------------------------------------*/
-
-// Cleanup any inline logs when exited via `ctrl+c`.
-process.on('SIGINT', function() {
-  logInline();
-  process.exit();
-});
-
-// Create a web server for the current working directory.
-http.createServer(function(req, res) {
-  // See http://msdn.microsoft.com/en-us/library/ff955275(v=vs.85).aspx.
-  if (compatMode && path.extname(url.parse(req.url).pathname) == '.html') {
-    res.setHeader('X-UA-Compatible', 'IE=' + compatMode);
-  }
-  mount(req, res);
-}).listen(port);
-
-// Setup Sauce Connect so we can use this server from Sauce Labs.
-var tunnel = new Tunnel({
-  'user': username,
-  'pass': accessKey,
-  'id': tunnelId,
-  'job': { 'retries': maxJobRetries, 'statusInterval': statusInterval },
-  'platforms': platforms,
-  'retries': maxTunnelRetries,
-  'throttled': throttled,
-  'tunneled': tunneled,
-  'timeout': tunnelTimeout
-});
-
-tunnel.on('complete', function(success) {
-  process.exit(success ? 0 : 1);
-});
-
-tunnel.start();
-
-setInterval(logThrobber, throbberDelay);

--- app/webroot/js/vendor/lodash/test/underscore.html ---
@@ -1,242 +0,0 @@
-<!doctype html>
-<html lang="en">
-  <head>
-    <meta charset="utf-8">
-    <title>Underscore Test Suite</title>
-    <link rel="stylesheet" href="../node_modules/qunitjs/qunit/qunit.css">
-  </head>
-  <body>
-    <div id="qunit"></div>
-    <script>
-      // Avoid reporting tests to Sauce Labs when script errors occur.
-      if (location.port == '9001') {
-        window.onerror = function(message) {
-          if (window.QUnit) {
-            QUnit.config.done.length = 0;
-          }
-          global_test_results = { 'message': message };
-        };
-      }
-    </script>
-    <script src="../node_modules/qunitjs/qunit/qunit.js"></script>
-    <script src="../node_modules/qunit-extras/qunit-extras.js"></script>
-    <script src="../node_modules/jquery/dist/jquery.js"></script>
-    <script src="../node_modules/platform/platform.js"></script>
-    <script src="./asset/test-ui.js"></script>
-    <script>
-      QUnit.config.asyncRetries = 10;
-      QUnit.config.hidepassed = true;
-
-      // Excuse tests we intentionally fail or those with problems.
-      QUnit.config.excused = {
-        'Arrays': {
-          'drop': [
-            'alias for rest'
-          ],
-          'first': [
-            'can pass an index to first',
-            '[1,2]',
-            '0'
-          ],
-          'flatten': [
-            'Flattens empty arrays',
-            'can flatten nested arrays',
-            'can shallowly flatten nested arrays',
-            'works on an arguments object',
-            'can shallowly flatten arrays containing only other arrays'
-          ],
-          'initial': [
-            'initial can take an index',
-            'initial can take a large index',
-            'initial works on arguments object'
-          ],
-          'intersection': [
-            'can perform an OO-style intersection'
-          ],
-          'last': [
-            'can pass an index to last',
-            '0'
-          ],
-          'lastIndexOf': [
-            '[0,-1,-1]'
-          ],
-          'rest': [
-            'working rest(0)',
-            'rest can take an index',
-            'works on arguments object'
-          ],
-          'take': [
-            'alias for first'
-          ]
-        },
-        'Chaining': {
-          'pop': true,
-          'shift': true,
-          'splice': true,
-          'reverse/concat/unshift/pop/map': [
-            'can chain together array functions.'
-          ]
-        },
-        'Collections': {
-          'filter': [
-            'OO-filter'
-          ],
-          'invoke': [
-            'handles null & undefined'
-          ],
-          'map': [
-            'OO-style doubled numbers'
-          ],
-          'Resistant to collection length and properties changing while iterating': [
-            'Died on test #50'
-          ]
-        },
-        'Functions': {
-          'bind': [
-            'Died on test #2'
-          ],
-          'bindAll': [
-            'throws an error for bindAll with no functions named'
-          ],
-          'memoize': [
-            '{"bar":"BAR","foo":"FOO"}',
-            'Died on test #8'
-          ],
-          'throttle repeatedly with results': true,
-          'more throttle does not trigger leading call when leading is set to false': true,
-          'throttle does not trigger trailing call when trailing is set to false': true,
-          'debounce asap': true
-        },
-        'Objects': {
-          '#1929 Typed Array constructors are functions': true,
-          'allKeys': true,
-          'extendOwn': true,
-          'mapObject': true,
-          'matcher': true,
-          'matcher ': true,
-          'extend': [
-            'extend copies all properties from source'
-          ],
-          'isEqual': [
-            '`0` is not equal to `-0`',
-            'Commutative equality is implemented for `0` and `-0`',
-            '`new Number(0)` and `-0` are not equal',
-            'Commutative equality is implemented for `new Number(0)` and `-0`'
-          ],
-          'isFinite': [
-            'Numeric strings are numbers',
-            'Number instances can be finite'
-          ],
-          'isMatch': [
-            'inherited and own properties are checked on the test object',
-            'doesnt falsey match constructor on undefined/null'
-          ],
-          'keys': [
-            'is not fooled by sparse arrays; see issue #95',
-            '[]'
-          ],
-          'matches': [
-            'inherited and own properties are checked on the test object',
-            'doesnt fasley match constructor on undefined/null'
-          ]
-        },
-        'Utility': {
-          'now': [
-            'Produces the correct time in milliseconds'
-          ],
-          'times': [
-            'works as a wrapper'
-          ]
-        }
-      };
-
-      // Only excuse in Sauce Labs (buggy Safari and timers).
-      if (!ui.isSauceLabs) {
-        delete QUnit.config.excused.Functions['throttle repeatedly with results'];
-        delete QUnit.config.excused.Functions['more throttle does not trigger leading call when leading is set to false'];
-        delete QUnit.config.excused.Functions['throttle does not trigger trailing call when trailing is set to false'];
-        delete QUnit.config.excused.Functions['debounce asap'];
-        delete QUnit.config.excused.Utility.now;
-      }
-      // Load test scripts.
-      document.write(ui.urlParams.loader != 'none'
-        ? '<script data-dojo-config="async:1" src="' + ui.loaderPath + '"><\/script>'
-        : ([
-          '<script src="' + ui.buildPath + '"><\/script>',
-          '<script src="../vendor/underscore/test/collections.js"><\/script>',
-          '<script src="../vendor/underscore/test/arrays.js"><\/script>',
-          '<script src="../vendor/underscore/test/functions.js"><\/script>',
-          '<script src="../vendor/underscore/test/objects.js"><\/script>',
-          '<script src="../vendor/underscore/test/cross-document.js"><\/script>',
-          '<script src="../vendor/underscore/test/utility.js"><\/script>',
-          '<script src="../vendor/underscore/test/chaining.js"><\/script>'
-          ].join('\n'))
-      );
-    </script>
-    <script>
-      (function() {
-        if (window.curl) {
-          curl.config({ 'apiName': 'require' });
-        }
-        if (!window.require) {
-          return;
-        }
-        var reBasename = /[\w.-]+$/,
-            basePath = ('//' + location.host + location.pathname.replace(reBasename, '')).replace(/\btest\/$/, ''),
-            modulePath = ui.buildPath.replace(/\.js$/, ''),
-            locationPath = modulePath.replace(reBasename, '').replace(/^\/|\/$/g, ''),
-            moduleId = /\bunderscore\b/i.test(ui.buildPath) ? 'underscore' : 'lodash',
-            moduleMain = modulePath.match(reBasename)[0],
-            uid = +new Date;
-
-        function getConfig() {
-          var result = {
-            'baseUrl': './',
-            'urlArgs': 't=' + uid++,
-            'waitSeconds': 0,
-            'paths': {},
-            'packages': [{
-              'name': 'test',
-              'location': '../vendor/underscore/test',
-              'config': {
-                // Work around no global being exported.
-                'exports': 'QUnit',
-                'loader': 'curl/loader/legacy'
-              }
-            }]
-          };
-
-          if (ui.isModularize) {
-            result.packages.push({
-              'name': moduleId,
-              'location': locationPath,
-              'main': moduleMain
-            });
-          } else {
-            result.paths[moduleId] = modulePath;
-          }
-          return result;
-        }
-
-        QUnit.config.autostart = false;
-
-        require(getConfig(), [moduleId], function(lodash) {
-          if (ui.isModularize) {
-            window._ = lodash;
-          }
-          require(getConfig(), [
-            'test/collections',
-            'test/arrays',
-            'test/functions',
-            'test/objects',
-            'test/cross-document',
-            'test/utility',
-            'test/chaining'
-          ], function() {
-            QUnit.start();
-          });
-        });
-      }());
-    </script>
-  </body>
-</html>

--- app/webroot/js/vendor/lodash/vendor/backbone/LICENSE ---
@@ -1,22 +0,0 @@
-Copyright (c) 2010-2015 Jeremy Ashkenas, DocumentCloud
-
-Permission is hereby granted, free of charge, to any person
-obtaining a copy of this software and associated documentation
-files (the "Software"), to deal in the Software without
-restriction, including without limitation the rights to use,
-copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the
-Software is furnished to do so, subject to the following
-conditions:
-
-The above copyright notice and this permission notice shall be
-included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
-HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
-WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
-OTHER DEALINGS IN THE SOFTWARE.

--- app/webroot/js/vendor/lodash/vendor/backbone/backbone.js ---
@@ -1,1873 +0,0 @@
-//     Backbone.js 1.2.1
-
-//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
-//     Backbone may be freely distributed under the MIT license.
-//     For all details and documentation:
-//     http://backbonejs.org
-
-(function(factory) {
-
-  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.
-  // We use `self` instead of `window` for `WebWorker` support.
-  var root = (typeof self == 'object' && self.self == self && self) ||
-            (typeof global == 'object' && global.global == global && global);
-
-  // Set up Backbone appropriately for the environment. Start with AMD.
-  if (typeof define === 'function' && define.amd) {
-    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {
-      // Export global even in AMD case in case this script is loaded with
-      // others that may still expect a global Backbone.
-      root.Backbone = factory(root, exports, _, $);
-    });
-
-  // Next for Node.js or CommonJS. jQuery may not be needed as a module.
-  } else if (typeof exports !== 'undefined') {
-    var _ = require('underscore'), $;
-    try { $ = require('jquery'); } catch(e) {}
-    factory(root, exports, _, $);
-
-  // Finally, as a browser global.
-  } else {
-    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));
-  }
-
-}(function(root, Backbone, _, $) {
-
-  // Initial Setup
-  // -------------
-
-  // Save the previous value of the `Backbone` variable, so that it can be
-  // restored later on, if `noConflict` is used.
-  var previousBackbone = root.Backbone;
-
-  // Create a local reference to a common array method we'll want to use later.
-  var slice = [].slice;
-
-  // Current version of the library. Keep in sync with `package.json`.
-  Backbone.VERSION = '1.2.1';
-
-  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns
-  // the `$` variable.
-  Backbone.$ = $;
-
-  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
-  // to its previous owner. Returns a reference to this Backbone object.
-  Backbone.noConflict = function() {
-    root.Backbone = previousBackbone;
-    return this;
-  };
-
-  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
-  // will fake `"PATCH"`, `"PUT"` and `"DELETE"` requests via the `_method` parameter and
-  // set a `X-Http-Method-Override` header.
-  Backbone.emulateHTTP = false;
-
-  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
-  // `application/json` requests ... this will encode the body as
-  // `application/x-www-form-urlencoded` instead and will send the model in a
-  // form param named `model`.
-  Backbone.emulateJSON = false;
-
-  // Proxy Underscore methods to a Backbone class' prototype using a
-  // particular attribute as the data argument
-  var addMethod = function(length, method, attribute) {
-    switch (length) {
-      case 1: return function() {
-        return _[method](this[attribute]);
-      };
-      case 2: return function(value) {
-        return _[method](this[attribute], value);
-      };
-      case 3: return function(iteratee, context) {
-        return _[method](this[attribute], iteratee, context);
-      };
-      case 4: return function(iteratee, defaultVal, context) {
-        return _[method](this[attribute], iteratee, defaultVal, context);
-      };
-      default: return function() {
-        var args = slice.call(arguments);
-        args.unshift(this[attribute]);
-        return _[method].apply(_, args);
-      };
-    }
-  };
-  var addUnderscoreMethods = function(Class, methods, attribute) {
-    _.each(methods, function(length, method) {
-      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);
-    });
-  };
-
-  // Backbone.Events
-  // ---------------
-
-  // A module that can be mixed in to *any object* in order to provide it with
-  // custom events. You may bind with `on` or remove with `off` callback
-  // functions to an event; `trigger`-ing an event fires all callbacks in
-  // succession.
-  //
-  //     var object = {};
-  //     _.extend(object, Backbone.Events);
-  //     object.on('expand', function(){ alert('expanded'); });
-  //     object.trigger('expand');
-  //
-  var Events = Backbone.Events = {};
-
-  // Regular expression used to split event strings.
-  var eventSplitter = /\s+/;
-
-  // Iterates over the standard `event, callback` (as well as the fancy multiple
-  // space-separated events `"change blur", callback` and jQuery-style event
-  // maps `{event: callback}`), reducing them by manipulating `memo`.
-  // Passes a normalized single event name and callback, as well as any
-  // optional `opts`.
-  var eventsApi = function(iteratee, memo, name, callback, opts) {
-    var i = 0, names;
-    if (name && typeof name === 'object') {
-      // Handle event maps.
-      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;
-      for (names = _.keys(name); i < names.length ; i++) {
-        memo = iteratee(memo, names[i], name[names[i]], opts);
-      }
-    } else if (name && eventSplitter.test(name)) {
-      // Handle space separated event names.
-      for (names = name.split(eventSplitter); i < names.length; i++) {
-        memo = iteratee(memo, names[i], callback, opts);
-      }
-    } else {
-      memo = iteratee(memo, name, callback, opts);
-    }
-    return memo;
-  };
-
-  // Bind an event to a `callback` function. Passing `"all"` will bind
-  // the callback to all events fired.
-  Events.on = function(name, callback, context) {
-    return internalOn(this, name, callback, context);
-  };
-
-  // An internal use `on` function, used to guard the `listening` argument from
-  // the public API.
-  var internalOn = function(obj, name, callback, context, listening) {
-    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {
-        context: context,
-        ctx: obj,
-        listening: listening
-    });
-
-    if (listening) {
-      var listeners = obj._listeners || (obj._listeners = {});
-      listeners[listening.id] = listening;
-    }
-
-    return obj;
-  };
-
-  // Inversion-of-control versions of `on`. Tell *this* object to listen to
-  // an event in another object... keeping track of what it's listening to.
-  Events.listenTo =  function(obj, name, callback) {
-    if (!obj) return this;
-    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));
-    var listeningTo = this._listeningTo || (this._listeningTo = {});
-    var listening = listeningTo[id];
-
-    // This object is not listening to any other events on `obj` yet.
-    // Setup the necessary references to track the listening callbacks.
-    if (!listening) {
-      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));
-      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};
-    }
-
-    // Bind callbacks on obj, and keep track of them on listening.
-    internalOn(obj, name, callback, this, listening);
-    return this;
-  };
-
-  // The reducing API that adds a callback to the `events` object.
-  var onApi = function(events, name, callback, options) {
-    if (callback) {
-      var handlers = events[name] || (events[name] = []);
-      var context = options.context, ctx = options.ctx, listening = options.listening;
-      if (listening) listening.count++;
-
-      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });
-    }
-    return events;
-  };
-
-  // Remove one or many callbacks. If `context` is null, removes all
-  // callbacks with that function. If `callback` is null, removes all
-  // callbacks for the event. If `name` is null, removes all bound
-  // callbacks for all events.
-  Events.off =  function(name, callback, context) {
-    if (!this._events) return this;
-    this._events = eventsApi(offApi, this._events, name, callback, {
-        context: context,
-        listeners: this._listeners
-    });
-    return this;
-  };
-
-  // Tell this object to stop listening to either specific events ... or
-  // to every object it's currently listening to.
-  Events.stopListening =  function(obj, name, callback) {
-    var listeningTo = this._listeningTo;
-    if (!listeningTo) return this;
-
-    var ids = obj ? [obj._listenId] : _.keys(listeningTo);
-
-    for (var i = 0; i < ids.length; i++) {
-      var listening = listeningTo[ids[i]];
-
-      // If listening doesn't exist, this object is not currently
-      // listening to obj. Break out early.
-      if (!listening) break;
-
-      listening.obj.off(name, callback, this);
-    }
-    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;
-
-    return this;
-  };
-
-  // The reducing API that removes a callback from the `events` object.
-  var offApi = function(events, name, callback, options) {
-    // No events to consider.
-    if (!events) return;
-
-    var i = 0, listening;
-    var context = options.context, listeners = options.listeners;
-
-    // Delete all events listeners and "drop" events.
-    if (!name && !callback && !context) {
-      var ids = _.keys(listeners);
-      for (; i < ids.length; i++) {
-        listening = listeners[ids[i]];
-        delete listeners[listening.id];
-        delete listening.listeningTo[listening.objId];
-      }
-      return;
-    }
-
-    var names = name ? [name] : _.keys(events);
-    for (; i < names.length; i++) {
-      name = names[i];
-      var handlers = events[name];
-
-      // Bail out if there are no events stored.
-      if (!handlers) break;
-
-      // Replace events if there are any remaining.  Otherwise, clean up.
-      var remaining = [];
-      for (var j = 0; j < handlers.length; j++) {
-        var handler = handlers[j];
-        if (
-          callback && callback !== handler.callback &&
-            callback !== handler.callback._callback ||
-              context && context !== handler.context
-        ) {
-          remaining.push(handler);
-        } else {
-          listening = handler.listening;
-          if (listening && --listening.count === 0) {
-            delete listeners[listening.id];
-            delete listening.listeningTo[listening.objId];
-          }
-        }
-      }
-
-      // Update tail event if the list has any events.  Otherwise, clean up.
-      if (remaining.length) {
-        events[name] = remaining;
-      } else {
-        delete events[name];
-      }
-    }
-    if (_.size(events)) return events;
-  };
-
-  // Bind an event to only be triggered a single time. After the first time
-  // the callback is invoked, it will be removed. When multiple events are
-  // passed in using the space-separated syntax, the event will fire once for every
-  // event you passed in, not once for a combination of all events
-  Events.once =  function(name, callback, context) {
-    // Map the event into a `{event: once}` object.
-    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));
-    return this.on(events, void 0, context);
-  };
-
-  // Inversion-of-control versions of `once`.
-  Events.listenToOnce =  function(obj, name, callback) {
-    // Map the event into a `{event: once}` object.
-    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));
-    return this.listenTo(obj, events);
-  };
-
-  // Reduces the event callbacks into a map of `{event: onceWrapper}`.
-  // `offer` unbinds the `onceWrapper` after it has been called.
-  var onceMap = function(map, name, callback, offer) {
-    if (callback) {
-      var once = map[name] = _.once(function() {
-        offer(name, once);
-        callback.apply(this, arguments);
-      });
-      once._callback = callback;
-    }
-    return map;
-  };
-
-  // Trigger one or many events, firing all bound callbacks. Callbacks are
-  // passed the same arguments as `trigger` is, apart from the event name
-  // (unless you're listening on `"all"`, which will cause your callback to
-  // receive the true name of the event as the first argument).
-  Events.trigger =  function(name) {
-    if (!this._events) return this;
-
-    var length = Math.max(0, arguments.length - 1);
-    var args = Array(length);
-    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];
-
-    eventsApi(triggerApi, this._events, name, void 0, args);
-    return this;
-  };
-
-  // Handles triggering the appropriate event callbacks.
-  var triggerApi = function(objEvents, name, cb, args) {
-    if (objEvents) {
-      var events = objEvents[name];
-      var allEvents = objEvents.all;
-      if (events && allEvents) allEvents = allEvents.slice();
-      if (events) triggerEvents(events, args);
-      if (allEvents) triggerEvents(allEvents, [name].concat(args));
-    }
-    return objEvents;
-  };
-
-  // A difficult-to-believe, but optimized internal dispatch function for
-  // triggering events. Tries to keep the usual cases speedy (most internal
-  // Backbone events have 3 arguments).
-  var triggerEvents = function(events, args) {
-    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];
-    switch (args.length) {
-      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;
-      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;
-      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;
-      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;
-      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;
-    }
-  };
-
-  // Aliases for backwards compatibility.
-  Events.bind   = Events.on;
-  Events.unbind = Events.off;
-
-  // Allow the `Backbone` object to serve as a global event bus, for folks who
-  // want global "pubsub" in a convenient place.
-  _.extend(Backbone, Events);
-
-  // Backbone.Model
-  // --------------
-
-  // Backbone **Models** are the basic data object in the framework --
-  // frequently representing a row in a table in a database on your server.
-  // A discrete chunk of data and a bunch of useful, related methods for
-  // performing computations and transformations on that data.
-
-  // Create a new model with the specified attributes. A client id (`cid`)
-  // is automatically generated and assigned for you.
-  var Model = Backbone.Model = function(attributes, options) {
-    var attrs = attributes || {};
-    options || (options = {});
-    this.cid = _.uniqueId(this.cidPrefix);
-    this.attributes = {};
-    if (options.collection) this.collection = options.collection;
-    if (options.parse) attrs = this.parse(attrs, options) || {};
-    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));
-    this.set(attrs, options);
-    this.changed = {};
-    this.initialize.apply(this, arguments);
-  };
-
-  // Attach all inheritable methods to the Model prototype.
-  _.extend(Model.prototype, Events, {
-
-    // A hash of attributes whose current and previous value differ.
-    changed: null,
-
-    // The value returned during the last failed validation.
-    validationError: null,
-
-    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
-    // CouchDB users may want to set this to `"_id"`.
-    idAttribute: 'id',
-
-    // The prefix is used to create the client id which is used to identify models locally.
-    // You may want to override this if you're experiencing name clashes with model ids.
-    cidPrefix: 'c',
-
-    // Initialize is an empty function by default. Override it with your own
-    // initialization logic.
-    initialize: function(){},
-
-    // Return a copy of the model's `attributes` object.
-    toJSON: function(options) {
-      return _.clone(this.attributes);
-    },
-
-    // Proxy `Backbone.sync` by default -- but override this if you need
-    // custom syncing semantics for *this* particular model.
-    sync: function() {
-      return Backbone.sync.apply(this, arguments);
-    },
-
-    // Get the value of an attribute.
-    get: function(attr) {
-      return this.attributes[attr];
-    },
-
-    // Get the HTML-escaped value of an attribute.
-    escape: function(attr) {
-      return _.escape(this.get(attr));
-    },
-
-    // Returns `true` if the attribute contains a value that is not null
-    // or undefined.
-    has: function(attr) {
-      return this.get(attr) != null;
-    },
-
-    // Special-cased proxy to underscore's `_.matches` method.
-    matches: function(attrs) {
-      return !!_.iteratee(attrs, this)(this.attributes);
-    },
-
-    // Set a hash of model attributes on the object, firing `"change"`. This is
-    // the core primitive operation of a model, updating the data and notifying
-    // anyone who needs to know about the change in state. The heart of the beast.
-    set: function(key, val, options) {
-      if (key == null) return this;
-
-      // Handle both `"key", value` and `{key: value}` -style arguments.
-      var attrs;
-      if (typeof key === 'object') {
-        attrs = key;
-        options = val;
-      } else {
-        (attrs = {})[key] = val;
-      }
-
-      options || (options = {});
-
-      // Run validation.
-      if (!this._validate(attrs, options)) return false;
-
-      // Extract attributes and options.
-      var unset      = options.unset;
-      var silent     = options.silent;
-      var changes    = [];
-      var changing   = this._changing;
-      this._changing = true;
-
-      if (!changing) {
-        this._previousAttributes = _.clone(this.attributes);
-        this.changed = {};
-      }
-
-      var current = this.attributes;
-      var changed = this.changed;
-      var prev    = this._previousAttributes;
-
-      // Check for changes of `id`.
-      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];
-
-      // For each `set` attribute, update or delete the current value.
-      for (var attr in attrs) {
-        val = attrs[attr];
-        if (!_.isEqual(current[attr], val)) changes.push(attr);
-        if (!_.isEqual(prev[attr], val)) {
-          changed[attr] = val;
-        } else {
-          delete changed[attr];
-        }
-        unset ? delete current[attr] : current[attr] = val;
-      }
-
-      // Trigger all relevant attribute changes.
-      if (!silent) {
-        if (changes.length) this._pending = options;
-        for (var i = 0; i < changes.length; i++) {
-          this.trigger('change:' + changes[i], this, current[changes[i]], options);
-        }
-      }
-
-      // You might be wondering why there's a `while` loop here. Changes can
-      // be recursively nested within `"change"` events.
-      if (changing) return this;
-      if (!silent) {
-        while (this._pending) {
-          options = this._pending;
-          this._pending = false;
-          this.trigger('change', this, options);
-        }
-      }
-      this._pending = false;
-      this._changing = false;
-      return this;
-    },
-
-    // Remove an attribute from the model, firing `"change"`. `unset` is a noop
-    // if the attribute doesn't exist.
-    unset: function(attr, options) {
-      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
-    },
-
-    // Clear all attributes on the model, firing `"change"`.
-    clear: function(options) {
-      var attrs = {};
-      for (var key in this.attributes) attrs[key] = void 0;
-      return this.set(attrs, _.extend({}, options, {unset: true}));
-    },
-
-    // Determine if the model has changed since the last `"change"` event.
-    // If you specify an attribute name, determine if that attribute has changed.
-    hasChanged: function(attr) {
-      if (attr == null) return !_.isEmpty(this.changed);
-      return _.has(this.changed, attr);
-    },
-
-    // Return an object containing all the attributes that have changed, or
-    // false if there are no changed attributes. Useful for determining what
-    // parts of a view need to be updated and/or what attributes need to be
-    // persisted to the server. Unset attributes will be set to undefined.
-    // You can also pass an attributes object to diff against the model,
-    // determining if there *would be* a change.
-    changedAttributes: function(diff) {
-      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
-      var old = this._changing ? this._previousAttributes : this.attributes;
-      var changed = {};
-      for (var attr in diff) {
-        var val = diff[attr];
-        if (_.isEqual(old[attr], val)) continue;
-        changed[attr] = val;
-      }
-      return _.size(changed) ? changed : false;
-    },
-
-    // Get the previous value of an attribute, recorded at the time the last
-    // `"change"` event was fired.
-    previous: function(attr) {
-      if (attr == null || !this._previousAttributes) return null;
-      return this._previousAttributes[attr];
-    },
-
-    // Get all of the attributes of the model at the time of the previous
-    // `"change"` event.
-    previousAttributes: function() {
-      return _.clone(this._previousAttributes);
-    },
-
-    // Fetch the model from the server, merging the response with the model's
-    // local attributes. Any changed attributes will trigger a "change" event.
-    fetch: function(options) {
-      options = _.extend({parse: true}, options);
-      var model = this;
-      var success = options.success;
-      options.success = function(resp) {
-        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
-        if (!model.set(serverAttrs, options)) return false;
-        if (success) success.call(options.context, model, resp, options);
-        model.trigger('sync', model, resp, options);
-      };
-      wrapError(this, options);
-      return this.sync('read', this, options);
-    },
-
-    // Set a hash of model attributes, and sync the model to the server.
-    // If the server returns an attributes hash that differs, the model's
-    // state will be `set` again.
-    save: function(key, val, options) {
-      // Handle both `"key", value` and `{key: value}` -style arguments.
-      var attrs;
-      if (key == null || typeof key === 'object') {
-        attrs = key;
-        options = val;
-      } else {
-        (attrs = {})[key] = val;
-      }
-
-      options = _.extend({validate: true, parse: true}, options);
-      var wait = options.wait;
-
-      // If we're not waiting and attributes exist, save acts as
-      // `set(attr).save(null, opts)` with validation. Otherwise, check if
-      // the model will be valid when the attributes, if any, are set.
-      if (attrs && !wait) {
-        if (!this.set(attrs, options)) return false;
-      } else {
-        if (!this._validate(attrs, options)) return false;
-      }
-
-      // After a successful server-side save, the client is (optionally)
-      // updated with the server-side state.
-      var model = this;
-      var success = options.success;
-      var attributes = this.attributes;
-      options.success = function(resp) {
-        // Ensure attributes are restored during synchronous saves.
-        model.attributes = attributes;
-        var serverAttrs = options.parse ? model.parse(resp, options) : resp;
-        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);
-        if (serverAttrs && !model.set(serverAttrs, options)) return false;
-        if (success) success.call(options.context, model, resp, options);
-        model.trigger('sync', model, resp, options);
-      };
-      wrapError(this, options);
-
-      // Set temporary attributes if `{wait: true}` to properly find new ids.
-      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);
-
-      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
-      if (method === 'patch' && !options.attrs) options.attrs = attrs;
-      var xhr = this.sync(method, this, options);
-
-      // Restore attributes.
-      this.attributes = attributes;
-
-      return xhr;
-    },
-
-    // Destroy this model on the server if it was already persisted.
-    // Optimistically removes the model from its collection, if it has one.
-    // If `wait: true` is passed, waits for the server to respond before removal.
-    destroy: function(options) {
-      options = options ? _.clone(options) : {};
-      var model = this;
-      var success = options.success;
-      var wait = options.wait;
-
-      var destroy = function() {
-        model.stopListening();
-        model.trigger('destroy', model, model.collection, options);
-      };
-
-      options.success = function(resp) {
-        if (wait) destroy();
-        if (success) success.call(options.context, model, resp, options);
-        if (!model.isNew()) model.trigger('sync', model, resp, options);
-      };
-
-      var xhr = false;
-      if (this.isNew()) {
-        _.defer(options.success);
-      } else {
-        wrapError(this, options);
-        xhr = this.sync('delete', this, options);
-      }
-      if (!wait) destroy();
-      return xhr;
-    },
-
-    // Default URL for the model's representation on the server -- if you're
-    // using Backbone's restful methods, override this to change the endpoint
-    // that will be called.
-    url: function() {
-      var base =
-        _.result(this, 'urlRoot') ||
-        _.result(this.collection, 'url') ||
-        urlError();
-      if (this.isNew()) return base;
-      var id = this.get(this.idAttribute);
-      return base.replace(/[^\/]$/, '$&/') + encodeURIComponent(id);
-    },
-
-    // **parse** converts a response into the hash of attributes to be `set` on
-    // the model. The default implementation is just to pass the response along.
-    parse: function(resp, options) {
-      return resp;
-    },
-
-    // Create a new model with identical attributes to this one.
-    clone: function() {
-      return new this.constructor(this.attributes);
-    },
-
-    // A model is new if it has never been saved to the server, and lacks an id.
-    isNew: function() {
-      return !this.has(this.idAttribute);
-    },
-
-    // Check if the model is currently in a valid state.
-    isValid: function(options) {
-      return this._validate({}, _.defaults({validate: true}, options));
-    },
-
-    // Run validation against the next complete set of model attributes,
-    // returning `true` if all is well. Otherwise, fire an `"invalid"` event.
-    _validate: function(attrs, options) {
-      if (!options.validate || !this.validate) return true;
-      attrs = _.extend({}, this.attributes, attrs);
-      var error = this.validationError = this.validate(attrs, options) || null;
-      if (!error) return true;
-      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));
-      return false;
-    }
-
-  });
-
-  // Underscore methods that we want to implement on the Model.
-  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,
-      omit: 0, chain: 1, isEmpty: 1 };
-
-  // Mix in each Underscore method as a proxy to `Model#attributes`.
-  addUnderscoreMethods(Model, modelMethods, 'attributes');
-
-  // Backbone.Collection
-  // -------------------
-
-  // If models tend to represent a single row of data, a Backbone Collection is
-  // more analogous to a table full of data ... or a small slice or page of that
-  // table, or a collection of rows that belong together for a particular reason
-  // -- all of the messages in this particular folder, all of the documents
-  // belonging to this particular author, and so on. Collections maintain
-  // indexes of their models, both in order, and for lookup by `id`.
-
-  // Create a new **Collection**, perhaps to contain a specific type of `model`.
-  // If a `comparator` is specified, the Collection will maintain
-  // its models in sort order, as they're added and removed.
-  var Collection = Backbone.Collection = function(models, options) {
-    options || (options = {});
-    if (options.model) this.model = options.model;
-    if (options.comparator !== void 0) this.comparator = options.comparator;
-    this._reset();
-    this.initialize.apply(this, arguments);
-    if (models) this.reset(models, _.extend({silent: true}, options));
-  };
-
-  // Default options for `Collection#set`.
-  var setOptions = {add: true, remove: true, merge: true};
-  var addOptions = {add: true, remove: false};
-
-  // Define the Collection's inheritable methods.
-  _.extend(Collection.prototype, Events, {
-
-    // The default model for a collection is just a **Backbone.Model**.
-    // This should be overridden in most cases.
-    model: Model,
-
-    // Initialize is an empty function by default. Override it with your own
-    // initialization logic.
-    initialize: function(){},
-
-    // The JSON representation of a Collection is an array of the
-    // models' attributes.
-    toJSON: function(options) {
-      return this.map(function(model) { return model.toJSON(options); });
-    },
-
-    // Proxy `Backbone.sync` by default.
-    sync: function() {
-      return Backbone.sync.apply(this, arguments);
-    },
-
-    // Add a model, or list of models to the set.
-    add: function(models, options) {
-      return this.set(models, _.extend({merge: false}, options, addOptions));
-    },
-
-    // Remove a model, or a list of models from the set.
-    remove: function(models, options) {
-      options = _.extend({}, options);
-      var singular = !_.isArray(models);
-      models = singular ? [models] : _.clone(models);
-      var removed = this._removeModels(models, options);
-      if (!options.silent && removed) this.trigger('update', this, options);
-      return singular ? removed[0] : removed;
-    },
-
-    // Update a collection by `set`-ing a new list of models, adding new ones,
-    // removing models that are no longer present, and merging models that
-    // already exist in the collection, as necessary. Similar to **Model#set**,
-    // the core operation for updating the data contained by the collection.
-    set: function(models, options) {
-      options = _.defaults({}, options, setOptions);
-      if (options.parse && !this._isModel(models)) models = this.parse(models, options);
-      var singular = !_.isArray(models);
-      models = singular ? (models ? [models] : []) : models.slice();
-      var id, model, attrs, existing, sort;
-      var at = options.at;
-      if (at != null) at = +at;
-      if (at < 0) at += this.length + 1;
-      var sortable = this.comparator && (at == null) && options.sort !== false;
-      var sortAttr = _.isString(this.comparator) ? this.comparator : null;
-      var toAdd = [], toRemove = [], modelMap = {};
-      var add = options.add, merge = options.merge, remove = options.remove;
-      var order = !sortable && add && remove ? [] : false;
-      var orderChanged = false;
-
-      // Turn bare objects into model references, and prevent invalid models
-      // from being added.
-      for (var i = 0; i < models.length; i++) {
-        attrs = models[i];
-
-        // If a duplicate is found, prevent it from being added and
-        // optionally merge it into the existing model.
-        if (existing = this.get(attrs)) {
-          if (remove) modelMap[existing.cid] = true;
-          if (merge && attrs !== existing) {
-            attrs = this._isModel(attrs) ? attrs.attributes : attrs;
-            if (options.parse) attrs = existing.parse(attrs, options);
-            existing.set(attrs, options);
-            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;
-          }
-          models[i] = existing;
-
-        // If this is a new, valid model, push it to the `toAdd` list.
-        } else if (add) {
-          model = models[i] = this._prepareModel(attrs, options);
-          if (!model) continue;
-          toAdd.push(model);
-          this._addReference(model, options);
-        }
-
-        // Do not add multiple models with the same `id`.
-        model = existing || model;
-        if (!model) continue;
-        id = this.modelId(model.attributes);
-        if (order && (model.isNew() || !modelMap[id])) {
-          order.push(model);
-
-          // Check to see if this is actually a new model at this index.
-          orderChanged = orderChanged || !this.models[i] || model.cid !== this.models[i].cid;
-        }
-
-        modelMap[id] = true;
-      }
-
-      // Remove nonexistent models if appropriate.
-      if (remove) {
-        for (var i = 0; i < this.length; i++) {
-          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);
-        }
-        if (toRemove.length) this._removeModels(toRemove, options);
-      }
-
-      // See if sorting is needed, update `length` and splice in new models.
-      if (toAdd.length || orderChanged) {
-        if (sortable) sort = true;
-        this.length += toAdd.length;
-        if (at != null) {
-          for (var i = 0; i < toAdd.length; i++) {
-            this.models.splice(at + i, 0, toAdd[i]);
-          }
-        } else {
-          if (order) this.models.length = 0;
-          var orderedModels = order || toAdd;
-          for (var i = 0; i < orderedModels.length; i++) {
-            this.models.push(orderedModels[i]);
-          }
-        }
-      }
-
-      // Silently sort the collection if appropriate.
-      if (sort) this.sort({silent: true});
-
-      // Unless silenced, it's time to fire all appropriate add/sort events.
-      if (!options.silent) {
-        var addOpts = at != null ? _.clone(options) : options;
-        for (var i = 0; i < toAdd.length; i++) {
-          if (at != null) addOpts.index = at + i;
-          (model = toAdd[i]).trigger('add', model, this, addOpts);
-        }
-        if (sort || orderChanged) this.trigger('sort', this, options);
-        if (toAdd.length || toRemove.length) this.trigger('update', this, options);
-      }
-
-      // Return the added (or merged) model (or models).
-      return singular ? models[0] : models;
-    },
-
-    // When you have more items than you want to add or remove individually,
-    // you can reset the entire set with a new list of models, without firing
-    // any granular `add` or `remove` events. Fires `reset` when finished.
-    // Useful for bulk operations and optimizations.
-    reset: function(models, options) {
-      options = options ? _.clone(options) : {};
-      for (var i = 0; i < this.models.length; i++) {
-        this._removeReference(this.models[i], options);
-      }
-      options.previousModels = this.models;
-      this._reset();
-      models = this.add(models, _.extend({silent: true}, options));
-      if (!options.silent) this.trigger('reset', this, options);
-      return models;
-    },
-
-    // Add a model to the end of the collection.
-    push: function(model, options) {
-      return this.add(model, _.extend({at: this.length}, options));
-    },
-
-    // Remove a model from the end of the collection.
-    pop: function(options) {
-      var model = this.at(this.length - 1);
-      return this.remove(model, options);
-    },
-
-    // Add a model to the beginning of the collection.
-    unshift: function(model, options) {
-      return this.add(model, _.extend({at: 0}, options));
-    },
-
-    // Remove a model from the beginning of the collection.
-    shift: function(options) {
-      var model = this.at(0);
-      return this.remove(model, options);
-    },
-
-    // Slice out a sub-array of models from the collection.
-    slice: function() {
-      return slice.apply(this.models, arguments);
-    },
-
-    // Get a model from the set by id.
-    get: function(obj) {
-      if (obj == null) return void 0;
-      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);
-      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];
-    },
-
-    // Get the model at the given index.
-    at: function(index) {
-      if (index < 0) index += this.length;
-      return this.models[index];
-    },
-
-    // Return models with matching attributes. Useful for simple cases of
-    // `filter`.
-    where: function(attrs, first) {
-      var matches = _.matches(attrs);
-      return this[first ? 'find' : 'filter'](function(model) {
-        return matches(model.attributes);
-      });
-    },
-
-    // Return the first model with matching attributes. Useful for simple cases
-    // of `find`.
-    findWhere: function(attrs) {
-      return this.where(attrs, true);
-    },
-
-    // Force the collection to re-sort itself. You don't need to call this under
-    // normal circumstances, as the set will maintain sort order as each item
-    // is added.
-    sort: function(options) {
-      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');
-      options || (options = {});
-
-      // Run sort based on type of `comparator`.
-      if (_.isString(this.comparator) || this.comparator.length === 1) {
-        this.models = this.sortBy(this.comparator, this);
-      } else {
-        this.models.sort(_.bind(this.comparator, this));
-      }
-
-      if (!options.silent) this.trigger('sort', this, options);
-      return this;
-    },
-
-    // Pluck an attribute from each model in the collection.
-    pluck: function(attr) {
-      return _.invoke(this.models, 'get', attr);
-    },
-
-    // Fetch the default set of models for this collection, resetting the
-    // collection when they arrive. If `reset: true` is passed, the response
-    // data will be passed through the `reset` method instead of `set`.
-    fetch: function(options) {
-      options = _.extend({parse: true}, options);
-      var success = options.success;
-      var collection = this;
-      options.success = function(resp) {
-        var method = options.reset ? 'reset' : 'set';
-        collection[method](resp, options);
-        if (success) success.call(options.context, collection, resp, options);
-        collection.trigger('sync', collection, resp, options);
-      };
-      wrapError(this, options);
-      return this.sync('read', this, options);
-    },
-
-    // Create a new instance of a model in this collection. Add the model to the
-    // collection immediately, unless `wait: true` is passed, in which case we
-    // wait for the server to agree.
-    create: function(model, options) {
-      options = options ? _.clone(options) : {};
-      var wait = options.wait;
-      model = this._prepareModel(model, options);
-      if (!model) return false;
-      if (!wait) this.add(model, options);
-      var collection = this;
-      var success = options.success;
-      options.success = function(model, resp, callbackOpts) {
-        if (wait) collection.add(model, callbackOpts);
-        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);
-      };
-      model.save(null, options);
-      return model;
-    },
-
-    // **parse** converts a response into a list of models to be added to the
-    // collection. The default implementation is just to pass it through.
-    parse: function(resp, options) {
-      return resp;
-    },
-
-    // Create a new collection with an identical list of models as this one.
-    clone: function() {
-      return new this.constructor(this.models, {
-        model: this.model,
-        comparator: this.comparator
-      });
-    },
-
-    // Define how to uniquely identify models in the collection.
-    modelId: function (attrs) {
-      return attrs[this.model.prototype.idAttribute || 'id'];
-    },
-
-    // Private method to reset all internal state. Called when the collection
-    // is first initialized or reset.
-    _reset: function() {
-      this.length = 0;
-      this.models = [];
-      this._byId  = {};
-    },
-
-    // Prepare a hash of attributes (or other model) to be added to this
-    // collection.
-    _prepareModel: function(attrs, options) {
-      if (this._isModel(attrs)) {
-        if (!attrs.collection) attrs.collection = this;
-        return attrs;
-      }
-      options = options ? _.clone(options) : {};
-      options.collection = this;
-      var model = new this.model(attrs, options);
-      if (!model.validationError) return model;
-      this.trigger('invalid', this, model.validationError, options);
-      return false;
-    },
-
-    // Internal method called by both remove and set.
-    // Returns removed models, or false if nothing is removed.
-    _removeModels: function(models, options) {
-      var removed = [];
-      for (var i = 0; i < models.length; i++) {
-        var model = this.get(models[i]);
-        if (!model) continue;
-
-        var index = this.indexOf(model);
-        this.models.splice(index, 1);
-        this.length--;
-
-        if (!options.silent) {
-          options.index = index;
-          model.trigger('remove', model, this, options);
-        }
-
-        removed.push(model);
-        this._removeReference(model, options);
-      }
-      return removed.length ? removed : false;
-    },
-
-    // Method for checking whether an object should be considered a model for
-    // the purposes of adding to the collection.
-    _isModel: function (model) {
-      return model instanceof Model;
-    },
-
-    // Internal method to create a model's ties to a collection.
-    _addReference: function(model, options) {
-      this._byId[model.cid] = model;
-      var id = this.modelId(model.attributes);
-      if (id != null) this._byId[id] = model;
-      model.on('all', this._onModelEvent, this);
-    },
-
-    // Internal method to sever a model's ties to a collection.
-    _removeReference: function(model, options) {
-      delete this._byId[model.cid];
-      var id = this.modelId(model.attributes);
-      if (id != null) delete this._byId[id];
-      if (this === model.collection) delete model.collection;
-      model.off('all', this._onModelEvent, this);
-    },
-
-    // Internal method called every time a model in the set fires an event.
-    // Sets need to update their indexes when models change ids. All other
-    // events simply proxy through. "add" and "remove" events that originate
-    // in other collections are ignored.
-    _onModelEvent: function(event, model, collection, options) {
-      if ((event === 'add' || event === 'remove') && collection !== this) return;
-      if (event === 'destroy') this.remove(model, options);
-      if (event === 'change') {
-        var prevId = this.modelId(model.previousAttributes());
-        var id = this.modelId(model.attributes);
-        if (prevId !== id) {
-          if (prevId != null) delete this._byId[prevId];
-          if (id != null) this._byId[id] = model;
-        }
-      }
-      this.trigger.apply(this, arguments);
-    }
-
-  });
-
-  // Underscore methods that we want to implement on the Collection.
-  // 90% of the core usefulness of Backbone Collections is actually implemented
-  // right here:
-  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,
-      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,
-      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 2,
-      contains: 2, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,
-      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,
-      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,
-      isEmpty: 1, chain: 1, sample: 3, partition: 3 };
-
-  // Mix in each Underscore method as a proxy to `Collection#models`.
-  addUnderscoreMethods(Collection, collectionMethods, 'models');
-
-  // Underscore methods that take a property name as an argument.
-  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];
-
-  // Use attributes instead of properties.
-  _.each(attributeMethods, function(method) {
-    if (!_[method]) return;
-    Collection.prototype[method] = function(value, context) {
-      var iterator = _.isFunction(value) ? value : function(model) {
-        return model.get(value);
-      };
-      return _[method](this.models, iterator, context);
-    };
-  });
-
-  // Backbone.View
-  // -------------
-
-  // Backbone Views are almost more convention than they are actual code. A View
-  // is simply a JavaScript object that represents a logical chunk of UI in the
-  // DOM. This might be a single item, an entire list, a sidebar or panel, or
-  // even the surrounding frame which wraps your whole app. Defining a chunk of
-  // UI as a **View** allows you to define your DOM events declaratively, without
-  // having to worry about render order ... and makes it easy for the view to
-  // react to specific changes in the state of your models.
-
-  // Creating a Backbone.View creates its initial element outside of the DOM,
-  // if an existing element is not provided...
-  var View = Backbone.View = function(options) {
-    this.cid = _.uniqueId('view');
-    _.extend(this, _.pick(options, viewOptions));
-    this._ensureElement();
-    this.initialize.apply(this, arguments);
-  };
-
-  // Cached regex to split keys for `delegate`.
-  var delegateEventSplitter = /^(\S+)\s*(.*)$/;
-
-  // List of view options to be merged as properties.
-  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];
-
-  // Set up all inheritable **Backbone.View** properties and methods.
-  _.extend(View.prototype, Events, {
-
-    // The default `tagName` of a View's element is `"div"`.
-    tagName: 'div',
-
-    // jQuery delegate for element lookup, scoped to DOM elements within the
-    // current view. This should be preferred to global lookups where possible.
-    $: function(selector) {
-      return this.$el.find(selector);
-    },
-
-    // Initialize is an empty function by default. Override it with your own
-    // initialization logic.
-    initialize: function(){},
-
-    // **render** is the core function that your view should override, in order
-    // to populate its element (`this.el`), with the appropriate HTML. The
-    // convention is for **render** to always return `this`.
-    render: function() {
-      return this;
-    },
-
-    // Remove this view by taking the element out of the DOM, and removing any
-    // applicable Backbone.Events listeners.
-    remove: function() {
-      this._removeElement();
-      this.stopListening();
-      return this;
-    },
-
-    // Remove this view's element from the document and all event listeners
-    // attached to it. Exposed for subclasses using an alternative DOM
-    // manipulation API.
-    _removeElement: function() {
-      this.$el.remove();
-    },
-
-    // Change the view's element (`this.el` property) and re-delegate the
-    // view's events on the new element.
-    setElement: function(element) {
-      this.undelegateEvents();
-      this._setElement(element);
-      this.delegateEvents();
-      return this;
-    },
-
-    // Creates the `this.el` and `this.$el` references for this view using the
-    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery
-    // context or an element. Subclasses can override this to utilize an
-    // alternative DOM manipulation API and are only required to set the
-    // `this.el` property.
-    _setElement: function(el) {
-      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);
-      this.el = this.$el[0];
-    },
-
-    // Set callbacks, where `this.events` is a hash of
-    //
-    // *{"event selector": "callback"}*
-    //
-    //     {
-    //       'mousedown .title':  'edit',
-    //       'click .button':     'save',
-    //       'click .open':       function(e) { ... }
-    //     }
-    //
-    // pairs. Callbacks will be bound to the view, with `this` set properly.
-    // Uses event delegation for efficiency.
-    // Omitting the selector binds the event to `this.el`.
-    delegateEvents: function(events) {
-      events || (events = _.result(this, 'events'));
-      if (!events) return this;
-      this.undelegateEvents();
-      for (var key in events) {
-        var method = events[key];
-        if (!_.isFunction(method)) method = this[method];
-        if (!method) continue;
-        var match = key.match(delegateEventSplitter);
-        this.delegate(match[1], match[2], _.bind(method, this));
-      }
-      return this;
-    },
-
-    // Add a single event listener to the view's element (or a child element
-    // using `selector`). This only works for delegate-able events: not `focus`,
-    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.
-    delegate: function(eventName, selector, listener) {
-      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);
-      return this;
-    },
-
-    // Clears all callbacks previously bound to the view by `delegateEvents`.
-    // You usually don't need to use this, but may wish to if you have multiple
-    // Backbone views attached to the same DOM element.
-    undelegateEvents: function() {
-      if (this.$el) this.$el.off('.delegateEvents' + this.cid);
-      return this;
-    },
-
-    // A finer-grained `undelegateEvents` for removing a single delegated event.
-    // `selector` and `listener` are both optional.
-    undelegate: function(eventName, selector, listener) {
-      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);
-      return this;
-    },
-
-    // Produces a DOM element to be assigned to your view. Exposed for
-    // subclasses using an alternative DOM manipulation API.
-    _createElement: function(tagName) {
-      return document.createElement(tagName);
-    },
-
-    // Ensure that the View has a DOM element to render into.
-    // If `this.el` is a string, pass it through `$()`, take the first
-    // matching element, and re-assign it to `el`. Otherwise, create
-    // an element from the `id`, `className` and `tagName` properties.
-    _ensureElement: function() {
-      if (!this.el) {
-        var attrs = _.extend({}, _.result(this, 'attributes'));
-        if (this.id) attrs.id = _.result(this, 'id');
-        if (this.className) attrs['class'] = _.result(this, 'className');
-        this.setElement(this._createElement(_.result(this, 'tagName')));
-        this._setAttributes(attrs);
-      } else {
-        this.setElement(_.result(this, 'el'));
-      }
-    },
-
-    // Set attributes from a hash on this view's element.  Exposed for
-    // subclasses using an alternative DOM manipulation API.
-    _setAttributes: function(attributes) {
-      this.$el.attr(attributes);
-    }
-
-  });
-
-  // Backbone.sync
-  // -------------
-
-  // Override this function to change the manner in which Backbone persists
-  // models to the server. You will be passed the type of request, and the
-  // model in question. By default, makes a RESTful Ajax request
-  // to the model's `url()`. Some possible customizations could be:
-  //
-  // * Use `setTimeout` to batch rapid-fire updates into a single request.
-  // * Send up the models as XML instead of JSON.
-  // * Persist models via WebSockets instead of Ajax.
-  //
-  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
-  // as `POST`, with a `_method` parameter containing the true HTTP method,
-  // as well as all requests with the body as `application/x-www-form-urlencoded`
-  // instead of `application/json` with the model in a param named `model`.
-  // Useful when interfacing with server-side languages like **PHP** that make
-  // it difficult to read the body of `PUT` requests.
-  Backbone.sync = function(method, model, options) {
-    var type = methodMap[method];
-
-    // Default options, unless specified.
-    _.defaults(options || (options = {}), {
-      emulateHTTP: Backbone.emulateHTTP,
-      emulateJSON: Backbone.emulateJSON
-    });
-
-    // Default JSON-request options.
-    var params = {type: type, dataType: 'json'};
-
-    // Ensure that we have a URL.
-    if (!options.url) {
-      params.url = _.result(model, 'url') || urlError();
-    }
-
-    // Ensure that we have the appropriate request data.
-    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
-      params.contentType = 'application/json';
-      params.data = JSON.stringify(options.attrs || model.toJSON(options));
-    }
-
-    // For older servers, emulate JSON by encoding the request into an HTML-form.
-    if (options.emulateJSON) {
-      params.contentType = 'application/x-www-form-urlencoded';
-      params.data = params.data ? {model: params.data} : {};
-    }
-
-    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
-    // And an `X-HTTP-Method-Override` header.
-    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
-      params.type = 'POST';
-      if (options.emulateJSON) params.data._method = type;
-      var beforeSend = options.beforeSend;
-      options.beforeSend = function(xhr) {
-        xhr.setRequestHeader('X-HTTP-Method-Override', type);
-        if (beforeSend) return beforeSend.apply(this, arguments);
-      };
-    }
-
-    // Don't process data on a non-GET request.
-    if (params.type !== 'GET' && !options.emulateJSON) {
-      params.processData = false;
-    }
-
-    // Pass along `textStatus` and `errorThrown` from jQuery.
-    var error = options.error;
-    options.error = function(xhr, textStatus, errorThrown) {
-      options.textStatus = textStatus;
-      options.errorThrown = errorThrown;
-      if (error) error.call(options.context, xhr, textStatus, errorThrown);
-    };
-
-    // Make the request, allowing the user to override any Ajax options.
-    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
-    model.trigger('request', model, xhr, options);
-    return xhr;
-  };
-
-  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
-  var methodMap = {
-    'create': 'POST',
-    'update': 'PUT',
-    'patch':  'PATCH',
-    'delete': 'DELETE',
-    'read':   'GET'
-  };
-
-  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
-  // Override this if you'd like to use a different library.
-  Backbone.ajax = function() {
-    return Backbone.$.ajax.apply(Backbone.$, arguments);
-  };
-
-  // Backbone.Router
-  // ---------------
-
-  // Routers map faux-URLs to actions, and fire events when routes are
-  // matched. Creating a new one sets its `routes` hash, if not set statically.
-  var Router = Backbone.Router = function(options) {
-    options || (options = {});
-    if (options.routes) this.routes = options.routes;
-    this._bindRoutes();
-    this.initialize.apply(this, arguments);
-  };
-
-  // Cached regular expressions for matching named param parts and splatted
-  // parts of route strings.
-  var optionalParam = /\((.*?)\)/g;
-  var namedParam    = /(\(\?)?:\w+/g;
-  var splatParam    = /\*\w+/g;
-  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;
-
-  // Set up all inheritable **Backbone.Router** properties and methods.
-  _.extend(Router.prototype, Events, {
-
-    // Initialize is an empty function by default. Override it with your own
-    // initialization logic.
-    initialize: function(){},
-
-    // Manually bind a single named route to a callback. For example:
-    //
-    //     this.route('search/:query/p:num', 'search', function(query, num) {
-    //       ...
-    //     });
-    //
-    route: function(route, name, callback) {
-      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
-      if (_.isFunction(name)) {
-        callback = name;
-        name = '';
-      }
-      if (!callback) callback = this[name];
-      var router = this;
-      Backbone.history.route(route, function(fragment) {
-        var args = router._extractParameters(route, fragment);
-        if (router.execute(callback, args, name) !== false) {
-          router.trigger.apply(router, ['route:' + name].concat(args));
-          router.trigger('route', name, args);
-          Backbone.history.trigger('route', router, name, args);
-        }
-      });
-      return this;
-    },
-
-    // Execute a route handler with the provided parameters.  This is an
-    // excellent place to do pre-route setup or post-route cleanup.
-    execute: function(callback, args, name) {
-      if (callback) callback.apply(this, args);
-    },
-
-    // Simple proxy to `Backbone.history` to save a fragment into the history.
-    navigate: function(fragment, options) {
-      Backbone.history.navigate(fragment, options);
-      return this;
-    },
-
-    // Bind all defined routes to `Backbone.history`. We have to reverse the
-    // order of the routes here to support behavior where the most general
-    // routes can be defined at the bottom of the route map.
-    _bindRoutes: function() {
-      if (!this.routes) return;
-      this.routes = _.result(this, 'routes');
-      var route, routes = _.keys(this.routes);
-      while ((route = routes.pop()) != null) {
-        this.route(route, this.routes[route]);
-      }
-    },
-
-    // Convert a route string into a regular expression, suitable for matching
-    // against the current location hash.
-    _routeToRegExp: function(route) {
-      route = route.replace(escapeRegExp, '\\$&')
-                   .replace(optionalParam, '(?:$1)?')
-                   .replace(namedParam, function(match, optional) {
-                     return optional ? match : '([^/?]+)';
-                   })
-                   .replace(splatParam, '([^?]*?)');
-      return new RegExp('^' + route + '(?:\\?([\\s\\S]*))?$');
-    },
-
-    // Given a route, and a URL fragment that it matches, return the array of
-    // extracted decoded parameters. Empty or unmatched parameters will be
-    // treated as `null` to normalize cross-browser behavior.
-    _extractParameters: function(route, fragment) {
-      var params = route.exec(fragment).slice(1);
-      return _.map(params, function(param, i) {
-        // Don't decode the search params.
-        if (i === params.length - 1) return param || null;
-        return param ? decodeURIComponent(param) : null;
-      });
-    }
-
-  });
-
-  // Backbone.History
-  // ----------------
-
-  // Handles cross-browser history management, based on either
-  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or
-  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)
-  // and URL fragments. If the browser supports neither (old IE, natch),
-  // falls back to polling.
-  var History = Backbone.History = function() {
-    this.handlers = [];
-    _.bindAll(this, 'checkUrl');
-
-    // Ensure that `History` can be used outside of the browser.
-    if (typeof window !== 'undefined') {
-      this.location = window.location;
-      this.history = window.history;
-    }
-  };
-
-  // Cached regex for stripping a leading hash/slash and trailing space.
-  var routeStripper = /^[#\/]|\s+$/g;
-
-  // Cached regex for stripping leading and trailing slashes.
-  var rootStripper = /^\/+|\/+$/g;
-
-  // Cached regex for stripping urls of hash.
-  var pathStripper = /#.*$/;
-
-  // Has the history handling already been started?
-  History.started = false;
-
-  // Set up all inheritable **Backbone.History** properties and methods.
-  _.extend(History.prototype, Events, {
-
-    // The default interval to poll for hash changes, if necessary, is
-    // twenty times a second.
-    interval: 50,
-
-    // Are we at the app root?
-    atRoot: function() {
-      var path = this.location.pathname.replace(/[^\/]$/, '$&/');
-      return path === this.root && !this.getSearch();
-    },
-
-    // Does the pathname match the root?
-    matchRoot: function() {
-      var path = this.decodeFragment(this.location.pathname);
-      var root = path.slice(0, this.root.length - 1) + '/';
-      return root === this.root;
-    },
-
-    // Unicode characters in `location.pathname` are percent encoded so they're
-    // decoded for comparison. `%25` should not be decoded since it may be part
-    // of an encoded parameter.
-    decodeFragment: function(fragment) {
-      return decodeURI(fragment.replace(/%25/g, '%2525'));
-    },
-
-    // In IE6, the hash fragment and search params are incorrect if the
-    // fragment contains `?`.
-    getSearch: function() {
-      var match = this.location.href.replace(/#.*/, '').match(/\?.+/);
-      return match ? match[0] : '';
-    },
-
-    // Gets the true hash value. Cannot use location.hash directly due to bug
-    // in Firefox where location.hash will always be decoded.
-    getHash: function(window) {
-      var match = (window || this).location.href.match(/#(.*)$/);
-      return match ? match[1] : '';
-    },
-
-    // Get the pathname and search params, without the root.
-    getPath: function() {
-      var path = this.decodeFragment(
-        this.location.pathname + this.getSearch()
-      ).slice(this.root.length - 1);
-      return path.charAt(0) === '/' ? path.slice(1) : path;
-    },
-
-    // Get the cross-browser normalized URL fragment from the path or hash.
-    getFragment: function(fragment) {
-      if (fragment == null) {
-        if (this._usePushState || !this._wantsHashChange) {
-          fragment = this.getPath();
-        } else {
-          fragment = this.getHash();
-        }
-      }
-      return fragment.replace(routeStripper, '');
-    },
-
-    // Start the hash change handling, returning `true` if the current URL matches
-    // an existing route, and `false` otherwise.
-    start: function(options) {
-      if (History.started) throw new Error('Backbone.history has already been started');
-      History.started = true;
-
-      // Figure out the initial configuration. Do we need an iframe?
-      // Is pushState desired ... is it available?
-      this.options          = _.extend({root: '/'}, this.options, options);
-      this.root             = this.options.root;
-      this._wantsHashChange = this.options.hashChange !== false;
-      this._hasHashChange   = 'onhashchange' in window;
-      this._useHashChange   = this._wantsHashChange && this._hasHashChange;
-      this._wantsPushState  = !!this.options.pushState;
-      this._hasPushState    = !!(this.history && this.history.pushState);
-      this._usePushState    = this._wantsPushState && this._hasPushState;
-      this.fragment         = this.getFragment();
-
-      // Normalize root to always include a leading and trailing slash.
-      this.root = ('/' + this.root + '/').replace(rootStripper, '/');
-
-      // Transition from hashChange to pushState or vice versa if both are
-      // requested.
-      if (this._wantsHashChange && this._wantsPushState) {
-
-        // If we've started off with a route from a `pushState`-enabled
-        // browser, but we're currently in a browser that doesn't support it...
-        if (!this._hasPushState && !this.atRoot()) {
-          var root = this.root.slice(0, -1) || '/';
-          this.location.replace(root + '#' + this.getPath());
-          // Return immediately as browser will do redirect to new url
-          return true;
-
-        // Or if we've started out with a hash-based route, but we're currently
-        // in a browser where it could be `pushState`-based instead...
-        } else if (this._hasPushState && this.atRoot()) {
-          this.navigate(this.getHash(), {replace: true});
-        }
-
-      }
-
-      // Proxy an iframe to handle location events if the browser doesn't
-      // support the `hashchange` event, HTML5 history, or the user wants
-      // `hashChange` but not `pushState`.
-      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
-        this.iframe = document.createElement('iframe');
-        this.iframe.src = 'javascript:0';
-        this.iframe.style.display = 'none';
-        this.iframe.tabIndex = -1;
-        var body = document.body;
-        // Using `appendChild` will throw on IE < 9 if the document is not ready.
-        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;
-        iWindow.document.open();
-        iWindow.document.close();
-        iWindow.location.hash = '#' + this.fragment;
-      }
-
-      // Add a cross-platform `addEventListener` shim for older browsers.
-      var addEventListener = window.addEventListener || function (eventName, listener) {
-        return attachEvent('on' + eventName, listener);
-      };
-
-      // Depending on whether we're using pushState or hashes, and whether
-      // 'onhashchange' is supported, determine how we check the URL state.
-      if (this._usePushState) {
-        addEventListener('popstate', this.checkUrl, false);
-      } else if (this._useHashChange && !this.iframe) {
-        addEventListener('hashchange', this.checkUrl, false);
-      } else if (this._wantsHashChange) {
-        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
-      }
-
-      if (!this.options.silent) return this.loadUrl();
-    },
-
-    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
-    // but possibly useful for unit testing Routers.
-    stop: function() {
-      // Add a cross-platform `removeEventListener` shim for older browsers.
-      var removeEventListener = window.removeEventListener || function (eventName, listener) {
-        return detachEvent('on' + eventName, listener);
-      };
-
-      // Remove window listeners.
-      if (this._usePushState) {
-        removeEventListener('popstate', this.checkUrl, false);
-      } else if (this._useHashChange && !this.iframe) {
-        removeEventListener('hashchange', this.checkUrl, false);
-      }
-
-      // Clean up the iframe if necessary.
-      if (this.iframe) {
-        document.body.removeChild(this.iframe);
-        this.iframe = null;
-      }
-
-      // Some environments will throw when clearing an undefined interval.
-      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);
-      History.started = false;
-    },
-
-    // Add a route to be tested when the fragment changes. Routes added later
-    // may override previous routes.
-    route: function(route, callback) {
-      this.handlers.unshift({route: route, callback: callback});
-    },
-
-    // Checks the current URL to see if it has changed, and if it has,
-    // calls `loadUrl`, normalizing across the hidden iframe.
-    checkUrl: function(e) {
-      var current = this.getFragment();
-
-      // If the user pressed the back button, the iframe's hash will have
-      // changed and we should use that for comparison.
-      if (current === this.fragment && this.iframe) {
-        current = this.getHash(this.iframe.contentWindow);
-      }
-
-      if (current === this.fragment) return false;
-      if (this.iframe) this.navigate(current);
-      this.loadUrl();
-    },
-
-    // Attempt to load the current URL fragment. If a route succeeds with a
-    // match, returns `true`. If no defined routes matches the fragment,
-    // returns `false`.
-    loadUrl: function(fragment) {
-      // If the root doesn't match, no routes can match either.
-      if (!this.matchRoot()) return false;
-      fragment = this.fragment = this.getFragment(fragment);
-      return _.any(this.handlers, function(handler) {
-        if (handler.route.test(fragment)) {
-          handler.callback(fragment);
-          return true;
-        }
-      });
-    },
-
-    // Save a fragment into the hash history, or replace the URL state if the
-    // 'replace' option is passed. You are responsible for properly URL-encoding
-    // the fragment in advance.
-    //
-    // The options object can contain `trigger: true` if you wish to have the
-    // route callback be fired (not usually desirable), or `replace: true`, if
-    // you wish to modify the current URL without adding an entry to the history.
-    navigate: function(fragment, options) {
-      if (!History.started) return false;
-      if (!options || options === true) options = {trigger: !!options};
-
-      // Normalize the fragment.
-      fragment = this.getFragment(fragment || '');
-
-      // Don't include a trailing slash on the root.
-      var root = this.root;
-      if (fragment === '' || fragment.charAt(0) === '?') {
-        root = root.slice(0, -1) || '/';
-      }
-      var url = root + fragment;
-
-      // Strip the hash and decode for matching.
-      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));
-
-      if (this.fragment === fragment) return;
-      this.fragment = fragment;
-
-      // If pushState is available, we use it to set the fragment as a real URL.
-      if (this._usePushState) {
-        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);
-
-      // If hash changes haven't been explicitly disabled, update the hash
-      // fragment to store history.
-      } else if (this._wantsHashChange) {
-        this._updateHash(this.location, fragment, options.replace);
-        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {
-          var iWindow = this.iframe.contentWindow;
-
-          // Opening and closing the iframe tricks IE7 and earlier to push a
-          // history entry on hash-tag change.  When replace is true, we don't
-          // want this.
-          if (!options.replace) {
-            iWindow.document.open();
-            iWindow.document.close();
-          }
-
-          this._updateHash(iWindow.location, fragment, options.replace);
-        }
-
-      // If you've told us that you explicitly don't want fallback hashchange-
-      // based history, then `navigate` becomes a page refresh.
-      } else {
-        return this.location.assign(url);
-      }
-      if (options.trigger) return this.loadUrl(fragment);
-    },
-
-    // Update the hash location, either replacing the current entry, or adding
-    // a new one to the browser history.
-    _updateHash: function(location, fragment, replace) {
-      if (replace) {
-        var href = location.href.replace(/(javascript:|#).*$/, '');
-        location.replace(href + '#' + fragment);
-      } else {
-        // Some browsers require that `hash` contains a leading #.
-        location.hash = '#' + fragment;
-      }
-    }
-
-  });
-
-  // Create the default Backbone.history.
-  Backbone.history = new History;
-
-  // Helpers
-  // -------
-
-  // Helper function to correctly set up the prototype chain for subclasses.
-  // Similar to `goog.inherits`, but uses a hash of prototype properties and
-  // class properties to be extended.
-  var extend = function(protoProps, staticProps) {
-    var parent = this;
-    var child;
-
-    // The constructor function for the new subclass is either defined by you
-    // (the "constructor" property in your `extend` definition), or defaulted
-    // by us to simply call the parent constructor.
-    if (protoProps && _.has(protoProps, 'constructor')) {
-      child = protoProps.constructor;
-    } else {
-      child = function(){ return parent.apply(this, arguments); };
-    }
-
-    // Add static properties to the constructor function, if supplied.
-    _.extend(child, parent, staticProps);
-
-    // Set the prototype chain to inherit from `parent`, without calling
-    // `parent` constructor function.
-    var Surrogate = function(){ this.constructor = child; };
-    Surrogate.prototype = parent.prototype;
-    child.prototype = new Surrogate;
-
-    // Add prototype properties (instance properties) to the subclass,
-    // if supplied.
-    if (protoProps) _.extend(child.prototype, protoProps);
-
-    // Set a convenience property in case the parent's prototype is needed
-    // later.
-    child.__super__ = parent.prototype;
-
-    return child;
-  };
-
-  // Set up inheritance for the model, collection, router, view and history.
-  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;
-
-  // Throw an error when a URL is needed, and none is supplied.
-  var urlError = function() {
-    throw new Error('A "url" property or function must be specified');
-  };
-
-  // Wrap an optional error callback with a fallback error event.
-  var wrapError = function(model, options) {
-    var error = options.error;
-    options.error = function(resp) {
-      if (error) error.call(options.context, model, resp, options);
-      model.trigger('error', model, resp, options);
-    };
-  };
-
-  return Backbone;
-
-}));

--- app/webroot/js/vendor/lodash/vendor/backbone/test/collection.js ---
@@ -1,1639 +0,0 @@
-(function() {
-
-  var a, b, c, d, e, col, otherCol;
-
-  module("Backbone.Collection", {
-
-    setup: function() {
-      a         = new Backbone.Model({id: 3, label: 'a'});
-      b         = new Backbone.Model({id: 2, label: 'b'});
-      c         = new Backbone.Model({id: 1, label: 'c'});
-      d         = new Backbone.Model({id: 0, label: 'd'});
-      e         = null;
-      col       = new Backbone.Collection([a,b,c,d]);
-      otherCol  = new Backbone.Collection();
-    }
-
-  });
-
-  test("new and sort", 6, function() {
-    var counter = 0;
-    col.on('sort', function(){ counter++; });
-    deepEqual(col.pluck('label'), ['a', 'b', 'c', 'd']);
-    col.comparator = function(a, b) {
-      return a.id > b.id ? -1 : 1;
-    };
-    col.sort();
-    equal(counter, 1);
-    deepEqual(col.pluck('label'), ['a', 'b', 'c', 'd']);
-    col.comparator = function(model) { return model.id; };
-    col.sort();
-    equal(counter, 2);
-    deepEqual(col.pluck('label'), ['d', 'c', 'b', 'a']);
-    equal(col.length, 4);
-  });
-
-  test("String comparator.", 1, function() {
-    var collection = new Backbone.Collection([
-      {id: 3},
-      {id: 1},
-      {id: 2}
-    ], {comparator: 'id'});
-    deepEqual(collection.pluck('id'), [1, 2, 3]);
-  });
-
-  test("new and parse", 3, function() {
-    var Collection = Backbone.Collection.extend({
-      parse : function(data) {
-        return _.filter(data, function(datum) {
-          return datum.a % 2 === 0;
-        });
-      }
-    });
-    var models = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];
-    var collection = new Collection(models, {parse: true});
-    strictEqual(collection.length, 2);
-    strictEqual(collection.first().get('a'), 2);
-    strictEqual(collection.last().get('a'), 4);
-  });
-
-  test("clone preserves model and comparator", 3, function() {
-    var Model = Backbone.Model.extend();
-    var comparator = function(model){ return model.id; };
-
-    var collection = new Backbone.Collection([{id: 1}], {
-      model: Model,
-      comparator: comparator
-    }).clone();
-    collection.add({id: 2});
-    ok(collection.at(0) instanceof Model);
-    ok(collection.at(1) instanceof Model);
-    strictEqual(collection.comparator, comparator);
-  });
-
-  test("get", 6, function() {
-    equal(col.get(0), d);
-    equal(col.get(d.clone()), d);
-    equal(col.get(2), b);
-    equal(col.get({id: 1}), c);
-    equal(col.get(c.clone()), c);
-    equal(col.get(col.first().cid), col.first());
-  });
-
-  test("get with non-default ids", 5, function() {
-    var MongoModel = Backbone.Model.extend({idAttribute: '_id'});
-    var model = new MongoModel({_id: 100});
-    var col = new Backbone.Collection([model], {model: MongoModel});
-    equal(col.get(100), model);
-    equal(col.get(model.cid), model);
-    equal(col.get(model), model);
-    equal(col.get(101), void 0);
-
-    var col2 = new Backbone.Collection();
-    col2.model = MongoModel;
-    col2.add(model.attributes);
-    equal(col2.get(model.clone()), col2.first());
-  });
-
-  test('get with "undefined" id', function() {
-    var collection = new Backbone.Collection([{id: 1}, {id: 'undefined'}]);
-    equal(collection.get(1).id, 1);
-  });
-
-  test("update index when id changes", 4, function() {
-    var col = new Backbone.Collection();
-    col.add([
-      {id : 0, name : 'one'},
-      {id : 1, name : 'two'}
-    ]);
-    var one = col.get(0);
-    equal(one.get('name'), 'one');
-    col.on('change:name', function (model) { ok(this.get(model)); });
-    one.set({name: 'dalmatians', id : 101});
-    equal(col.get(0), null);
-    equal(col.get(101).get('name'), 'dalmatians');
-  });
-
-  test("at", 2, function() {
-    equal(col.at(2), c);
-    equal(col.at(-2), c);
-  });
-
-  test("pluck", 1, function() {
-    equal(col.pluck('label').join(' '), 'a b c d');
-  });
-
-  test("add", 14, function() {
-    var added, opts, secondAdded;
-    added = opts = secondAdded = null;
-    e = new Backbone.Model({id: 10, label : 'e'});
-    otherCol.add(e);
-    otherCol.on('add', function() {
-      secondAdded = true;
-    });
-    col.on('add', function(model, collection, options){
-      added = model.get('label');
-      opts = options;
-    });
-    col.add(e, {amazing: true});
-    equal(added, 'e');
-    equal(col.length, 5);
-    equal(col.last(), e);
-    equal(otherCol.length, 1);
-    equal(secondAdded, null);
-    ok(opts.amazing);
-
-    var f = new Backbone.Model({id: 20, label : 'f'});
-    var g = new Backbone.Model({id: 21, label : 'g'});
-    var h = new Backbone.Model({id: 22, label : 'h'});
-    var atCol = new Backbone.Collection([f, g, h]);
-    equal(atCol.length, 3);
-    atCol.add(e, {at: 1});
-    equal(atCol.length, 4);
-    equal(atCol.at(1), e);
-    equal(atCol.last(), h);
-
-    var coll = new Backbone.Collection(new Array(2));
-    var addCount = 0;
-    coll.on('add', function(){
-        addCount += 1;
-    });
-    coll.add([undefined, f, g]);
-    equal(coll.length, 5);
-    equal(addCount, 3);
-    coll.add(new Array(4));
-    equal(coll.length, 9);
-    equal(addCount, 7);
-  });
-
-  test("add multiple models", 6, function() {
-    var col = new Backbone.Collection([{at: 0}, {at: 1}, {at: 9}]);
-    col.add([{at: 2}, {at: 3}, {at: 4}, {at: 5}, {at: 6}, {at: 7}, {at: 8}], {at: 2});
-    for (var i = 0; i <= 5; i++) {
-      equal(col.at(i).get('at'), i);
-    }
-  });
-
-  test("add; at should have preference over comparator", 1, function() {
-    var Col = Backbone.Collection.extend({
-      comparator: function(a,b) {
-        return a.id > b.id ? -1 : 1;
-      }
-    });
-
-    var col = new Col([{id: 2}, {id: 3}]);
-    col.add(new Backbone.Model({id: 1}), {at:   1});
-
-    equal(col.pluck('id').join(' '), '3 1 2');
-  });
-
-  test("can't add model to collection twice", function() {
-    var col = new Backbone.Collection([{id: 1}, {id: 2}, {id: 1}, {id: 2}, {id: 3}]);
-    equal(col.pluck('id').join(' '), '1 2 3');
-  });
-
-  test("can't add different model with same id to collection twice", 1, function() {
-    var col = new Backbone.Collection;
-    col.unshift({id: 101});
-    col.add({id: 101});
-    equal(col.length, 1);
-  });
-
-  test("merge in duplicate models with {merge: true}", 3, function() {
-    var col = new Backbone.Collection;
-    col.add([{id: 1, name: 'Moe'}, {id: 2, name: 'Curly'}, {id: 3, name: 'Larry'}]);
-    col.add({id: 1, name: 'Moses'});
-    equal(col.first().get('name'), 'Moe');
-    col.add({id: 1, name: 'Moses'}, {merge: true});
-    equal(col.first().get('name'), 'Moses');
-    col.add({id: 1, name: 'Tim'}, {merge: true, silent: true});
-    equal(col.first().get('name'), 'Tim');
-  });
-
-  test("add model to multiple collections", 10, function() {
-    var counter = 0;
-    var e = new Backbone.Model({id: 10, label : 'e'});
-    e.on('add', function(model, collection) {
-      counter++;
-      equal(e, model);
-      if (counter > 1) {
-        equal(collection, colF);
-      } else {
-        equal(collection, colE);
-      }
-    });
-    var colE = new Backbone.Collection([]);
-    colE.on('add', function(model, collection) {
-      equal(e, model);
-      equal(colE, collection);
-    });
-    var colF = new Backbone.Collection([]);
-    colF.on('add', function(model, collection) {
-      equal(e, model);
-      equal(colF, collection);
-    });
-    colE.add(e);
-    equal(e.collection, colE);
-    colF.add(e);
-    equal(e.collection, colE);
-  });
-
-  test("add model with parse", 1, function() {
-    var Model = Backbone.Model.extend({
-      parse: function(obj) {
-        obj.value += 1;
-        return obj;
-      }
-    });
-
-    var Col = Backbone.Collection.extend({model: Model});
-    var col = new Col;
-    col.add({value: 1}, {parse: true});
-    equal(col.at(0).get('value'), 2);
-  });
-
-  test("add with parse and merge", function() {
-    var collection = new Backbone.Collection();
-    collection.parse = function(attrs) {
-      return _.map(attrs, function(model) {
-        if (model.model) return model.model;
-        return model;
-      });
-    };
-    collection.add({id: 1});
-    collection.add({model: {id: 1, name: 'Alf'}}, {parse: true, merge: true});
-    equal(collection.first().get('name'), 'Alf');
-  });
-
-  test("add model to collection with sort()-style comparator", 3, function() {
-    var col = new Backbone.Collection;
-    col.comparator = function(a, b) {
-      return a.get('name') < b.get('name') ? -1 : 1;
-    };
-    var tom = new Backbone.Model({name: 'Tom'});
-    var rob = new Backbone.Model({name: 'Rob'});
-    var tim = new Backbone.Model({name: 'Tim'});
-    col.add(tom);
-    col.add(rob);
-    col.add(tim);
-    equal(col.indexOf(rob), 0);
-    equal(col.indexOf(tim), 1);
-    equal(col.indexOf(tom), 2);
-  });
-
-  test("comparator that depends on `this`", 2, function() {
-    var col = new Backbone.Collection;
-    col.negative = function(num) {
-      return -num;
-    };
-    col.comparator = function(a) {
-      return this.negative(a.id);
-    };
-    col.add([{id: 1}, {id: 2}, {id: 3}]);
-    deepEqual(col.pluck('id'), [3, 2, 1]);
-    col.comparator = function(a, b) {
-      return this.negative(b.id) - this.negative(a.id);
-    };
-    col.sort();
-    deepEqual(col.pluck('id'), [1, 2, 3]);
-  });
-
-  test("remove", 10, function() {
-    var removed = null;
-    var result = null;
-    col.on('remove', function(model, col, options) {
-      removed = model.get('label');
-      equal(options.index, 3);
-    });
-    result = col.remove(d);
-    equal(removed, 'd');
-    strictEqual(result, d);
-    //if we try to remove d again, it's not going to actually get removed
-    result = col.remove(d);
-    strictEqual(result, undefined);
-    equal(col.length, 3);
-    equal(col.first(), a);
-    col.off();
-    result = col.remove([c, d]);
-    equal(result.length, 1, 'only returns removed models');
-    equal(result[0], c, 'only returns removed models');
-    result = col.remove([c, b]);
-    equal(result.length, 1, 'only returns removed models');
-    equal(result[0], b, 'only returns removed models');
-  });
-
-  test("add and remove return values", 13, function() {
-    var Even = Backbone.Model.extend({
-      validate: function(attrs) {
-        if (attrs.id % 2 !== 0) return "odd";
-      }
-    });
-    var col = new Backbone.Collection;
-    col.model = Even;
-
-    var list = col.add([{id: 2}, {id: 4}], {validate: true});
-    equal(list.length, 2);
-    ok(list[0] instanceof Backbone.Model);
-    equal(list[1], col.last());
-    equal(list[1].get('id'), 4);
-
-    list = col.add([{id: 3}, {id: 6}], {validate: true});
-    equal(col.length, 3);
-    equal(list[0], false);
-    equal(list[1].get('id'), 6);
-
-    var result = col.add({id: 6});
-    equal(result.cid, list[1].cid);
-
-    result = col.remove({id: 6});
-    equal(col.length, 2);
-    equal(result.id, 6);
-
-    list = col.remove([{id: 2}, {id: 8}]);
-    equal(col.length, 1);
-    equal(list[0].get('id'), 2);
-    equal(list[1], null);
-  });
-
-  test("shift and pop", 2, function() {
-    var col = new Backbone.Collection([{a: 'a'}, {b: 'b'}, {c: 'c'}]);
-    equal(col.shift().get('a'), 'a');
-    equal(col.pop().get('c'), 'c');
-  });
-
-  test("slice", 2, function() {
-    var col = new Backbone.Collection([{a: 'a'}, {b: 'b'}, {c: 'c'}]);
-    var array = col.slice(1, 3);
-    equal(array.length, 2);
-    equal(array[0].get('b'), 'b');
-  });
-
-  test("events are unbound on remove", 3, function() {
-    var counter = 0;
-    var dj = new Backbone.Model();
-    var emcees = new Backbone.Collection([dj]);
-    emcees.on('change', function(){ counter++; });
-    dj.set({name : 'Kool'});
-    equal(counter, 1);
-    emcees.reset([]);
-    equal(dj.collection, undefined);
-    dj.set({name : 'Shadow'});
-    equal(counter, 1);
-  });
-
-  test("remove in multiple collections", 7, function() {
-    var modelData = {
-      id : 5,
-      title : 'Othello'
-    };
-    var passed = false;
-    var e = new Backbone.Model(modelData);
-    var f = new Backbone.Model(modelData);
-    f.on('remove', function() {
-      passed = true;
-    });
-    var colE = new Backbone.Collection([e]);
-    var colF = new Backbone.Collection([f]);
-    ok(e != f);
-    ok(colE.length === 1);
-    ok(colF.length === 1);
-    colE.remove(e);
-    equal(passed, false);
-    ok(colE.length === 0);
-    colF.remove(e);
-    ok(colF.length === 0);
-    equal(passed, true);
-  });
-
-  test("remove same model in multiple collection", 16, function() {
-    var counter = 0;
-    var e = new Backbone.Model({id: 5, title: 'Othello'});
-    e.on('remove', function(model, collection) {
-      counter++;
-      equal(e, model);
-      if (counter > 1) {
-        equal(collection, colE);
-      } else {
-        equal(collection, colF);
-      }
-    });
-    var colE = new Backbone.Collection([e]);
-    colE.on('remove', function(model, collection) {
-      equal(e, model);
-      equal(colE, collection);
-    });
-    var colF = new Backbone.Collection([e]);
-    colF.on('remove', function(model, collection) {
-      equal(e, model);
-      equal(colF, collection);
-    });
-    equal(colE, e.collection);
-    colF.remove(e);
-    ok(colF.length === 0);
-    ok(colE.length === 1);
-    equal(counter, 1);
-    equal(colE, e.collection);
-    colE.remove(e);
-    equal(null, e.collection);
-    ok(colE.length === 0);
-    equal(counter, 2);
-  });
-
-  test("model destroy removes from all collections", 3, function() {
-    var e = new Backbone.Model({id: 5, title: 'Othello'});
-    e.sync = function(method, model, options) { options.success(); };
-    var colE = new Backbone.Collection([e]);
-    var colF = new Backbone.Collection([e]);
-    e.destroy();
-    ok(colE.length === 0);
-    ok(colF.length === 0);
-    equal(undefined, e.collection);
-  });
-
-  test("Colllection: non-persisted model destroy removes from all collections", 3, function() {
-    var e = new Backbone.Model({title: 'Othello'});
-    e.sync = function(method, model, options) { throw "should not be called"; };
-    var colE = new Backbone.Collection([e]);
-    var colF = new Backbone.Collection([e]);
-    e.destroy();
-    ok(colE.length === 0);
-    ok(colF.length === 0);
-    equal(undefined, e.collection);
-  });
-
-  test("fetch", 4, function() {
-    var collection = new Backbone.Collection;
-    collection.url = '/test';
-    collection.fetch();
-    equal(this.syncArgs.method, 'read');
-    equal(this.syncArgs.model, collection);
-    equal(this.syncArgs.options.parse, true);
-
-    collection.fetch({parse: false});
-    equal(this.syncArgs.options.parse, false);
-  });
-
-  test("fetch with an error response triggers an error event", 1, function () {
-    var collection = new Backbone.Collection();
-    collection.on('error', function () {
-      ok(true);
-    });
-    collection.sync = function (method, model, options) { options.error(); };
-    collection.fetch();
-  });
-
-  test("#3283 - fetch with an error response calls error with context", 1, function () {
-    var collection = new Backbone.Collection();
-    var obj = {};
-    var options = {
-      context: obj,
-      error: function() {
-        equal(this, obj);
-      }
-    };
-    collection.sync = function (method, model, options) {
-      options.error.call(options.context);
-    };
-    collection.fetch(options);
-  });
-
-  test("ensure fetch only parses once", 1, function() {
-    var collection = new Backbone.Collection;
-    var counter = 0;
-    collection.parse = function(models) {
-      counter++;
-      return models;
-    };
-    collection.url = '/test';
-    collection.fetch();
-    this.syncArgs.options.success();
-    equal(counter, 1);
-  });
-
-  test("create", 4, function() {
-    var collection = new Backbone.Collection;
-    collection.url = '/test';
-    var model = collection.create({label: 'f'}, {wait: true});
-    equal(this.syncArgs.method, 'create');
-    equal(this.syncArgs.model, model);
-    equal(model.get('label'), 'f');
-    equal(model.collection, collection);
-  });
-
-  test("create with validate:true enforces validation", 3, function() {
-    var ValidatingModel = Backbone.Model.extend({
-      validate: function(attrs) {
-        return "fail";
-      }
-    });
-    var ValidatingCollection = Backbone.Collection.extend({
-      model: ValidatingModel
-    });
-    var col = new ValidatingCollection();
-    col.on('invalid', function (collection, error, options) {
-      equal(error, "fail");
-      equal(options.validationError, 'fail');
-    });
-    equal(col.create({"foo":"bar"}, {validate:true}), false);
-  });
-
-  test("create will pass extra options to success callback", 1, function () {
-    var Model = Backbone.Model.extend({
-      sync: function (method, model, options) {
-        _.extend(options, {specialSync: true});
-        return Backbone.Model.prototype.sync.call(this, method, model, options);
-      }
-    });
-
-    var Collection = Backbone.Collection.extend({
-      model: Model,
-      url: '/test'
-    });
-
-    var collection = new Collection;
-
-    var success = function (model, response, options) {
-      ok(options.specialSync, "Options were passed correctly to callback");
-    };
-
-    collection.create({}, {success: success});
-    this.ajaxSettings.success();
-
-  });
-
-  test("create with wait:true should not call collection.parse", 0, function() {
-    var Collection = Backbone.Collection.extend({
-      url: '/test',
-      parse: function () {
-        ok(false);
-      }
-    });
-
-    var collection = new Collection;
-
-    collection.create({}, {wait: true});
-    this.ajaxSettings.success();
-  });
-
-  test("a failing create returns model with errors", function() {
-    var ValidatingModel = Backbone.Model.extend({
-      validate: function(attrs) {
-        return "fail";
-      }
-    });
-    var ValidatingCollection = Backbone.Collection.extend({
-      model: ValidatingModel
-    });
-    var col = new ValidatingCollection();
-    var m = col.create({"foo":"bar"});
-    equal(m.validationError, 'fail');
-    equal(col.length, 1);
-  });
-
-  test("initialize", 1, function() {
-    var Collection = Backbone.Collection.extend({
-      initialize: function() {
-        this.one = 1;
-      }
-    });
-    var coll = new Collection;
-    equal(coll.one, 1);
-  });
-
-  test("toJSON", 1, function() {
-    equal(JSON.stringify(col), '[{"id":3,"label":"a"},{"id":2,"label":"b"},{"id":1,"label":"c"},{"id":0,"label":"d"}]');
-  });
-
-  test("where and findWhere", 8, function() {
-    var model = new Backbone.Model({a: 1});
-    var coll = new Backbone.Collection([
-      model,
-      {a: 1},
-      {a: 1, b: 2},
-      {a: 2, b: 2},
-      {a: 3}
-    ]);
-    equal(coll.where({a: 1}).length, 3);
-    equal(coll.where({a: 2}).length, 1);
-    equal(coll.where({a: 3}).length, 1);
-    equal(coll.where({b: 1}).length, 0);
-    equal(coll.where({b: 2}).length, 2);
-    equal(coll.where({a: 1, b: 2}).length, 1);
-    equal(coll.findWhere({a: 1}), model);
-    equal(coll.findWhere({a: 4}), void 0);
-  });
-
-  test("Underscore methods", 16, function() {
-    equal(col.map(function(model){ return model.get('label'); }).join(' '), 'a b c d');
-    equal(col.any(function(model){ return model.id === 100; }), false);
-    equal(col.any(function(model){ return model.id === 0; }), true);
-    equal(col.indexOf(b), 1);
-    equal(col.size(), 4);
-    equal(col.rest().length, 3);
-    ok(!_.include(col.rest(), a));
-    ok(_.include(col.rest(), d));
-    ok(!col.isEmpty());
-    ok(!_.include(col.without(d), d));
-    equal(col.max(function(model){ return model.id; }).id, 3);
-    equal(col.min(function(model){ return model.id; }).id, 0);
-    deepEqual(col.chain()
-            .filter(function(o){ return o.id % 2 === 0; })
-            .map(function(o){ return o.id * 2; })
-            .value(),
-         [4, 0]);
-    deepEqual(col.difference([c, d]), [a, b]);
-    ok(col.include(col.sample()));
-    var first = col.first();
-    ok(col.indexBy('id')[first.id] === first);
-  });
-
-  test("reset", 16, function() {
-    var resetCount = 0;
-    var models = col.models;
-    col.on('reset', function() { resetCount += 1; });
-    col.reset([]);
-    equal(resetCount, 1);
-    equal(col.length, 0);
-    equal(col.last(), null);
-    col.reset(models);
-    equal(resetCount, 2);
-    equal(col.length, 4);
-    equal(col.last(), d);
-    col.reset(_.map(models, function(m){ return m.attributes; }));
-    equal(resetCount, 3);
-    equal(col.length, 4);
-    ok(col.last() !== d);
-    ok(_.isEqual(col.last().attributes, d.attributes));
-    col.reset();
-    equal(col.length, 0);
-    equal(resetCount, 4);
-
-    var f = new Backbone.Model({id: 20, label : 'f'});
-    col.reset([undefined, f]);
-    equal(col.length, 2);
-    equal(resetCount, 5);
-
-    col.reset(new Array(4));
-    equal(col.length, 4);
-    equal(resetCount, 6);
-  });
-
-  test ("reset with different values", function(){
-    var col = new Backbone.Collection({id: 1});
-    col.reset({id: 1, a: 1});
-    equal(col.get(1).get('a'), 1);
-  });
-
-  test("same references in reset", function() {
-    var model = new Backbone.Model({id: 1});
-    var collection = new Backbone.Collection({id: 1});
-    collection.reset(model);
-    equal(collection.get(1), model);
-  });
-
-  test("reset passes caller options", 3, function() {
-    var Model = Backbone.Model.extend({
-      initialize: function(attrs, options) {
-        this.model_parameter = options.model_parameter;
-      }
-    });
-    var col = new (Backbone.Collection.extend({ model: Model }))();
-    col.reset([{ astring: "green", anumber: 1 }, { astring: "blue", anumber: 2 }], { model_parameter: 'model parameter' });
-    equal(col.length, 2);
-    col.each(function(model) {
-      equal(model.model_parameter, 'model parameter');
-    });
-  });
-
-  test("reset does not alter options by reference", 2, function() {
-    var col = new Backbone.Collection([{id:1}]);
-    var origOpts = {};
-    col.on("reset", function(col, opts){
-      equal(origOpts.previousModels, undefined);
-      equal(opts.previousModels[0].id, 1);
-    });
-    col.reset([], origOpts);
-  });
-
-  test("trigger custom events on models", 1, function() {
-    var fired = null;
-    a.on("custom", function() { fired = true; });
-    a.trigger("custom");
-    equal(fired, true);
-  });
-
-  test("add does not alter arguments", 2, function(){
-    var attrs = {};
-    var models = [attrs];
-    new Backbone.Collection().add(models);
-    equal(models.length, 1);
-    ok(attrs === models[0]);
-  });
-
-  test("#714: access `model.collection` in a brand new model.", 2, function() {
-    var collection = new Backbone.Collection;
-    collection.url = '/test';
-    var Model = Backbone.Model.extend({
-      set: function(attrs) {
-        equal(attrs.prop, 'value');
-        equal(this.collection, collection);
-        return this;
-      }
-    });
-    collection.model = Model;
-    collection.create({prop: 'value'});
-  });
-
-  test("#574, remove its own reference to the .models array.", 2, function() {
-    var col = new Backbone.Collection([
-      {id: 1}, {id: 2}, {id: 3}, {id: 4}, {id: 5}, {id: 6}
-    ]);
-    equal(col.length, 6);
-    col.remove(col.models);
-    equal(col.length, 0);
-  });
-
-  test("#861, adding models to a collection which do not pass validation, with validate:true", 2, function() {
-    var Model = Backbone.Model.extend({
-      validate: function(attrs) {
-        if (attrs.id == 3) return "id can't be 3";
-      }
-    });
-
-    var Collection = Backbone.Collection.extend({
-      model: Model
-    });
-
-    var collection = new Collection;
-    collection.on("invalid", function() { ok(true); });
-
-    collection.add([{id: 1}, {id: 2}, {id: 3}, {id: 4}, {id: 5}, {id: 6}], {validate:true});
-    deepEqual(collection.pluck("id"), [1, 2, 4, 5, 6]);
-  });
-
-  test("Invalid models are discarded with validate:true.", 5, function() {
-    var collection = new Backbone.Collection;
-    collection.on('test', function() { ok(true); });
-    collection.model = Backbone.Model.extend({
-      validate: function(attrs){ if (!attrs.valid) return 'invalid'; }
-    });
-    var model = new collection.model({id: 1, valid: true});
-    collection.add([model, {id: 2}], {validate:true});
-    model.trigger('test');
-    ok(collection.get(model.cid));
-    ok(collection.get(1));
-    ok(!collection.get(2));
-    equal(collection.length, 1);
-  });
-
-  test("multiple copies of the same model", 3, function() {
-    var col = new Backbone.Collection();
-    var model = new Backbone.Model();
-    col.add([model, model]);
-    equal(col.length, 1);
-    col.add([{id: 1}, {id: 1}]);
-    equal(col.length, 2);
-    equal(col.last().id, 1);
-  });
-
-  test("#964 - collection.get return inconsistent", 2, function() {
-    var c = new Backbone.Collection();
-    ok(c.get(null) === undefined);
-    ok(c.get() === undefined);
-  });
-
-  test("#1112 - passing options.model sets collection.model", 2, function() {
-    var Model = Backbone.Model.extend({});
-    var c = new Backbone.Collection([{id: 1}], {model: Model});
-    ok(c.model === Model);
-    ok(c.at(0) instanceof Model);
-  });
-
-  test("null and undefined are invalid ids.", 2, function() {
-    var model = new Backbone.Model({id: 1});
-    var collection = new Backbone.Collection([model]);
-    model.set({id: null});
-    ok(!collection.get('null'));
-    model.set({id: 1});
-    model.set({id: undefined});
-    ok(!collection.get('undefined'));
-  });
-
-  test("falsy comparator", 4, function(){
-    var Col = Backbone.Collection.extend({
-      comparator: function(model){ return model.id; }
-    });
-    var col = new Col();
-    var colFalse = new Col(null, {comparator: false});
-    var colNull = new Col(null, {comparator: null});
-    var colUndefined = new Col(null, {comparator: undefined});
-    ok(col.comparator);
-    ok(!colFalse.comparator);
-    ok(!colNull.comparator);
-    ok(colUndefined.comparator);
-  });
-
-  test("#1355 - `options` is passed to success callbacks", 2, function(){
-    var m = new Backbone.Model({x:1});
-    var col = new Backbone.Collection();
-    var opts = {
-      opts: true,
-      success: function(collection, resp, options) {
-        ok(options.opts);
-      }
-    };
-    col.sync = m.sync = function( method, collection, options ){
-      options.success({});
-    };
-    col.fetch(opts);
-    col.create(m, opts);
-  });
-
-  test("#1412 - Trigger 'request' and 'sync' events.", 4, function() {
-    var collection = new Backbone.Collection;
-    collection.url = '/test';
-    Backbone.ajax = function(settings){ settings.success(); };
-
-    collection.on('request', function(obj, xhr, options) {
-      ok(obj === collection, "collection has correct 'request' event after fetching");
-    });
-    collection.on('sync', function(obj, response, options) {
-      ok(obj === collection, "collection has correct 'sync' event after fetching");
-    });
-    collection.fetch();
-    collection.off();
-
-    collection.on('request', function(obj, xhr, options) {
-      ok(obj === collection.get(1), "collection has correct 'request' event after one of its models save");
-    });
-    collection.on('sync', function(obj, response, options) {
-      ok(obj === collection.get(1), "collection has correct 'sync' event after one of its models save");
-    });
-    collection.create({id: 1});
-    collection.off();
-  });
-
-  test("#3283 - fetch, create calls success with context", 2, function() {
-    var collection = new Backbone.Collection;
-    collection.url = '/test';
-    Backbone.ajax = function(settings) {
-      settings.success.call(settings.context);
-    };
-    var obj = {};
-    var options = {
-      context: obj,
-      success: function() {
-        equal(this, obj);
-      }
-    };
-
-    collection.fetch(options);
-    collection.create({id: 1}, options);
-  });
-
-  test("#1447 - create with wait adds model.", 1, function() {
-    var collection = new Backbone.Collection;
-    var model = new Backbone.Model;
-    model.sync = function(method, model, options){ options.success(); };
-    collection.on('add', function(){ ok(true); });
-    collection.create(model, {wait: true});
-  });
-
-  test("#1448 - add sorts collection after merge.", 1, function() {
-    var collection = new Backbone.Collection([
-      {id: 1, x: 1},
-      {id: 2, x: 2}
-    ]);
-    collection.comparator = function(model){ return model.get('x'); };
-    collection.add({id: 1, x: 3}, {merge: true});
-    deepEqual(collection.pluck('id'), [2, 1]);
-  });
-
-  test("#1655 - groupBy can be used with a string argument.", 3, function() {
-    var collection = new Backbone.Collection([{x: 1}, {x: 2}]);
-    var grouped = collection.groupBy('x');
-    strictEqual(_.keys(grouped).length, 2);
-    strictEqual(grouped[1][0].get('x'), 1);
-    strictEqual(grouped[2][0].get('x'), 2);
-  });
-
-  test("#1655 - sortBy can be used with a string argument.", 1, function() {
-    var collection = new Backbone.Collection([{x: 3}, {x: 1}, {x: 2}]);
-    var values = _.map(collection.sortBy('x'), function(model) {
-      return model.get('x');
-    });
-    deepEqual(values, [1, 2, 3]);
-  });
-
-  test("#1604 - Removal during iteration.", 0, function() {
-    var collection = new Backbone.Collection([{}, {}]);
-    collection.on('add', function() {
-      collection.at(0).destroy();
-    });
-    collection.add({}, {at: 0});
-  });
-
-  test("#1638 - `sort` during `add` triggers correctly.", function() {
-    var collection = new Backbone.Collection;
-    collection.comparator = function(model) { return model.get('x'); };
-    var added = [];
-    collection.on('add', function(model) {
-      model.set({x: 3});
-      collection.sort();
-      added.push(model.id);
-    });
-    collection.add([{id: 1, x: 1}, {id: 2, x: 2}]);
-    deepEqual(added, [1, 2]);
-  });
-
-  test("fetch parses models by default", 1, function() {
-    var model = {};
-    var Collection = Backbone.Collection.extend({
-      url: 'test',
-      model: Backbone.Model.extend({
-        parse: function(resp) {
-          strictEqual(resp, model);
-        }
-      })
-    });
-    new Collection().fetch();
-    this.ajaxSettings.success([model]);
-  });
-
-  test("`sort` shouldn't always fire on `add`", 1, function() {
-    var c = new Backbone.Collection([{id: 1}, {id: 2}, {id: 3}], {
-      comparator: 'id'
-    });
-    c.sort = function(){ ok(true); };
-    c.add([]);
-    c.add({id: 1});
-    c.add([{id: 2}, {id: 3}]);
-    c.add({id: 4});
-  });
-
-  test("#1407 parse option on constructor parses collection and models", 2, function() {
-    var model = {
-      namespace : [{id: 1}, {id:2}]
-    };
-    var Collection = Backbone.Collection.extend({
-      model: Backbone.Model.extend({
-        parse: function(model) {
-          model.name = 'test';
-          return model;
-        }
-      }),
-      parse: function(model) {
-        return model.namespace;
-      }
-    });
-    var c = new Collection(model, {parse:true});
-
-    equal(c.length, 2);
-    equal(c.at(0).get('name'), 'test');
-  });
-
-  test("#1407 parse option on reset parses collection and models", 2, function() {
-    var model = {
-      namespace : [{id: 1}, {id:2}]
-    };
-    var Collection = Backbone.Collection.extend({
-      model: Backbone.Model.extend({
-        parse: function(model) {
-          model.name = 'test';
-          return model;
-        }
-      }),
-      parse: function(model) {
-        return model.namespace;
-      }
-    });
-    var c = new Collection();
-        c.reset(model, {parse:true});
-
-    equal(c.length, 2);
-    equal(c.at(0).get('name'), 'test');
-  });
-
-
-  test("Reset includes previous models in triggered event.", 1, function() {
-    var model = new Backbone.Model();
-    var collection = new Backbone.Collection([model])
-    .on('reset', function(collection, options) {
-      deepEqual(options.previousModels, [model]);
-    });
-    collection.reset([]);
-  });
-
-  test("set", function() {
-    var m1 = new Backbone.Model();
-    var m2 = new Backbone.Model({id: 2});
-    var m3 = new Backbone.Model();
-    var c = new Backbone.Collection([m1, m2]);
-
-    // Test add/change/remove events
-    c.on('add', function(model) {
-      strictEqual(model, m3);
-    });
-    c.on('change', function(model) {
-      strictEqual(model, m2);
-    });
-    c.on('remove', function(model) {
-      strictEqual(model, m1);
-    });
-
-    // remove: false doesn't remove any models
-    c.set([], {remove: false});
-    strictEqual(c.length, 2);
-
-    // add: false doesn't add any models
-    c.set([m1, m2, m3], {add: false});
-    strictEqual(c.length, 2);
-
-    // merge: false doesn't change any models
-    c.set([m1, {id: 2, a: 1}], {merge: false});
-    strictEqual(m2.get('a'), void 0);
-
-    // add: false, remove: false only merges existing models
-    c.set([m1, {id: 2, a: 0}, m3, {id: 4}], {add: false, remove: false});
-    strictEqual(c.length, 2);
-    strictEqual(m2.get('a'), 0);
-
-    // default options add/remove/merge as appropriate
-    c.set([{id: 2, a: 1}, m3]);
-    strictEqual(c.length, 2);
-    strictEqual(m2.get('a'), 1);
-
-    // Test removing models not passing an argument
-    c.off('remove').on('remove', function(model) {
-      ok(model === m2 || model === m3);
-    });
-    c.set([]);
-    strictEqual(c.length, 0);
-  });
-
-  test("set with only cids", 3, function() {
-    var m1 = new Backbone.Model;
-    var m2 = new Backbone.Model;
-    var c = new Backbone.Collection;
-    c.set([m1, m2]);
-    equal(c.length, 2);
-    c.set([m1]);
-    equal(c.length, 1);
-    c.set([m1, m1, m1, m2, m2], {remove: false});
-    equal(c.length, 2);
-  });
-
-  test("set with only idAttribute", 3, function() {
-    var m1 = { _id: 1 };
-    var m2 = { _id: 2 };
-    var col = Backbone.Collection.extend({
-      model: Backbone.Model.extend({
-        idAttribute: '_id'
-      })
-    });
-    var c = new col;
-    c.set([m1, m2]);
-    equal(c.length, 2);
-    c.set([m1]);
-    equal(c.length, 1);
-    c.set([m1, m1, m1, m2, m2], {remove: false});
-    equal(c.length, 2);
-  });
-
-  test("set + merge with default values defined", function() {
-    var Model = Backbone.Model.extend({
-      defaults: {
-        key: 'value'
-      }
-    });
-    var m = new Model({id: 1});
-    var col = new Backbone.Collection([m], {model: Model});
-    equal(col.first().get('key'), 'value');
-
-    col.set({id: 1, key: 'other'});
-    equal(col.first().get('key'), 'other');
-
-    col.set({id: 1, other: 'value'});
-    equal(col.first().get('key'), 'other');
-    equal(col.length, 1);
-  });
-
-  test('merge without mutation', function () {
-    var Model = Backbone.Model.extend({
-      initialize: function (attrs, options) {
-        if (attrs.child) {
-          this.set('child', new Model(attrs.child, options), options);
-        }
-      }
-    });
-    var Collection = Backbone.Collection.extend({model: Model});
-    var data = [{id: 1, child: {id: 2}}];
-    var collection = new Collection(data);
-    equal(collection.first().id, 1);
-    collection.set(data);
-    equal(collection.first().id, 1);
-    collection.set([{id: 2, child: {id: 2}}].concat(data));
-    deepEqual(collection.pluck('id'), [2, 1]);
-  });
-
-  test("`set` and model level `parse`", function() {
-    var Model = Backbone.Model.extend({});
-    var Collection = Backbone.Collection.extend({
-      model: Model,
-      parse: function (res) { return _.pluck(res.models, 'model'); }
-    });
-    var model = new Model({id: 1});
-    var collection = new Collection(model);
-    collection.set({models: [
-      {model: {id: 1}},
-      {model: {id: 2}}
-    ]}, {parse: true});
-    equal(collection.first(), model);
-  });
-
-  test("`set` data is only parsed once", function() {
-    var collection = new Backbone.Collection();
-    collection.model = Backbone.Model.extend({
-      parse: function (data) {
-        equal(data.parsed, void 0);
-        data.parsed = true;
-        return data;
-      }
-    });
-    collection.set({}, {parse: true});
-  });
-
-  test('`set` matches input order in the absence of a comparator', function () {
-    var one = new Backbone.Model({id: 1});
-    var two = new Backbone.Model({id: 2});
-    var three = new Backbone.Model({id: 3});
-    var collection = new Backbone.Collection([one, two, three]);
-    collection.set([{id: 3}, {id: 2}, {id: 1}]);
-    deepEqual(collection.models, [three, two, one]);
-    collection.set([{id: 1}, {id: 2}]);
-    deepEqual(collection.models, [one, two]);
-    collection.set([two, three, one]);
-    deepEqual(collection.models, [two, three, one]);
-    collection.set([{id: 1}, {id: 2}], {remove: false});
-    deepEqual(collection.models, [two, three, one]);
-    collection.set([{id: 1}, {id: 2}, {id: 3}], {merge: false});
-    deepEqual(collection.models, [one, two, three]);
-    collection.set([three, two, one, {id: 4}], {add: false});
-    deepEqual(collection.models, [one, two, three]);
-  });
-
-  test("#1894 - Push should not trigger a sort", 0, function() {
-    var Collection = Backbone.Collection.extend({
-      comparator: 'id',
-      sort: function() { ok(false); }
-    });
-    new Collection().push({id: 1});
-  });
-
-  test("#2428 - push duplicate models, return the correct one", 1, function() {
-    var col = new Backbone.Collection;
-    var model1 = col.push({id: 101});
-    var model2 = col.push({id: 101})
-    ok(model2.cid == model1.cid);
-  });
-
-  test("`set` with non-normal id", function() {
-    var Collection = Backbone.Collection.extend({
-      model: Backbone.Model.extend({idAttribute: '_id'})
-    });
-    var collection = new Collection({_id: 1});
-    collection.set([{_id: 1, a: 1}], {add: false});
-    equal(collection.first().get('a'), 1);
-  });
-
-  test("#1894 - `sort` can optionally be turned off", 0, function() {
-    var Collection = Backbone.Collection.extend({
-      comparator: 'id',
-      sort: function() { ok(false); }
-    });
-    new Collection().add({id: 1}, {sort: false});
-  });
-
-  test("#1915 - `parse` data in the right order in `set`", function() {
-    var collection = new (Backbone.Collection.extend({
-      parse: function (data) {
-        strictEqual(data.status, 'ok');
-        return data.data;
-      }
-    }));
-    var res = {status: 'ok', data:[{id: 1}]};
-    collection.set(res, {parse: true});
-  });
-
-  asyncTest("#1939 - `parse` is passed `options`", 1, function () {
-    var collection = new (Backbone.Collection.extend({
-      url: '/',
-      parse: function (data, options) {
-        strictEqual(options.xhr.someHeader, 'headerValue');
-        return data;
-      }
-    }));
-    var ajax = Backbone.ajax;
-    Backbone.ajax = function (params) {
-      _.defer(params.success);
-      return {someHeader: 'headerValue'};
-    };
-    collection.fetch({
-      success: function () { start(); }
-    });
-    Backbone.ajax = ajax;
-  });
-
-  test("fetch will pass extra options to success callback", 1, function () {
-    var SpecialSyncCollection = Backbone.Collection.extend({
-      url: '/test',
-      sync: function (method, collection, options) {
-        _.extend(options, { specialSync: true });
-        return Backbone.Collection.prototype.sync.call(this, method, collection, options);
-      }
-    });
-
-    var collection = new SpecialSyncCollection();
-
-    var onSuccess = function (collection, resp, options) {
-      ok(options.specialSync, "Options were passed correctly to callback");
-    };
-
-    collection.fetch({ success: onSuccess });
-    this.ajaxSettings.success();
-  });
-
-  test("`add` only `sort`s when necessary", 2, function () {
-    var collection = new (Backbone.Collection.extend({
-      comparator: 'a'
-    }))([{id: 1}, {id: 2}, {id: 3}]);
-    collection.on('sort', function () { ok(true); });
-    collection.add({id: 4}); // do sort, new model
-    collection.add({id: 1, a: 1}, {merge: true}); // do sort, comparator change
-    collection.add({id: 1, b: 1}, {merge: true}); // don't sort, no comparator change
-    collection.add({id: 1, a: 1}, {merge: true}); // don't sort, no comparator change
-    collection.add(collection.models); // don't sort, nothing new
-    collection.add(collection.models, {merge: true}); // don't sort
-  });
-
-  test("`add` only `sort`s when necessary with comparator function", 3, function () {
-    var collection = new (Backbone.Collection.extend({
-      comparator: function(a, b) {
-        return a.get('a') > b.get('a') ? 1 : (a.get('a') < b.get('a') ? -1 : 0);
-      }
-    }))([{id: 1}, {id: 2}, {id: 3}]);
-    collection.on('sort', function () { ok(true); });
-    collection.add({id: 4}); // do sort, new model
-    collection.add({id: 1, a: 1}, {merge: true}); // do sort, model change
-    collection.add({id: 1, b: 1}, {merge: true}); // do sort, model change
-    collection.add({id: 1, a: 1}, {merge: true}); // don't sort, no model change
-    collection.add(collection.models); // don't sort, nothing new
-    collection.add(collection.models, {merge: true}); // don't sort
-  });
-
-  test("Attach options to collection.", 2, function() {
-    var Model = Backbone.Model;
-    var comparator = function(){};
-
-    var collection = new Backbone.Collection([], {
-      model: Model,
-      comparator: comparator
-    });
-
-    ok(collection.model === Model);
-    ok(collection.comparator === comparator);
-  });
-
-  test("`add` overrides `set` flags", function () {
-    var collection = new Backbone.Collection();
-    collection.once('add', function (model, collection, options) {
-      collection.add({id: 2}, options);
-    });
-    collection.set({id: 1});
-    equal(collection.length, 2);
-  });
-
-  test("#2606 - Collection#create, success arguments", 1, function() {
-    var collection = new Backbone.Collection;
-    collection.url = 'test';
-    collection.create({}, {
-      success: function(model, resp, options) {
-        strictEqual(resp, 'response');
-      }
-    });
-    this.ajaxSettings.success('response');
-  });
-
-  test("#2612 - nested `parse` works with `Collection#set`", function() {
-
-    var Job = Backbone.Model.extend({
-      constructor: function() {
-        this.items = new Items();
-        Backbone.Model.apply(this, arguments);
-      },
-      parse: function(attrs) {
-        this.items.set(attrs.items, {parse: true});
-        return _.omit(attrs, 'items');
-      }
-    });
-
-    var Item = Backbone.Model.extend({
-      constructor: function() {
-        this.subItems = new Backbone.Collection();
-        Backbone.Model.apply(this, arguments);
-      },
-      parse: function(attrs) {
-        this.subItems.set(attrs.subItems, {parse: true});
-        return _.omit(attrs, 'subItems');
-      }
-    });
-
-    var Items = Backbone.Collection.extend({
-      model: Item
-    });
-
-    var data = {
-      name: 'JobName',
-      id: 1,
-      items: [{
-        id: 1,
-        name: 'Sub1',
-        subItems: [
-          {id: 1, subName: 'One'},
-          {id: 2, subName: 'Two'}
-        ]
-      }, {
-        id: 2,
-        name: 'Sub2',
-        subItems: [
-          {id: 3, subName: 'Three'},
-          {id: 4, subName: 'Four'}
-        ]
-      }]
-    };
-
-    var newData = {
-      name: 'NewJobName',
-      id: 1,
-      items: [{
-        id: 1,
-        name: 'NewSub1',
-        subItems: [
-          {id: 1,subName: 'NewOne'},
-          {id: 2,subName: 'NewTwo'}
-        ]
-      }, {
-        id: 2,
-        name: 'NewSub2',
-        subItems: [
-          {id: 3,subName: 'NewThree'},
-          {id: 4,subName: 'NewFour'}
-        ]
-      }]
-    };
-
-    var job = new Job(data, {parse: true});
-    equal(job.get('name'), 'JobName');
-    equal(job.items.at(0).get('name'), 'Sub1');
-    equal(job.items.length, 2);
-    equal(job.items.get(1).subItems.get(1).get('subName'), 'One');
-    equal(job.items.get(2).subItems.get(3).get('subName'), 'Three');
-    job.set(job.parse(newData, {parse: true}));
-    equal(job.get('name'), 'NewJobName');
-    equal(job.items.at(0).get('name'), 'NewSub1');
-    equal(job.items.length, 2);
-    equal(job.items.get(1).subItems.get(1).get('subName'), 'NewOne');
-    equal(job.items.get(2).subItems.get(3).get('subName'), 'NewThree');
-  });
-
-  test('_addReference binds all collection events & adds to the lookup hashes', 9, function() {
-
-    var calls = {add: 0, remove: 0};
-
-    var Collection = Backbone.Collection.extend({
-
-      _addReference: function(model) {
-        Backbone.Collection.prototype._addReference.apply(this, arguments);
-        calls.add++;
-        equal(model, this._byId[model.id]);
-        equal(model, this._byId[model.cid]);
-        equal(model._events.all.length, 1);
-      },
-
-      _removeReference: function(model) {
-        Backbone.Collection.prototype._removeReference.apply(this, arguments);
-        calls.remove++;
-        equal(this._byId[model.id], void 0);
-        equal(this._byId[model.cid], void 0);
-        equal(model.collection, void 0);
-        equal(model._events, void 0);
-      }
-
-    });
-
-    var collection = new Collection();
-    var model = collection.add({id: 1});
-    collection.remove(model);
-
-    equal(calls.add, 1);
-    equal(calls.remove, 1);
-
-  });
-
-  test('Do not allow duplicate models to be `add`ed or `set`', function() {
-    var c = new Backbone.Collection();
-
-    c.add([{id: 1}, {id: 1}]);
-    equal(c.length, 1);
-    equal(c.models.length, 1);
-
-    c.set([{id: 1}, {id: 1}]);
-    equal(c.length, 1);
-    equal(c.models.length, 1);
-  });
-
-  test('#3020: #set with {add: false} should not throw.', 2, function() {
-    var collection = new Backbone.Collection;
-    collection.set([{id: 1}], {add: false});
-    strictEqual(collection.length, 0);
-    strictEqual(collection.models.length, 0);
-  });
-
-  test("create with wait, model instance, #3028", 1, function() {
-    var collection = new Backbone.Collection();
-    var model = new Backbone.Model({id: 1});
-    model.sync = function(){
-      equal(this.collection, collection);
-    };
-    collection.create(model, {wait: true});
-  });
-
-  test("modelId", function() {
-    var Stooge = Backbone.Model.extend();
-    var StoogeCollection = Backbone.Collection.extend({model: Stooge});
-
-    // Default to using `Collection::model::idAttribute`.
-    equal(StoogeCollection.prototype.modelId({id: 1}), 1);
-    Stooge.prototype.idAttribute = '_id';
-    equal(StoogeCollection.prototype.modelId({_id: 1}), 1);
-  });
-
-  test('Polymorphic models work with "simple" constructors', function () {
-    var A = Backbone.Model.extend();
-    var B = Backbone.Model.extend();
-    var C = Backbone.Collection.extend({
-      model: function (attrs) {
-        return attrs.type === 'a' ? new A(attrs) : new B(attrs);
-      }
-    });
-    var collection = new C([{id: 1, type: 'a'}, {id: 2, type: 'b'}]);
-    equal(collection.length, 2);
-    ok(collection.at(0) instanceof A);
-    equal(collection.at(0).id, 1);
-    ok(collection.at(1) instanceof B);
-    equal(collection.at(1).id, 2);
-  });
-
-  test('Polymorphic models work with "advanced" constructors', function () {
-    var A = Backbone.Model.extend({idAttribute: '_id'});
-    var B = Backbone.Model.extend({idAttribute: '_id'});
-    var C = Backbone.Collection.extend({
-      model: Backbone.Model.extend({
-        constructor: function (attrs) {
-          return attrs.type === 'a' ? new A(attrs) : new B(attrs);
-        },
-
-        idAttribute: '_id'
-      })
-    });
-    var collection = new C([{_id: 1, type: 'a'}, {_id: 2, type: 'b'}]);
-    equal(collection.length, 2);
-    ok(collection.at(0) instanceof A);
-    equal(collection.at(0), collection.get(1));
-    ok(collection.at(1) instanceof B);
-    equal(collection.at(1), collection.get(2));
-
-    C = Backbone.Collection.extend({
-      model: function (attrs) {
-        return attrs.type === 'a' ? new A(attrs) : new B(attrs);
-      },
-
-      modelId: function (attrs) {
-        return attrs.type + '-' + attrs.id;
-      }
-    });
-    collection = new C([{id: 1, type: 'a'}, {id: 1, type: 'b'}]);
-    equal(collection.length, 2);
-    ok(collection.at(0) instanceof A);
-    equal(collection.at(0), collection.get('a-1'));
-    ok(collection.at(1) instanceof B);
-    equal(collection.at(1), collection.get('b-1'));
-  });
-
-  test("#3039: adding at index fires with correct at", 3, function() {
-    var col = new Backbone.Collection([{at: 0}, {at: 4}]);
-    col.on('add', function(model, col, options) {
-      equal(model.get('at'), options.index);
-    });
-    col.add([{at: 1}, {at: 2}, {at: 3}], {at: 1});
-  });
-
-  test("#3039: index is not sent when at is not specified", 2, function() {
-    var col = new Backbone.Collection([{at: 0}]);
-    col.on('add', function(model, col, options) {
-      equal(undefined, options.index);
-    });
-    col.add([{at: 1}, {at: 2}]);
-  });
-
-  test('#3199 - Order changing should trigger a sort', 1, function() {
-      var one = new Backbone.Model({id: 1});
-      var two = new Backbone.Model({id: 2});
-      var three = new Backbone.Model({id: 3});
-      var collection = new Backbone.Collection([one, two, three]);
-      collection.on('sort', function() {
-        ok(true);
-      });
-      collection.set([{id: 3}, {id: 2}, {id: 1}]);
-  });
-
-  test('#3199 - Adding a model should trigger a sort', 1, function() {
-    var one = new Backbone.Model({id: 1});
-    var two = new Backbone.Model({id: 2});
-    var three = new Backbone.Model({id: 3});
-    var collection = new Backbone.Collection([one, two, three]);
-    collection.on('sort', function() {
-      ok(true);
-    });
-    collection.set([{id: 3}, {id: 2}, {id: 1}, {id: 0}]);
-  })
-
-  test('#3199 - Order not changing should not trigger a sort', 0, function() {
-    var one = new Backbone.Model({id: 1});
-    var two = new Backbone.Model({id: 2});
-    var three = new Backbone.Model({id: 3});
-    var collection = new Backbone.Collection([one, two, three]);
-    collection.on('sort', function() {
-      ok(false);
-    });
-    collection.set([{id: 1}, {id: 2}, {id: 3}]);
-  });
-
-  test("add supports negative indexes", 1, function() {
-    var collection = new Backbone.Collection([{id: 1}]);
-    collection.add([{id: 2}, {id: 3}], {at: -1});
-    collection.add([{id: 2.5}], {at: -2});
-    equal(collection.pluck('id').join(','), "1,2,2.5,3");
-  });
-
-  test("#set accepts options.at as a string", 1, function() {
-    var collection = new Backbone.Collection([{id: 1}, {id: 2}]);
-    collection.add([{id: 3}], {at: '1'});
-    deepEqual(collection.pluck('id'), [1, 3, 2]);
-  });
-  test("adding multiple models triggers `set` event once", 1, function() {
-    var collection = new Backbone.Collection;
-    collection.on('update', function() { ok(true); });
-    collection.add([{id: 1}, {id: 2}, {id: 3}]);
-  });
-
-  test("removing models triggers `set` event once", 1, function() {
-    var collection = new Backbone.Collection([{id: 1}, {id: 2}, {id: 3}]);
-    collection.on('update', function() { ok(true); });
-    collection.remove([{id: 1}, {id: 2}]);
-  });
-
-  test("remove does not trigger `set` when nothing removed", 0, function() {
-    var collection = new Backbone.Collection([{id: 1}, {id: 2}]);
-    collection.on('update', function() { ok(false); });
-    collection.remove([{id: 3}]);
-  });
-
-  test("set triggers `set` event once", 1, function() {
-    var collection = new Backbone.Collection([{id: 1}, {id: 2}]);
-    collection.on('update', function() { ok(true); });
-    collection.set([{id: 1}, {id: 3}]);
-  });
-
-  test("set does not trigger `set` event when nothing added nor removed", 0, function() {
-    var collection = new Backbone.Collection([{id: 1}, {id: 2}]);
-    collection.on('update', function() { ok(false); });
-    collection.set([{id: 1}, {id: 2}]);
-  });
-
-  test("#3610 - invoke collects arguments", 3, function() {
-    var Model = Backbone.Model.extend({
-        method: function(a, b, c) {
-            equal(a, 1);
-            equal(b, 2);
-            equal(c, 3);
-        }
-    });
-    var Collection = Backbone.Collection.extend({
-        model: Model
-    });
-    var collection = new Collection([{id: 1}]);
-    collection.invoke('method', 1, 2, 3);
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/backbone/test/events.js ---
@@ -1,606 +0,0 @@
-(function() {
-
-  module("Backbone.Events");
-
-  test("on and trigger", 2, function() {
-    var obj = { counter: 0 };
-    _.extend(obj,Backbone.Events);
-    obj.on('event', function() { obj.counter += 1; });
-    obj.trigger('event');
-    equal(obj.counter,1,'counter should be incremented.');
-    obj.trigger('event');
-    obj.trigger('event');
-    obj.trigger('event');
-    obj.trigger('event');
-    equal(obj.counter, 5, 'counter should be incremented five times.');
-  });
-
-  test("binding and triggering multiple events", 4, function() {
-    var obj = { counter: 0 };
-    _.extend(obj, Backbone.Events);
-
-    obj.on('a b c', function() { obj.counter += 1; });
-
-    obj.trigger('a');
-    equal(obj.counter, 1);
-
-    obj.trigger('a b');
-    equal(obj.counter, 3);
-
-    obj.trigger('c');
-    equal(obj.counter, 4);
-
-    obj.off('a c');
-    obj.trigger('a b c');
-    equal(obj.counter, 5);
-  });
-
-  test("binding and triggering with event maps", function() {
-    var obj = { counter: 0 };
-    _.extend(obj, Backbone.Events);
-
-    var increment = function() {
-      this.counter += 1;
-    };
-
-    obj.on({
-      a: increment,
-      b: increment,
-      c: increment
-    }, obj);
-
-    obj.trigger('a');
-    equal(obj.counter, 1);
-
-    obj.trigger('a b');
-    equal(obj.counter, 3);
-
-    obj.trigger('c');
-    equal(obj.counter, 4);
-
-    obj.off({
-      a: increment,
-      c: increment
-    }, obj);
-    obj.trigger('a b c');
-    equal(obj.counter, 5);
-  });
-
-  test("binding and trigger with event maps context", 2, function() {
-    var obj = { counter: 0 };
-    var context = {};
-    _.extend(obj, Backbone.Events);
-
-    obj.on({
-        a: function() {
-            strictEqual(this, context, 'defaults `context` to `callback` param');
-        }
-    }, context).trigger('a');
-
-    obj.off().on({
-        a: function() {
-            strictEqual(this, context, 'will not override explicit `context` param');
-        }
-    }, this, context).trigger('a');
-  });
-
-  test("listenTo and stopListening", 1, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenTo(b, 'all', function(){ ok(true); });
-    b.trigger('anything');
-    a.listenTo(b, 'all', function(){ ok(false); });
-    a.stopListening();
-    b.trigger('anything');
-  });
-
-  test("listenTo and stopListening with event maps", 4, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    var cb = function(){ ok(true); };
-    a.listenTo(b, {event: cb});
-    b.trigger('event');
-    a.listenTo(b, {event2: cb});
-    b.on('event2', cb);
-    a.stopListening(b, {event2: cb});
-    b.trigger('event event2');
-    a.stopListening();
-    b.trigger('event event2');
-  });
-
-  test("stopListening with omitted args", 2, function () {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    var cb = function () { ok(true); };
-    a.listenTo(b, 'event', cb);
-    b.on('event', cb);
-    a.listenTo(b, 'event2', cb);
-    a.stopListening(null, {event: cb});
-    b.trigger('event event2');
-    b.off();
-    a.listenTo(b, 'event event2', cb);
-    a.stopListening(null, 'event');
-    a.stopListening();
-    b.trigger('event2');
-  });
-
-  test("listenToOnce", 2, function() {
-    // Same as the previous test, but we use once rather than having to explicitly unbind
-    var obj = { counterA: 0, counterB: 0 };
-    _.extend(obj, Backbone.Events);
-    var incrA = function(){ obj.counterA += 1; obj.trigger('event'); };
-    var incrB = function(){ obj.counterB += 1; };
-    obj.listenToOnce(obj, 'event', incrA);
-    obj.listenToOnce(obj, 'event', incrB);
-    obj.trigger('event');
-    equal(obj.counterA, 1, 'counterA should have only been incremented once.');
-    equal(obj.counterB, 1, 'counterB should have only been incremented once.');
-  });
-
-  test("listenToOnce and stopListening", 1, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenToOnce(b, 'all', function() { ok(true); });
-    b.trigger('anything');
-    b.trigger('anything');
-    a.listenToOnce(b, 'all', function() { ok(false); });
-    a.stopListening();
-    b.trigger('anything');
-  });
-
-  test("listenTo, listenToOnce and stopListening", 1, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenToOnce(b, 'all', function() { ok(true); });
-    b.trigger('anything');
-    b.trigger('anything');
-    a.listenTo(b, 'all', function() { ok(false); });
-    a.stopListening();
-    b.trigger('anything');
-  });
-
-  test("listenTo and stopListening with event maps", 1, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenTo(b, {change: function(){ ok(true); }});
-    b.trigger('change');
-    a.listenTo(b, {change: function(){ ok(false); }});
-    a.stopListening();
-    b.trigger('change');
-  });
-
-  test("listenTo yourself", 1, function(){
-    var e = _.extend({}, Backbone.Events);
-    e.listenTo(e, "foo", function(){ ok(true); });
-    e.trigger("foo");
-  });
-
-  test("listenTo yourself cleans yourself up with stopListening", 1, function(){
-    var e = _.extend({}, Backbone.Events);
-    e.listenTo(e, "foo", function(){ ok(true); });
-    e.trigger("foo");
-    e.stopListening();
-    e.trigger("foo");
-  });
-
-  test("stopListening cleans up references", 12, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    var fn = function() {};
-    b.on('event', fn);
-    a.listenTo(b, 'event', fn).stopListening();
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-    a.listenTo(b, 'event', fn).stopListening(b);
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-    a.listenTo(b, 'event', fn).stopListening(b, 'event');
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-    a.listenTo(b, 'event', fn).stopListening(b, 'event', fn);
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-  });
-
-  test("stopListening cleans up references from listenToOnce", 12, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    var fn = function() {};
-    b.on('event', fn);
-    a.listenToOnce(b, 'event', fn).stopListening();
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-    a.listenToOnce(b, 'event', fn).stopListening(b);
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-    a.listenToOnce(b, 'event', fn).stopListening(b, 'event');
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-    a.listenToOnce(b, 'event', fn).stopListening(b, 'event', fn);
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._events.event), 1);
-    equal(_.size(b._listeners), 0);
-  });
-
-  test("listenTo and off cleaning up references", 8, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    var fn = function() {};
-    a.listenTo(b, 'event', fn);
-    b.off();
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._listeners), 0);
-    a.listenTo(b, 'event', fn);
-    b.off('event');
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._listeners), 0);
-    a.listenTo(b, 'event', fn);
-    b.off(null, fn);
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._listeners), 0);
-    a.listenTo(b, 'event', fn);
-    b.off(null, null, a);
-    equal(_.size(a._listeningTo), 0);
-    equal(_.size(b._listeners), 0);
-  });
-
-  test("listenTo and stopListening cleaning up references", 2, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenTo(b, 'all', function(){ ok(true); });
-    b.trigger('anything');
-    a.listenTo(b, 'other', function(){ ok(false); });
-    a.stopListening(b, 'other');
-    a.stopListening(b, 'all');
-    equal(_.size(a._listeningTo), 0);
-  });
-
-  test("listenToOnce without context cleans up references after the event has fired", 2, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenToOnce(b, 'all', function(){ ok(true); });
-    b.trigger('anything');
-    equal(_.size(a._listeningTo), 0);
-  });
-
-  test("listenToOnce with event maps cleans up references", 2, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenToOnce(b, {
-      one: function() { ok(true); },
-      two: function() { ok(false); }
-    });
-    b.trigger('one');
-    equal(_.size(a._listeningTo), 1);
-  });
-
-  test("listenToOnce with event maps binds the correct `this`", 1, function() {
-    var a = _.extend({}, Backbone.Events);
-    var b = _.extend({}, Backbone.Events);
-    a.listenToOnce(b, {
-      one: function() { ok(this === a); },
-      two: function() { ok(false); }
-    });
-    b.trigger('one');
-  });
-
-  test("listenTo with empty callback doesn't throw an error", 1, function(){
-    var e = _.extend({}, Backbone.Events);
-    e.listenTo(e, "foo", null);
-    e.trigger("foo");
-    ok(true);
-  });
-
-  test("trigger all for each event", 3, function() {
-    var a, b, obj = { counter: 0 };
-    _.extend(obj, Backbone.Events);
-    obj.on('all', function(event) {
-      obj.counter++;
-      if (event == 'a') a = true;
-      if (event == 'b') b = true;
-    })
-    .trigger('a b');
-    ok(a);
-    ok(b);
-    equal(obj.counter, 2);
-  });
-
-  test("on, then unbind all functions", 1, function() {
-    var obj = { counter: 0 };
-    _.extend(obj,Backbone.Events);
-    var callback = function() { obj.counter += 1; };
-    obj.on('event', callback);
-    obj.trigger('event');
-    obj.off('event');
-    obj.trigger('event');
-    equal(obj.counter, 1, 'counter should have only been incremented once.');
-  });
-
-  test("bind two callbacks, unbind only one", 2, function() {
-    var obj = { counterA: 0, counterB: 0 };
-    _.extend(obj,Backbone.Events);
-    var callback = function() { obj.counterA += 1; };
-    obj.on('event', callback);
-    obj.on('event', function() { obj.counterB += 1; });
-    obj.trigger('event');
-    obj.off('event', callback);
-    obj.trigger('event');
-    equal(obj.counterA, 1, 'counterA should have only been incremented once.');
-    equal(obj.counterB, 2, 'counterB should have been incremented twice.');
-  });
-
-  test("unbind a callback in the midst of it firing", 1, function() {
-    var obj = {counter: 0};
-    _.extend(obj, Backbone.Events);
-    var callback = function() {
-      obj.counter += 1;
-      obj.off('event', callback);
-    };
-    obj.on('event', callback);
-    obj.trigger('event');
-    obj.trigger('event');
-    obj.trigger('event');
-    equal(obj.counter, 1, 'the callback should have been unbound.');
-  });
-
-  test("two binds that unbind themeselves", 2, function() {
-    var obj = { counterA: 0, counterB: 0 };
-    _.extend(obj,Backbone.Events);
-    var incrA = function(){ obj.counterA += 1; obj.off('event', incrA); };
-    var incrB = function(){ obj.counterB += 1; obj.off('event', incrB); };
-    obj.on('event', incrA);
-    obj.on('event', incrB);
-    obj.trigger('event');
-    obj.trigger('event');
-    obj.trigger('event');
-    equal(obj.counterA, 1, 'counterA should have only been incremented once.');
-    equal(obj.counterB, 1, 'counterB should have only been incremented once.');
-  });
-
-  test("bind a callback with a supplied context", 1, function () {
-    var TestClass = function () {
-      return this;
-    };
-    TestClass.prototype.assertTrue = function () {
-      ok(true, '`this` was bound to the callback');
-    };
-
-    var obj = _.extend({},Backbone.Events);
-    obj.on('event', function () { this.assertTrue(); }, (new TestClass));
-    obj.trigger('event');
-  });
-
-  test("nested trigger with unbind", 1, function () {
-    var obj = { counter: 0 };
-    _.extend(obj, Backbone.Events);
-    var incr1 = function(){ obj.counter += 1; obj.off('event', incr1); obj.trigger('event'); };
-    var incr2 = function(){ obj.counter += 1; };
-    obj.on('event', incr1);
-    obj.on('event', incr2);
-    obj.trigger('event');
-    equal(obj.counter, 3, 'counter should have been incremented three times');
-  });
-
-  test("callback list is not altered during trigger", 2, function () {
-    var counter = 0, obj = _.extend({}, Backbone.Events);
-    var incr = function(){ counter++; };
-    var incrOn = function(){ obj.on('event all', incr); };
-    var incrOff = function(){ obj.off('event all', incr); };
-
-    obj.on('event all', incrOn).trigger('event');
-    equal(counter, 0, 'on does not alter callback list');
-
-    obj.off().on('event', incrOff).on('event all', incr).trigger('event');
-    equal(counter, 2, 'off does not alter callback list');
-  });
-
-  test("#1282 - 'all' callback list is retrieved after each event.", 1, function() {
-    var counter = 0;
-    var obj = _.extend({}, Backbone.Events);
-    var incr = function(){ counter++; };
-    obj.on('x', function() {
-      obj.on('y', incr).on('all', incr);
-    })
-    .trigger('x y');
-    strictEqual(counter, 2);
-  });
-
-  test("if no callback is provided, `on` is a noop", 0, function() {
-    _.extend({}, Backbone.Events).on('test').trigger('test');
-  });
-
-  test("if callback is truthy but not a function, `on` should throw an error just like jQuery", 1, function() {
-    var view = _.extend({}, Backbone.Events).on('test', 'noop');
-    throws(function() {
-      view.trigger('test');
-    });
-  });
-
-  test("remove all events for a specific context", 4, function() {
-    var obj = _.extend({}, Backbone.Events);
-    obj.on('x y all', function() { ok(true); });
-    obj.on('x y all', function() { ok(false); }, obj);
-    obj.off(null, null, obj);
-    obj.trigger('x y');
-  });
-
-  test("remove all events for a specific callback", 4, function() {
-    var obj = _.extend({}, Backbone.Events);
-    var success = function() { ok(true); };
-    var fail = function() { ok(false); };
-    obj.on('x y all', success);
-    obj.on('x y all', fail);
-    obj.off(null, fail);
-    obj.trigger('x y');
-  });
-
-  test("#1310 - off does not skip consecutive events", 0, function() {
-    var obj = _.extend({}, Backbone.Events);
-    obj.on('event', function() { ok(false); }, obj);
-    obj.on('event', function() { ok(false); }, obj);
-    obj.off(null, null, obj);
-    obj.trigger('event');
-  });
-
-  test("once", 2, function() {
-    // Same as the previous test, but we use once rather than having to explicitly unbind
-    var obj = { counterA: 0, counterB: 0 };
-    _.extend(obj, Backbone.Events);
-    var incrA = function(){ obj.counterA += 1; obj.trigger('event'); };
-    var incrB = function(){ obj.counterB += 1; };
-    obj.once('event', incrA);
-    obj.once('event', incrB);
-    obj.trigger('event');
-    equal(obj.counterA, 1, 'counterA should have only been incremented once.');
-    equal(obj.counterB, 1, 'counterB should have only been incremented once.');
-  });
-
-  test("once variant one", 3, function() {
-    var f = function(){ ok(true); };
-
-    var a = _.extend({}, Backbone.Events).once('event', f);
-    var b = _.extend({}, Backbone.Events).on('event', f);
-
-    a.trigger('event');
-
-    b.trigger('event');
-    b.trigger('event');
-  });
-
-  test("once variant two", 3, function() {
-    var f = function(){ ok(true); };
-    var obj = _.extend({}, Backbone.Events);
-
-    obj
-      .once('event', f)
-      .on('event', f)
-      .trigger('event')
-      .trigger('event');
-  });
-
-  test("once with off", 0, function() {
-    var f = function(){ ok(true); };
-    var obj = _.extend({}, Backbone.Events);
-
-    obj.once('event', f);
-    obj.off('event', f);
-    obj.trigger('event');
-  });
-
-  test("once with event maps", function() {
-    var obj = { counter: 0 };
-    _.extend(obj, Backbone.Events);
-
-    var increment = function() {
-      this.counter += 1;
-    };
-
-    obj.once({
-      a: increment,
-      b: increment,
-      c: increment
-    }, obj);
-
-    obj.trigger('a');
-    equal(obj.counter, 1);
-
-    obj.trigger('a b');
-    equal(obj.counter, 2);
-
-    obj.trigger('c');
-    equal(obj.counter, 3);
-
-    obj.trigger('a b c');
-    equal(obj.counter, 3);
-  });
-
-  test("once with off only by context", 0, function() {
-    var context = {};
-    var obj = _.extend({}, Backbone.Events);
-    obj.once('event', function(){ ok(false); }, context);
-    obj.off(null, null, context);
-    obj.trigger('event');
-  });
-
-  test("Backbone object inherits Events", function() {
-    ok(Backbone.on === Backbone.Events.on);
-  });
-
-  asyncTest("once with asynchronous events", 1, function() {
-    var func = _.debounce(function() { ok(true); start(); }, 50);
-    var obj = _.extend({}, Backbone.Events).once('async', func);
-
-    obj.trigger('async');
-    obj.trigger('async');
-  });
-
-  test("once with multiple events.", 2, function() {
-    var obj = _.extend({}, Backbone.Events);
-    obj.once('x y', function() { ok(true); });
-    obj.trigger('x y');
-  });
-
-  test("Off during iteration with once.", 2, function() {
-    var obj = _.extend({}, Backbone.Events);
-    var f = function(){ this.off('event', f); };
-    obj.on('event', f);
-    obj.once('event', function(){});
-    obj.on('event', function(){ ok(true); });
-
-    obj.trigger('event');
-    obj.trigger('event');
-  });
-
-  test("`once` on `all` should work as expected", 1, function() {
-    Backbone.once('all', function() {
-      ok(true);
-      Backbone.trigger('all');
-    });
-    Backbone.trigger('all');
-  });
-
-  test("once without a callback is a noop", 0, function() {
-    _.extend({}, Backbone.Events).once('event').trigger('event');
-  });
-
-  test("listenToOnce without a callback is a noop", 0, function() {
-    var obj = _.extend({}, Backbone.Events);
-    obj.listenToOnce(obj, 'event').trigger('event');
-  });
-
-  test("event functions are chainable", function() {
-    var obj = _.extend({}, Backbone.Events);
-    var obj2 = _.extend({}, Backbone.Events);
-    var fn = function() {};
-    equal(obj, obj.trigger('noeventssetyet'));
-    equal(obj, obj.off('noeventssetyet'));
-    equal(obj, obj.stopListening('noeventssetyet'));
-    equal(obj, obj.on('a', fn));
-    equal(obj, obj.once('c', fn));
-    equal(obj, obj.trigger('a'));
-    equal(obj, obj.listenTo(obj2, 'a', fn));
-    equal(obj, obj.listenToOnce(obj2, 'b', fn));
-    equal(obj, obj.off('a c'));
-    equal(obj, obj.stopListening(obj2, 'a'));
-    equal(obj, obj.stopListening());
-  });
-
-  test("#3448 - listenToOnce with space-separated events", 2, function() {
-    var one = _.extend({}, Backbone.Events);
-    var two = _.extend({}, Backbone.Events);
-    var count = 1;
-    one.listenToOnce(two, 'x y', function(n) { ok(n === count++); });
-    two.trigger('x', 1);
-    two.trigger('x', 1);
-    two.trigger('y', 2);
-    two.trigger('y', 2);
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/backbone/test/model.js ---
@@ -1,1312 +0,0 @@
-(function() {
-
-  var proxy = Backbone.Model.extend();
-  var klass = Backbone.Collection.extend({
-    url : function() { return '/collection'; }
-  });
-  var doc, collection;
-
-  module("Backbone.Model", {
-
-    setup: function() {
-      doc = new proxy({
-        id     : '1-the-tempest',
-        title  : "The Tempest",
-        author : "Bill Shakespeare",
-        length : 123
-      });
-      collection = new klass();
-      collection.add(doc);
-    }
-
-  });
-
-  test("initialize", 3, function() {
-    var Model = Backbone.Model.extend({
-      initialize: function() {
-        this.one = 1;
-        equal(this.collection, collection);
-      }
-    });
-    var model = new Model({}, {collection: collection});
-    equal(model.one, 1);
-    equal(model.collection, collection);
-  });
-
-  test("initialize with attributes and options", 1, function() {
-    var Model = Backbone.Model.extend({
-      initialize: function(attributes, options) {
-        this.one = options.one;
-      }
-    });
-    var model = new Model({}, {one: 1});
-    equal(model.one, 1);
-  });
-
-  test("initialize with parsed attributes", 1, function() {
-    var Model = Backbone.Model.extend({
-      parse: function(attrs) {
-        attrs.value += 1;
-        return attrs;
-      }
-    });
-    var model = new Model({value: 1}, {parse: true});
-    equal(model.get('value'), 2);
-  });
-
-  test("initialize with defaults", 2, function() {
-    var Model = Backbone.Model.extend({
-      defaults: {
-        first_name: 'Unknown',
-        last_name: 'Unknown'
-      }
-    });
-    var model = new Model({'first_name': 'John'});
-    equal(model.get('first_name'), 'John');
-    equal(model.get('last_name'), 'Unknown');
-  });
-
-  test("parse can return null", 1, function() {
-    var Model = Backbone.Model.extend({
-      parse: function(attrs) {
-        attrs.value += 1;
-        return null;
-      }
-    });
-    var model = new Model({value: 1}, {parse: true});
-    equal(JSON.stringify(model.toJSON()), "{}");
-  });
-
-  test("url", 3, function() {
-    doc.urlRoot = null;
-    equal(doc.url(), '/collection/1-the-tempest');
-    doc.collection.url = '/collection/';
-    equal(doc.url(), '/collection/1-the-tempest');
-    doc.collection = null;
-    throws(function() { doc.url(); });
-    doc.collection = collection;
-  });
-
-  test("url when using urlRoot, and uri encoding", 2, function() {
-    var Model = Backbone.Model.extend({
-      urlRoot: '/collection'
-    });
-    var model = new Model();
-    equal(model.url(), '/collection');
-    model.set({id: '+1+'});
-    equal(model.url(), '/collection/%2B1%2B');
-  });
-
-  test("url when using urlRoot as a function to determine urlRoot at runtime", 2, function() {
-    var Model = Backbone.Model.extend({
-      urlRoot: function() {
-        return '/nested/' + this.get('parent_id') + '/collection';
-      }
-    });
-
-    var model = new Model({parent_id: 1});
-    equal(model.url(), '/nested/1/collection');
-    model.set({id: 2});
-    equal(model.url(), '/nested/1/collection/2');
-  });
-
-  test("underscore methods", 5, function() {
-    var model = new Backbone.Model({ 'foo': 'a', 'bar': 'b', 'baz': 'c' });
-    var model2 = model.clone();
-    deepEqual(model.keys(), ['foo', 'bar', 'baz']);
-    deepEqual(model.values(), ['a', 'b', 'c']);
-    deepEqual(model.invert(), { 'a': 'foo', 'b': 'bar', 'c': 'baz' });
-    deepEqual(model.pick('foo', 'baz'), {'foo': 'a', 'baz': 'c'});
-    deepEqual(model.omit('foo', 'bar'), {'baz': 'c'});
-  });
-
-  test("chain", function() {
-    var model = new Backbone.Model({ a: 0, b: 1, c: 2 });
-    deepEqual(model.chain().pick("a", "b", "c").values().compact().value(), [1, 2]);
-  });
-
-  test("clone", 10, function() {
-    var a = new Backbone.Model({ 'foo': 1, 'bar': 2, 'baz': 3});
-    var b = a.clone();
-    equal(a.get('foo'), 1);
-    equal(a.get('bar'), 2);
-    equal(a.get('baz'), 3);
-    equal(b.get('foo'), a.get('foo'), "Foo should be the same on the clone.");
-    equal(b.get('bar'), a.get('bar'), "Bar should be the same on the clone.");
-    equal(b.get('baz'), a.get('baz'), "Baz should be the same on the clone.");
-    a.set({foo : 100});
-    equal(a.get('foo'), 100);
-    equal(b.get('foo'), 1, "Changing a parent attribute does not change the clone.");
-
-    var foo = new Backbone.Model({p: 1});
-    var bar = new Backbone.Model({p: 2});
-    bar.set(foo.clone().attributes, {unset: true});
-    equal(foo.get('p'), 1);
-    equal(bar.get('p'), undefined);
-  });
-
-  test("isNew", 6, function() {
-    var a = new Backbone.Model({ 'foo': 1, 'bar': 2, 'baz': 3});
-    ok(a.isNew(), "it should be new");
-    a = new Backbone.Model({ 'foo': 1, 'bar': 2, 'baz': 3, 'id': -5 });
-    ok(!a.isNew(), "any defined ID is legal, negative or positive");
-    a = new Backbone.Model({ 'foo': 1, 'bar': 2, 'baz': 3, 'id': 0 });
-    ok(!a.isNew(), "any defined ID is legal, including zero");
-    ok( new Backbone.Model({          }).isNew(), "is true when there is no id");
-    ok(!new Backbone.Model({ 'id': 2  }).isNew(), "is false for a positive integer");
-    ok(!new Backbone.Model({ 'id': -5 }).isNew(), "is false for a negative integer");
-  });
-
-  test("get", 2, function() {
-    equal(doc.get('title'), 'The Tempest');
-    equal(doc.get('author'), 'Bill Shakespeare');
-  });
-
-  test("escape", 5, function() {
-    equal(doc.escape('title'), 'The Tempest');
-    doc.set({audience: 'Bill & Bob'});
-    equal(doc.escape('audience'), 'Bill &amp; Bob');
-    doc.set({audience: 'Tim > Joan'});
-    equal(doc.escape('audience'), 'Tim &gt; Joan');
-    doc.set({audience: 10101});
-    equal(doc.escape('audience'), '10101');
-    doc.unset('audience');
-    equal(doc.escape('audience'), '');
-  });
-
-  test("has", 10, function() {
-    var model = new Backbone.Model();
-
-    strictEqual(model.has('name'), false);
-
-    model.set({
-      '0': 0,
-      '1': 1,
-      'true': true,
-      'false': false,
-      'empty': '',
-      'name': 'name',
-      'null': null,
-      'undefined': undefined
-    });
-
-    strictEqual(model.has('0'), true);
-    strictEqual(model.has('1'), true);
-    strictEqual(model.has('true'), true);
-    strictEqual(model.has('false'), true);
-    strictEqual(model.has('empty'), true);
-    strictEqual(model.has('name'), true);
-
-    model.unset('name');
-
-    strictEqual(model.has('name'), false);
-    strictEqual(model.has('null'), false);
-    strictEqual(model.has('undefined'), false);
-  });
-
-  test("matches", 4, function() {
-    var model = new Backbone.Model();
-
-    strictEqual(model.matches({'name': 'Jonas', 'cool': true}), false);
-
-    model.set({name: 'Jonas', 'cool': true});
-
-    strictEqual(model.matches({'name': 'Jonas'}), true);
-    strictEqual(model.matches({'name': 'Jonas', 'cool': true}), true);
-    strictEqual(model.matches({'name': 'Jonas', 'cool': false}), false);
-  });
-
-  test("matches with predicate", function() {
-    var model = new Backbone.Model({a: 0});
-
-    strictEqual(model.matches(function(attr) {
-      return attr.a > 1 && attr.b != null;
-    }), false);
-
-    model.set({a: 3, b: true});
-
-    strictEqual(model.matches(function(attr) {
-      return attr.a > 1 && attr.b != null;
-    }), true);
-  })
-
-  test("set and unset", 8, function() {
-    var a = new Backbone.Model({id: 'id', foo: 1, bar: 2, baz: 3});
-    var changeCount = 0;
-    a.on("change:foo", function() { changeCount += 1; });
-    a.set({'foo': 2});
-    ok(a.get('foo') == 2, "Foo should have changed.");
-    ok(changeCount == 1, "Change count should have incremented.");
-    a.set({'foo': 2}); // set with value that is not new shouldn't fire change event
-    ok(a.get('foo') == 2, "Foo should NOT have changed, still 2");
-    ok(changeCount == 1, "Change count should NOT have incremented.");
-
-    a.validate = function(attrs) {
-      equal(attrs.foo, void 0, "validate:true passed while unsetting");
-    };
-    a.unset('foo', {validate: true});
-    equal(a.get('foo'), void 0, "Foo should have changed");
-    delete a.validate;
-    ok(changeCount == 2, "Change count should have incremented for unset.");
-
-    a.unset('id');
-    equal(a.id, undefined, "Unsetting the id should remove the id property.");
-  });
-
-  test("#2030 - set with failed validate, followed by another set triggers change", function () {
-    var attr = 0, main = 0, error = 0;
-    var Model = Backbone.Model.extend({
-      validate: function (attr) {
-        if (attr.x > 1) {
-          error++;
-          return "this is an error";
-        }
-      }
-    });
-    var model = new Model({x:0});
-      model.on('change:x', function () { attr++; });
-      model.on('change', function () { main++; });
-      model.set({x:2}, {validate:true});
-      model.set({x:1}, {validate:true});
-      deepEqual([attr, main, error], [1, 1, 1]);
-  });
-
-  test("set triggers changes in the correct order", function() {
-    var value = null;
-    var model = new Backbone.Model;
-    model.on('last', function(){ value = 'last'; });
-    model.on('first', function(){ value = 'first'; });
-    model.trigger('first');
-    model.trigger('last');
-    equal(value, 'last');
-  });
-
-  test("set falsy values in the correct order", 2, function() {
-    var model = new Backbone.Model({result: 'result'});
-    model.on('change', function() {
-      equal(model.changed.result, void 0);
-      equal(model.previous('result'), false);
-    });
-    model.set({result: void 0}, {silent: true});
-    model.set({result: null}, {silent: true});
-    model.set({result: false}, {silent: true});
-    model.set({result: void 0});
-  });
-
-  test("nested set triggers with the correct options", function() {
-    var model = new Backbone.Model();
-    var o1 = {};
-    var o2 = {};
-    var o3 = {};
-    model.on('change', function(__, options) {
-      switch (model.get('a')) {
-      case 1:
-        equal(options, o1);
-        return model.set('a', 2, o2);
-      case 2:
-        equal(options, o2);
-        return model.set('a', 3, o3);
-      case 3:
-        equal(options, o3);
-      }
-    });
-    model.set('a', 1, o1);
-  });
-
-  test("multiple unsets", 1, function() {
-    var i = 0;
-    var counter = function(){ i++; };
-    var model = new Backbone.Model({a: 1});
-    model.on("change:a", counter);
-    model.set({a: 2});
-    model.unset('a');
-    model.unset('a');
-    equal(i, 2, 'Unset does not fire an event for missing attributes.');
-  });
-
-  test("unset and changedAttributes", 1, function() {
-    var model = new Backbone.Model({a: 1});
-    model.on('change', function() {
-      ok('a' in model.changedAttributes(), 'changedAttributes should contain unset properties');
-    });
-    model.unset('a');
-  });
-
-  test("using a non-default id attribute.", 5, function() {
-    var MongoModel = Backbone.Model.extend({idAttribute : '_id'});
-    var model = new MongoModel({id: 'eye-dee', _id: 25, title: 'Model'});
-    equal(model.get('id'), 'eye-dee');
-    equal(model.id, 25);
-    equal(model.isNew(), false);
-    model.unset('_id');
-    equal(model.id, undefined);
-    equal(model.isNew(), true);
-  });
-
-  test("setting an alternative cid prefix", 4, function() {
-    var Model = Backbone.Model.extend({
-      cidPrefix: 'm'
-    });
-    var model = new Model();
-
-    equal(model.cid.charAt(0), 'm');
-
-    model = new Backbone.Model();
-    equal(model.cid.charAt(0), 'c');
-
-    var Collection = Backbone.Collection.extend({
-      model: Model
-    });
-    var collection = new Collection([{id: 'c5'}, {id: 'c6'}, {id: 'c7'}]);
-
-    equal(collection.get('c6').cid.charAt(0), 'm');
-    collection.set([{id: 'c6', value: 'test'}], {
-      merge: true,
-      add: true,
-      remove: false
-    });
-    ok(collection.get('c6').has('value'));
-  });
-
-  test("set an empty string", 1, function() {
-    var model = new Backbone.Model({name : "Model"});
-    model.set({name : ''});
-    equal(model.get('name'), '');
-  });
-
-  test("setting an object", 1, function() {
-    var model = new Backbone.Model({
-      custom: { foo: 1 }
-    });
-    model.on('change', function() {
-      ok(1);
-    });
-    model.set({
-      custom: { foo: 1 } // no change should be fired
-    });
-    model.set({
-      custom: { foo: 2 } // change event should be fired
-    });
-  });
-
-  test("clear", 3, function() {
-    var changed;
-    var model = new Backbone.Model({id: 1, name : "Model"});
-    model.on("change:name", function(){ changed = true; });
-    model.on("change", function() {
-      var changedAttrs = model.changedAttributes();
-      ok('name' in changedAttrs);
-    });
-    model.clear();
-    equal(changed, true);
-    equal(model.get('name'), undefined);
-  });
-
-  test("defaults", 4, function() {
-    var Defaulted = Backbone.Model.extend({
-      defaults: {
-        "one": 1,
-        "two": 2
-      }
-    });
-    var model = new Defaulted({two: undefined});
-    equal(model.get('one'), 1);
-    equal(model.get('two'), 2);
-    Defaulted = Backbone.Model.extend({
-      defaults: function() {
-        return {
-          "one": 3,
-          "two": 4
-        };
-      }
-    });
-    model = new Defaulted({two: undefined});
-    equal(model.get('one'), 3);
-    equal(model.get('two'), 4);
-  });
-
-  test("change, hasChanged, changedAttributes, previous, previousAttributes", 9, function() {
-    var model = new Backbone.Model({name: "Tim", age: 10});
-    deepEqual(model.changedAttributes(), false);
-    model.on('change', function() {
-      ok(model.hasChanged('name'), 'name changed');
-      ok(!model.hasChanged('age'), 'age did not');
-      ok(_.isEqual(model.changedAttributes(), {name : 'Rob'}), 'changedAttributes returns the changed attrs');
-      equal(model.previous('name'), 'Tim');
-      ok(_.isEqual(model.previousAttributes(), {name : "Tim", age : 10}), 'previousAttributes is correct');
-    });
-    equal(model.hasChanged(), false);
-    equal(model.hasChanged(undefined), false);
-    model.set({name : 'Rob'});
-    equal(model.get('name'), 'Rob');
-  });
-
-  test("changedAttributes", 3, function() {
-    var model = new Backbone.Model({a: 'a', b: 'b'});
-    deepEqual(model.changedAttributes(), false);
-    equal(model.changedAttributes({a: 'a'}), false);
-    equal(model.changedAttributes({a: 'b'}).a, 'b');
-  });
-
-  test("change with options", 2, function() {
-    var value;
-    var model = new Backbone.Model({name: 'Rob'});
-    model.on('change', function(model, options) {
-      value = options.prefix + model.get('name');
-    });
-    model.set({name: 'Bob'}, {prefix: 'Mr. '});
-    equal(value, 'Mr. Bob');
-    model.set({name: 'Sue'}, {prefix: 'Ms. '});
-    equal(value, 'Ms. Sue');
-  });
-
-  test("change after initialize", 1, function () {
-    var changed = 0;
-    var attrs = {id: 1, label: 'c'};
-    var obj = new Backbone.Model(attrs);
-    obj.on('change', function() { changed += 1; });
-    obj.set(attrs);
-    equal(changed, 0);
-  });
-
-  test("save within change event", 1, function () {
-    var env = this;
-    var model = new Backbone.Model({firstName : "Taylor", lastName: "Swift"});
-    model.url = '/test';
-    model.on('change', function () {
-      model.save();
-      ok(_.isEqual(env.syncArgs.model, model));
-    });
-    model.set({lastName: 'Hicks'});
-  });
-
-  test("validate after save", 2, function() {
-    var lastError, model = new Backbone.Model();
-    model.validate = function(attrs) {
-      if (attrs.admin) return "Can't change admin status.";
-    };
-    model.sync = function(method, model, options) {
-      options.success.call(this, {admin: true});
-    };
-    model.on('invalid', function(model, error) {
-      lastError = error;
-    });
-    model.save(null);
-
-    equal(lastError, "Can't change admin status.");
-    equal(model.validationError, "Can't change admin status.");
-  });
-
-  test("save", 2, function() {
-    doc.save({title : "Henry V"});
-    equal(this.syncArgs.method, 'update');
-    ok(_.isEqual(this.syncArgs.model, doc));
-  });
-
-  test("save, fetch, destroy triggers error event when an error occurs", 3, function () {
-    var model = new Backbone.Model();
-    model.on('error', function () {
-      ok(true);
-    });
-    model.sync = function (method, model, options) {
-      options.error();
-    };
-    model.save({data: 2, id: 1});
-    model.fetch();
-    model.destroy();
-  });
-
-  test("#3283 - save, fetch, destroy calls success with context", 3, function () {
-    var model = new Backbone.Model();
-    var obj = {};
-    var options = {
-      context: obj,
-      success: function() {
-        equal(this, obj);
-      }
-    };
-    model.sync = function (method, model, options) {
-      options.success.call(options.context);
-    };
-    model.save({data: 2, id: 1}, options);
-    model.fetch(options);
-    model.destroy(options);
-  });
-
-  test("#3283 - save, fetch, destroy calls error with context", 3, function () {
-    var model = new Backbone.Model();
-    var obj = {};
-    var options = {
-      context: obj,
-      error: function() {
-        equal(this, obj);
-      }
-    };
-    model.sync = function (method, model, options) {
-      options.error.call(options.context);
-    };
-    model.save({data: 2, id: 1}, options);
-    model.fetch(options);
-    model.destroy(options);
-  });
-
-  test("#3470 - save and fetch with parse false", 2, function() {
-    var i = 0;
-    var model = new Backbone.Model();
-    model.parse = function() {
-      ok(false);
-    };
-    model.sync = function(method, model, options) {
-      options.success({i: ++i});
-    };
-    model.fetch({parse: false});
-    equal(model.get('i'), i);
-    model.save(null, {parse: false});
-    equal(model.get('i'), i);
-  });
-
-  test("save with PATCH", function() {
-    doc.clear().set({id: 1, a: 1, b: 2, c: 3, d: 4});
-    doc.save();
-    equal(this.syncArgs.method, 'update');
-    equal(this.syncArgs.options.attrs, undefined);
-
-    doc.save({b: 2, d: 4}, {patch: true});
-    equal(this.syncArgs.method, 'patch');
-    equal(_.size(this.syncArgs.options.attrs), 2);
-    equal(this.syncArgs.options.attrs.d, 4);
-    equal(this.syncArgs.options.attrs.a, undefined);
-    equal(this.ajaxSettings.data, "{\"b\":2,\"d\":4}");
-  });
-
-  test("save with PATCH and different attrs", function() {
-    doc.clear().save({b: 2, d: 4}, {patch: true, attrs: {B: 1, D: 3}});
-    equal(this.syncArgs.options.attrs.D, 3);
-    equal(this.syncArgs.options.attrs.d, undefined);
-    equal(this.ajaxSettings.data, "{\"B\":1,\"D\":3}");
-    deepEqual(doc.attributes, {b: 2, d: 4});
-  });
-
-  test("save in positional style", 1, function() {
-    var model = new Backbone.Model();
-    model.sync = function(method, model, options) {
-      options.success();
-    };
-    model.save('title', 'Twelfth Night');
-    equal(model.get('title'), 'Twelfth Night');
-  });
-
-  test("save with non-object success response", 2, function () {
-    var model = new Backbone.Model();
-    model.sync = function(method, model, options) {
-      options.success('', options);
-      options.success(null, options);
-    };
-    model.save({testing:'empty'}, {
-      success: function (model) {
-        deepEqual(model.attributes, {testing:'empty'});
-      }
-    });
-  });
-
-  test("save with wait and supplied id", function() {
-    var Model = Backbone.Model.extend({
-      urlRoot: '/collection'
-    });
-    var model = new Model();
-    model.save({id: 42}, {wait: true});
-    equal(this.ajaxSettings.url, '/collection/42');
-  });
-
-  test("save will pass extra options to success callback", 1, function () {
-    var SpecialSyncModel = Backbone.Model.extend({
-      sync: function (method, model, options) {
-        _.extend(options, { specialSync: true });
-        return Backbone.Model.prototype.sync.call(this, method, model, options);
-      },
-      urlRoot: '/test'
-    });
-
-    var model = new SpecialSyncModel();
-
-    var onSuccess = function (model, response, options) {
-      ok(options.specialSync, "Options were passed correctly to callback");
-    };
-
-    model.save(null, { success: onSuccess });
-    this.ajaxSettings.success();
-  });
-
-  test("fetch", 2, function() {
-    doc.fetch();
-    equal(this.syncArgs.method, 'read');
-    ok(_.isEqual(this.syncArgs.model, doc));
-  });
-
-  test("fetch will pass extra options to success callback", 1, function () {
-    var SpecialSyncModel = Backbone.Model.extend({
-      sync: function (method, model, options) {
-        _.extend(options, { specialSync: true });
-        return Backbone.Model.prototype.sync.call(this, method, model, options);
-      },
-      urlRoot: '/test'
-    });
-
-    var model = new SpecialSyncModel();
-
-    var onSuccess = function (model, response, options) {
-      ok(options.specialSync, "Options were passed correctly to callback");
-    };
-
-    model.fetch({ success: onSuccess });
-    this.ajaxSettings.success();
-  });
-
-  test("destroy", 3, function() {
-    doc.destroy();
-    equal(this.syncArgs.method, 'delete');
-    ok(_.isEqual(this.syncArgs.model, doc));
-
-    var newModel = new Backbone.Model;
-    equal(newModel.destroy(), false);
-  });
-
-  test("destroy will pass extra options to success callback", 1, function () {
-    var SpecialSyncModel = Backbone.Model.extend({
-      sync: function (method, model, options) {
-        _.extend(options, { specialSync: true });
-        return Backbone.Model.prototype.sync.call(this, method, model, options);
-      },
-      urlRoot: '/test'
-    });
-
-    var model = new SpecialSyncModel({ id: 'id' });
-
-    var onSuccess = function (model, response, options) {
-      ok(options.specialSync, "Options were passed correctly to callback");
-    };
-
-    model.destroy({ success: onSuccess });
-    this.ajaxSettings.success();
-  });
-
-  test("non-persisted destroy", 1, function() {
-    var a = new Backbone.Model({ 'foo': 1, 'bar': 2, 'baz': 3});
-    a.sync = function() { throw "should not be called"; };
-    a.destroy();
-    ok(true, "non-persisted model should not call sync");
-  });
-
-  test("validate", function() {
-    var lastError;
-    var model = new Backbone.Model();
-    model.validate = function(attrs) {
-      if (attrs.admin != this.get('admin')) return "Can't change admin status.";
-    };
-    model.on('invalid', function(model, error) {
-      lastError = error;
-    });
-    var result = model.set({a: 100});
-    equal(result, model);
-    equal(model.get('a'), 100);
-    equal(lastError, undefined);
-    result = model.set({admin: true});
-    equal(model.get('admin'), true);
-    result = model.set({a: 200, admin: false}, {validate:true});
-    equal(lastError, "Can't change admin status.");
-    equal(result, false);
-    equal(model.get('a'), 100);
-  });
-
-  test("validate on unset and clear", 6, function() {
-    var error;
-    var model = new Backbone.Model({name: "One"});
-    model.validate = function(attrs) {
-      if (!attrs.name) {
-        error = true;
-        return "No thanks.";
-      }
-    };
-    model.set({name: "Two"});
-    equal(model.get('name'), 'Two');
-    equal(error, undefined);
-    model.unset('name', {validate: true});
-    equal(error, true);
-    equal(model.get('name'), 'Two');
-    model.clear({validate:true});
-    equal(model.get('name'), 'Two');
-    delete model.validate;
-    model.clear();
-    equal(model.get('name'), undefined);
-  });
-
-  test("validate with error callback", 8, function() {
-    var lastError, boundError;
-    var model = new Backbone.Model();
-    model.validate = function(attrs) {
-      if (attrs.admin) return "Can't change admin status.";
-    };
-    model.on('invalid', function(model, error) {
-      boundError = true;
-    });
-    var result = model.set({a: 100}, {validate:true});
-    equal(result, model);
-    equal(model.get('a'), 100);
-    equal(model.validationError, null);
-    equal(boundError, undefined);
-    result = model.set({a: 200, admin: true}, {validate:true});
-    equal(result, false);
-    equal(model.get('a'), 100);
-    equal(model.validationError, "Can't change admin status.");
-    equal(boundError, true);
-  });
-
-  test("defaults always extend attrs (#459)", 2, function() {
-    var Defaulted = Backbone.Model.extend({
-      defaults: {one: 1},
-      initialize : function(attrs, opts) {
-        equal(this.attributes.one, 1);
-      }
-    });
-    var providedattrs = new Defaulted({});
-    var emptyattrs = new Defaulted();
-  });
-
-  test("Inherit class properties", 6, function() {
-    var Parent = Backbone.Model.extend({
-      instancePropSame: function() {},
-      instancePropDiff: function() {}
-    }, {
-      classProp: function() {}
-    });
-    var Child = Parent.extend({
-      instancePropDiff: function() {}
-    });
-
-    var adult = new Parent;
-    var kid   = new Child;
-
-    equal(Child.classProp, Parent.classProp);
-    notEqual(Child.classProp, undefined);
-
-    equal(kid.instancePropSame, adult.instancePropSame);
-    notEqual(kid.instancePropSame, undefined);
-
-    notEqual(Child.prototype.instancePropDiff, Parent.prototype.instancePropDiff);
-    notEqual(Child.prototype.instancePropDiff, undefined);
-  });
-
-  test("Nested change events don't clobber previous attributes", 4, function() {
-    new Backbone.Model()
-    .on('change:state', function(model, newState) {
-      equal(model.previous('state'), undefined);
-      equal(newState, 'hello');
-      // Fire a nested change event.
-      model.set({other: 'whatever'});
-    })
-    .on('change:state', function(model, newState) {
-      equal(model.previous('state'), undefined);
-      equal(newState, 'hello');
-    })
-    .set({state: 'hello'});
-  });
-
-  test("hasChanged/set should use same comparison", 2, function() {
-    var changed = 0, model = new Backbone.Model({a: null});
-    model.on('change', function() {
-      ok(this.hasChanged('a'));
-    })
-    .on('change:a', function() {
-      changed++;
-    })
-    .set({a: undefined});
-    equal(changed, 1);
-  });
-
-  test("#582, #425, change:attribute callbacks should fire after all changes have occurred", 9, function() {
-    var model = new Backbone.Model;
-
-    var assertion = function() {
-      equal(model.get('a'), 'a');
-      equal(model.get('b'), 'b');
-      equal(model.get('c'), 'c');
-    };
-
-    model.on('change:a', assertion);
-    model.on('change:b', assertion);
-    model.on('change:c', assertion);
-
-    model.set({a: 'a', b: 'b', c: 'c'});
-  });
-
-  test("#871, set with attributes property", 1, function() {
-    var model = new Backbone.Model();
-    model.set({attributes: true});
-    ok(model.has('attributes'));
-  });
-
-  test("set value regardless of equality/change", 1, function() {
-    var model = new Backbone.Model({x: []});
-    var a = [];
-    model.set({x: a});
-    ok(model.get('x') === a);
-  });
-
-  test("set same value does not trigger change", 0, function() {
-    var model = new Backbone.Model({x: 1});
-    model.on('change change:x', function() { ok(false); });
-    model.set({x: 1});
-    model.set({x: 1});
-  });
-
-  test("unset does not fire a change for undefined attributes", 0, function() {
-    var model = new Backbone.Model({x: undefined});
-    model.on('change:x', function(){ ok(false); });
-    model.unset('x');
-  });
-
-  test("set: undefined values", 1, function() {
-    var model = new Backbone.Model({x: undefined});
-    ok('x' in model.attributes);
-  });
-
-  test("hasChanged works outside of change events, and true within", 6, function() {
-    var model = new Backbone.Model({x: 1});
-    model.on('change:x', function() {
-      ok(model.hasChanged('x'));
-      equal(model.get('x'), 1);
-    });
-    model.set({x: 2}, {silent: true});
-    ok(model.hasChanged());
-    equal(model.hasChanged('x'), true);
-    model.set({x: 1});
-    ok(model.hasChanged());
-    equal(model.hasChanged('x'), true);
-  });
-
-  test("hasChanged gets cleared on the following set", 4, function() {
-    var model = new Backbone.Model;
-    model.set({x: 1});
-    ok(model.hasChanged());
-    model.set({x: 1});
-    ok(!model.hasChanged());
-    model.set({x: 2});
-    ok(model.hasChanged());
-    model.set({});
-    ok(!model.hasChanged());
-  });
-
-  test("save with `wait` succeeds without `validate`", 1, function() {
-    var model = new Backbone.Model();
-    model.url = '/test';
-    model.save({x: 1}, {wait: true});
-    ok(this.syncArgs.model === model);
-  });
-
-  test("save without `wait` doesn't set invalid attributes", function () {
-    var model = new Backbone.Model();
-    model.validate = function () { return 1; }
-    model.save({a: 1});
-    equal(model.get('a'), void 0);
-  });
-
-  test("save doesn't validate twice", function () {
-    var model = new Backbone.Model();
-    var times = 0;
-    model.sync = function () {};
-    model.validate = function () { ++times; }
-    model.save({});
-    equal(times, 1);
-  });
-
-  test("`hasChanged` for falsey keys", 2, function() {
-    var model = new Backbone.Model();
-    model.set({x: true}, {silent: true});
-    ok(!model.hasChanged(0));
-    ok(!model.hasChanged(''));
-  });
-
-  test("`previous` for falsey keys", 2, function() {
-    var model = new Backbone.Model({0: true, '': true});
-    model.set({0: false, '': false}, {silent: true});
-    equal(model.previous(0), true);
-    equal(model.previous(''), true);
-  });
-
-  test("`save` with `wait` sends correct attributes", 5, function() {
-    var changed = 0;
-    var model = new Backbone.Model({x: 1, y: 2});
-    model.url = '/test';
-    model.on('change:x', function() { changed++; });
-    model.save({x: 3}, {wait: true});
-    deepEqual(JSON.parse(this.ajaxSettings.data), {x: 3, y: 2});
-    equal(model.get('x'), 1);
-    equal(changed, 0);
-    this.syncArgs.options.success({});
-    equal(model.get('x'), 3);
-    equal(changed, 1);
-  });
-
-  test("a failed `save` with `wait` doesn't leave attributes behind", 1, function() {
-    var model = new Backbone.Model;
-    model.url = '/test';
-    model.save({x: 1}, {wait: true});
-    equal(model.get('x'), void 0);
-  });
-
-  test("#1030 - `save` with `wait` results in correct attributes if success is called during sync", 2, function() {
-    var model = new Backbone.Model({x: 1, y: 2});
-    model.sync = function(method, model, options) {
-      options.success();
-    };
-    model.on("change:x", function() { ok(true); });
-    model.save({x: 3}, {wait: true});
-    equal(model.get('x'), 3);
-  });
-
-  test("save with wait validates attributes", function() {
-    var model = new Backbone.Model();
-    model.url = '/test';
-    model.validate = function() { ok(true); };
-    model.save({x: 1}, {wait: true});
-  });
-
-  test("save turns on parse flag", function () {
-    var Model = Backbone.Model.extend({
-      sync: function(method, model, options) { ok(options.parse); }
-    });
-    new Model().save();
-  });
-
-  test("nested `set` during `'change:attr'`", 2, function() {
-    var events = [];
-    var model = new Backbone.Model();
-    model.on('all', function(event) { events.push(event); });
-    model.on('change', function() {
-      model.set({z: true}, {silent:true});
-    });
-    model.on('change:x', function() {
-      model.set({y: true});
-    });
-    model.set({x: true});
-    deepEqual(events, ['change:y', 'change:x', 'change']);
-    events = [];
-    model.set({z: true});
-    deepEqual(events, []);
-  });
-
-  test("nested `change` only fires once", 1, function() {
-    var model = new Backbone.Model();
-    model.on('change', function() {
-      ok(true);
-      model.set({x: true});
-    });
-    model.set({x: true});
-  });
-
-  test("nested `set` during `'change'`", 6, function() {
-    var count = 0;
-    var model = new Backbone.Model();
-    model.on('change', function() {
-      switch(count++) {
-        case 0:
-          deepEqual(this.changedAttributes(), {x: true});
-          equal(model.previous('x'), undefined);
-          model.set({y: true});
-          break;
-        case 1:
-          deepEqual(this.changedAttributes(), {x: true, y: true});
-          equal(model.previous('x'), undefined);
-          model.set({z: true});
-          break;
-        case 2:
-          deepEqual(this.changedAttributes(), {x: true, y: true, z: true});
-          equal(model.previous('y'), undefined);
-          break;
-        default:
-          ok(false);
-      }
-    });
-    model.set({x: true});
-  });
-
-  test("nested `change` with silent", 3, function() {
-    var count = 0;
-    var model = new Backbone.Model();
-    model.on('change:y', function() { ok(false); });
-    model.on('change', function() {
-      switch(count++) {
-        case 0:
-          deepEqual(this.changedAttributes(), {x: true});
-          model.set({y: true}, {silent: true});
-          model.set({z: true});
-          break;
-        case 1:
-          deepEqual(this.changedAttributes(), {x: true, y: true, z: true});
-          break;
-        case 2:
-          deepEqual(this.changedAttributes(), {z: false});
-          break;
-        default:
-          ok(false);
-      }
-    });
-    model.set({x: true});
-    model.set({z: false});
-  });
-
-  test("nested `change:attr` with silent", 0, function() {
-    var model = new Backbone.Model();
-    model.on('change:y', function(){ ok(false); });
-    model.on('change', function() {
-      model.set({y: true}, {silent: true});
-      model.set({z: true});
-    });
-    model.set({x: true});
-  });
-
-  test("multiple nested changes with silent", 1, function() {
-    var model = new Backbone.Model();
-    model.on('change:x', function() {
-      model.set({y: 1}, {silent: true});
-      model.set({y: 2});
-    });
-    model.on('change:y', function(model, val) {
-      equal(val, 2);
-    });
-    model.set({x: true});
-  });
-
-  test("multiple nested changes with silent", 1, function() {
-    var changes = [];
-    var model = new Backbone.Model();
-    model.on('change:b', function(model, val) { changes.push(val); });
-    model.on('change', function() {
-      model.set({b: 1});
-    });
-    model.set({b: 0});
-    deepEqual(changes, [0, 1]);
-  });
-
-  test("basic silent change semantics", 1, function() {
-    var model = new Backbone.Model;
-    model.set({x: 1});
-    model.on('change', function(){ ok(true); });
-    model.set({x: 2}, {silent: true});
-    model.set({x: 1});
-  });
-
-  test("nested set multiple times", 1, function() {
-    var model = new Backbone.Model();
-    model.on('change:b', function() {
-      ok(true);
-    });
-    model.on('change:a', function() {
-      model.set({b: true});
-      model.set({b: true});
-    });
-    model.set({a: true});
-  });
-
-  test("#1122 - clear does not alter options.", 1, function() {
-    var model = new Backbone.Model();
-    var options = {};
-    model.clear(options);
-    ok(!options.unset);
-  });
-
-  test("#1122 - unset does not alter options.", 1, function() {
-    var model = new Backbone.Model();
-    var options = {};
-    model.unset('x', options);
-    ok(!options.unset);
-  });
-
-  test("#1355 - `options` is passed to success callbacks", 3, function() {
-    var model = new Backbone.Model();
-    var opts = {
-      success: function( model, resp, options ) {
-        ok(options);
-      }
-    };
-    model.sync = function(method, model, options) {
-      options.success();
-    };
-    model.save({id: 1}, opts);
-    model.fetch(opts);
-    model.destroy(opts);
-  });
-
-  test("#1412 - Trigger 'sync' event.", 3, function() {
-    var model = new Backbone.Model({id: 1});
-    model.sync = function (method, model, options) { options.success(); };
-    model.on('sync', function(){ ok(true); });
-    model.fetch();
-    model.save();
-    model.destroy();
-  });
-
-  asyncTest("#1365 - Destroy: New models execute success callback.", 2, function() {
-    new Backbone.Model()
-    .on('sync', function() { ok(false); })
-    .on('destroy', function(){ ok(true); })
-    .destroy({ success: function(){
-        ok(true);
-        start();
-    }});
-  });
-
-  test("#1433 - Save: An invalid model cannot be persisted.", 1, function() {
-    var model = new Backbone.Model;
-    model.validate = function(){ return 'invalid'; };
-    model.sync = function(){ ok(false); };
-    strictEqual(model.save(), false);
-  });
-
-  test("#1377 - Save without attrs triggers 'error'.", 1, function() {
-    var Model = Backbone.Model.extend({
-      url: '/test/',
-      sync: function(method, model, options){ options.success(); },
-      validate: function(){ return 'invalid'; }
-    });
-    var model = new Model({id: 1});
-    model.on('invalid', function(){ ok(true); });
-    model.save();
-  });
-
-  test("#1545 - `undefined` can be passed to a model constructor without coersion", function() {
-    var Model = Backbone.Model.extend({
-      defaults: { one: 1 },
-      initialize : function(attrs, opts) {
-        equal(attrs, undefined);
-      }
-    });
-    var emptyattrs = new Model();
-    var undefinedattrs = new Model(undefined);
-  });
-
-  asyncTest("#1478 - Model `save` does not trigger change on unchanged attributes", 0, function() {
-    var Model = Backbone.Model.extend({
-      sync: function(method, model, options) {
-        setTimeout(function(){
-          options.success();
-          start();
-        }, 0);
-      }
-    });
-    new Model({x: true})
-    .on('change:x', function(){ ok(false); })
-    .save(null, {wait: true});
-  });
-
-  test("#1664 - Changing from one value, silently to another, back to original triggers a change.", 1, function() {
-    var model = new Backbone.Model({x:1});
-    model.on('change:x', function() { ok(true); });
-    model.set({x:2},{silent:true});
-    model.set({x:3},{silent:true});
-    model.set({x:1});
-  });
-
-  test("#1664 - multiple silent changes nested inside a change event", 2, function() {
-    var changes = [];
-    var model = new Backbone.Model();
-    model.on('change', function() {
-      model.set({a:'c'}, {silent:true});
-      model.set({b:2}, {silent:true});
-      model.unset('c', {silent:true});
-    });
-    model.on('change:a change:b change:c', function(model, val) { changes.push(val); });
-    model.set({a:'a', b:1, c:'item'});
-    deepEqual(changes, ['a',1,'item']);
-    deepEqual(model.attributes, {a: 'c', b: 2});
-  });
-
-  test("#1791 - `attributes` is available for `parse`", function() {
-    var Model = Backbone.Model.extend({
-      parse: function() { this.has('a'); } // shouldn't throw an error
-    });
-    var model = new Model(null, {parse: true});
-    expect(0);
-  });
-
-  test("silent changes in last `change` event back to original triggers change", 2, function() {
-    var changes = [];
-    var model = new Backbone.Model();
-    model.on('change:a change:b change:c', function(model, val) { changes.push(val); });
-    model.on('change', function() {
-      model.set({a:'c'}, {silent:true});
-    });
-    model.set({a:'a'});
-    deepEqual(changes, ['a']);
-    model.set({a:'a'});
-    deepEqual(changes, ['a', 'a']);
-  });
-
-  test("#1943 change calculations should use _.isEqual", function() {
-    var model = new Backbone.Model({a: {key: 'value'}});
-    model.set('a', {key:'value'}, {silent:true});
-    equal(model.changedAttributes(), false);
-  });
-
-  test("#1964 - final `change` event is always fired, regardless of interim changes", 1, function () {
-    var model = new Backbone.Model();
-    model.on('change:property', function() {
-      model.set('property', 'bar');
-    });
-    model.on('change', function() {
-      ok(true);
-    });
-    model.set('property', 'foo');
-  });
-
-  test("isValid", function() {
-    var model = new Backbone.Model({valid: true});
-    model.validate = function(attrs) {
-      if (!attrs.valid) return "invalid";
-    };
-    equal(model.isValid(), true);
-    equal(model.set({valid: false}, {validate:true}), false);
-    equal(model.isValid(), true);
-    model.set({valid:false});
-    equal(model.isValid(), false);
-    ok(!model.set('valid', false, {validate: true}));
-  });
-
-  test("#1179 - isValid returns true in the absence of validate.", 1, function() {
-    var model = new Backbone.Model();
-    model.validate = null;
-    ok(model.isValid());
-  });
-
-  test("#1961 - Creating a model with {validate:true} will call validate and use the error callback", function () {
-    var Model = Backbone.Model.extend({
-      validate: function (attrs) {
-        if (attrs.id === 1) return "This shouldn't happen";
-      }
-    });
-    var model = new Model({id: 1}, {validate: true});
-    equal(model.validationError, "This shouldn't happen");
-  });
-
-  test("toJSON receives attrs during save(..., {wait: true})", 1, function() {
-    var Model = Backbone.Model.extend({
-      url: '/test',
-      toJSON: function() {
-        strictEqual(this.attributes.x, 1);
-        return _.clone(this.attributes);
-      }
-    });
-    var model = new Model;
-    model.save({x: 1}, {wait: true});
-  });
-
-  test("#2034 - nested set with silent only triggers one change", 1, function() {
-    var model = new Backbone.Model();
-    model.on('change', function() {
-      model.set({b: true}, {silent: true});
-      ok(true);
-    });
-    model.set({a: true});
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/backbone/test/noconflict.js ---
@@ -1,12 +0,0 @@
-(function() {
-
-  module("Backbone.noConflict");
-
-  test('noConflict', 2, function() {
-    var noconflictBackbone = Backbone.noConflict();
-    equal(window.Backbone, undefined, 'Returned window.Backbone');
-    window.Backbone = noconflictBackbone;
-    equal(window.Backbone, noconflictBackbone, 'Backbone is still pointing to the original Backbone');
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/backbone/test/router.js ---
@@ -1,998 +0,0 @@
-(function() {
-
-  var router = null;
-  var location = null;
-  var lastRoute = null;
-  var lastArgs = [];
-
-  var onRoute = function(router, route, args) {
-    lastRoute = route;
-    lastArgs = args;
-  };
-
-  var Location = function(href) {
-    this.replace(href);
-  };
-
-  _.extend(Location.prototype, {
-
-    parser: document.createElement('a'),
-
-    replace: function(href) {
-      this.parser.href = href;
-      _.extend(this, _.pick(this.parser,
-        'href',
-        'hash',
-        'host',
-        'search',
-        'fragment',
-        'pathname',
-        'protocol'
-      ));
-      // In IE, anchor.pathname does not contain a leading slash though
-      // window.location.pathname does.
-      if (!/^\//.test(this.pathname)) this.pathname = '/' + this.pathname;
-    },
-
-    toString: function() {
-      return this.href;
-    }
-
-  });
-
-  module("Backbone.Router", {
-
-    setup: function() {
-      location = new Location('http://example.com');
-      Backbone.history = _.extend(new Backbone.History, {location: location});
-      router = new Router({testing: 101});
-      Backbone.history.interval = 9;
-      Backbone.history.start({pushState: false});
-      lastRoute = null;
-      lastArgs = [];
-      Backbone.history.on('route', onRoute);
-    },
-
-    teardown: function() {
-      Backbone.history.stop();
-      Backbone.history.off('route', onRoute);
-    }
-
-  });
-
-  var ExternalObject = {
-    value: 'unset',
-
-    routingFunction: function(value) {
-      this.value = value;
-    }
-  };
-  _.bindAll(ExternalObject, 'routingFunction');
-
-  var Router = Backbone.Router.extend({
-
-    count: 0,
-
-    routes: {
-      "noCallback":                 "noCallback",
-      "counter":                    "counter",
-      "search/:query":              "search",
-      "search/:query/p:page":       "search",
-      "charñ":                      "charUTF",
-      "char%C3%B1":                 "charEscaped",
-      "contacts":                   "contacts",
-      "contacts/new":               "newContact",
-      "contacts/:id":               "loadContact",
-      "route-event/:arg":           "routeEvent",
-      "optional(/:item)":           "optionalItem",
-      "named/optional/(y:z)":       "namedOptional",
-      "splat/*args/end":            "splat",
-      ":repo/compare/*from...*to":  "github",
-      "decode/:named/*splat":       "decode",
-      "*first/complex-*part/*rest": "complex",
-      "query/:entity":              "query",
-      "function/:value":            ExternalObject.routingFunction,
-      "*anything":                  "anything"
-    },
-
-    initialize : function(options) {
-      this.testing = options.testing;
-      this.route('implicit', 'implicit');
-    },
-
-    counter: function() {
-      this.count++;
-    },
-
-    implicit: function() {
-      this.count++;
-    },
-
-    search: function(query, page) {
-      this.query = query;
-      this.page = page;
-    },
-
-    charUTF: function() {
-      this.charType = 'UTF';
-    },
-
-    charEscaped: function() {
-      this.charType = 'escaped';
-    },
-
-    contacts: function(){
-      this.contact = 'index';
-    },
-
-    newContact: function(){
-      this.contact = 'new';
-    },
-
-    loadContact: function(){
-      this.contact = 'load';
-    },
-
-    optionalItem: function(arg){
-      this.arg = arg != void 0 ? arg : null;
-    },
-
-    splat: function(args) {
-      this.args = args;
-    },
-
-    github: function(repo, from, to) {
-      this.repo = repo;
-      this.from = from;
-      this.to = to;
-    },
-
-    complex: function(first, part, rest) {
-      this.first = first;
-      this.part = part;
-      this.rest = rest;
-    },
-
-    query: function(entity, args) {
-      this.entity    = entity;
-      this.queryArgs = args;
-    },
-
-    anything: function(whatever) {
-      this.anything = whatever;
-    },
-
-    namedOptional: function(z) {
-      this.z = z;
-    },
-
-    decode: function(named, path) {
-      this.named = named;
-      this.path = path;
-    },
-
-    routeEvent: function(arg) {
-    }
-
-  });
-
-  test("initialize", 1, function() {
-    equal(router.testing, 101);
-  });
-
-  test("routes (simple)", 4, function() {
-    location.replace('http://example.com#search/news');
-    Backbone.history.checkUrl();
-    equal(router.query, 'news');
-    equal(router.page, void 0);
-    equal(lastRoute, 'search');
-    equal(lastArgs[0], 'news');
-  });
-
-  test("routes (simple, but unicode)", 4, function() {
-    location.replace('http://example.com#search/тест');
-    Backbone.history.checkUrl();
-    equal(router.query, "тест");
-    equal(router.page, void 0);
-    equal(lastRoute, 'search');
-    equal(lastArgs[0], "тест");
-  });
-
-  test("routes (two part)", 2, function() {
-    location.replace('http://example.com#search/nyc/p10');
-    Backbone.history.checkUrl();
-    equal(router.query, 'nyc');
-    equal(router.page, '10');
-  });
-
-  test("routes via navigate", 2, function() {
-    Backbone.history.navigate('search/manhattan/p20', {trigger: true});
-    equal(router.query, 'manhattan');
-    equal(router.page, '20');
-  });
-
-  test("routes via navigate with params", 1, function() {
-    Backbone.history.navigate('query/test?a=b', {trigger: true});
-    equal(router.queryArgs, 'a=b');
-  });
-
-  test("routes via navigate for backwards-compatibility", 2, function() {
-    Backbone.history.navigate('search/manhattan/p20', true);
-    equal(router.query, 'manhattan');
-    equal(router.page, '20');
-  });
-
-  test("reports matched route via nagivate", 1, function() {
-    ok(Backbone.history.navigate('search/manhattan/p20', true));
-  });
-
-  test("route precedence via navigate", 6, function(){
-    // check both 0.9.x and backwards-compatibility options
-    _.each([ { trigger: true }, true ], function( options ){
-      Backbone.history.navigate('contacts', options);
-      equal(router.contact, 'index');
-      Backbone.history.navigate('contacts/new', options);
-      equal(router.contact, 'new');
-      Backbone.history.navigate('contacts/foo', options);
-      equal(router.contact, 'load');
-    });
-  });
-
-  test("loadUrl is not called for identical routes.", 0, function() {
-    Backbone.history.loadUrl = function(){ ok(false); };
-    location.replace('http://example.com#route');
-    Backbone.history.navigate('route');
-    Backbone.history.navigate('/route');
-    Backbone.history.navigate('/route');
-  });
-
-  test("use implicit callback if none provided", 1, function() {
-    router.count = 0;
-    router.navigate('implicit', {trigger: true});
-    equal(router.count, 1);
-  });
-
-  test("routes via navigate with {replace: true}", 1, function() {
-    location.replace('http://example.com#start_here');
-    Backbone.history.checkUrl();
-    location.replace = function(href) {
-      strictEqual(href, new Location('http://example.com#end_here').href);
-    };
-    Backbone.history.navigate('end_here', {replace: true});
-  });
-
-  test("routes (splats)", 1, function() {
-    location.replace('http://example.com#splat/long-list/of/splatted_99args/end');
-    Backbone.history.checkUrl();
-    equal(router.args, 'long-list/of/splatted_99args');
-  });
-
-  test("routes (github)", 3, function() {
-    location.replace('http://example.com#backbone/compare/1.0...braddunbar:with/slash');
-    Backbone.history.checkUrl();
-    equal(router.repo, 'backbone');
-    equal(router.from, '1.0');
-    equal(router.to, 'braddunbar:with/slash');
-  });
-
-  test("routes (optional)", 2, function() {
-    location.replace('http://example.com#optional');
-    Backbone.history.checkUrl();
-    ok(!router.arg);
-    location.replace('http://example.com#optional/thing');
-    Backbone.history.checkUrl();
-    equal(router.arg, 'thing');
-  });
-
-  test("routes (complex)", 3, function() {
-    location.replace('http://example.com#one/two/three/complex-part/four/five/six/seven');
-    Backbone.history.checkUrl();
-    equal(router.first, 'one/two/three');
-    equal(router.part, 'part');
-    equal(router.rest, 'four/five/six/seven');
-  });
-
-  test("routes (query)", 5, function() {
-    location.replace('http://example.com#query/mandel?a=b&c=d');
-    Backbone.history.checkUrl();
-    equal(router.entity, 'mandel');
-    equal(router.queryArgs, 'a=b&c=d');
-    equal(lastRoute, 'query');
-    equal(lastArgs[0], 'mandel');
-    equal(lastArgs[1], 'a=b&c=d');
-  });
-
-  test("routes (anything)", 1, function() {
-    location.replace('http://example.com#doesnt-match-a-route');
-    Backbone.history.checkUrl();
-    equal(router.anything, 'doesnt-match-a-route');
-  });
-
-  test("routes (function)", 3, function() {
-    router.on('route', function(name) {
-      ok(name === '');
-    });
-    equal(ExternalObject.value, 'unset');
-    location.replace('http://example.com#function/set');
-    Backbone.history.checkUrl();
-    equal(ExternalObject.value, 'set');
-  });
-
-  test("Decode named parameters, not splats.", 2, function() {
-    location.replace('http://example.com#decode/a%2Fb/c%2Fd/e');
-    Backbone.history.checkUrl();
-    strictEqual(router.named, 'a/b');
-    strictEqual(router.path, 'c/d/e');
-  });
-
-  test("fires event when router doesn't have callback on it", 1, function() {
-    router.on("route:noCallback", function(){ ok(true); });
-    location.replace('http://example.com#noCallback');
-    Backbone.history.checkUrl();
-  });
-
-  test("No events are triggered if #execute returns false.", 1, function() {
-    var Router = Backbone.Router.extend({
-
-      routes: {
-        foo: function() {
-          ok(true);
-        }
-      },
-
-      execute: function(callback, args) {
-        callback.apply(this, args);
-        return false;
-      }
-
-    });
-
-    var router = new Router;
-
-    router.on('route route:foo', function() {
-      ok(false);
-    });
-
-    Backbone.history.on('route', function() {
-      ok(false);
-    });
-
-    location.replace('http://example.com#foo');
-    Backbone.history.checkUrl();
-  });
-
-  test("#933, #908 - leading slash", 2, function() {
-    location.replace('http://example.com/root/foo');
-
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.start({root: '/root', hashChange: false, silent: true});
-    strictEqual(Backbone.history.getFragment(), 'foo');
-
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.start({root: '/root/', hashChange: false, silent: true});
-    strictEqual(Backbone.history.getFragment(), 'foo');
-  });
-
-  test("#967 - Route callback gets passed encoded values.", 3, function() {
-    var route = 'has%2Fslash/complex-has%23hash/has%20space';
-    Backbone.history.navigate(route, {trigger: true});
-    strictEqual(router.first, 'has/slash');
-    strictEqual(router.part, 'has#hash');
-    strictEqual(router.rest, 'has space');
-  });
-
-  test("correctly handles URLs with % (#868)", 3, function() {
-    location.replace('http://example.com#search/fat%3A1.5%25');
-    Backbone.history.checkUrl();
-    location.replace('http://example.com#search/fat');
-    Backbone.history.checkUrl();
-    equal(router.query, 'fat');
-    equal(router.page, void 0);
-    equal(lastRoute, 'search');
-  });
-
-  test("#2666 - Hashes with UTF8 in them.", 2, function() {
-    Backbone.history.navigate('charñ', {trigger: true});
-    equal(router.charType, 'UTF');
-    Backbone.history.navigate('char%C3%B1', {trigger: true});
-    equal(router.charType, 'UTF');
-  });
-
-  test("#1185 - Use pathname when hashChange is not wanted.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/path/name#hash');
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.start({hashChange: false});
-    var fragment = Backbone.history.getFragment();
-    strictEqual(fragment, location.pathname.replace(/^\//, ''));
-  });
-
-  test("#1206 - Strip leading slash before location.assign.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root/');
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.start({hashChange: false, root: '/root/'});
-    location.assign = function(pathname) {
-      strictEqual(pathname, '/root/fragment');
-    };
-    Backbone.history.navigate('/fragment');
-  });
-
-  test("#1387 - Root fragment without trailing slash.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root');
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.start({hashChange: false, root: '/root/', silent: true});
-    strictEqual(Backbone.history.getFragment(), '');
-  });
-
-  test("#1366 - History does not prepend root to fragment.", 2, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root/');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url) {
-          strictEqual(url, '/root/x');
-        }
-      }
-    });
-    Backbone.history.start({
-      root: '/root/',
-      pushState: true,
-      hashChange: false
-    });
-    Backbone.history.navigate('x');
-    strictEqual(Backbone.history.fragment, 'x');
-  });
-
-  test("Normalize root.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url) {
-          strictEqual(url, '/root/fragment');
-        }
-      }
-    });
-    Backbone.history.start({
-      pushState: true,
-      root: '/root',
-      hashChange: false
-    });
-    Backbone.history.navigate('fragment');
-  });
-
-  test("Normalize root.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root#fragment');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url) {},
-        replaceState: function(state, title, url) {
-          strictEqual(url, '/root/fragment');
-        }
-      }
-    });
-    Backbone.history.start({
-      pushState: true,
-      root: '/root'
-    });
-  });
-
-  test("Normalize root.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root');
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.loadUrl = function() { ok(true); };
-    Backbone.history.start({
-      pushState: true,
-      root: '/root'
-    });
-  });
-
-  test("Normalize root - leading slash.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(){},
-        replaceState: function(){}
-      }
-    });
-    Backbone.history.start({root: 'root'});
-    strictEqual(Backbone.history.root, '/root/');
-  });
-
-  test("Transition from hashChange to pushState.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root#x/y');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(){},
-        replaceState: function(state, title, url){
-          strictEqual(url, '/root/x/y');
-        }
-      }
-    });
-    Backbone.history.start({
-      root: 'root',
-      pushState: true
-    });
-  });
-
-  test("#1619: Router: Normalize empty root", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(){},
-        replaceState: function(){}
-      }
-    });
-    Backbone.history.start({root: ''});
-    strictEqual(Backbone.history.root, '/');
-  });
-
-  test("#1619: Router: nagivate with empty root", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url) {
-          strictEqual(url, '/fragment');
-        }
-      }
-    });
-    Backbone.history.start({
-      pushState: true,
-      root: '',
-      hashChange: false
-    });
-    Backbone.history.navigate('fragment');
-  });
-
-  test("Transition from pushState to hashChange.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root/x/y?a=b');
-    location.replace = function(url) {
-      strictEqual(url, '/root#x/y?a=b');
-    };
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: null,
-        replaceState: null
-      }
-    });
-    Backbone.history.start({
-      root: 'root',
-      pushState: true
-    });
-  });
-
-  test("#1695 - hashChange to pushState with search.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root#x/y?a=b');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(){},
-        replaceState: function(state, title, url){
-          strictEqual(url, '/root/x/y?a=b');
-        }
-      }
-    });
-    Backbone.history.start({
-      root: 'root',
-      pushState: true
-    });
-  });
-
-  test("#1746 - Router allows empty route.", 1, function() {
-    var Router = Backbone.Router.extend({
-      routes: {'': 'empty'},
-      empty: function(){},
-      route: function(route){
-        strictEqual(route, '');
-      }
-    });
-    new Router;
-  });
-
-  test("#1794 - Trailing space in fragments.", 1, function() {
-    var history = new Backbone.History;
-    strictEqual(history.getFragment('fragment   '), 'fragment');
-  });
-
-  test("#1820 - Leading slash and trailing space.", 1, function() {
-    var history = new Backbone.History;
-    strictEqual(history.getFragment('/fragment '), 'fragment');
-  });
-
-  test("#1980 - Optional parameters.", 2, function() {
-    location.replace('http://example.com#named/optional/y');
-    Backbone.history.checkUrl();
-    strictEqual(router.z, undefined);
-    location.replace('http://example.com#named/optional/y123');
-    Backbone.history.checkUrl();
-    strictEqual(router.z, '123');
-  });
-
-  test("#2062 - Trigger 'route' event on router instance.", 2, function() {
-    router.on('route', function(name, args) {
-      strictEqual(name, 'routeEvent');
-      deepEqual(args, ['x', null]);
-    });
-    location.replace('http://example.com#route-event/x');
-    Backbone.history.checkUrl();
-  });
-
-  test("#2255 - Extend routes by making routes a function.", 1, function() {
-    var RouterBase = Backbone.Router.extend({
-      routes: function() {
-        return {
-          home:  "root",
-          index: "index.html"
-        };
-      }
-    });
-
-    var RouterExtended = RouterBase.extend({
-      routes: function() {
-        var _super = RouterExtended.__super__.routes;
-        return _.extend(_super(),
-          { show:   "show",
-            search: "search" });
-      }
-    });
-
-    var router = new RouterExtended();
-    deepEqual({home: "root", index: "index.html", show: "show", search: "search"}, router.routes);
-  });
-
-  test("#2538 - hashChange to pushState only if both requested.", 0, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root?a=b#x/y');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(){},
-        replaceState: function(){ ok(false); }
-      }
-    });
-    Backbone.history.start({
-      root: 'root',
-      pushState: true,
-      hashChange: false
-    });
-  });
-
-  test('No hash fallback.', 0, function() {
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(){},
-        replaceState: function(){}
-      }
-    });
-
-    var Router = Backbone.Router.extend({
-      routes: {
-        hash: function() { ok(false); }
-      }
-    });
-    var router = new Router;
-
-    location.replace('http://example.com/');
-    Backbone.history.start({
-      pushState: true,
-      hashChange: false
-    });
-    location.replace('http://example.com/nomatch#hash');
-    Backbone.history.checkUrl();
-  });
-
-  test('#2656 - No trailing slash on root.', 1, function() {
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url){
-          strictEqual(url, '/root');
-        }
-      }
-    });
-    location.replace('http://example.com/root/path');
-    Backbone.history.start({pushState: true, hashChange: false, root: 'root'});
-    Backbone.history.navigate('');
-  });
-
-  test('#2656 - No trailing slash on root.', 1, function() {
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url) {
-          strictEqual(url, '/');
-        }
-      }
-    });
-    location.replace('http://example.com/path');
-    Backbone.history.start({pushState: true, hashChange: false});
-    Backbone.history.navigate('');
-  });
-
-  test('#2656 - No trailing slash on root.', 1, function() {
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url){
-          strictEqual(url, '/root?x=1');
-        }
-      }
-    });
-    location.replace('http://example.com/root/path');
-    Backbone.history.start({pushState: true, hashChange: false, root: 'root'});
-    Backbone.history.navigate('?x=1');
-  });
-
-  test('#2765 - Fragment matching sans query/hash.', 2, function() {
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(state, title, url) {
-          strictEqual(url, '/path?query#hash');
-        }
-      }
-    });
-
-    var Router = Backbone.Router.extend({
-      routes: {
-        path: function() { ok(true); }
-      }
-    });
-    var router = new Router;
-
-    location.replace('http://example.com/');
-    Backbone.history.start({pushState: true, hashChange: false});
-    Backbone.history.navigate('path?query#hash', true);
-  });
-
-  test('Do not decode the search params.', function() {
-    var Router = Backbone.Router.extend({
-      routes: {
-        path: function(params){
-          strictEqual(params, 'x=y%3Fz');
-        }
-      }
-    });
-    var router = new Router;
-    Backbone.history.navigate('path?x=y%3Fz', true);
-  });
-
-  test('Navigate to a hash url.', function() {
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.start({pushState: true});
-    var Router = Backbone.Router.extend({
-      routes: {
-        path: function(params) {
-          strictEqual(params, 'x=y');
-        }
-      }
-    });
-    var router = new Router;
-    location.replace('http://example.com/path?x=y#hash');
-    Backbone.history.checkUrl();
-  });
-
-  test('#navigate to a hash url.', function() {
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    Backbone.history.start({pushState: true});
-    var Router = Backbone.Router.extend({
-      routes: {
-        path: function(params) {
-          strictEqual(params, 'x=y');
-        }
-      }
-    });
-    var router = new Router;
-    Backbone.history.navigate('path?x=y#hash', true);
-  });
-
-  test('unicode pathname', 1, function() {
-    location.replace('http://example.com/myyjä');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {
-        myyjä: function() {
-          ok(true);
-        }
-      }
-    });
-    new Router;
-    Backbone.history.start({pushState: true});
-  });
-
-  test('unicode pathname with % in a parameter', 1, function() {
-    location.replace('http://example.com/myyjä/foo%20%25%3F%2f%40%25%20bar');
-    location.pathname = '/myyj%C3%A4/foo%20%25%3F%2f%40%25%20bar';
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {
-        'myyjä/:query': function(query) {
-          strictEqual(query, 'foo %?/@% bar');
-        }
-      }
-    });
-    new Router;
-    Backbone.history.start({pushState: true});
-  });
-
-  test('newline in route', 1, function() {
-    location.replace('http://example.com/stuff%0Anonsense?param=foo%0Abar');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {
-        'stuff\nnonsense': function() {
-          ok(true);
-        }
-      }
-    });
-    new Router;
-    Backbone.history.start({pushState: true});
-  });
-
-  test('Router#execute receives callback, args, name.', 3, function() {
-    location.replace('http://example.com#foo/123/bar?x=y');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {'foo/:id/bar': 'foo'},
-      foo: function(){},
-      execute: function(callback, args, name) {
-        strictEqual(callback, this.foo);
-        deepEqual(args, ['123', 'x=y']);
-        strictEqual(name, 'foo');
-      }
-    });
-    var router = new Router;
-    Backbone.history.start();
-  });
-
-  test("pushState to hashChange with only search params.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com?a=b');
-    location.replace = function(url) {
-      strictEqual(url, '/#?a=b');
-    };
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: null
-    });
-    Backbone.history.start({pushState: true});
-  });
-
-  test("#3123 - History#navigate decodes before comparison.", 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/shop/search?keyword=short%20dress');
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: function(){ ok(false); },
-        replaceState: function(){ ok(false); }
-      }
-    });
-    Backbone.history.start({pushState: true});
-    Backbone.history.navigate('shop/search?keyword=short%20dress', true);
-    strictEqual(Backbone.history.fragment, 'shop/search?keyword=short dress');
-  });
-
-  test('#3175 - Urls in the params', 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com#login?a=value&backUrl=https%3A%2F%2Fwww.msn.com%2Fidp%2Fidpdemo%3Fspid%3Dspdemo%26target%3Db');
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var router = new Backbone.Router;
-    router.route('login', function(params) {
-      strictEqual(params, 'a=value&backUrl=https%3A%2F%2Fwww.msn.com%2Fidp%2Fidpdemo%3Fspid%3Dspdemo%26target%3Db');
-    });
-    Backbone.history.start();
-  });
-
-  test('#3358 - pushState to hashChange transition with search params', 1, function() {
-    Backbone.history.stop();
-    location.replace('http://example.com/root?foo=bar');
-    location.replace = function(url) {
-      strictEqual(url, '/root#?foo=bar');
-    };
-    Backbone.history = _.extend(new Backbone.History, {
-      location: location,
-      history: {
-        pushState: undefined,
-        replaceState: undefined
-      }
-    });
-    Backbone.history.start({root: '/root', pushState: true});
-  });
-
-  test("Paths that don't match the root should not match no root", 0, function() {
-    location.replace('http://example.com/foo');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {
-        foo: function(){
-          ok(false, 'should not match unless root matches');
-        }
-      }
-    });
-    var router = new Router;
-    Backbone.history.start({root: 'root', pushState: true});
-  });
-
-  test("Paths that don't match the root should not match roots of the same length", 0, function() {
-    location.replace('http://example.com/xxxx/foo');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {
-        foo: function(){
-          ok(false, 'should not match unless root matches');
-        }
-      }
-    });
-    var router = new Router;
-    Backbone.history.start({root: 'root', pushState: true});
-  });
-
-  test("roots with regex characters", 1, function() {
-    location.replace('http://example.com/x+y.z/foo');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {foo: function(){ ok(true); }}
-    });
-    var router = new Router;
-    Backbone.history.start({root: 'x+y.z', pushState: true});
-  });
-
-  test("roots with unicode characters", 1, function() {
-    location.replace('http://example.com/®ooτ/foo');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {foo: function(){ ok(true); }}
-    });
-    var router = new Router;
-    Backbone.history.start({root: '®ooτ', pushState: true});
-  });
-
-  test("roots without slash", 1, function() {
-    location.replace('http://example.com/®ooτ');
-    Backbone.history.stop();
-    Backbone.history = _.extend(new Backbone.History, {location: location});
-    var Router = Backbone.Router.extend({
-      routes: {'': function(){ ok(true); }}
-    });
-    var router = new Router;
-    Backbone.history.start({root: '®ooτ', pushState: true});
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/backbone/test/setup/dom-setup.js ---
@@ -1,6 +0,0 @@
-$('body').append(
-    '<div id="qunit"></div>' +
-    '<div id="qunit-fixture">' +
-        '<div id="testElement"><h1>Test</h1></div>' +
-    '</div>'
-);
\ No newline at end of file

--- app/webroot/js/vendor/lodash/vendor/backbone/test/setup/environment.js ---
@@ -1,43 +0,0 @@
-(function() {
-
-  var sync = Backbone.sync;
-  var ajax = Backbone.ajax;
-  var emulateHTTP = Backbone.emulateHTTP;
-  var emulateJSON = Backbone.emulateJSON;
-  var history = window.history;
-  var pushState = history.pushState;
-  var replaceState = history.replaceState;
-
-  QUnit.testStart(function() {
-    var env = QUnit.config.current.testEnvironment;
-
-    // We never want to actually call these during tests.
-    history.pushState = history.replaceState = function(){};
-
-    // Capture ajax settings for comparison.
-    Backbone.ajax = function(settings) {
-      env.ajaxSettings = settings;
-    };
-
-    // Capture the arguments to Backbone.sync for comparison.
-    Backbone.sync = function(method, model, options) {
-      env.syncArgs = {
-        method: method,
-        model: model,
-        options: options
-      };
-      sync.apply(this, arguments);
-    };
-
-  });
-
-  QUnit.testDone(function() {
-    Backbone.sync = sync;
-    Backbone.ajax = ajax;
-    Backbone.emulateHTTP = emulateHTTP;
-    Backbone.emulateJSON = emulateJSON;
-    history.pushState = pushState;
-    history.replaceState = replaceState;
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/backbone/test/sync.js ---
@@ -1,221 +0,0 @@
-(function() {
-
-  var Library = Backbone.Collection.extend({
-    url : function() { return '/library'; }
-  });
-  var library;
-
-  var attrs = {
-    title  : "The Tempest",
-    author : "Bill Shakespeare",
-    length : 123
-  };
-
-  module("Backbone.sync", {
-
-    setup : function() {
-      library = new Library;
-      library.create(attrs, {wait: false});
-    },
-
-    teardown: function() {
-      Backbone.emulateHTTP = false;
-    }
-
-  });
-
-  test("read", 4, function() {
-    library.fetch();
-    equal(this.ajaxSettings.url, '/library');
-    equal(this.ajaxSettings.type, 'GET');
-    equal(this.ajaxSettings.dataType, 'json');
-    ok(_.isEmpty(this.ajaxSettings.data));
-  });
-
-  test("passing data", 3, function() {
-    library.fetch({data: {a: 'a', one: 1}});
-    equal(this.ajaxSettings.url, '/library');
-    equal(this.ajaxSettings.data.a, 'a');
-    equal(this.ajaxSettings.data.one, 1);
-  });
-
-  test("create", 6, function() {
-    equal(this.ajaxSettings.url, '/library');
-    equal(this.ajaxSettings.type, 'POST');
-    equal(this.ajaxSettings.dataType, 'json');
-    var data = JSON.parse(this.ajaxSettings.data);
-    equal(data.title, 'The Tempest');
-    equal(data.author, 'Bill Shakespeare');
-    equal(data.length, 123);
-  });
-
-  test("update", 7, function() {
-    library.first().save({id: '1-the-tempest', author: 'William Shakespeare'});
-    equal(this.ajaxSettings.url, '/library/1-the-tempest');
-    equal(this.ajaxSettings.type, 'PUT');
-    equal(this.ajaxSettings.dataType, 'json');
-    var data = JSON.parse(this.ajaxSettings.data);
-    equal(data.id, '1-the-tempest');
-    equal(data.title, 'The Tempest');
-    equal(data.author, 'William Shakespeare');
-    equal(data.length, 123);
-  });
-
-  test("update with emulateHTTP and emulateJSON", 7, function() {
-    library.first().save({id: '2-the-tempest', author: 'Tim Shakespeare'}, {
-      emulateHTTP: true,
-      emulateJSON: true
-    });
-    equal(this.ajaxSettings.url, '/library/2-the-tempest');
-    equal(this.ajaxSettings.type, 'POST');
-    equal(this.ajaxSettings.dataType, 'json');
-    equal(this.ajaxSettings.data._method, 'PUT');
-    var data = JSON.parse(this.ajaxSettings.data.model);
-    equal(data.id, '2-the-tempest');
-    equal(data.author, 'Tim Shakespeare');
-    equal(data.length, 123);
-  });
-
-  test("update with just emulateHTTP", 6, function() {
-    library.first().save({id: '2-the-tempest', author: 'Tim Shakespeare'}, {
-      emulateHTTP: true
-    });
-    equal(this.ajaxSettings.url, '/library/2-the-tempest');
-    equal(this.ajaxSettings.type, 'POST');
-    equal(this.ajaxSettings.contentType, 'application/json');
-    var data = JSON.parse(this.ajaxSettings.data);
-    equal(data.id, '2-the-tempest');
-    equal(data.author, 'Tim Shakespeare');
-    equal(data.length, 123);
-  });
-
-  test("update with just emulateJSON", 6, function() {
-    library.first().save({id: '2-the-tempest', author: 'Tim Shakespeare'}, {
-      emulateJSON: true
-    });
-    equal(this.ajaxSettings.url, '/library/2-the-tempest');
-    equal(this.ajaxSettings.type, 'PUT');
-    equal(this.ajaxSettings.contentType, 'application/x-www-form-urlencoded');
-    var data = JSON.parse(this.ajaxSettings.data.model);
-    equal(data.id, '2-the-tempest');
-    equal(data.author, 'Tim Shakespeare');
-    equal(data.length, 123);
-  });
-
-  test("read model", 3, function() {
-    library.first().save({id: '2-the-tempest', author: 'Tim Shakespeare'});
-    library.first().fetch();
-    equal(this.ajaxSettings.url, '/library/2-the-tempest');
-    equal(this.ajaxSettings.type, 'GET');
-    ok(_.isEmpty(this.ajaxSettings.data));
-  });
-
-  test("destroy", 3, function() {
-    library.first().save({id: '2-the-tempest', author: 'Tim Shakespeare'});
-    library.first().destroy({wait: true});
-    equal(this.ajaxSettings.url, '/library/2-the-tempest');
-    equal(this.ajaxSettings.type, 'DELETE');
-    equal(this.ajaxSettings.data, null);
-  });
-
-  test("destroy with emulateHTTP", 3, function() {
-    library.first().save({id: '2-the-tempest', author: 'Tim Shakespeare'});
-    library.first().destroy({
-      emulateHTTP: true,
-      emulateJSON: true
-    });
-    equal(this.ajaxSettings.url, '/library/2-the-tempest');
-    equal(this.ajaxSettings.type, 'POST');
-    equal(JSON.stringify(this.ajaxSettings.data), '{"_method":"DELETE"}');
-  });
-
-  test("urlError", 2, function() {
-    var model = new Backbone.Model();
-    throws(function() {
-      model.fetch();
-    });
-    model.fetch({url: '/one/two'});
-    equal(this.ajaxSettings.url, '/one/two');
-  });
-
-  test("#1052 - `options` is optional.", 0, function() {
-    var model = new Backbone.Model();
-    model.url = '/test';
-    Backbone.sync('create', model);
-  });
-
-  test("Backbone.ajax", 1, function() {
-    Backbone.ajax = function(settings){
-      strictEqual(settings.url, '/test');
-    };
-    var model = new Backbone.Model();
-    model.url = '/test';
-    Backbone.sync('create', model);
-  });
-
-  test("Call provided error callback on error.", 1, function() {
-    var model = new Backbone.Model;
-    model.url = '/test';
-    Backbone.sync('read', model, {
-      error: function() { ok(true); }
-    });
-    this.ajaxSettings.error();
-  });
-
-  test('Use Backbone.emulateHTTP as default.', 2, function() {
-    var model = new Backbone.Model;
-    model.url = '/test';
-
-    Backbone.emulateHTTP = true;
-    model.sync('create', model);
-    strictEqual(this.ajaxSettings.emulateHTTP, true);
-
-    Backbone.emulateHTTP = false;
-    model.sync('create', model);
-    strictEqual(this.ajaxSettings.emulateHTTP, false);
-  });
-
-  test('Use Backbone.emulateJSON as default.', 2, function() {
-    var model = new Backbone.Model;
-    model.url = '/test';
-
-    Backbone.emulateJSON = true;
-    model.sync('create', model);
-    strictEqual(this.ajaxSettings.emulateJSON, true);
-
-    Backbone.emulateJSON = false;
-    model.sync('create', model);
-    strictEqual(this.ajaxSettings.emulateJSON, false);
-  });
-
-  test("#1756 - Call user provided beforeSend function.", 4, function() {
-    Backbone.emulateHTTP = true;
-    var model = new Backbone.Model;
-    model.url = '/test';
-    var xhr = {
-      setRequestHeader: function(header, value) {
-        strictEqual(header, 'X-HTTP-Method-Override');
-        strictEqual(value, 'DELETE');
-      }
-    };
-    model.sync('delete', model, {
-      beforeSend: function(_xhr) {
-        ok(_xhr === xhr);
-        return false;
-      }
-    });
-    strictEqual(this.ajaxSettings.beforeSend(xhr), false);
-  });
-
-  test('#2928 - Pass along `textStatus` and `errorThrown`.', 2, function() {
-    var model = new Backbone.Model;
-    model.url = '/test';
-    model.on('error', function(model, xhr, options) {
-      strictEqual(options.textStatus, 'textStatus');
-      strictEqual(options.errorThrown, 'errorThrown');
-    });
-    model.fetch();
-    this.ajaxSettings.error({}, 'textStatus', 'errorThrown');
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/backbone/test/view.js ---
@@ -1,437 +0,0 @@
-(function() {
-
-  var view;
-
-  module("Backbone.View", {
-
-    setup: function() {
-      view = new Backbone.View({
-        id        : 'test-view',
-        className : 'test-view',
-        other     : 'non-special-option'
-      });
-    }
-
-  });
-
-  test("constructor", 3, function() {
-    equal(view.el.id, 'test-view');
-    equal(view.el.className, 'test-view');
-    equal(view.el.other, void 0);
-  });
-
-  test("$", 2, function() {
-    var view = new Backbone.View;
-    view.setElement('<p><a><b>test</b></a></p>');
-    var result = view.$('a b');
-
-    strictEqual(result[0].innerHTML, 'test');
-    ok(result.length === +result.length);
-  });
-
-  test("$el", 3, function() {
-    var view = new Backbone.View;
-    view.setElement('<p><a><b>test</b></a></p>');
-    strictEqual(view.el.nodeType, 1);
-
-    ok(view.$el instanceof Backbone.$);
-    strictEqual(view.$el[0], view.el);
-  });
-
-  test("initialize", 1, function() {
-    var View = Backbone.View.extend({
-      initialize: function() {
-        this.one = 1;
-      }
-    });
-
-    strictEqual(new View().one, 1);
-  });
-
-  test("render", 1, function() {
-    var view = new Backbone.View;
-    equal(view.render(), view, '#render returns the view instance');
-  });
-
-  test("delegateEvents", 6, function() {
-    var counter1 = 0, counter2 = 0;
-
-    var view = new Backbone.View({el: '#testElement'});
-    view.increment = function(){ counter1++; };
-    view.$el.on('click', function(){ counter2++; });
-
-    var events = {'click h1': 'increment'};
-
-    view.delegateEvents(events);
-    view.$('h1').trigger('click');
-    equal(counter1, 1);
-    equal(counter2, 1);
-
-    view.$('h1').trigger('click');
-    equal(counter1, 2);
-    equal(counter2, 2);
-
-    view.delegateEvents(events);
-    view.$('h1').trigger('click');
-    equal(counter1, 3);
-    equal(counter2, 3);
-  });
-
-  test("delegate", 3, function() {
-    var view = new Backbone.View({el: '#testElement'});
-    view.delegate('click', 'h1', function() {
-      ok(true);
-    });
-    view.delegate('click', function() {
-      ok(true);
-    });
-    view.$('h1').trigger('click');
-
-    equal(view.delegate(), view, '#delegate returns the view instance');
-  });
-
-  test("delegateEvents allows functions for callbacks", 3, function() {
-    var view = new Backbone.View({el: '<p></p>'});
-    view.counter = 0;
-
-    var events = {
-      click: function() {
-        this.counter++;
-      }
-    };
-
-    view.delegateEvents(events);
-    view.$el.trigger('click');
-    equal(view.counter, 1);
-
-    view.$el.trigger('click');
-    equal(view.counter, 2);
-
-    view.delegateEvents(events);
-    view.$el.trigger('click');
-    equal(view.counter, 3);
-  });
-
-
-  test("delegateEvents ignore undefined methods", 0, function() {
-    var view = new Backbone.View({el: '<p></p>'});
-    view.delegateEvents({'click': 'undefinedMethod'});
-    view.$el.trigger('click');
-  });
-
-  test("undelegateEvents", 7, function() {
-    var counter1 = 0, counter2 = 0;
-
-    var view = new Backbone.View({el: '#testElement'});
-    view.increment = function(){ counter1++; };
-    view.$el.on('click', function(){ counter2++; });
-
-    var events = {'click h1': 'increment'};
-
-    view.delegateEvents(events);
-    view.$('h1').trigger('click');
-    equal(counter1, 1);
-    equal(counter2, 1);
-
-    view.undelegateEvents();
-    view.$('h1').trigger('click');
-    equal(counter1, 1);
-    equal(counter2, 2);
-
-    view.delegateEvents(events);
-    view.$('h1').trigger('click');
-    equal(counter1, 2);
-    equal(counter2, 3);
-
-    equal(view.undelegateEvents(), view, '#undelegateEvents returns the view instance');
-  });
-
-  test("undelegate", 1, function() {
-    view = new Backbone.View({el: '#testElement'});
-    view.delegate('click', function() { ok(false); });
-    view.delegate('click', 'h1', function() { ok(false); });
-
-    view.undelegate('click');
-
-    view.$('h1').trigger('click');
-    view.$el.trigger('click');
-
-    equal(view.undelegate(), view, '#undelegate returns the view instance');
-  });
-
-  test("undelegate with passed handler", 1, function() {
-    view = new Backbone.View({el: '#testElement'});
-    var listener = function() { ok(false); };
-    view.delegate('click', listener);
-    view.delegate('click', function() { ok(true); });
-    view.undelegate('click', listener);
-    view.$el.trigger('click');
-  });
-
-  test("undelegate with selector", 2, function() {
-    view = new Backbone.View({el: '#testElement'});
-    view.delegate('click', function() { ok(true); });
-    view.delegate('click', 'h1', function() { ok(false); });
-    view.undelegate('click', 'h1');
-    view.$('h1').trigger('click');
-    view.$el.trigger('click');
-  });
-
-  test("undelegate with handler and selector", 2, function() {
-    view = new Backbone.View({el: '#testElement'});
-    view.delegate('click', function() { ok(true); });
-    var handler = function(){ ok(false); };
-    view.delegate('click', 'h1', handler);
-    view.undelegate('click', 'h1', handler);
-    view.$('h1').trigger('click');
-    view.$el.trigger('click');
-  });
-
-  test("tagName can be provided as a string", 1, function() {
-    var View = Backbone.View.extend({
-      tagName: 'span'
-    });
-
-    equal(new View().el.tagName, 'SPAN');
-  });
-
-  test("tagName can be provided as a function", 1, function() {
-    var View = Backbone.View.extend({
-      tagName: function() {
-        return 'p';
-      }
-    });
-
-    ok(new View().$el.is('p'));
-  });
-
-  test("_ensureElement with DOM node el", 1, function() {
-    var View = Backbone.View.extend({
-      el: document.body
-    });
-
-    equal(new View().el, document.body);
-  });
-
-  test("_ensureElement with string el", 3, function() {
-    var View = Backbone.View.extend({
-      el: "body"
-    });
-    strictEqual(new View().el, document.body);
-
-    View = Backbone.View.extend({
-      el: "#testElement > h1"
-    });
-    strictEqual(new View().el, $("#testElement > h1").get(0));
-
-    View = Backbone.View.extend({
-      el: "#nonexistent"
-    });
-    ok(!new View().el);
-  });
-
-  test("with className and id functions", 2, function() {
-    var View = Backbone.View.extend({
-      className: function() {
-        return 'className';
-      },
-      id: function() {
-        return 'id';
-      }
-    });
-
-    strictEqual(new View().el.className, 'className');
-    strictEqual(new View().el.id, 'id');
-  });
-
-  test("with attributes", 2, function() {
-    var View = Backbone.View.extend({
-      attributes: {
-        id: 'id',
-        'class': 'class'
-      }
-    });
-
-    strictEqual(new View().el.className, 'class');
-    strictEqual(new View().el.id, 'id');
-  });
-
-  test("with attributes as a function", 1, function() {
-    var View = Backbone.View.extend({
-      attributes: function() {
-        return {'class': 'dynamic'};
-      }
-    });
-
-    strictEqual(new View().el.className, 'dynamic');
-  });
-
-  test("multiple views per element", 3, function() {
-    var count = 0;
-    var $el = $('<p></p>');
-
-    var View = Backbone.View.extend({
-      el: $el,
-      events: {
-        click: function() {
-          count++;
-        }
-      }
-    });
-
-    var view1 = new View;
-    $el.trigger("click");
-    equal(1, count);
-
-    var view2 = new View;
-    $el.trigger("click");
-    equal(3, count);
-
-    view1.delegateEvents();
-    $el.trigger("click");
-    equal(5, count);
-  });
-
-  test("custom events", 2, function() {
-    var View = Backbone.View.extend({
-      el: $('body'),
-      events: {
-        "fake$event": function() { ok(true); }
-      }
-    });
-
-    var view = new View;
-    $('body').trigger('fake$event').trigger('fake$event');
-
-    $('body').off('fake$event');
-    $('body').trigger('fake$event');
-  });
-
-  test("#1048 - setElement uses provided object.", 2, function() {
-    var $el = $('body');
-
-    var view = new Backbone.View({el: $el});
-    ok(view.$el === $el);
-
-    view.setElement($el = $($el));
-    ok(view.$el === $el);
-  });
-
-  test("#986 - Undelegate before changing element.", 1, function() {
-    var button1 = $('<button></button>');
-    var button2 = $('<button></button>');
-
-    var View = Backbone.View.extend({
-      events: {
-        click: function(e) {
-          ok(view.el === e.target);
-        }
-      }
-    });
-
-    var view = new View({el: button1});
-    view.setElement(button2);
-
-    button1.trigger('click');
-    button2.trigger('click');
-  });
-
-  test("#1172 - Clone attributes object", 2, function() {
-    var View = Backbone.View.extend({
-      attributes: {foo: 'bar'}
-    });
-
-    var view1 = new View({id: 'foo'});
-    strictEqual(view1.el.id, 'foo');
-
-    var view2 = new View();
-    ok(!view2.el.id);
-  });
-
-  test("views stopListening", 0, function() {
-    var View = Backbone.View.extend({
-      initialize: function() {
-        this.listenTo(this.model, 'all x', function(){ ok(false); });
-        this.listenTo(this.collection, 'all x', function(){ ok(false); });
-      }
-    });
-
-    var view = new View({
-      model: new Backbone.Model,
-      collection: new Backbone.Collection
-    });
-
-    view.stopListening();
-    view.model.trigger('x');
-    view.collection.trigger('x');
-  });
-
-  test("Provide function for el.", 2, function() {
-    var View = Backbone.View.extend({
-      el: function() {
-        return "<p><a></a></p>";
-      }
-    });
-
-    var view = new View;
-    ok(view.$el.is('p'));
-    ok(view.$el.has('a'));
-  });
-
-  test("events passed in options", 1, function() {
-    var counter = 0;
-
-    var View = Backbone.View.extend({
-      el: '#testElement',
-      increment: function() {
-        counter++;
-      }
-    });
-
-    var view = new View({
-      events: {
-        'click h1': 'increment'
-      }
-    });
-
-    view.$('h1').trigger('click').trigger('click');
-    equal(counter, 2);
-  });
-
-  test("remove", 2, function() {
-    var view = new Backbone.View;
-    document.body.appendChild(view.el);
-
-    view.delegate('click', function() { ok(false); });
-    view.listenTo(view, 'all x', function() { ok(false); });
-
-    equal(view.remove(), view, '#remove returns the view instance');
-    view.$el.trigger('click');
-    view.trigger('x');
-
-    // In IE8 and below, parentNode still exists but is not document.body.
-    notEqual(view.el.parentNode, document.body);
-  });
-
-  test("setElement", 3, function() {
-    var view = new Backbone.View({
-      events: {
-        click: function() { ok(false); }
-      }
-    });
-    view.events = {
-      click: function() { ok(true); }
-    };
-    var oldEl = view.el;
-    var $oldEl = view.$el;
-
-    view.setElement(document.createElement('div'));
-
-    $oldEl.click();
-    view.$el.click();
-
-    notEqual(oldEl, view.el);
-    notEqual($oldEl, view.$el);
-  });
-
-})();

--- app/webroot/js/vendor/lodash/vendor/benchmark.js/LICENSE.txt ---
@@ -1,22 +0,0 @@
-Copyright 2010-2015 Mathias Bynens <http://mathiasbynens.be/>
-Based on JSLitmus.js, copyright Robert Kieffer <http://broofa.com/>
-Modified by John-David Dalton <http://allyoucanleet.com/>
-
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files (the
-"Software"), to deal in the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish,
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions:
-
-The above copyright notice and this permission notice shall be
-included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

