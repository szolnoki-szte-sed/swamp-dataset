--- base/gsiorom.c ---
@@ -1,4 +1,4 @@
-/* Copyright (C) 2001-2024 Artifex Software, Inc.
+/* Copyright (C) 2001-2025 Artifex Software, Inc.
    All Rights Reserved.
 
    This software is provided AS-IS with no warranty, either express or
@@ -37,7 +37,14 @@
 #include "gxiodev.h"
 #include "stream.h"
 #include "stat_.h"
+
+#define MKROMFS_USE_BROTLI
+
+#ifdef MKROMFS_USE_BROTLI
+#include "brotli/decode.h"
+#else
 #include "zlib.h"
+#endif
 
 /* device method prototypes */
 static iodev_proc_init(romfs_init);
@@ -228,9 +235,19 @@ s_block_read_process(stream_state * st, stream_cursor_read * ignore_pr,
             }
         }
         /* Decompress the data into this block */
+#ifdef MKROMFS_USE_BROTLI
+        {
+            size_t zlen = buflen;
+            code = BrotliDecoderDecompress(block_length, block_data, &zlen, dest);
+            buflen = (unsigned long)zlen;
+        }
+        if (code != BROTLI_DECODER_RESULT_SUCCESS || count != buflen)
+            return ERRC;
+#else
         code = uncompress (dest, &buflen, block_data, block_length);
         if (code != Z_OK || count != buflen)
             return ERRC;
+#endif
         if (need_copy) {
             memcpy(pw->ptr+1, dest, max_count);
             count = max_count;

--- base/lib.mak ---
@@ -3611,13 +3611,13 @@ $(GLOBJ)gsiorom_1.$(OBJ) : $(GLSRC)gsiorom.c $(gsiorom_h) \
  $(std_h) $(gx_h) $(gserrors_h) $(gsstruct_h) $(gxiodev_h) $(stat__h)\
  $(gpcheck_h) $(gsutil_h) $(stdint__h) $(stream_h) $(string__h) \
  $(LIB_MAK) $(MAKEDIRS)
-	$(GLCC) $(GLO_)gsiorom_1.$(OBJ) $(I_)$(ZI_)$(_I) $(C_) $(GLSRC)gsiorom.c
+	$(GLCC) $(GLO_)gsiorom_1.$(OBJ) $(I_)$(BROTLII_)$(_I) $(I_)$(ZI_)$(_I) $(C_) $(GLSRC)gsiorom.c
 
 $(GLOBJ)gsiorom_0.$(OBJ) : $(GLSRC)gsiorom.c $(gsiorom_h) \
  $(std_h) $(gx_h) $(gserrors_h) $(gsstruct_h) $(gxiodev_h) $(stat__h)\
  $(gpcheck_h) $(gsutil_h) $(stdint__h) $(stream_h) $(string__h) $(zlib_h)\
- $(LIB_MAK) $(MAKEDIRS)
-	$(GLCC) $(GLO_)gsiorom_0.$(OBJ) $(I_)$(ZI_)$(_I) $(C_) $(GLSRC)gsiorom.c
+ $(brotli_h) $(LIB_MAK) $(MAKEDIRS)
+	$(GLCC) $(GLO_)gsiorom_0.$(OBJ) $(I_)$(BROTLII_)$(_I) $(I_)$(ZI_)$(_I) $(C_) $(GLSRC)gsiorom.c
 
 $(GLOBJ)gsiorom.$(OBJ) : $(GLOBJ)gsiorom_$(SHARE_ZLIB).$(OBJ) $(LIB_MAK) $(MAKEDIRS)
 	$(CP_) $(GLOBJ)gsiorom_$(SHARE_ZLIB).$(OBJ) $(GLOBJ)gsiorom.$(OBJ)

--- base/mkromfs.c ---
@@ -1,4 +1,4 @@
-/* Copyright (C) 2001-2023 Artifex Software, Inc.
+/* Copyright (C) 2001-2025 Artifex Software, Inc.
    All Rights Reserved.
 
    This software is provided AS-IS with no warranty, either express or
@@ -84,7 +84,13 @@
 #include <ctype.h>
 #include <memory.h>
 
+#define MKROMFS_USE_BROTLI
+
+#ifdef MKROMFS_USE_BROTLI
+#include "brotli/encode.h"
+#else
 #include <zlib.h>
+#endif
 
 int gs_log_error(int err, const char *file, int line);
 /* Prototype to placate compiler */
@@ -1840,11 +1846,23 @@ void process_path(char *path, const char *os_prefix, const char *rom_prefix,
             clen = ROMFS_CBUFSIZE;
             if (compression) {
                 /* compress data here */
+#ifdef MKROMFS_USE_BROTLI
+                size_t zclen = clen;
+		printf("%d %d\n", (int)ulen, (int)clen);
+                ret = BrotliEncoderCompress(BROTLI_MAX_QUALITY, BROTLI_DEFAULT_WINDOW, BROTLI_MODE_GENERIC, ulen, ubuf, &zclen, cbuf);
+		printf("%d\n", (int)zclen);
+                if (ret != BROTLI_TRUE) {
+                    printf("error compressing data block!\n");
+                    exit(1);
+                }
+                clen = (unsigned long)zclen;
+#else
                 ret = compress(cbuf, &clen, ubuf, ulen);
                 if (ret != Z_OK) {
                     printf("error compressing data block!\n");
                     exit(1);
                 }
+#endif
             } else {
                 memcpy(cbuf, ubuf, ulen);
                 clen = ulen;
@@ -2063,13 +2081,23 @@ process_initfile(char *initfile, char *gconfig_h, const char *os_prefix,
 
         clen = ROMFS_CBUFSIZE;
         if (compression) {
+#ifdef MKROMFS_USE_BROTLI
+            size_t zclen = clen;
+            ret = BrotliEncoderCompress(BROTLI_MAX_QUALITY, BROTLI_DEFAULT_WINDOW, BROTLI_MODE_GENERIC, block_len, in_block->data, &zclen, cbuf);
+            if (ret != BROTLI_TRUE) {
+                printf("error compressing data block!\n");
+                exit(1);
+            }
+            clen = (unsigned long)zclen;
+#else
             /* compress data here */
             ret = compress(cbuf, &clen, in_block->data, block_len);
             if (ret != Z_OK) {
                 printf("error compressing data block!\n");
                 code = -1;
                 goto done;
             }
+#endif
         } else {
             memcpy(cbuf, in_block->data, block_len);
             clen = block_len;

--- base/msvctail.mak ---
@@ -1,4 +1,4 @@
-# Copyright (C) 2001-2023 Artifex Software, Inc.
+# Copyright (C) 2001-2025 Artifex Software, Inc.
 # All Rights Reserved.
 #
 # This software is provided AS-IS with no warranty, either express or
@@ -62,9 +62,9 @@ $(GENHT_XE): $(GLSRC)genht.c $(GLGENDIR)\ccf32.tr $(GENHT_DEPS) $(MSVCTAIL_MAK)
 
 MKROMFS_OBJS=$(MKROMFS_ZLIB_OBJS) $(AUX)gp_ntfs.$(OBJ) $(AUX)gp_win32.$(OBJ) $(AUX)gpmisc.$(OBJ)\
 	    $(AUX)gp_getnv.$(OBJ) $(AUX)gp_utf8.$(OBJ) $(AUX)gp_winfs.$(OBJ)\
-	    $(AUX)gp_winfs2.$(OBJ)
+	    $(AUX)gp_winfs2.$(OBJ) $(MKROMFS_BROTLI_OBJS)
 $(MKROMFS_XE): $(GLSRC)mkromfs.c $(GLGENDIR)\ccf32.tr $(MKROMFS_COMMON_DEPS) $(MKROMFS_OBJS) $(MSVCTAIL_MAK)
-	$(CCAUX_) -I$(GLOBJ) -I$(ZSRCDIR) $(GLSRC)mkromfs.c /Fo$(AUX)mkromfs.obj /Fe$(MKROMFS_XE) $(MKROMFS_OBJS) $(CCAUX_TAIL)
+	$(CCAUX_) -I$(GLOBJ) -I$(BROTLISRCDIR)$(D)c$(D)include -I$(ZSRCDIR) $(GLSRC)mkromfs.c /Fo$(AUX)mkromfs.obj /Fe$(MKROMFS_XE) $(MKROMFS_OBJS) $(CCAUX_TAIL)
 
 $(PACKPS_XE): $(GLSRC)pack_ps.c $(GLSRC)stdpre.h $(MSVCTAIL_MAK)
 	$(CCAUX_) -I$(GLOBJ) -I$(ZSRCDIR) $(GLSRC)pack_ps.c /Fo$(AUX)pack_ps.obj /Fe$(PACKPS_XE) $(CCAUX_TAIL)

--- base/unix-aux.mak ---
@@ -1,4 +1,4 @@
-# Copyright (C) 2001-2024 Artifex Software, Inc.
+# Copyright (C) 2001-2025 Artifex Software, Inc.
 # All Rights Reserved.
 #
 # This software is provided AS-IS with no warranty, either express or
@@ -79,12 +79,12 @@ $(GENHT_XE): $(GLSRC)genht.c $(AK) $(GENHT_DEPS) $(UNIX_AUX_MAK) $(MAKEDIRS)
 # To get GS to use the system zlib, you remove/hide the gs/zlib directory
 # which means that the mkromfs build can't find the zlib source it needs.
 # So it's split into two targets, one using the zlib source directly.....
-MKROMFS_OBJS_0=$(MKROMFS_ZLIB_OBJS) $(AUX)gpmisc.$(OBJ) $(AUX)gp_getnv.$(OBJ) \
+MKROMFS_OBJS_0=$(MKROMFS_ZLIB_OBJS) $(MKROMFS_BROTLI_OBJS) $(AUX)gpmisc.$(OBJ) $(AUX)gp_getnv.$(OBJ) \
  $(AUX)gscdefs.$(OBJ) $(AUX)gp_unix.$(OBJ) $(AUX)gp_unifs.$(OBJ) $(AUX)gp_unifn.$(OBJ) \
  $(AUX)gp_stdib.$(OBJ) $(AUX)gsutil.$(OBJ) $(AUX)memento.$(OBJ)
 
 $(MKROMFS_XE)_0: $(GLSRC)mkromfs.c $(MKROMFS_COMMON_DEPS) $(MKROMFS_OBJS_0) $(UNIX_AUX_MAK) $(MAKEDIRS)
-	$(CCAUX_) $(GENOPTAUX) $(I_)$(GLSRCDIR)$(_I) $(I_)$(GLOBJ)$(_I) $(I_)$(ZSRCDIR)$(_I) $(GLSRC)mkromfs.c $(O_)$(MKROMFS_XE)_0 $(MKROMFS_OBJS_0) $(AUXEXTRALIBS)
+	$(CCAUX_) $(GENOPTAUX) $(I_)$(GLSRCDIR)$(_I) $(I_)$(GLOBJ)$(_I) $(I_)$(ZSRCDIR)$(_I) $(I_)$(BROTLISRCDIR)$(D)c$(D)include$(_I) $(GLSRC)mkromfs.c $(O_)$(MKROMFS_XE)_0 $(MKROMFS_OBJS_0) $(AUXEXTRALIBS)
 
 # .... and one using the zlib library linked via the command line
 MKROMFS_OBJS_1=$(AUX)gscdefs.$(OBJ) \
@@ -93,7 +93,7 @@ MKROMFS_OBJS_1=$(AUX)gscdefs.$(OBJ) \
  $(AUX)gp_stdib.$(OBJ) $(AUX)gsutil.$(OBJ)
 
 $(MKROMFS_XE)_1: $(GLSRC)mkromfs.c $(MKROMFS_COMMON_DEPS) $(MKROMFS_OBJS_1) $(UNIX_AUX_MAK) $(MAKEDIRS)
-	$(CCAUX_) $(GENOPTAUX) $(I_)$(GLSRCDIR)$(_I) $(I_)$(GLOBJ)$(_I) $(I_)$(ZSRCDIR)$(_I) $(GLSRC)mkromfs.c $(O_)$(MKROMFS_XE)_1 $(MKROMFS_OBJS_1) $(AUXEXTRALIBS)
+	$(CCAUX_) $(GENOPTAUX) $(I_)$(GLSRCDIR)$(_I) $(I_)$(GLOBJ)$(_I) $(I_)$(BROTLISRCDIR)$(D)c$(D)include$(_I) $(I_)$(ZSRCDIR)$(_I) $(GLSRC)mkromfs.c $(O_)$(MKROMFS_XE)_1 $(MKROMFS_OBJS_1) $(AUXEXTRALIBS)
 
 $(MKROMFS_XE): $(MKROMFS_XE)_$(SHARE_ZLIB) $(UNIX_AUX_MAK) $(MAKEDIRS)
 	$(CP_) $(MKROMFS_XE)_$(SHARE_ZLIB) $(MKROMFS_XE)

--- psi/os2.mak ---
@@ -1,4 +1,4 @@
-#  Copyright (C) 2001-2023 Artifex Software, Inc.
+#  Copyright (C) 2001-2025 Artifex Software, Inc.
 #  All Rights Reserved.
 #
 #  This software is provided AS-IS with no warranty, either express or
@@ -547,10 +547,10 @@ $(GENHT_XE): $(PSSRC)genht.c $(GENHT_DEPS)
 	$(CCAUX) /Fe$(GENHT_XE) genht.c
 !endif
 
-MKROMFS_OBJS=$(MKROMFS_ZLIB_OBJS) $(GLOBJ)gscdefs.$(OBJ) $(GLOBJ)gpmisc.$(OBJ) $(GLOBJ)gp_getnv.obj $(GLOBJ)gp_os2fs.obj
+MKROMFS_OBJS=$(MKROMFS_ZLIB_OBJS) $(MKROMFS_BROTLI_OBJS) $(GLOBJ)gscdefs.$(OBJ) $(GLOBJ)gpmisc.$(OBJ) $(GLOBJ)gp_getnv.obj $(GLOBJ)gp_os2fs.obj
 $(MKROMFS_XE): $(GLSRC)mkromfs.c $(MKROMFS_COMMON_DEPS) $(MKROMFS_OBJS)
 !if $(EMX)
-	$(CCAUX) -o $(AUXGEN)mkromfs.exe -D__OS2__ $(CD) $(CEXESYS) $(CO) $(CPNG) -I$(GLOBJ) -I$(GLSRCDIR) -I$(ZSRCDIR) $(GLSRC)mkromfs.c $(MKROMFS_OBJS)
+	$(CCAUX) -o $(AUXGEN)mkromfs.exe -D__OS2__ $(CD) $(CEXESYS) $(CO) $(CPNG) -I$(GLOBJ) -I$(GLSRCDIR) -I$(ZSRCDIR) -I$(BROTLISRCDIR)$(D)c$(D)include $(GLSRC)mkromfs.c $(MKROMFS_OBJS)
 !endif
 !if $(IBMCPP)
 	$(CCAUX) /Fe$(MKROMFS_XE) mkromfs.c

