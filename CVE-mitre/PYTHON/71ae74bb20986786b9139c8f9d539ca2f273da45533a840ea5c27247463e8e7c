--- saleor/graphql/account/mutations/account.py ---
@@ -388,7 +388,7 @@ class Meta:
 
     @classmethod
     def perform_mutation(cls, _root, info, **data):
-        address = cls.get_node_or_error(info, data.get("id"), Address)
+        address = cls.get_node_or_error(info, data.get("id"), only_type=Address)
         user = info.context.user
 
         if not user.addresses.filter(pk=address.pk).exists():

--- saleor/graphql/account/mutations/base.py ---
@@ -369,7 +369,7 @@ def perform_mutation(cls, _root, info, **data):
             raise PermissionDenied()
 
         node_id = data.get("id")
-        instance = cls.get_node_or_error(info, node_id, Address)
+        instance = cls.get_node_or_error(info, node_id, only_type=Address)
         if instance:
             cls.clean_instance(info, instance)
 

--- saleor/graphql/menu/mutations.py ---
@@ -514,7 +514,7 @@ class Meta:
     def perform_mutation(cls, _root, info, navigation_type, menu=None):
         site = load_site(info.context)
         if menu is not None:
-            menu = cls.get_node_or_error(info, menu, field="menu")
+            menu = cls.get_node_or_error(info, menu, field="menu", only_type=Menu)
 
         if navigation_type == NavigationType.MAIN:
             site.settings.top_menu = menu

--- saleor/graphql/product/bulk_mutations/products.py ---
@@ -547,7 +547,7 @@ def create_variant_stocks(cls, variant, cleaned_input):
     @classmethod
     @traced_atomic_transaction()
     def perform_mutation(cls, _root, info, **data):
-        product = cls.get_node_or_error(info, data["product_id"], models.Product)
+        product = cls.get_node_or_error(info, data["product_id"], only_type="Product")
         errors = defaultdict(list)
 
         cleaned_inputs = cls.clean_variants(info, data["variants"], product, errors)

