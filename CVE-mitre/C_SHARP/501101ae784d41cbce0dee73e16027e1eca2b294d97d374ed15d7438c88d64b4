--- Components/CommonController.cs ---
@@ -406,11 +406,11 @@ public static string DoImport(PortalSettings objPortalSettings, string LocalReso
 									objPPD.PropertyCategory = "Imported";
 									objPPD.DataType = 349;
 									DotNetNuke.Entities.Profile.ProfileController.AddPropertyDefinition(objPPD);
-									objUser.Profile.SetProfileProperty(dc.ColumnName, string.Format("{0}", dr[dc.ColumnName]));
+									objUser.Profile.SetProfileProperty(dc.ColumnName, RemoveNewLine(string.Format("{0}", dr[dc.ColumnName])));
 								}
 								else
 								{
-									objUser.Profile.SetProfileProperty(dc.ColumnName, string.Format("{0}", dr[dc.ColumnName]));
+									objUser.Profile.SetProfileProperty(dc.ColumnName, RemoveNewLine(string.Format("{0}", dr[dc.ColumnName])));
 								}
 							}
 						}
@@ -473,7 +473,12 @@ public static string DoImport(PortalSettings objPortalSettings, string LocalReso
 				FailedUsers.ToString());
 		}
 
-		private static string UpdateRoles(UserInfo objCurrentUser,
+        private static string RemoveNewLine(string Source)
+        {
+            return Source.Replace("\r", "").Replace("\n", "");
+        }
+
+        private static string UpdateRoles(UserInfo objCurrentUser,
 			PortalSettings objPortalSettings,
 			UserInfo objUser,
 			DataRow dr,

--- Components/ExportController.cs ---
@@ -31,6 +31,7 @@ SELECT	DISTINCT CAST(l.EntryID AS int) EntryID, [Value]
 FROM	{databaseOwner}{objectQualifier}ProfilePropertyDefinition ppd
 		LEFT JOIN {databaseOwner}{objectQualifier}Lists l ON (ppd.DataType=l.EntryID) AND (l.ListName='DataType')
 WHERE	ppd.PortalID=0
+		AND ppd.Deleted=0
 		AND (l.Value in (SELECT DISTINCT ListName FROM {databaseOwner}{objectQualifier}Lists WHERE (ListName<>'DataType')))
 ";
 				idr = DotNetNuke.Data.DataProvider.Instance().ExecuteSQL(sqlProfilePropertiesList);

--- Install/_UsersExportImport.dnn ---
@@ -1,6 +1,6 @@
 ï»¿<dotnetnuke type="Package" version="5.0">
   <packages>
-    <package name="forDNN.UsersExportImport" type="Module" version="1.2.8">
+    <package name="forDNN.UsersExportImport" type="Module" version="1.2.9">
       <friendlyName>forDNN.UsersExportImport</friendlyName>
       <description>This module allows to export/import users, user profiles properties and roles to DNN (former DotNetNuke) from CSV/XML files. This is simple and fast way to create your users accounts in one click.</description>
       <owner>
@@ -10,7 +10,7 @@
         <email>support@forDNN.com</email>
       </owner>
       <license>
-        Copyright (c) 2020, forDNN Team&lt;br/&gt;
+        Copyright (c) 2024, forDNN Team&lt;br/&gt;
         All rights reserved.&lt;br/&gt;
         &lt;br/&gt;
         Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;br/&gt;
@@ -25,6 +25,11 @@
       </license>
       <releaseNotes>
         <![CDATA[
+<b>Version 1.2.9:</b><br />
+Fixed an issue with exporting deleted User Profile Properties (https://github.com/fordnn/usersexportimport/issues/18)<br />
+Fixed an issue with importing "PreferredLocale" from CSV file (https://github.com/fordnn/usersexportimport/issues/17)<br />
+Tested with DotNetNuke version 9.13.2<br />
+
 <b>Version 1.2.8:</b><br />
 Fixed an issue with multiple fields with the same types "List" instead of numeric values (for example "Country", "Country2", "Region")<br />
 

--- MainControl.ascx.cs ---
@@ -28,17 +28,26 @@ namespace forDNN.Modules.UsersExportImport
 	partial class MainControl : PortalModuleBase, IActionable
 	{
 
-		#region "Event Handlers"
+        #region "Event Handlers"
+
+        private void FillProperties()
+        {
+            ProfilePropertyDefinitionCollection lst = new ProfilePropertyDefinitionCollection();
+            foreach (ProfilePropertyDefinition ppd in ProfileController.GetPropertyDefinitionsByPortal(this.PortalId))
+            {
+                if (ppd.Deleted) continue;
+                lst.Add(ppd);
+            }
+
+            cblPropertiesToExport.DataSource = lst;
+            cblPropertiesToExport.DataTextField = "PropertyName";
+            cblPropertiesToExport.DataValueField = "PropertyDefinitionId";
+            cblPropertiesToExport.DataBind();
+        }
+
 
-		private void FillProperties()
-		{
-			cblPropertiesToExport.DataSource = ProfileController.GetPropertyDefinitionsByPortal(this.PortalId);
-			cblPropertiesToExport.DataTextField = "PropertyName";
-			cblPropertiesToExport.DataValueField = "PropertyDefinitionId";
-			cblPropertiesToExport.DataBind();
-		}
 
-		private void ExtraPageLoad()
+        private void ExtraPageLoad()
 		{
 			lblIcon.Visible = true;
 			lblIcon.Style["display"] = "block";

--- Properties/AssemblyInfo.cs ---
@@ -10,7 +10,7 @@
 [assembly: AssemblyConfiguration("")]
 [assembly: AssemblyCompany("forDNN")]
 [assembly: AssemblyProduct("Users Export/Import for DNN (former DotNetNuke)")]
-[assembly: AssemblyCopyright("(c) forDNN 2003-2020")]
+[assembly: AssemblyCopyright("(c) forDNN 2003-2024")]
 [assembly: AssemblyTrademark("")]
 [assembly: GuidAttribute("a9a2f906-2bbe-44fa-9c6d-4c3137d872a8")]
 
@@ -29,4 +29,4 @@
 //
 // You can specify all the values or you can default the Revision and Build Numbers 
 // by using the '*' as shown below:
-[assembly: AssemblyVersion("1.2.8.*")]
+[assembly: AssemblyVersion("1.2.9.*")]

