--- CHANGELOG.md ---
@@ -1,3 +1,12 @@
+# v1.10.11
+## 04/13/2021
+
+1. [](#bugfix)
+    * **IMPORTANT** Fixed security vulnerability that allows installation of plugins with minimal admin privileges (GHSA-wg37-cf5x-55hq)[https://github.com/getgrav/grav-plugin-admin/security/advisories/GHSA-wg37-cf5x-55hq]
+    * Fixed `You have been logged out` message when entering to 2FA authentication due to `/admin/task:getNotifications` AJAX call
+    * Fixed broken 2FA login when site is not configured to use Flex Users [#2109](https://github.com/getgrav/grav-plugin-admin/issues/2109)
+    * Fixed error message when user clicks logout link after the session has been expired
+
 # v1.10.10
 ## 04/07/2021
 

--- blueprints.yaml ---
@@ -1,7 +1,7 @@
 name: Admin Panel
 slug: admin
 type: plugin
-version: 1.10.10
+version: 1.10.11
 description: Adds an advanced administration panel to manage your site
 icon: empire
 author:

--- classes/plugin/AdminBaseController.php ---
@@ -105,10 +105,17 @@ class AdminBaseController
      */
     public function execute()
     {
+        // Ignore blacklisted views.
         if (in_array($this->view, $this->blacklist_views, true)) {
             return false;
         }
 
+        // Make sure that user is logged into admin.
+        if (!$this->admin->authorize()) {
+            return false;
+        }
+
+        // Always validate nonce.
         if (!$this->validateNonce()) {
             return false;
         }
@@ -222,6 +229,7 @@ protected function validateNonce()
      *
      * @param string $path The path to redirect to
      * @param int    $code The HTTP redirect code
+     * @return void
      */
     public function setRedirect($path, $code = 303)
     {
@@ -234,6 +242,7 @@ public function setRedirect($path, $code = 303)
      *
      * @param array $json
      * @param int $code
+     * @return never-return
      */
     protected function sendJsonResponse(array $json, $code = 200): void
     {
@@ -245,6 +254,7 @@ protected function sendJsonResponse(array $json, $code = 200): void
 
     /**
      * @param ResponseInterface $response
+     * @return never-return
      */
     protected function close(ResponseInterface $response): void
     {
@@ -259,7 +269,7 @@ protected function close(ResponseInterface $response): void
      */
     public function taskFilesUpload()
     {
-        if (null === $_FILES || !$this->authorizeTask('save', $this->dataPermissions())) {
+        if (null === $_FILES || !$this->authorizeTask('upload file', $this->dataPermissions())) {
             return false;
         }
 
@@ -597,7 +607,7 @@ protected function normalizeFiles($data, $key = '')
      */
     public function taskFilesSessionRemove()
     {
-        if (!$this->authorizeTask('save', $this->dataPermissions())) {
+        if (!$this->authorizeTask('delete file', $this->dataPermissions())) {
             return false;
         }
 
@@ -654,6 +664,8 @@ public function taskFilesSessionRemove()
      * Redirect to the route stored in $this->redirect
      *
      * Route may or may not be prefixed by /en or /admin or /en/admin.
+     *
+     * @return void
      */
     public function redirect()
     {
@@ -706,6 +718,10 @@ protected function jsonDecode(array $data)
         return $data;
     }
 
+    /**
+     * @param array $source
+     * @return array
+     */
     protected function cleanDataKeys($source = [])
     {
         $out = [];
@@ -786,10 +802,12 @@ protected function storeFiles($obj)
 
     /**
      * Used by the filepicker field to get a list of files in a folder.
+     *
+     * @return bool
      */
     protected function taskGetFilesInFolder()
     {
-        if (!$this->authorizeTask('save', $this->dataPermissions())) {
+        if (!$this->authorizeTask('get files', $this->dataPermissions())) {
             return false;
         }
 
@@ -903,6 +921,11 @@ protected function taskGetFilesInFolder()
         return true;
     }
 
+    /**
+     * @param string $file
+     * @param array $settings
+     * @return false
+     */
     protected function filterAcceptedFiles($file, $settings)
     {
         $valid = false;
@@ -922,6 +945,10 @@ protected function filterAcceptedFiles($file, $settings)
      */
     protected function taskRemoveFileFromBlueprint()
     {
+        if (!$this->authorizeTask('remove file', $this->dataPermissions())) {
+            return false;
+        }
+
         /** @var Uri $uri */
         $uri       = $this->grav['uri'];
         $blueprint = base64_decode($uri->param('blueprint'));
@@ -1049,6 +1076,8 @@ protected function taskRemoveFileFromBlueprint()
     /**
      * Handles removing a media file
      *
+     * @note This task cannot be used anymore.
+     *
      * @return bool True if the action was performed
      */
     public function taskRemoveMedia($filename = null)

--- classes/plugin/AdminController.php ---
@@ -37,7 +37,6 @@
 use RocketTheme\Toolbox\ResourceLocator\UniformResourceLocator;
 use Twig\Loader\FilesystemLoader;
 
-
 /**
  * Class AdminController
  *
@@ -51,6 +50,7 @@ class AdminController extends AdminBaseController
      * @param string|null $task
      * @param string|null $route
      * @param array|null $post
+     * @return void
      */
     public function initialize(Grav $grav = null, $view = null, $task = null, $route = null, $post = null)
     {
@@ -80,6 +80,7 @@ public function initialize(Grav $grav = null, $view = null, $task = null, $route
      */
     protected function taskKeepAlive(): void
     {
+        // This task is available for all admin users.
         $response = new Response(200);
 
         $this->close($response);
@@ -92,7 +93,7 @@ protected function taskKeepAlive(): void
      */
     protected function taskClearCache()
     {
-        if (!$this->authorizeTask('clear cache', ['admin.cache', 'admin.super', 'admin.maintenance'])) {
+        if (!$this->authorizeTask('clear cache', ['admin.cache', 'admin.maintenance', 'admin.super'])) {
             return false;
         }
 
@@ -144,8 +145,10 @@ public function taskSave()
 
         switch ($this->view) {
             case 'pages':
+                // Not used if Flex-Objects plugin handles pages.
                 return $this->savePage();
             case 'user':
+                // Not used if Flex-Objects plugin handles users.
                 return $this->saveUser();
             default:
                 return $this->saveDefault();
@@ -204,21 +207,19 @@ protected function saveDefault()
      */
     protected function taskLogout()
     {
-        if (!$this->authorizeTask('logout', ['admin.login'])) {
+        if (!$this->authorizeTask('logout', ['admin.login', 'admin.super'])) {
             return false;
         }
 
         $this->admin->logout($this->data, $this->post);
-
-        return true;
     }
 
     /**
      * @return bool
      */
     public function taskRegenerate2FASecret()
     {
-        if (!$this->authorizeTask('regenerate 2FA Secret', ['admin.login'])) {
+        if (!$this->authorizeTask('regenerate 2FA Secret', ['admin.login', 'admin.super'])) {
             return false;
         }
 
@@ -265,6 +266,8 @@ public function taskRegenerate2FASecret()
      *
      * Called by more general save task.
      *
+     * @note Not used if Flex-Objects plugin handles users.
+     *
      * @return bool
      */
     protected function saveUser()
@@ -330,7 +333,7 @@ protected function saveUser()
     /**
      * Get Notifications
      *
-     * @return void
+     * @return never-return
      */
     protected function taskGetNotifications(): void
     {
@@ -377,7 +380,7 @@ protected function taskGetNotifications(): void
      */
     protected function taskHideNotification()
     {
-        if (!$this->authorizeTask('hide notification', ['admin.login'])) {
+        if (!$this->authorizeTask('hide notification', ['admin.login', 'admin.super'])) {
             return false;
         }
 
@@ -409,7 +412,7 @@ protected function taskHideNotification()
     /**
      * Get Newsfeeds
      *
-     * @return void
+     * @return never-return
      */
     protected function taskGetNewsFeed(): void
     {
@@ -447,11 +450,11 @@ protected function taskGetNewsFeed(): void
      */
     protected function taskBackup()
     {
-        $param_sep = $this->grav['config']->get('system.param_sep', ':');
         if (!$this->authorizeTask('backup', ['admin.maintenance', 'admin.super'])) {
             return false;
         }
 
+        $param_sep = $this->grav['config']->get('system.param_sep', ':');
         $download = $this->grav['uri']->param('download');
 
         try {
@@ -549,11 +552,11 @@ protected function taskBackupDelete()
      */
     public function taskEnable()
     {
-        if (!$this->authorizeTask('enable plugin', ['admin.plugins', 'admin.super'])) {
+        if ($this->view !== 'plugins') {
             return false;
         }
 
-        if ($this->view !== 'plugins') {
+        if (!$this->authorizeTask('enable plugin', ['admin.plugins', 'admin.super'])) {
             return false;
         }
 
@@ -579,11 +582,11 @@ public function taskEnable()
      */
     public function taskDisable()
     {
-        if (!$this->authorizeTask('disable plugin', ['admin.plugins', 'admin.super'])) {
+        if ($this->view !== 'plugins') {
             return false;
         }
 
-        if ($this->view !== 'plugins') {
+        if (!$this->authorizeTask('disable plugin', ['admin.plugins', 'admin.super'])) {
             return false;
         }
 
@@ -609,11 +612,11 @@ public function taskDisable()
      */
     public function taskActivate()
     {
-        if (!$this->authorizeTask('activate theme', ['admin.themes', 'admin.super'])) {
+        if ($this->view !== 'themes') {
             return false;
         }
 
-        if ($this->view !== 'themes') {
+        if (!$this->authorizeTask('activate theme', ['admin.themes', 'admin.super'])) {
             return false;
         }
 
@@ -676,8 +679,6 @@ public function taskUpdategrav()
         }
 
         $this->sendJsonResponse($json_response);
-
-        return true;
     }
 
     /**
@@ -692,7 +693,11 @@ public function taskUpdategrav()
      */
     public function taskUninstall()
     {
-        $type = $this->view === 'plugins' ? 'plugins' : 'themes';
+        $type = $this->view;
+        if ($type !== 'plugins' && $type !== 'themes') {
+            return false;
+        }
+
         if (!$this->authorizeTask('uninstall ' . $type, ['admin.' . $type, 'admin.super'])) {
             return false;
         }
@@ -719,7 +724,7 @@ public function taskUninstall()
      */
     protected function taskGpmRelease()
     {
-        if (!$this->authorizeTask('configuration', ['admin.configuration.system', 'admin.super'])) {
+        if (!$this->authorizeTask('configuration', ['admin.super'])) {
             return false;
         }
 
@@ -762,7 +767,11 @@ protected function taskGpmRelease()
      */
     protected function taskGetUpdates()
     {
-        if (!$this->authorizeTask('dashboard', ['admin.login', 'admin.super'])) {
+        if ($this->view !== 'update') {
+            return false;
+        }
+
+        if (!$this->authorizeTask('dashboard', ['admin.plugins', 'admin.themes', 'admin.super'])) {
             return false;
         }
 
@@ -832,6 +841,10 @@ protected function taskGetUpdates()
      */
     protected function taskGetPackagesDependencies()
     {
+        if (!$this->authorizeTask('dashboard', ['admin.plugins', 'admin.themes', 'admin.super'])) {
+            return false;
+        }
+
         $data     = $this->post;
         $packages = isset($data['packages']) ? explode(',', $data['packages']) : '';
         $packages = (array)$packages;
@@ -859,11 +872,11 @@ protected function taskGetPackagesDependencies()
      */
     protected function taskInstallDependenciesOfPackages()
     {
-        $data     = $this->post;
-        $packages = isset($data['packages']) ? explode(',', $data['packages']) : '';
-        $packages = (array)$packages;
-
+        $data = $this->post;
         $type = $data['type'] ?? '';
+        if ($type !== 'plugins' && $type !== 'themes') {
+            return false;
+        }
 
         if (!$this->authorizeTask('install ' . $type, ['admin.' . $type, 'admin.super'])) {
             $this->admin->json_response = [
@@ -874,6 +887,9 @@ protected function taskInstallDependenciesOfPackages()
             return false;
         }
 
+        $packages = isset($data['packages']) ? explode(',', $data['packages']) : '';
+        $packages = (array)$packages;
+
         try {
             $dependencies = $this->admin->getDependenciesNeededToInstall($packages);
         } catch (\Exception $e) {
@@ -906,9 +922,11 @@ protected function taskInstallDependenciesOfPackages()
      */
     protected function taskInstallPackage($reinstall = false)
     {
-        $data    = $this->post;
-        $package = $data['package'] ?? '';
-        $type    = $data['type'] ?? '';
+        $data = $this->post;
+        $type = $data['type'] ?? '';
+        if ($type !== 'plugins' && $type !== 'themes') {
+            return false;
+        }
 
         if (!$this->authorizeTask('install ' . $type, ['admin.' . $type, 'admin.super'])) {
             $this->admin->json_response = [
@@ -919,6 +937,7 @@ protected function taskInstallPackage($reinstall = false)
             return false;
         }
 
+        $package = $data['package'] ?? '';
         try {
             $result = Gpm::install($package, ['theme' => $type === 'theme']);
         } catch (\Exception $e) {
@@ -954,14 +973,15 @@ protected function taskInstallPackage($reinstall = false)
     /**
      * Handle removing a package
      *
-     * @return void
+     * @return bool
      */
-    protected function taskRemovePackage(): void
+    protected function taskRemovePackage(): bool
     {
         $data    = $this->post;
-        $package = $data['package'] ?? '';
         $type    = $data['type'] ?? '';
-        $result = false;
+        if ($type !== 'plugins' && $type !== 'themes') {
+            return false;
+        }
 
         if (!$this->authorizeTask('uninstall ' . $type, ['admin.' . $type, 'admin.super'])) {
             $json_response = [
@@ -972,6 +992,9 @@ protected function taskRemovePackage(): void
             $this->sendJsonResponse($json_response, 403);
         }
 
+        $package = $data['package'] ?? '';
+        $result = false;
+
         //check if there are packages that have this as a dependency. Abort and show which ones
         $dependent_packages = $this->admin->getPackagesThatDependOnPackage($package);
         if (count($dependent_packages) > 0) {
@@ -1023,16 +1046,15 @@ protected function taskRemovePackage(): void
     /**
      * Handle reinstalling a package
      *
-     * @return void
+     * @return bool
      */
     protected function taskReinstallPackage()
     {
         $data = $this->post;
-
-        $slug            = $data['slug'] ?? '';
-        $type            = $data['type'] ?? '';
-        $package_name    = $data['package_name'] ?? '';
-        $current_version = $data['current_version'] ?? '';
+        $type = $data['type'] ?? '';
+        if ($type !== 'plugins' && $type !== 'themes') {
+            return false;
+        }
 
         if (!$this->authorizeTask('install ' . $type, ['admin.' . $type, 'admin.super'])) {
             $json_response = [
@@ -1043,6 +1065,10 @@ protected function taskReinstallPackage()
             $this->sendJsonResponse($json_response, 403);
         }
 
+        $slug            = $data['slug'] ?? '';
+        $package_name    = $data['package_name'] ?? '';
+        $current_version = $data['current_version'] ?? '';
+
         $url = "https://getgrav.org/download/{$type}s/$slug/$current_version";
 
         $result = Gpm::directInstall($url);
@@ -1059,6 +1085,8 @@ protected function taskReinstallPackage()
                 'message' => $this->admin::translate('PLUGIN_ADMIN.REINSTALLATION_FAILED')
             ];
         }
+
+        return true;
     }
 
     /**
@@ -1129,11 +1157,19 @@ protected function taskDirectInstall()
     /**
      * Handles creating an empty page folder (without markdown file)
      *
+     * Route: /pages
+     *
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool True if the action was performed.
      */
     public function taskSaveNewFolder()
     {
-        if (!$this->authorizeTask('save', $this->dataPermissions())) {
+        if ($this->view !== 'pages') {
+            return false;
+        }
+
+        if (!$this->authorizeTask('new folder', ['admin.pages', 'admin.super'])) {
             return false;
         }
 
@@ -1172,6 +1208,8 @@ public function taskSaveNewFolder()
     }
 
     /**
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool
      */
     protected function savePage()
@@ -1314,17 +1352,18 @@ protected function savePage()
      *
      * Route: /pages
      *
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool True if the action was performed.
      * @throws \RuntimeException
      */
     protected function taskCopy()
     {
-        if (!$this->authorizeTask('copy page', ['admin.pages', 'admin.super'])) {
+        if ($this->view !== 'pages') {
             return false;
         }
 
-        // Only applies to pages.
-        if ($this->view !== 'pages') {
+        if (!$this->authorizeTask('copy page', ['admin.pages', 'admin.super'])) {
             return false;
         }
 
@@ -1403,16 +1442,17 @@ protected function taskCopy()
      *
      * Route: /pages
      *
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool True if the action was performed.
      */
     protected function taskReorder()
     {
-        if (!$this->authorizeTask('reorder pages', ['admin.pages', 'admin.super'])) {
+        if ($this->view !== 'pages') {
             return false;
         }
 
-        // Only applies to pages.
-        if ($this->view !== 'pages') {
+        if (!$this->authorizeTask('reorder pages', ['admin.pages', 'admin.super'])) {
             return false;
         }
 
@@ -1426,17 +1466,18 @@ protected function taskReorder()
      *
      * Route: /pages
      *
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool True if the action was performed.
      * @throws \RuntimeException
      */
     protected function taskDelete()
     {
-        if (!$this->authorizeTask('delete page', ['admin.pages', 'admin.super'])) {
+        if ($this->view !== 'pages') {
             return false;
         }
 
-        // Only applies to pages.
-        if ($this->view !== 'pages') {
+        if (!$this->authorizeTask('delete page', ['admin.pages', 'admin.super'])) {
             return false;
         }
 
@@ -1472,10 +1513,16 @@ protected function taskDelete()
      *
      * Route: /pages
      *
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool
      */
     protected function taskSwitchlanguage()
     {
+        if ($this->view !== 'pages') {
+            return false;
+        }
+
         if (!$this->authorizeTask('switch language', ['admin.pages', 'admin.super'])) {
             return false;
         }
@@ -1505,11 +1552,19 @@ protected function taskSwitchlanguage()
     /**
      * Save the current page in a different language. Automatically switches to that language.
      *
+     * Route: /pages
+     *
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool True if the action was performed.
      */
     protected function taskSaveas()
     {
-        if (!$this->authorizeTask('save', $this->dataPermissions())) {
+        if ($this->view !== 'pages') {
+            return false;
+        }
+
+        if (!$this->authorizeTask('save as', ['admin.pages', 'admin.super'])) {
             return false;
         }
 
@@ -1565,6 +1620,8 @@ protected function taskSaveas()
     /**
      * Continue to the new page.
      *
+     * @note Not used if Flex-Objects plugin handles pages, users and user groups.
+     *
      * @return bool True if the action was performed.
      */
     public function taskContinue()
@@ -1578,12 +1635,6 @@ public function taskContinue()
             return true;
         }
 
-        if ($this->view === 'groups') {
-            $this->setRedirect("{$this->view}/{$data['groupname']}");
-
-            return true;
-        }
-
         if ($this->view !== 'pages') {
             return false;
         }
@@ -1666,10 +1717,18 @@ protected function taskGetLevelListing(): ResponseInterface
     }
 
     /**
+     * Route: /ajax.json
+     *
+     * @note Not used if Flex-Objects plugin handles pages.
+     *
      * @return bool
      */
     protected function taskGetChildTypes()
     {
+        if ($this->view !== 'ajax') {
+            return false;
+        }
+
         if (!$this->authorizeTask('get childtypes', ['admin.pages', 'admin.super'])) {
             return false;
         }
@@ -1709,12 +1768,18 @@ protected function taskGetChildTypes()
     /**
      * Handles filtering the page by modular/visible/routable in the pages list.
      *
-     * @return void
+     * @note Used only in legacy pages.
+     *
+     * @return bool
      */
     protected function taskFilterPages()
     {
+        if ($this->view !== 'pages-filter') {
+            return false;
+        }
+
         if (!$this->authorizeTask('filter pages', ['admin.pages', 'admin.super'])) {
-            return;
+            return false;
         }
 
         $data = $this->post;
@@ -1829,12 +1894,16 @@ protected function taskFilterPages()
             'results' => $results
         ];
         $this->admin->collection = $collection;
+
+        return true;
     }
 
 
     /**
      * Process the page Markdown
      *
+     * Preview task in the builtin editor.
+     *
      * @return bool True if the action was performed.
      */
     protected function taskProcessMarkdown()
@@ -1884,12 +1953,16 @@ protected function taskProcessMarkdown()
     /**
      * Determines the file types allowed to be uploaded
      *
-     * Used by pagemedia field.
+     * Used by pagemedia field. Works only within legacy pages.
      *
      * @return bool True if the action was performed.
      */
     protected function taskListmedia()
     {
+        if ($this->view !== 'media') {
+            return false;
+        }
+
         if (!$this->authorizeTask('list media', ['admin.pages', 'admin.super'])) {
             return false;
         }
@@ -1937,12 +2010,16 @@ protected function taskListmedia()
     /**
      * Handles adding a media file to a page.
      *
-     * Used by pagemedia field.
+     * Used by pagemedia field. Works only within legacy pages.
      *
      * @return bool True if the action was performed.
      */
     protected function taskAddmedia()
     {
+        if ($this->view !== 'media') {
+            return false;
+        }
+
         if (!$this->authorizeTask('add media', ['admin.pages', 'admin.super'])) {
             return false;
         }
@@ -2106,8 +2183,7 @@ protected function taskAddmedia()
      */
     protected function taskCompileScss()
     {
-
-        if (!$this->authorizeTask('compile scss', ['admin.super'])) {
+        if (!$this->authorizeTask('compile scss', ['admin.plugins', 'admin.super'])) {
             return false;
         }
 
@@ -2132,16 +2208,15 @@ protected function taskCompileScss()
             ]
         ];
 
-        echo json_encode($json_response);
-        exit;
+        $this->sendJsonResponse($json_response);
     }
 
     /**
      * @return bool
      */
     protected function taskExportScss()
     {
-        if (!$this->authorizeTask('compile scss', ['admin.pages', 'admin.super'])) {
+        if (!$this->authorizeTask('export scss', ['admin.plugins', 'admin.super'])) {
             return false;
         }
 
@@ -2160,8 +2235,7 @@ protected function taskExportScss()
             ]
         ];
 
-        echo json_encode($json_response);
-        exit;
+        $this->sendJsonResponse($json_response);
     }
 
     /**
@@ -2173,6 +2247,10 @@ protected function taskExportScss()
      */
     protected function taskDelmedia()
     {
+        if ($this->view !== 'media') {
+            return false;
+        }
+
         if (!$this->authorizeTask('delete media', ['admin.pages', 'admin.super'])) {
             return false;
         }
@@ -2455,10 +2533,6 @@ protected function getLevelListing($data)
      */
     public function getMedia(PageInterface $page = null)
     {
-        if ($this->view !== 'media') {
-            return null;
-        }
-
         $page = $page ?? $this->admin->page($this->route);
         if (!$page) {
             return null;
@@ -2753,10 +2827,16 @@ public static function getNextOrderInFolder($path)
     }
 
     /**
-     * @return ResponseInterface
+     * Used in 3rd party editors (e.g. next-gen).
+     *
+     * @return ResponseInterface|false
      */
-    protected function taskConvertUrls(): ResponseInterface
+    protected function taskConvertUrls()
     {
+        if (!$this->authorizeTask('access page', ['admin.pages', 'admin.super'])) {
+            return false;
+        }
+
         $request = $this->getRequest();
         $data = $request->getParsedBody();
         $converted_links = [];

--- classes/plugin/Controllers/Login/LoginController.php ---
@@ -10,6 +10,7 @@
 namespace Grav\Plugin\Admin\Controllers\Login;
 
 use Grav\Common\Debugger;
+use Grav\Common\Grav;
 use Grav\Common\Page\Pages;
 use Grav\Common\Uri;
 use Grav\Common\User\Interfaces\UserCollectionInterface;
@@ -209,20 +210,14 @@ public function taskLogin(): ResponseInterface
     }
 
     /**
-     * Handle logout when user isn't fully logged in.
+     * Handle logout when user isn't fully logged in or clicks logout after the session has been expired.
      *
      * @return ResponseInterface
      */
     public function taskLogout(): ResponseInterface
     {
-        try {
-            $this->checkNonce();
-        } catch (PageExpiredException $e) {
-            $this->setMessage($this->translate('PLUGIN_ADMIN.INVALID_SECURITY_TOKEN'), 'error');
-
-            return $this->createDisplayResponse();
-        }
-
+        // We do not need to check the nonce here as user session has been expired or user hasn't fully logged in (2FA).
+        // Just be sure we terminate the current session.
         $login = $this->getLogin();
         $event = $login->logout(['admin' => true], ['return_event' => true]);
 
@@ -298,7 +293,7 @@ public function taskTwofa(): ResponseInterface
         }
 
         // Successful 2FA, authorize user and redirect.
-        $user->authorized = true;
+        Grav::instance()['user']->authorized = true;
 
         Admin::DEBUG && Admin::addDebugMessage('Admin login: 2FA check succeeded, authorize user and redirect');
 

--- composer.lock ---
@@ -814,16 +814,16 @@
         },
         {
             "name": "guzzlehttp/psr7",
-            "version": "1.7.0",
+            "version": "1.8.1",
             "source": {
                 "type": "git",
                 "url": "https://github.com/guzzle/psr7.git",
-                "reference": "53330f47520498c0ae1f61f7e2c90f55690c06a3"
+                "reference": "35ea11d335fd638b5882ff1725228b3d35496ab1"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/guzzle/psr7/zipball/53330f47520498c0ae1f61f7e2c90f55690c06a3",
-                "reference": "53330f47520498c0ae1f61f7e2c90f55690c06a3",
+                "url": "https://api.github.com/repos/guzzle/psr7/zipball/35ea11d335fd638b5882ff1725228b3d35496ab1",
+                "reference": "35ea11d335fd638b5882ff1725228b3d35496ab1",
                 "shasum": ""
             },
             "require": {
@@ -883,9 +883,9 @@
             ],
             "support": {
                 "issues": "https://github.com/guzzle/psr7/issues",
-                "source": "https://github.com/guzzle/psr7/tree/1.7.0"
+                "source": "https://github.com/guzzle/psr7/tree/1.8.1"
             },
-            "time": "2020-09-30T07:37:11+00:00"
+            "time": "2021-03-21T16:25:00+00:00"
         },
         {
             "name": "myclabs/deep-copy",
@@ -1215,16 +1215,16 @@
         },
         {
             "name": "phpspec/prophecy",
-            "version": "1.12.2",
+            "version": "1.13.0",
             "source": {
                 "type": "git",
                 "url": "https://github.com/phpspec/prophecy.git",
-                "reference": "245710e971a030f42e08f4912863805570f23d39"
+                "reference": "be1996ed8adc35c3fd795488a653f4b518be70ea"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/245710e971a030f42e08f4912863805570f23d39",
-                "reference": "245710e971a030f42e08f4912863805570f23d39",
+                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/be1996ed8adc35c3fd795488a653f4b518be70ea",
+                "reference": "be1996ed8adc35c3fd795488a653f4b518be70ea",
                 "shasum": ""
             },
             "require": {
@@ -1276,9 +1276,9 @@
             ],
             "support": {
                 "issues": "https://github.com/phpspec/prophecy/issues",
-                "source": "https://github.com/phpspec/prophecy/tree/1.12.2"
+                "source": "https://github.com/phpspec/prophecy/tree/1.13.0"
             },
-            "time": "2020-12-19T10:15:11+00:00"
+            "time": "2021-03-17T13:42:18+00:00"
         },
         {
             "name": "phpunit/php-code-coverage",
@@ -2541,16 +2541,16 @@
         },
         {
             "name": "symfony/console",
-            "version": "v4.4.20",
+            "version": "v4.4.21",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/console.git",
-                "reference": "c98349bda966c70d6c08b4cd8658377c94166492"
+                "reference": "1ba4560dbbb9fcf5ae28b61f71f49c678086cf23"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/console/zipball/c98349bda966c70d6c08b4cd8658377c94166492",
-                "reference": "c98349bda966c70d6c08b4cd8658377c94166492",
+                "url": "https://api.github.com/repos/symfony/console/zipball/1ba4560dbbb9fcf5ae28b61f71f49c678086cf23",
+                "reference": "1ba4560dbbb9fcf5ae28b61f71f49c678086cf23",
                 "shasum": ""
             },
             "require": {
@@ -2610,7 +2610,7 @@
             "description": "Eases the creation of beautiful and testable command line interfaces",
             "homepage": "https://symfony.com",
             "support": {
-                "source": "https://github.com/symfony/console/tree/v4.4.20"
+                "source": "https://github.com/symfony/console/tree/v4.4.21"
             },
             "funding": [
                 {
@@ -2626,7 +2626,7 @@
                     "type": "tidelift"
                 }
             ],
-            "time": "2021-02-22T18:44:15+00:00"
+            "time": "2021-03-26T09:23:24+00:00"
         },
         {
             "name": "symfony/css-selector",
@@ -3544,16 +3544,16 @@
         },
         {
             "name": "symfony/yaml",
-            "version": "v4.4.20",
+            "version": "v4.4.21",
             "source": {
                 "type": "git",
                 "url": "https://github.com/symfony/yaml.git",
-                "reference": "29e61305e1c79d25f71060903982ead8f533e267"
+                "reference": "3871c720871029f008928244e56cf43497da7e9d"
             },
             "dist": {
                 "type": "zip",
-                "url": "https://api.github.com/repos/symfony/yaml/zipball/29e61305e1c79d25f71060903982ead8f533e267",
-                "reference": "29e61305e1c79d25f71060903982ead8f533e267",
+                "url": "https://api.github.com/repos/symfony/yaml/zipball/3871c720871029f008928244e56cf43497da7e9d",
+                "reference": "3871c720871029f008928244e56cf43497da7e9d",
                 "shasum": ""
             },
             "require": {
@@ -3595,7 +3595,7 @@
             "description": "Loads and dumps YAML files",
             "homepage": "https://symfony.com",
             "support": {
-                "source": "https://github.com/symfony/yaml/tree/v4.4.20"
+                "source": "https://github.com/symfony/yaml/tree/v4.4.21"
             },
             "funding": [
                 {
@@ -3611,7 +3611,7 @@
                     "type": "tidelift"
                 }
             ],
-            "time": "2021-02-22T15:36:50+00:00"
+            "time": "2021-03-05T17:58:50+00:00"
         },
         {
             "name": "theseer/tokenizer",

--- themes/grav/templates/partials/javascript-config.html.twig ---
@@ -1,4 +1,4 @@
-{% if authorize(['admin.login', 'admin.super']) %}
+{% if user.authorized and authorize(['admin.login', 'admin.super']) %}
 {% set notifications = (config.plugins.admin.widgets['dashboard-notifications'] or config.plugins.admin.notifications.dashboard or config.plugins.admin.notifications.plugins or config.plugins.admin.notifications.themes) ? 1 : 0 %}
 {% switch template_route %}
     {% case 'dashboard' %}

--- themes/grav/templates/partials/release-toggle.html.twig ---
@@ -1,3 +1,4 @@
+{% if authorize(['admin.super']) %}
 <form id="gpm-release-toggle">
     <div class="switch-toggle switch-grav" data-url="{{ base_url }}/ajax.json/task:gpmRelease">
         <input type="radio" value="stable" id="stable" name="channel-switch" class="highlight" {% if config.system.gpm.releases == 'stable' %} checked="checked"{% endif %}>
@@ -7,3 +8,4 @@
         <a></a>
     </div>
 </form>
+{% endif %}

--- vendor/composer/InstalledVersions.php ---
@@ -29,7 +29,7 @@ class InstalledVersions
     'aliases' => 
     array (
     ),
-    'reference' => '63db6543920650ca2da91797df10e8a3fd1aa4c7',
+    'reference' => '1acb94e85744589877484a13af715394b3558bd2',
     'name' => 'getgrav/grav-plugin-admin',
   ),
   'versions' => 
@@ -41,7 +41,7 @@ class InstalledVersions
       'aliases' => 
       array (
       ),
-      'reference' => '63db6543920650ca2da91797df10e8a3fd1aa4c7',
+      'reference' => '1acb94e85744589877484a13af715394b3558bd2',
     ),
     'laminas/laminas-xml' => 
     array (

--- vendor/composer/installed.php ---
@@ -6,7 +6,7 @@
     'aliases' => 
     array (
     ),
-    'reference' => '63db6543920650ca2da91797df10e8a3fd1aa4c7',
+    'reference' => '1acb94e85744589877484a13af715394b3558bd2',
     'name' => 'getgrav/grav-plugin-admin',
   ),
   'versions' => 
@@ -18,7 +18,7 @@
       'aliases' => 
       array (
       ),
-      'reference' => '63db6543920650ca2da91797df10e8a3fd1aa4c7',
+      'reference' => '1acb94e85744589877484a13af715394b3558bd2',
     ),
     'laminas/laminas-xml' => 
     array (

