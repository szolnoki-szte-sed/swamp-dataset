--- bin/upload-bin-windows.sh ---
@@ -2,4 +2,4 @@ bash -e bin/download-upload-depenecy.sh || true
 #upload
 originalPath="${4}/${5}"
 echo ${originalPath}
-pscp -hostkey "ssh-ed25519 255 SHA256:npOpUqkVgzEG/WTKAJ1EoSc+2s41jxDgDk5rfpTOVN8" -pw ${2} -r ${originalPath} ${1}@dl.zrlog.com:${3}
\ No newline at end of file
+pscp -hostkey "ssh-ed25519 255 SHA256:FpsWLo+PNYccPlNgcfZKfOVAGIbawyEQ/xXzAmla1AY" -pw ${2} -r ${originalPath} ${1}@dl.zrlog.com:${3}
\ No newline at end of file

--- pom.xml ---
@@ -8,7 +8,7 @@
 
     <groupId>com.zrlog</groupId>
     <artifactId>plugin-backup-sql-file</artifactId>
-    <version>3.0.31</version>
+    <version>3.0.32</version>
 
     <properties>
         <outputDirectory>/Users/xiaochun/zrlog-plugin/</outputDirectory>

--- src/main/java/com/zrlog/plugin/backup/controller/BackupController.java ---
@@ -4,6 +4,7 @@
 import com.zrlog.plugin.IOSession;
 import com.zrlog.plugin.backup.Application;
 import com.zrlog.plugin.backup.scheduler.BackupJob;
+import com.zrlog.plugin.backup.util.FileUtils;
 import com.zrlog.plugin.common.IdUtil;
 import com.zrlog.plugin.common.LoggerUtil;
 import com.zrlog.plugin.data.codec.ContentType;
@@ -131,7 +132,7 @@ private String getBackupFilePath() {
     }
 
     public void downfile() {
-        File file = new File(getBackupFilePath() + "/" + requestInfo.simpleParam().get("file"));
+        File file = FileUtils.safeAppendFilePath(getBackupFilePath(), (String) requestInfo.simpleParam().get("file"));
         if (BackupJob.isSqlFile(file) && file.exists()) {
             session.sendFileMsg(file, requestPacket.getMsgId(), MsgPacketStatus.RESPONSE_SUCCESS);
         } else {

--- src/main/java/com/zrlog/plugin/backup/util/FileUtils.java ---
@@ -0,0 +1,15 @@
+package com.zrlog.plugin.backup.util;
+
+import java.io.File;
+import java.nio.file.Path;
+
+public class FileUtils {
+
+    public static File safeAppendFilePath(String basePath, String appendFilePath) {
+        Path resolvedPath = new File(basePath).toPath().resolve(new File(basePath + "/" + appendFilePath).toPath()).normalize();
+        if (!resolvedPath.startsWith(basePath)) {
+            throw new IllegalArgumentException("Invalid file path " + appendFilePath);
+        }
+        return resolvedPath.toFile();
+    }
+}

