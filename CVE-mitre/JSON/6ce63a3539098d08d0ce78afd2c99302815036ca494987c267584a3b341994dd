--- Core/Model/Cuenta.php ---
@@ -185,12 +185,13 @@ public static function tableName(): string
     public function test(): bool
     {
         $this->codcuenta = trim($this->codcuenta);
+        $this->descripcion = $this->toolBox()->utils()->noHtml($this->descripcion);
+
         if (empty($this->codcuenta) || false === is_numeric($this->codcuenta)) {
             $this->toolBox()->i18nLog()->warning('invalid-number', ['%number%' => $this->codcuenta]);
             return false;
         }
 
-        $this->descripcion = $this->toolBox()->utils()->noHtml($this->descripcion);
         if (strlen($this->descripcion) < 1 || strlen($this->descripcion) > 255) {
             $this->toolBox()->i18nLog()->warning('invalid-column-lenght', ['%column%' => 'descripcion', '%min%' => '1', '%max%' => '255']);
             return false;

--- Core/Translation/gl_ES.json ---
@@ -421,7 +421,7 @@
     "emails-sent": "Emails enviados",
     "employees": "Empregados",
     "empty": "Vacío",
-    "empty-contact-data": "El contacto debe tener nombre o email o dirección",
+    "empty-contact-data": "O contacto debe ter nome ou email ou dirección",
     "enable": "Activar",
     "enable-api": "Activar API",
     "enable-updates-beta": "Activar actualizacións beta",

--- Test/Core/Model/CuentaTest.php ---
@@ -72,6 +72,21 @@ public function testCreateBadCode()
         }
     }
 
+    public function testHtmlOnDescription()
+    {
+        $account = new Cuenta();
+        $account->codcuenta = '9999';
+        $account->codejercicio = $this->getRandomExercise()->codejercicio;
+        $account->descripcion = '<b>Test</b>';
+        $this->assertTrue($account->save(), 'can-not-create-account');
+
+        // comprobamos que el html se ha escapado
+        $this->assertEquals('&lt;b&gt;Test&lt;/b&gt;', $account->descripcion);
+
+        // eliminamos
+        $this->assertTrue($account->delete(), 'account-cant-delete');
+    }
+
     public function testCreateClosed()
     {
         // cerramos un ejercicio

--- Test/Core/Model/SubcuentaTest.php ---
@@ -1,38 +0,0 @@
-<?php
-/**
- * This file is part of FacturaScripts
- * Copyright (C) 2017       Francesc Pineda Segarra <francesc.pineda.segarra@gmail.com>
- * Copyright (C) 2017-2018  Carlos Garcia Gomez     <carlos@facturascripts.com>
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU Lesser General Public License as
- * published by the Free Software Foundation, either version 3 of the
- * License, or (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program. If not, see <http://www.gnu.org/licenses/>.
- */
-
-namespace FacturaScripts\Test\Core\Model;
-
-use FacturaScripts\Core\Model\Subcuenta;
-use FacturaScripts\Test\Core\CustomTest;
-
-/**
- * @covers \Subcuenta
- *
- * @author Francesc Pineda Segarra <francesc.pineda.segarra@gmail.com>
- */
-final class SubcuentaTest extends CustomTest
-{
-
-    protected function setUp(): void
-    {
-        $this->model = new Subcuenta();
-    }
-}

