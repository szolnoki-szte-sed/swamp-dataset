--- ArchiSteamFarm/Bot.cs ---
@@ -2241,6 +2241,12 @@ private async Task OnIncomingChatMessage(CChatRoom_IncomingChatMessage_Notificat
 				throw new ArgumentNullException(nameof(notification));
 			}
 
+			if ((notification.chat_group_id == 0) || (notification.chat_id == 0) || (notification.steamid_sender == 0)) {
+				ArchiLogger.LogNullError(nameof(notification.chat_group_id) + " || " + nameof(notification.chat_id) + " || " + nameof(notification.steamid_sender));
+
+				return;
+			}
+
 			// Under normal circumstances, timestamp must always be greater than 0, but Steam already proved that it's capable of going against the logic
 			if ((notification.steamid_sender != SteamID) && (notification.timestamp > 0)) {
 				if (ShouldAckChatMessage(notification.steamid_sender)) {
@@ -2277,6 +2283,12 @@ private async Task OnIncomingMessage(CFriendMessages_IncomingMessage_Notificatio
 				throw new ArgumentNullException(nameof(notification));
 			}
 
+			if (notification.steamid_friend == 0) {
+				ArchiLogger.LogNullError(nameof(notification.steamid_friend));
+
+				return;
+			}
+
 			if ((EChatEntryType) notification.chat_entry_type != EChatEntryType.ChatMsg) {
 				return;
 			}

--- ArchiSteamFarm/Commands.cs ---
@@ -307,7 +307,12 @@ internal async Task HandleMessage(ulong steamID, string message) {
 					return;
 				}
 
-				message = message.Substring(commandPrefix!.Length);
+				if (message.Length == commandPrefix!.Length) {
+					// If the message starts with command prefix and is of the same length as command prefix, then it's just empty command trigger, useless
+					return;
+				}
+
+				message = message.Substring(commandPrefix.Length);
 			}
 
 			Task<string?> responseTask = Response(steamID, message);
@@ -364,7 +369,12 @@ internal async Task HandleMessage(ulong chatGroupID, ulong chatID, ulong steamID
 					return;
 				}
 
-				message = message.Substring(commandPrefix!.Length);
+				if (message.Length == commandPrefix!.Length) {
+					// If the message starts with command prefix and is of the same length as command prefix, then it's just empty command trigger, useless
+					return;
+				}
+
+				message = message.Substring(commandPrefix.Length);
 			}
 
 			Task<string?> responseTask = Response(steamID, message);

